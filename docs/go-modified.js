/*
 * GoJS v2.0.2 JavaScript Library for HTML Diagrams
 * Northwoods Software, https://www.nwoods.com/
 * GoJS and Northwoods Software are registered trademarks of Northwoods Software Corporation.
 * Copyright (C) 1998-2019 by Northwoods Software Corporation.  All Rights Reserved.
 * THIS SOFTWARE IS LICENSED.  THE LICENSE AGREEMENT IS AT: https://gojs.net/2.0.2/license.html.
 */
(function() {
    var t;

    function aa(a) {
        var b = 0;
        return function() {
            return b < a.length ? {
                done: !1,
                value: a[b++]
            } : {
                done: !0
            }
        }
    }

    function ba(a) {
        var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];
        return b ? b.call(a) : {
            next: aa(a)
        }
    }

    function ca(a) {
        for (var b, c = []; !(b = a.next()).done;) c.push(b.value);
        return c
    }
    var da = "function" == typeof Object.create ? Object.create : function(a) {
            function b() {}
            b.prototype = a;
            return new b
        },
        ha;
    if ("function" == typeof Object.setPrototypeOf) ha = Object.setPrototypeOf;
    else {
        var ka;
        a: {
            var la = {
                    a: !0
                },
                ma = {};
            try {
                ma.__proto__ = la;
                ka = ma.a;
                break a
            } catch (a) {}
            ka = !1
        }
        ha = ka ? function(a, b) {
            a.__proto__ = b;
            if (a.__proto__ !== b) throw new TypeError(a + " is not extensible");
            return a
        } : null
    }
    var na = ha;

    function oa(a, b) {
        a.prototype = da(b.prototype);
        a.prototype.constructor = a;
        if (na) na(a, b);
        else
            for (var c in b)
                if ("prototype" != c)
                    if (Object.defineProperties) {
                        var d = Object.getOwnPropertyDescriptor(b, c);
                        d && Object.defineProperty(a, c, d)
                    } else a[c] = b[c];
        a.dA = b.prototype
    }
    var pa = "undefined" != typeof window && window === self ? self : "undefined" != typeof global && null != global ? global : self,
        qa = "function" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, c) {
            a != Array.prototype && a != Object.prototype && (a[b] = c.value)
        };

    function ra(a) {
        if (a) {
            for (var b = pa, c = ["Array", "prototype", "fill"], d = 0; d < c.length - 1; d++) {
                var e = c[d];
                e in b || (b[e] = {});
                b = b[e]
            }
            c = c[c.length - 1];
            d = b[c];
            a = a(d);
            a != d && null != a && qa(b, c, {
                writable: !0,
                value: a
            })
        }
    }
    ra(function(a) {
        return a ? a : function(a, c, d) {
            var b = this.length || 0;
            0 > c && (c = Math.max(0, b + c));
            if (null == d || d > b) d = b;
            d = Number(d);
            0 > d && (d = Math.max(0, b + d));
            for (c = Number(c || 0); c < d; c++) this[c] = a;
            return this
        }
    });
    var w = "object" === typeof self && self.self === self && self || "object" === typeof global && global.global === global && global || "object" === typeof window && window.window === window && window || {};
    void 0 === w.requestAnimationFrame && (w.requestAnimationFrame = w.setImmediate);

    function sa() {}

    function ta(a, b) {
        var c = -1;
        return function() {
            var d = this,
                e = arguments; - 1 !== c && w.clearTimeout(c);
            c = ua(function() {
                c = -1;
                a.apply(d, e)
            }, b)
        }
    }

    function ua(a, b) {
        return w.setTimeout(a, b)
    }

    function va(a) {
        return w.document.createElement(a)
    }

    function A(a) {
        throw Error(a);
    }

    function wa(a, b) {
        a = "The object is frozen, so its properties cannot be set: " + a.toString();
        void 0 !== b && (a += "  to value: " + b);
        A(a)
    }

    function xa(a, b, c, d) {
        c = null === c ? "*" : "string" === typeof c ? c : "function" === typeof c && "string" === typeof c.className ? c.className : "";
        void 0 !== d && (c += "." + d);
        A(c + " is not in the range " + b + ": " + a)
    }

    function ya(a) {
        w.console && w.console.log(a)
    }

    function za() {
        w.console && w.console.log("Warning: List/Map/Set constructors no longer take an argument that enforces type.Instead they take an optional collection of Values to add to the collection. See 2.0 changelog for details.")
    }

    function Ca(a) {
        return "object" === typeof a && null !== a
    }

    function Ea(a) {
        return Array.isArray(a) || w.NodeList && a instanceof w.NodeList || w.HTMLCollection && a instanceof w.HTMLCollection
    }

    function Ga(a) {
        return Array.prototype.slice.call(a)
    }

    function Ia(a, b, c) {
        Array.isArray(a) ? b >= a.length ? a.push(c) : a.splice(b, 0, c) : A("Cannot insert an object into an HTMLCollection or NodeList: " + c + " at " + b)
    }

    function Ja(a, b) {
        Array.isArray(a) ? b >= a.length ? a.pop() : a.splice(b, 1) : A("Cannot remove an object from an HTMLCollection or NodeList at " + b)
    }

    function Ka() {
        var a = La.pop();
        return void 0 === a ? [] : a
    }

    function Oa(a) {
        a.length = 0;
        La.push(a)
    }

    function Pa(a) {
        if ("function" === typeof a) {
            if (a.className) return a.className;
            if (a.name) return a.name;
            var b = a.toString();
            b = b.substring(9, b.indexOf("(")).trim();
            if ("" !== b) return a._className = b
        } else if (Ca(a) && a.constructor) return Pa(a.constructor);
        return typeof a
    }

    function Qa(a) {
        var b = a;
        Ca(a) && (a.text ? b = a.text : a.name ? b = a.name : void 0 !== a.key ? b = a.key : void 0 !== a.id ? b = a.id : a.constructor === Object && (a.Text ? b = a.Text : a.Name ? b = a.Name : void 0 !== a.Key ? b = a.Key : void 0 !== a.Id ? b = a.Id : void 0 !== a.ID && (b = a.ID)));
        return void 0 === b ? "undefined" : null === b ? "null" : b.toString()
    }

    function Sa(a, b) {
        if (a.hasOwnProperty(b)) return !0;
        for (a = Object.getPrototypeOf(a); a && a !== Function;) {
            if (a.hasOwnProperty(b)) return !0;
            var c = a.Uz;
            if (c && c[b]) return !0;
            a = Object.getPrototypeOf(a)
        }
        return !1
    }

    function Ta(a, b, c) {
        Object.defineProperty(Ua.prototype, a, {
            get: b,
            set: c
        })
    }

    function Va() {
        var a = Ya;
        if (0 === a.length)
            for (var b = w.document.getElementsByTagName("canvas"), c = b.length, d = 0; d < c; d++) {
                var e = b[d];
                e.parentElement && e.parentElement.F && a.push(e.parentElement.F)
            }
        return a
    }

    function ab(a) {
        for (var b = [], c = 0; 256 > c; c++) b["0123456789abcdef".charAt(c >> 4) + "0123456789abcdef".charAt(c & 15)] = String.fromCharCode(c);
        a.length % 2 && (a = "0" + a);
        c = [];
        for (var d = 0, e = 0; e < a.length; e += 2) c[d++] = b[a.substr(e, 2)];
        a = c.join("");
        a = "" === a ? "0" : a;
        b = [];
        for (c = 0; 256 > c; c++) b[c] = c;
        for (c = d = 0; 256 > c; c++) d = (d + b[c] + 119) % 256, e = b[c], b[c] = b[d], b[d] = e;
        d = c = 0;
        for (var f = "", g = 0; g < a.length; g++) c = (c + 1) % 256, d = (d + b[c]) % 256, e = b[c], b[c] = b[d], b[d] = e, f += String.fromCharCode(a.charCodeAt(g) ^ b[(b[c] + b[d]) % 256]);
        return f
    }
    var bb = void 0 !== w.navigator && 0 < w.navigator.userAgent.indexOf("MSIE 9.0"),
        cb = void 0 !== w.navigator && 0 < w.navigator.userAgent.indexOf("MSIE 10.0"),
        fb = void 0 !== w.navigator && 0 < w.navigator.userAgent.indexOf("Trident/7"),
        gb = void 0 !== w.navigator && 0 < w.navigator.userAgent.indexOf("Edge/"),
        ib = void 0 !== w.navigator && void 0 !== w.navigator.platform && 0 <= w.navigator.platform.toUpperCase().indexOf("MAC"),
        lb = void 0 !== w.navigator && void 0 !== w.navigator.platform && null !== w.navigator.platform.match(/(iPhone|iPod|iPad)/i),
        La = [];
    Object.freeze([]);
    var Ya = [];
    sa.className = "Util";
    sa.Dx = "32ab5ff3b26f42dc0ed90f224c2913b5";
    sa.adym = "gojs.net";
    sa.vfo = "28e646fdb1";
    sa.className = "Util";

    function D(a, b, c) {
        mb(this);
        this.l = a;
        this.Ta = b;
        this.u = c
    }
    D.prototype.toString = function() {
        return "EnumValue." + this.Ta
    };

    function qb(a, b) {
        return void 0 === b || null === b || "" === b ? null : a[b]
    }
    pa.Object.defineProperties(D.prototype, {
        classType: {
            get: function() {
                return this.l
            }
        },
        name: {
            get: function() {
                return this.Ta
            }
        },
        value: {
            get: function() {
                return this.u
            }
        }
    });
    D.className = "EnumValue";

    function sb() {
        this.hw = []
    }
    sb.prototype.toString = function() {
        return this.hw.join("")
    };
    sb.prototype.add = function(a) {
        "" !== a && this.hw.push(a)
    };
    sb.className = "StringBuilder";

    function tb() {}
    tb.className = "PropertyCollection";

    function ub() {}
    ub.prototype.reset = function() {};
    ub.prototype.next = function() {
        return !1
    };
    ub.prototype.fd = function() {
        return !1
    };
    ub.prototype.first = function() {
        return null
    };
    ub.prototype.any = function() {
        return !1
    };
    ub.prototype.all = function() {
        return !0
    };
    ub.prototype.each = function() {
        return this
    };
    ub.prototype.map = function() {
        return this
    };
    ub.prototype.filter = function() {
        return this
    };
    ub.prototype.zd = function() {};
    ub.prototype.toString = function() {
        return "EmptyIterator"
    };
    pa.Object.defineProperties(ub.prototype, {
        iterator: {
            get: function() {
                return this
            }
        },
        count: {
            get: function() {
                return 0
            }
        }
    });
    ub.prototype.first = ub.prototype.first;
    ub.prototype.hasNext = ub.prototype.fd;
    ub.prototype.next = ub.prototype.next;
    ub.prototype.reset = ub.prototype.reset;
    var xb = null;
    ub.className = "EmptyIterator";
    xb = new ub;

    function yb(a) {
        this.key = -1;
        this.value = a
    }
    yb.prototype.reset = function() {
        this.key = -1
    };
    yb.prototype.next = function() {
        return -1 === this.key ? (this.key = 0, !0) : !1
    };
    yb.prototype.fd = function() {
        return this.next()
    };
    yb.prototype.first = function() {
        this.key = 0;
        return this.value
    };
    yb.prototype.any = function(a) {
        this.key = -1;
        return a(this.value)
    };
    yb.prototype.all = function(a) {
        this.key = -1;
        return a(this.value)
    };
    yb.prototype.each = function(a) {
        this.key = -1;
        a(this.value);
        return this
    };
    yb.prototype.map = function(a) {
        return new yb(a(this.value))
    };
    yb.prototype.filter = function(a) {
        return a(this.value) ? new yb(this.value) : xb
    };
    yb.prototype.zd = function() {
        this.value = null
    };
    yb.prototype.toString = function() {
        return "SingletonIterator(" + this.value + ")"
    };
    pa.Object.defineProperties(yb.prototype, {
        iterator: {
            get: function() {
                return this
            }
        },
        count: {
            get: function() {
                return 1
            }
        }
    });
    yb.prototype.first = yb.prototype.first;
    yb.prototype.hasNext = yb.prototype.fd;
    yb.prototype.next = yb.prototype.next;
    yb.prototype.reset = yb.prototype.reset;
    yb.className = "SingletonIterator";

    function zb(a) {
        this.qb = a;
        this.Xe = null;
        a.Ja = null;
        this.la = a.Ba;
        this.Ra = -1
    }
    zb.prototype.reset = function() {
        var a = this.qb;
        a.Ja = null;
        this.la = a.Ba;
        this.Ra = -1
    };
    zb.prototype.next = function() {
        var a = this.qb;
        if (a.Ba !== this.la && 0 > this.key) return !1;
        a = a.j;
        var b = a.length,
            c = ++this.Ra,
            d = this.Xe;
        if (null !== d)
            for (; c < b;) {
                var e = a[c];
                if (d(e)) return this.key = this.Ra = c, this.value = e, !0;
                c++
            } else {
                if (c < b) return this.key = c, this.value = a[c], !0;
                this.zd()
            }
        return !1
    };
    zb.prototype.fd = function() {
        return this.next()
    };
    zb.prototype.first = function() {
        var a = this.qb;
        this.la = a.Ba;
        this.Ra = 0;
        a = a.j;
        var b = a.length,
            c = this.Xe;
        if (null !== c) {
            for (var d = 0; d < b;) {
                var e = a[d];
                if (c(e)) return this.key = this.Ra = d, this.value = e;
                d++
            }
            return null
        }
        return 0 < b ? (a = a[0], this.key = 0, this.value = a) : null
    };
    zb.prototype.any = function(a) {
        var b = this.qb;
        b.Ja = null;
        this.Ra = -1;
        b = b.j;
        for (var c = b.length, d = this.Xe, e = 0; e < c; e++) {
            var f = b[e];
            if ((null === d || d(f)) && a(f)) return !0
        }
        return !1
    };
    zb.prototype.all = function(a) {
        var b = this.qb;
        b.Ja = null;
        this.Ra = -1;
        b = b.j;
        for (var c = b.length, d = this.Xe, e = 0; e < c; e++) {
            var f = b[e];
            if ((null === d || d(f)) && !a(f)) return !1
        }
        return !0
    };
    zb.prototype.each = function(a) {
        var b = this.qb;
        b.Ja = null;
        this.Ra = -1;
        b = b.j;
        for (var c = b.length, d = this.Xe, e = 0; e < c; e++) {
            var f = b[e];
            (null === d || d(f)) && a(f)
        }
        return this
    };
    zb.prototype.map = function(a) {
        var b = this.qb;
        b.Ja = null;
        this.Ra = -1;
        var c = [];
        b = b.j;
        for (var d = b.length, e = this.Xe, f = 0; f < d; f++) {
            var g = b[f];
            (null === e || e(g)) && c.push(a(g))
        }
        a = new E;
        a.j = c;
        a.kb();
        return a.iterator
    };
    zb.prototype.filter = function(a) {
        var b = this.qb;
        b.Ja = null;
        this.Ra = -1;
        var c = [];
        b = b.j;
        for (var d = b.length, e = this.Xe, f = 0; f < d; f++) {
            var g = b[f];
            (null === e || e(g)) && a(g) && c.push(g)
        }
        a = new E;
        a.j = c;
        a.kb();
        return a.iterator
    };
    zb.prototype.zd = function() {
        this.key = -1;
        this.value = null;
        this.la = -1;
        this.Xe = null;
        this.qb.Ja = this
    };
    zb.prototype.toString = function() {
        return "ListIterator@" + this.Ra + "/" + this.qb.count
    };
    pa.Object.defineProperties(zb.prototype, {
        iterator: {
            get: function() {
                return this
            }
        },
        predicate: {
            get: function() {
                return this.Xe
            },
            set: function(a) {
                this.Xe = a
            }
        },
        count: {
            get: function() {
                var a = this.Xe;
                if (null !== a) {
                    for (var b = 0, c = this.qb.j, d = c.length, e = 0; e < d; e++) a(c[e]) && b++;
                    return b
                }
                return this.qb.j.length
            }
        }
    });
    zb.prototype.first = zb.prototype.first;
    zb.prototype.hasNext = zb.prototype.fd;
    zb.prototype.next = zb.prototype.next;
    zb.prototype.reset = zb.prototype.reset;
    zb.className = "ListIterator";

    function Ab(a) {
        this.qb = a;
        a.Pg = null;
        this.la = a.Ba;
        this.Ra = a.j.length
    }
    Ab.prototype.reset = function() {
        var a = this.qb;
        a.Pg = null;
        this.la = a.Ba;
        this.Ra = a.j.length
    };
    Ab.prototype.next = function() {
        var a = this.qb;
        if (a.Ba !== this.la && 0 > this.key) return !1;
        var b = --this.Ra;
        if (0 <= b) return this.key = b, this.value = a.j[b], !0;
        this.zd();
        return !1
    };
    Ab.prototype.fd = function() {
        return this.next()
    };
    Ab.prototype.first = function() {
        var a = this.qb;
        this.la = a.Ba;
        var b = a.j;
        this.Ra = a = b.length - 1;
        return 0 <= a ? (b = b[a], this.key = a, this.value = b) : null
    };
    Ab.prototype.any = function(a) {
        var b = this.qb;
        b.Pg = null;
        b = b.j;
        var c = b.length;
        this.Ra = c;
        for (--c; 0 <= c; c--)
            if (a(b[c])) return !0;
        return !1
    };
    Ab.prototype.all = function(a) {
        var b = this.qb;
        b.Pg = null;
        b = b.j;
        var c = b.length;
        this.Ra = c;
        for (--c; 0 <= c; c--)
            if (!a(b[c])) return !1;
        return !0
    };
    Ab.prototype.each = function(a) {
        var b = this.qb;
        b.Pg = null;
        b = b.j;
        var c = b.length;
        this.Ra = c;
        for (--c; 0 <= c; c--) a(b[c]);
        return this
    };
    Ab.prototype.map = function(a) {
        var b = this.qb;
        b.Pg = null;
        var c = [];
        b = b.j;
        var d = b.length;
        this.Ra = d;
        for (--d; 0 <= d; d--) c.push(a(b[d]));
        a = new E;
        a.j = c;
        a.kb();
        return a.iterator
    };
    Ab.prototype.filter = function(a) {
        var b = this.qb;
        b.Pg = null;
        var c = [];
        b = b.j;
        var d = b.length;
        this.Ra = d;
        for (--d; 0 <= d; d--) {
            var e = b[d];
            a(e) && c.push(e)
        }
        a = new E;
        a.j = c;
        a.kb();
        return a.iterator
    };
    Ab.prototype.zd = function() {
        this.key = -1;
        this.value = null;
        this.la = -1;
        this.qb.Pg = this
    };
    Ab.prototype.toString = function() {
        return "ListIteratorBackwards(" + this.Ra + "/" + this.qb.count + ")"
    };
    pa.Object.defineProperties(Ab.prototype, {
        iterator: {
            get: function() {
                return this
            }
        },
        count: {
            get: function() {
                return this.qb.j.length
            }
        }
    });
    Ab.prototype.first = Ab.prototype.first;
    Ab.prototype.hasNext = Ab.prototype.fd;
    Ab.prototype.next = Ab.prototype.next;
    Ab.prototype.reset = Ab.prototype.reset;
    Ab.className = "ListIteratorBackwards";

    function E(a) {
        mb(this);
        this.v = !1;
        this.j = [];
        this.Ba = 0;
        this.Pg = this.Ja = null;
        void 0 !== a && ("function" === typeof a || "string" === typeof a ? za() : this.addAll(a))
    }
    t = E.prototype;
    t.kb = function() {
        var a = this.Ba;
        a++;
        999999999 < a && (a = 0);
        this.Ba = a
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        this.v = !1;
        return this
    };
    t.toString = function() {
        return "List()#" + Bb(this)
    };
    t.add = function(a) {
        if (null === a) return this;
        this.v && wa(this, a);
        this.j.push(a);
        this.kb();
        return this
    };
    t.push = function(a) {
        this.add(a)
    };
    t.addAll = function(a) {
        if (null === a) return this;
        this.v && wa(this);
        var b = this.j;
        if (Ea(a))
            for (var c = a.length, d = 0; d < c; d++) b.push(a[d]);
        else
            for (a = a.iterator; a.next();) b.push(a.value);
        this.kb();
        return this
    };
    t.clear = function() {
        this.v && wa(this);
        this.j.length = 0;
        this.kb()
    };
    t.contains = function(a) {
        return null === a ? !1 : -1 !== this.j.indexOf(a)
    };
    t.has = function(a) {
        return this.contains(a)
    };
    t.indexOf = function(a) {
        return null === a ? -1 : this.j.indexOf(a)
    };
    t.N = function(a) {
        var b = this.j;
        (0 > a || a >= b.length) && xa(a, "0 <= i < length", E, "elt:i");
        return b[a]
    };
    t.get = function(a) {
        return this.N(a)
    };
    t.jd = function(a, b) {
        var c = this.j;
        (0 > a || a >= c.length) && xa(a, "0 <= i < length", E, "setElt:i");
        this.v && wa(this, a);
        c[a] = b
    };
    t.set = function(a, b) {
        this.jd(a, b)
    };
    t.first = function() {
        var a = this.j;
        return 0 === a.length ? null : a[0]
    };
    t.Sb = function() {
        var a = this.j,
            b = a.length;
        return 0 < b ? a[b - 1] : null
    };
    t.pop = function() {
        this.v && wa(this);
        var a = this.j;
        return 0 < a.length ? a.pop() : null
    };
    E.prototype.any = function(a) {
        for (var b = this.j, c = b.length, d = 0; d < c; d++)
            if (a(b[d])) return !0;
        return !1
    };
    E.prototype.all = function(a) {
        for (var b = this.j, c = b.length, d = 0; d < c; d++)
            if (!a(b[d])) return !1;
        return !0
    };
    E.prototype.each = function(a) {
        for (var b = this.j, c = b.length, d = 0; d < c; d++) a(b[d]);
        return this
    };
    E.prototype.map = function(a) {
        for (var b = new E, c = [], d = this.j, e = d.length, f = 0; f < e; f++) c.push(a(d[f]));
        b.j = c;
        b.kb();
        return b
    };
    E.prototype.filter = function(a) {
        for (var b = new E, c = [], d = this.j, e = d.length, f = 0; f < e; f++) {
            var g = d[f];
            a(g) && c.push(g)
        }
        b.j = c;
        b.kb();
        return b
    };
    t = E.prototype;
    t.Jb = function(a, b) {
        0 > a && xa(a, ">= 0", E, "insertAt:i");
        this.v && wa(this, a);
        var c = this.j;
        a >= c.length ? c.push(b) : c.splice(a, 0, b);
        this.kb()
    };
    t.remove = function(a) {
        if (null === a) return !1;
        this.v && wa(this, a);
        var b = this.j;
        a = b.indexOf(a);
        if (-1 === a) return !1;
        a === b.length - 1 ? b.pop() : b.splice(a, 1);
        this.kb();
        return !0
    };
    t.delete = function(a) {
        return this.remove(a)
    };
    t.mb = function(a) {
        var b = this.j;
        (0 > a || a >= b.length) && xa(a, "0 <= i < length", E, "removeAt:i");
        this.v && wa(this, a);
        a === b.length - 1 ? b.pop() : b.splice(a, 1);
        this.kb()
    };
    t.removeRange = function(a, b) {
        var c = this.j,
            d = c.length;
        if (0 > a) a = 0;
        else if (a >= d) return this;
        if (0 > b) return this;
        b >= d && (b = d - 1);
        if (a > b) return this;
        this.v && wa(this);
        for (var e = a, f = b + 1; f < d;) c[e++] = c[f++];
        c.length = d - (b - a + 1);
        this.kb();
        return this
    };
    E.prototype.copy = function() {
        var a = new E,
            b = this.j;
        0 < b.length && (a.j = Array.prototype.slice.call(b));
        return a
    };
    t = E.prototype;
    t.Ma = function() {
        for (var a = this.j, b = this.count, c = Array(b), d = 0; d < b; d++) c[d] = a[d];
        return c
    };
    t.Kv = function() {
        for (var a = new F, b = this.j, c = this.count, d = 0; d < c; d++) a.add(b[d]);
        return a
    };
    t.sort = function(a) {
        this.v && wa(this);
        this.j.sort(a);
        this.kb();
        return this
    };
    t.Ri = function(a, b, c) {
        var d = this.j,
            e = d.length;
        void 0 === b && (b = 0);
        void 0 === c && (c = e);
        this.v && wa(this);
        var f = c - b;
        if (1 >= f) return this;
        (0 > b || b >= e - 1) && xa(b, "0 <= from < length", E, "sortRange:from");
        if (2 === f) return c = d[b], e = d[b + 1], 0 < a(c, e) && (d[b] = e, d[b + 1] = c, this.kb()), this;
        if (0 === b)
            if (c >= e) d.sort(a);
            else
                for (b = d.slice(0, c), b.sort(a), a = 0; a < c; a++) d[a] = b[a];
        else if (c >= e)
            for (c = d.slice(b), c.sort(a), a = b; a < e; a++) d[a] = c[a - b];
        else
            for (e = d.slice(b, c), e.sort(a), a = b; a < c; a++) d[a] = e[a - b];
        this.kb();
        return this
    };
    t.reverse = function() {
        this.v && wa(this);
        this.j.reverse();
        this.kb();
        return this
    };
    pa.Object.defineProperties(E.prototype, {
        _dataArray: {
            get: function() {
                return this.j
            }
        },
        count: {
            get: function() {
                return this.j.length
            }
        },
        size: {
            get: function() {
                return this.j.length
            }
        },
        length: {
            get: function() {
                return this.j.length
            }
        },
        iterator: {
            get: function() {
                if (0 >= this.j.length) return xb;
                var a = this.Ja;
                return null !== a ? (a.reset(), a) : new zb(this)
            }
        },
        iteratorBackwards: {
            get: function() {
                if (0 >= this.j.length) return xb;
                var a = this.Pg;
                return null !== a ? (a.reset(), a) : new Ab(this)
            }
        }
    });
    E.prototype.reverse = E.prototype.reverse;
    E.prototype.sortRange = E.prototype.Ri;
    E.prototype.sort = E.prototype.sort;
    E.prototype.toSet = E.prototype.Kv;
    E.prototype.toArray = E.prototype.Ma;
    E.prototype.removeRange = E.prototype.removeRange;
    E.prototype.removeAt = E.prototype.mb;
    E.prototype["delete"] = E.prototype.delete;
    E.prototype.remove = E.prototype.remove;
    E.prototype.insertAt = E.prototype.Jb;
    E.prototype.pop = E.prototype.pop;
    E.prototype.last = E.prototype.Sb;
    E.prototype.first = E.prototype.first;
    E.prototype.set = E.prototype.set;
    E.prototype.setElt = E.prototype.jd;
    E.prototype.get = E.prototype.get;
    E.prototype.elt = E.prototype.N;
    E.prototype.indexOf = E.prototype.indexOf;
    E.prototype.has = E.prototype.has;
    E.prototype.contains = E.prototype.contains;
    E.prototype.clear = E.prototype.clear;
    E.prototype.addAll = E.prototype.addAll;
    E.prototype.push = E.prototype.push;
    E.prototype.add = E.prototype.add;
    E.prototype.thaw = E.prototype.ha;
    E.prototype.freeze = E.prototype.freeze;
    E.className = "List";

    function Cb(a) {
        this.dg = a;
        a.Ja = null;
        this.la = a.Ba;
        this.na = null
    }
    Cb.prototype.reset = function() {
        var a = this.dg;
        a.Ja = null;
        this.la = a.Ba;
        this.na = null
    };
    Cb.prototype.next = function() {
        var a = this.dg;
        if (a.Ba !== this.la && null === this.key) return !1;
        var b = this.na;
        b = null === b ? a.fa : b.oa;
        if (null !== b) return this.na = b, this.value = b.value, this.key = b.key, !0;
        this.zd();
        return !1
    };
    Cb.prototype.fd = function() {
        return this.next()
    };
    Cb.prototype.first = function() {
        var a = this.dg;
        this.la = a.Ba;
        a = a.fa;
        if (null !== a) {
            this.na = a;
            var b = a.value;
            this.key = a.key;
            return this.value = b
        }
        return null
    };
    Cb.prototype.any = function(a) {
        var b = this.dg;
        this.na = b.Ja = null;
        for (b = b.fa; null !== b;) {
            if (a(b.value)) return !0;
            b = b.oa
        }
        return !1
    };
    Cb.prototype.all = function(a) {
        var b = this.dg;
        this.na = b.Ja = null;
        for (b = b.fa; null !== b;) {
            if (!a(b.value)) return !1;
            b = b.oa
        }
        return !0
    };
    Cb.prototype.each = function(a) {
        var b = this.dg;
        this.na = b.Ja = null;
        for (b = b.fa; null !== b;) a(b.value), b = b.oa;
        return this
    };
    Cb.prototype.map = function(a) {
        var b = this.dg;
        b.Ja = null;
        var c = new E;
        for (b = b.fa; null !== b;) c.add(a(b.value)), b = b.oa;
        return c.iterator
    };
    Cb.prototype.filter = function(a) {
        var b = this.dg;
        b.Ja = null;
        var c = new E;
        for (b = b.fa; null !== b;) {
            var d = b.value;
            a(d) && c.add(d);
            b = b.oa
        }
        return c.iterator
    };
    Cb.prototype.zd = function() {
        this.value = this.key = null;
        this.la = -1;
        this.dg.Ja = this
    };
    Cb.prototype.toString = function() {
        return null !== this.na ? "SetIterator@" + this.na.value : "SetIterator"
    };
    pa.Object.defineProperties(Cb.prototype, {
        iterator: {
            get: function() {
                return this
            }
        },
        count: {
            get: function() {
                return this.dg.Db
            }
        }
    });
    Cb.prototype.first = Cb.prototype.first;
    Cb.prototype.hasNext = Cb.prototype.fd;
    Cb.prototype.next = Cb.prototype.next;
    Cb.prototype.reset = Cb.prototype.reset;
    Cb.className = "SetIterator";

    function F(a) {
        mb(this);
        this.v = !1;
        this.Eb = {};
        this.Db = 0;
        this.Ja = null;
        this.Ba = 0;
        this.Se = this.fa = null;
        void 0 !== a && ("function" === typeof a || "string" === typeof a ? za() : this.addAll(a))
    }
    t = F.prototype;
    t.kb = function() {
        var a = this.Ba;
        a++;
        999999999 < a && (a = 0);
        this.Ba = a
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        this.v = !1;
        return this
    };
    t.toString = function() {
        return "Set()#" + Bb(this)
    };
    t.add = function(a) {
        if (null === a) return this;
        this.v && wa(this, a);
        var b = a;
        Ca(a) && (b = Db(a));
        void 0 === this.Eb[b] && (this.Db++, a = new Fb(a, a), this.Eb[b] = a, b = this.Se, null === b ? this.fa = a : (a.ol = b, b.oa = a), this.Se = a, this.kb());
        return this
    };
    t.addAll = function(a) {
        if (null === a) return this;
        this.v && wa(this);
        if (Ea(a))
            for (var b = a.length, c = 0; c < b; c++) this.add(a[c]);
        else
            for (a = a.iterator; a.next();) this.add(a.value);
        return this
    };
    t.contains = function(a) {
        if (null === a) return !1;
        var b = a;
        return Ca(a) && (b = Bb(a), void 0 === b) ? !1 : void 0 !== this.Eb[b]
    };
    t.has = function(a) {
        return this.contains(a)
    };
    t.ny = function(a) {
        if (null === a) return !0;
        for (a = a.iterator; a.next();)
            if (!this.contains(a.value)) return !1;
        return !0
    };
    t.oy = function(a) {
        if (null === a) return !0;
        for (a = a.iterator; a.next();)
            if (this.contains(a.value)) return !0;
        return !1
    };
    t.first = function() {
        var a = this.fa;
        return null === a ? null : a.value
    };
    F.prototype.any = function(a) {
        for (var b = this.fa; null !== b;) {
            if (a(b.value)) return !0;
            b = b.oa
        }
        return !1
    };
    F.prototype.all = function(a) {
        for (var b = this.fa; null !== b;) {
            if (!a(b.value)) return !1;
            b = b.oa
        }
        return !0
    };
    F.prototype.each = function(a) {
        for (var b = this.fa; null !== b;) a(b.value), b = b.oa;
        return this
    };
    F.prototype.map = function(a) {
        for (var b = new F, c = this.fa; null !== c;) b.add(a(c.value)), c = c.oa;
        return b
    };
    F.prototype.filter = function(a) {
        for (var b = new F, c = this.fa; null !== c;) {
            var d = c.value;
            a(d) && b.add(d);
            c = c.oa
        }
        return b
    };
    t = F.prototype;
    t.remove = function(a) {
        if (null === a) return !1;
        this.v && wa(this, a);
        var b = a;
        if (Ca(a) && (b = Bb(a), void 0 === b)) return !1;
        a = this.Eb[b];
        if (void 0 === a) return !1;
        var c = a.oa,
            d = a.ol;
        null !== c && (c.ol = d);
        null !== d && (d.oa = c);
        this.fa === a && (this.fa = c);
        this.Se === a && (this.Se = d);
        delete this.Eb[b];
        this.Db--;
        this.kb();
        return !0
    };
    t.delete = function(a) {
        return this.remove(a)
    };
    t.kq = function(a) {
        if (null === a) return this;
        this.v && wa(this);
        if (Ea(a))
            for (var b = a.length, c = 0; c < b; c++) this.remove(a[c]);
        else
            for (a = a.iterator; a.next();) this.remove(a.value);
        return this
    };
    t.Hz = function(a) {
        if (null === a || 0 === this.count) return this;
        this.v && wa(this);
        var b = new F;
        b.addAll(a);
        a = [];
        for (var c = this.iterator; c.next();) {
            var d = c.value;
            b.contains(d) || a.push(d)
        }
        this.kq(a);
        return this
    };
    t.clear = function() {
        this.v && wa(this);
        this.Eb = {};
        this.Db = 0;
        null !== this.Ja && this.Ja.reset();
        this.Se = this.fa = null;
        this.kb()
    };
    F.prototype.copy = function() {
        var a = new F,
            b = this.Eb,
            c;
        for (c in b) a.add(b[c].value);
        return a
    };
    F.prototype.Ma = function() {
        var a = Array(this.Db),
            b = this.Eb,
            c = 0,
            d;
        for (d in b) a[c] = b[d].value, c++;
        return a
    };
    F.prototype.Jv = function() {
        var a = new E,
            b = this.Eb,
            c;
        for (c in b) a.add(b[c].value);
        return a
    };

    function mb(a) {
        a.__gohashid = Gb++
    }

    function Db(a) {
        var b = a.__gohashid;
        void 0 === b && (b = Gb++, a.__gohashid = b);
        return b
    }

    function Bb(a) {
        return a.__gohashid
    }
    pa.Object.defineProperties(F.prototype, {
        count: {
            get: function() {
                return this.Db
            }
        },
        size: {
            get: function() {
                return this.Db
            }
        },
        iterator: {
            get: function() {
                if (0 >= this.Db) return xb;
                var a = this.Ja;
                return null !== a ? (a.reset(), a) : new Cb(this)
            }
        }
    });
    F.prototype.toList = F.prototype.Jv;
    F.prototype.toArray = F.prototype.Ma;
    F.prototype.clear = F.prototype.clear;
    F.prototype.retainAll = F.prototype.Hz;
    F.prototype.removeAll = F.prototype.kq;
    F.prototype["delete"] = F.prototype.delete;
    F.prototype.remove = F.prototype.remove;
    F.prototype.first = F.prototype.first;
    F.prototype.containsAny = F.prototype.oy;
    F.prototype.containsAll = F.prototype.ny;
    F.prototype.has = F.prototype.has;
    F.prototype.contains = F.prototype.contains;
    F.prototype.addAll = F.prototype.addAll;
    F.prototype.add = F.prototype.add;
    F.prototype.thaw = F.prototype.ha;
    F.prototype.freeze = F.prototype.freeze;
    var Gb = 1;
    F.className = "Set";
    F.uniqueHash = mb;
    F.hashIdUnique = Db;
    F.hashId = Bb;

    function Hb(a) {
        this.ja = a;
        this.la = a.Ba;
        this.na = null
    }
    Hb.prototype.reset = function() {
        this.la = this.ja.Ba;
        this.na = null
    };
    Hb.prototype.next = function() {
        var a = this.ja;
        if (a.Ba !== this.la && null === this.key) return !1;
        var b = this.na;
        b = null === b ? a.fa : b.oa;
        if (null !== b) return this.na = b, this.value = this.key = a = b.key, !0;
        this.zd();
        return !1
    };
    Hb.prototype.fd = function() {
        return this.next()
    };
    Hb.prototype.first = function() {
        var a = this.ja;
        this.la = a.Ba;
        a = a.fa;
        return null !== a ? (this.na = a, this.value = this.key = a = a.key) : null
    };
    Hb.prototype.any = function(a) {
        var b = this.ja;
        this.na = null;
        for (b = b.fa; null !== b;) {
            if (a(b.key)) return !0;
            b = b.oa
        }
        return !1
    };
    Hb.prototype.all = function(a) {
        var b = this.ja;
        this.na = null;
        for (b = b.fa; null !== b;) {
            if (!a(b.key)) return !1;
            b = b.oa
        }
        return !0
    };
    Hb.prototype.each = function(a) {
        var b = this.ja;
        this.na = null;
        for (b = b.fa; null !== b;) a(b.key), b = b.oa;
        return this
    };
    Hb.prototype.map = function(a) {
        var b = this.ja;
        this.na = null;
        var c = new E;
        for (b = b.fa; null !== b;) c.add(a(b.key)), b = b.oa;
        return c.iterator
    };
    Hb.prototype.filter = function(a) {
        var b = this.ja;
        this.na = null;
        var c = new E;
        for (b = b.fa; null !== b;) {
            var d = b.key;
            a(d) && c.add(d);
            b = b.oa
        }
        return c.iterator
    };
    Hb.prototype.zd = function() {
        this.value = this.key = null;
        this.la = -1
    };
    Hb.prototype.toString = function() {
        return null !== this.na ? "MapKeySetIterator@" + this.na.value : "MapKeySetIterator"
    };
    pa.Object.defineProperties(Hb.prototype, {
        iterator: {
            get: function() {
                return this
            }
        },
        count: {
            get: function() {
                return this.ja.Db
            }
        }
    });
    Hb.prototype.first = Hb.prototype.first;
    Hb.prototype.hasNext = Hb.prototype.fd;
    Hb.prototype.next = Hb.prototype.next;
    Hb.prototype.reset = Hb.prototype.reset;
    Hb.className = "MapKeySetIterator";

    function Ib(a) {
        F.call(this);
        mb(this);
        this.v = !0;
        this.ja = a
    }
    oa(Ib, F);
    t = Ib.prototype;
    t.freeze = function() {
        return this
    };
    t.ha = function() {
        return this
    };
    t.toString = function() {
        return "MapKeySet(" + this.ja.toString() + ")"
    };
    t.add = function() {
        A("This Set is read-only: " + this.toString());
        return this
    };
    t.contains = function(a) {
        return this.ja.contains(a)
    };
    t.has = function(a) {
        return this.contains(a)
    };
    t.remove = function() {
        A("This Set is read-only: " + this.toString());
        return !1
    };
    t.delete = function(a) {
        return this.remove(a)
    };
    t.clear = function() {
        A("This Set is read-only: " + this.toString())
    };
    t.first = function() {
        var a = this.ja.fa;
        return null !== a ? a.key : null
    };
    Ib.prototype.any = function(a) {
        for (var b = this.ja.fa; null !== b;) {
            if (a(b.key)) return !0;
            b = b.oa
        }
        return !1
    };
    Ib.prototype.all = function(a) {
        for (var b = this.ja.fa; null !== b;) {
            if (!a(b.key)) return !1;
            b = b.oa
        }
        return !0
    };
    Ib.prototype.each = function(a) {
        for (var b = this.ja.fa; null !== b;) a(b.key), b = b.oa;
        return this
    };
    Ib.prototype.map = function(a) {
        for (var b = new F, c = this.ja.fa; null !== c;) b.add(a(c.key)), c = c.oa;
        return b
    };
    Ib.prototype.filter = function(a) {
        for (var b = new F, c = this.ja.fa; null !== c;) {
            var d = c.key;
            a(d) && b.add(d);
            c = c.oa
        }
        return b
    };
    Ib.prototype.copy = function() {
        return new Ib(this.ja)
    };
    Ib.prototype.Kv = function() {
        var a = new F,
            b = this.ja.Eb,
            c;
        for (c in b) a.add(b[c].key);
        return a
    };
    Ib.prototype.Ma = function() {
        var a = this.ja.Eb,
            b = Array(this.ja.Db),
            c = 0,
            d;
        for (d in a) b[c] = a[d].key, c++;
        return b
    };
    Ib.prototype.Jv = function() {
        var a = new E,
            b = this.ja.Eb,
            c;
        for (c in b) a.add(b[c].key);
        return a
    };
    pa.Object.defineProperties(Ib.prototype, {
        count: {
            get: function() {
                return this.ja.Db
            }
        },
        size: {
            get: function() {
                return this.ja.Db
            }
        },
        iterator: {
            get: function() {
                return 0 >= this.ja.Db ? xb : new Hb(this.ja)
            }
        }
    });
    Ib.prototype.toList = Ib.prototype.Jv;
    Ib.prototype.toArray = Ib.prototype.Ma;
    Ib.prototype.toSet = Ib.prototype.Kv;
    Ib.prototype.first = Ib.prototype.first;
    Ib.prototype.clear = Ib.prototype.clear;
    Ib.prototype["delete"] = Ib.prototype.delete;
    Ib.prototype.remove = Ib.prototype.remove;
    Ib.prototype.has = Ib.prototype.has;
    Ib.prototype.contains = Ib.prototype.contains;
    Ib.prototype.add = Ib.prototype.add;
    Ib.prototype.thaw = Ib.prototype.ha;
    Ib.prototype.freeze = Ib.prototype.freeze;
    Ib.className = "MapKeySet";

    function Jb(a) {
        this.ja = a;
        a.Re = null;
        this.la = a.Ba;
        this.na = null
    }
    Jb.prototype.reset = function() {
        var a = this.ja;
        a.Re = null;
        this.la = a.Ba;
        this.na = null
    };
    Jb.prototype.next = function() {
        var a = this.ja;
        if (a.Ba !== this.la && null === this.key) return !1;
        var b = this.na;
        b = null === b ? a.fa : b.oa;
        if (null !== b) return this.na = b, this.value = b.value, this.key = b.key, !0;
        this.zd();
        return !1
    };
    Jb.prototype.fd = function() {
        return this.next()
    };
    Jb.prototype.first = function() {
        var a = this.ja;
        this.la = a.Ba;
        a = a.fa;
        if (null !== a) {
            this.na = a;
            var b = a.value;
            this.key = a.key;
            return this.value = b
        }
        return null
    };
    Jb.prototype.any = function(a) {
        var b = this.ja;
        this.na = b.Re = null;
        for (b = b.fa; null !== b;) {
            if (a(b.value)) return !0;
            b = b.oa
        }
        return !1
    };
    Jb.prototype.all = function(a) {
        var b = this.ja;
        this.na = b.Re = null;
        for (b = b.fa; null !== b;) {
            if (!a(b.value)) return !1;
            b = b.oa
        }
        return !0
    };
    Jb.prototype.each = function(a) {
        var b = this.ja;
        this.na = b.Re = null;
        for (b = b.fa; null !== b;) a(b.value), b = b.oa;
        return this
    };
    Jb.prototype.map = function(a) {
        var b = this.ja;
        this.na = b.Re = null;
        var c = new E;
        for (b = b.fa; null !== b;) c.add(a(b.value)), b = b.oa;
        return c.iterator
    };
    Jb.prototype.filter = function(a) {
        var b = this.ja;
        this.na = b.Re = null;
        var c = new E;
        for (b = b.fa; null !== b;) {
            var d = b.value;
            a(d) && c.add(d);
            b = b.oa
        }
        return c.iterator
    };
    Jb.prototype.zd = function() {
        this.value = this.key = null;
        this.la = -1;
        this.ja.Re = this
    };
    Jb.prototype.toString = function() {
        return null !== this.na ? "MapValueSetIterator@" + this.na.value : "MapValueSetIterator"
    };
    pa.Object.defineProperties(Jb.prototype, {
        iterator: {
            get: function() {
                return this
            }
        },
        count: {
            get: function() {
                return this.ja.Db
            }
        }
    });
    Jb.prototype.first = Jb.prototype.first;
    Jb.prototype.hasNext = Jb.prototype.fd;
    Jb.prototype.next = Jb.prototype.next;
    Jb.prototype.reset = Jb.prototype.reset;
    Jb.className = "MapValueSetIterator";

    function Fb(a, b) {
        this.key = a;
        this.value = b;
        this.ol = this.oa = null
    }
    Fb.prototype.toString = function() {
        return "{" + this.key + ":" + this.value + "}"
    };
    Fb.className = "KeyValuePair";

    function Kb(a) {
        this.ja = a;
        a.Ja = null;
        this.la = a.Ba;
        this.na = null
    }
    Kb.prototype.reset = function() {
        var a = this.ja;
        a.Ja = null;
        this.la = a.Ba;
        this.na = null
    };
    Kb.prototype.next = function() {
        var a = this.ja;
        if (a.Ba !== this.la && null === this.key) return !1;
        var b = this.na;
        b = null === b ? a.fa : b.oa;
        if (null !== b) return this.na = b, this.key = b.key, this.value = b.value, !0;
        this.zd();
        return !1
    };
    Kb.prototype.fd = function() {
        return this.next()
    };
    Kb.prototype.first = function() {
        var a = this.ja;
        this.la = a.Ba;
        a = a.fa;
        return null !== a ? (this.na = a, this.key = a.key, this.value = a.value, a) : null
    };
    Kb.prototype.any = function(a) {
        var b = this.ja;
        this.na = b.Ja = null;
        for (b = b.fa; null !== b;) {
            if (a(b)) return !0;
            b = b.oa
        }
        return !1
    };
    Kb.prototype.all = function(a) {
        var b = this.ja;
        this.na = b.Ja = null;
        for (b = b.fa; null !== b;) {
            if (!a(b)) return !1;
            b = b.oa
        }
        return !0
    };
    Kb.prototype.each = function(a) {
        var b = this.ja;
        this.na = b.Ja = null;
        for (b = b.fa; null !== b;) a(b), b = b.oa;
        return this
    };
    Kb.prototype.map = function(a) {
        var b = this.ja;
        this.na = b.Ja = null;
        var c = new E;
        for (b = b.fa; null !== b;) c.add(a(b)), b = b.oa;
        return c.iterator
    };
    Kb.prototype.filter = function(a) {
        var b = this.ja;
        this.na = b.Ja = null;
        var c = new E;
        for (b = b.fa; null !== b;) a(b) && c.add(b), b = b.oa;
        return c.iterator
    };
    Kb.prototype.zd = function() {
        this.value = this.key = null;
        this.la = -1;
        this.ja.Ja = this
    };
    Kb.prototype.toString = function() {
        return null !== this.na ? "MapIterator@" + this.na : "MapIterator"
    };
    pa.Object.defineProperties(Kb.prototype, {
        iterator: {
            get: function() {
                return this
            }
        },
        count: {
            get: function() {
                return this.ja.Db
            }
        }
    });
    Kb.prototype.first = Kb.prototype.first;
    Kb.prototype.hasNext = Kb.prototype.fd;
    Kb.prototype.next = Kb.prototype.next;
    Kb.prototype.reset = Kb.prototype.reset;
    Kb.className = "MapIterator";

    function Lb(a) {
        mb(this);
        this.v = !1;
        this.Eb = {};
        this.Db = 0;
        this.Re = this.Ja = null;
        this.Ba = 0;
        this.Se = this.fa = null;
        void 0 !== a && ("function" === typeof a || "string" === typeof a ? za() : this.addAll(a))
    }
    t = Lb.prototype;
    t.kb = function() {
        var a = this.Ba;
        a++;
        999999999 < a && (a = 0);
        this.Ba = a
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        this.v = !1;
        return this
    };
    t.toString = function() {
        return "Map()#" + Bb(this)
    };
    t.add = function(a, b) {
        this.v && wa(this, a);
        var c = a;
        Ca(a) && (c = Db(a));
        var d = this.Eb[c];
        void 0 === d ? (this.Db++, a = new Fb(a, b), this.Eb[c] = a, c = this.Se, null === c ? this.fa = a : (a.ol = c, c.oa = a), this.Se = a, this.kb()) : d.value = b;
        return this
    };
    t.set = function(a, b) {
        return this.add(a, b)
    };
    t.addAll = function(a) {
        if (null === a) return this;
        if (Ea(a))
            for (var b = a.length, c = 0; c < b; c++) {
                var d = a[c];
                this.add(d.key, d.value)
            } else
                for (a = a.iterator; a.next();) b = a.value, this.add(b.key, b.value);
        return this
    };
    t.first = function() {
        return this.fa
    };
    Lb.prototype.any = function(a) {
        for (var b = this.fa; null !== b;) {
            if (a(b)) return !0;
            b = b.oa
        }
        return !1
    };
    Lb.prototype.all = function(a) {
        for (var b = this.fa; null !== b;) {
            if (!a(b)) return !1;
            b = b.oa
        }
        return !0
    };
    Lb.prototype.each = function(a) {
        for (var b = this.fa; null !== b;) a(b), b = b.oa;
        return this
    };
    Lb.prototype.map = function(a) {
        for (var b = new Lb, c = this.fa; null !== c;) b.add(c.key, a(c)), c = c.oa;
        return b
    };
    Lb.prototype.filter = function(a) {
        for (var b = new Lb, c = this.fa; null !== c;) a(c) && b.add(c.key, c.value), c = c.oa;
        return b
    };
    t = Lb.prototype;
    t.contains = function(a) {
        var b = a;
        return Ca(a) && (b = Bb(a), void 0 === b) ? !1 : void 0 !== this.Eb[b]
    };
    t.has = function(a) {
        return this.contains(a)
    };
    t.J = function(a) {
        var b = a;
        if (Ca(a) && (b = Bb(a), void 0 === b)) return null;
        a = this.Eb[b];
        return void 0 === a ? null : a.value
    };
    t.get = function(a) {
        return this.J(a)
    };
    t.remove = function(a) {
        if (null === a) return !1;
        this.v && wa(this, a);
        var b = a;
        if (Ca(a) && (b = Bb(a), void 0 === b)) return !1;
        a = this.Eb[b];
        if (void 0 === a) return !1;
        var c = a.oa,
            d = a.ol;
        null !== c && (c.ol = d);
        null !== d && (d.oa = c);
        this.fa === a && (this.fa = c);
        this.Se === a && (this.Se = d);
        delete this.Eb[b];
        this.Db--;
        this.kb();
        return !0
    };
    t.delete = function(a) {
        return this.remove(a)
    };
    t.clear = function() {
        this.v && wa(this);
        this.Eb = {};
        this.Db = 0;
        null !== this.Ja && this.Ja.reset();
        null !== this.Re && this.Re.reset();
        this.Se = this.fa = null;
        this.kb()
    };
    Lb.prototype.copy = function() {
        var a = new Lb,
            b = this.Eb,
            c;
        for (c in b) {
            var d = b[c];
            a.add(d.key, d.value)
        }
        return a
    };
    Lb.prototype.Ma = function() {
        var a = this.Eb,
            b = Array(this.Db),
            c = 0,
            d;
        for (d in a) {
            var e = a[d];
            b[c] = new Fb(e.key, e.value);
            c++
        }
        return b
    };
    Lb.prototype.Zd = function() {
        return new Ib(this)
    };
    pa.Object.defineProperties(Lb.prototype, {
        count: {
            get: function() {
                return this.Db
            }
        },
        size: {
            get: function() {
                return this.Db
            }
        },
        iterator: {
            get: function() {
                if (0 >= this.count) return xb;
                var a = this.Ja;
                return null !== a ? (a.reset(), a) : new Kb(this)
            }
        },
        iteratorKeys: {
            get: function() {
                return 0 >= this.count ? xb : new Hb(this)
            }
        },
        iteratorValues: {
            get: function() {
                if (0 >= this.count) return xb;
                var a = this.Re;
                return null !== a ? (a.reset(), a) : new Jb(this)
            }
        }
    });
    Lb.prototype.toKeySet = Lb.prototype.Zd;
    Lb.prototype.toArray = Lb.prototype.Ma;
    Lb.prototype.clear = Lb.prototype.clear;
    Lb.prototype["delete"] = Lb.prototype.delete;
    Lb.prototype.remove = Lb.prototype.remove;
    Lb.prototype.get = Lb.prototype.get;
    Lb.prototype.getValue = Lb.prototype.J;
    Lb.prototype.has = Lb.prototype.has;
    Lb.prototype.contains = Lb.prototype.contains;
    Lb.prototype.first = Lb.prototype.first;
    Lb.prototype.addAll = Lb.prototype.addAll;
    Lb.prototype.set = Lb.prototype.set;
    Lb.prototype.add = Lb.prototype.add;
    Lb.prototype.thaw = Lb.prototype.ha;
    Lb.prototype.freeze = Lb.prototype.freeze;
    Lb.className = "Map";

    function G(a, b) {
        void 0 === a ? this.D = this.C = 0 : "number" === typeof a && "number" === typeof b ? (this.C = a, this.D = b) : A("Invalid arguments to Point constructor: " + a + ", " + b);
        this.v = !1
    }
    G.prototype.assign = function(a) {
        this.C = a.C;
        this.D = a.D;
        return this
    };
    G.prototype.h = function(a, b) {
        this.C = a;
        this.D = b;
        return this
    };
    G.prototype.sg = function(a, b) {
        this.C = a;
        this.D = b;
        return this
    };
    G.prototype.set = function(a) {
        this.C = a.C;
        this.D = a.D;
        return this
    };
    G.prototype.copy = function() {
        var a = new G;
        a.C = this.C;
        a.D = this.D;
        return a
    };
    t = G.prototype;
    t.ga = function() {
        this.v = !0;
        Object.freeze(this);
        return this
    };
    t.I = function() {
        return Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        Object.isFrozen(this) && A("cannot thaw constant: " + this);
        this.v = !1;
        return this
    };

    function Nb(a) {
        if ("string" === typeof a) {
            a = a.split(" ");
            for (var b = 0, c = 0;
                "" === a[b];) b++;
            var d = a[b++];
            d && (c = parseFloat(d));
            for (var e = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (e = parseFloat(d));
            return new G(c, e)
        }
        return new G
    }

    function Ob(a) {
        return a.x.toString() + " " + a.y.toString()
    }
    t.toString = function() {
        return "Point(" + this.x + "," + this.y + ")"
    };
    t.A = function(a) {
        return a instanceof G ? this.C === a.x && this.D === a.y : !1
    };
    t.Ai = function(a, b) {
        return this.C === a && this.D === b
    };
    t.Pa = function(a) {
        return H.w(this.C, a.x) && H.w(this.D, a.y)
    };
    t.add = function(a) {
        this.C += a.x;
        this.D += a.y;
        return this
    };
    t.Yd = function(a) {
        this.C -= a.x;
        this.D -= a.y;
        return this
    };
    t.offset = function(a, b) {
        this.C += a;
        this.D += b;
        return this
    };
    G.prototype.rotate = function(a) {
        if (0 === a) return this;
        var b = this.C,
            c = this.D;
        if (0 === b && 0 === c) return this;
        360 <= a ? a -= 360 : 0 > a && (a += 360);
        if (90 === a) {
            a = 0;
            var d = 1
        } else 180 === a ? (a = -1, d = 0) : 270 === a ? (a = 0, d = -1) : (d = a * Math.PI / 180, a = Math.cos(d), d = Math.sin(d));
        this.C = a * b - d * c;
        this.D = d * b + a * c;
        return this
    };
    t = G.prototype;
    t.scale = function(a, b) {
        this.C *= a;
        this.D *= b;
        return this
    };
    t.Be = function(a) {
        var b = a.x - this.C;
        a = a.y - this.D;
        return b * b + a * a
    };
    t.ed = function(a, b) {
        a -= this.C;
        b -= this.D;
        return a * a + b * b
    };
    t.normalize = function() {
        var a = this.C,
            b = this.D,
            c = Math.sqrt(a * a + b * b);
        0 < c && (this.C = a / c, this.D = b / c);
        return this
    };
    t.Va = function(a) {
        return Pb(a.x - this.C, a.y - this.D)
    };
    t.direction = function(a, b) {
        return Pb(a - this.C, b - this.D)
    };

    function Pb(a, b) {
        if (0 === a) return 0 < b ? 90 : 0 > b ? 270 : 0;
        if (0 === b) return 0 < a ? 0 : 180;
        if (isNaN(a) || isNaN(b)) return 0;
        var c = 180 * Math.atan(Math.abs(b / a)) / Math.PI;
        0 > a ? c = 0 > b ? c + 180 : 180 - c : 0 > b && (c = 360 - c);
        return c
    }
    t.Bz = function(a, b, c, d) {
        H.Mi(a, b, c, d, this.C, this.D, this);
        return this
    };
    t.Cz = function(a, b) {
        H.Mi(a.x, a.y, b.x, b.y, this.C, this.D, this);
        return this
    };
    t.Mz = function(a, b, c, d) {
        H.Sp(this.C, this.D, a, b, c, d, this);
        return this
    };
    t.Nz = function(a, b) {
        H.Sp(this.C, this.D, a.x, a.y, b.width, b.height, this);
        return this
    };
    t.Pi = function(a, b) {
        this.C = a.x + b.x * a.width + b.offsetX;
        this.D = a.y + b.y * a.height + b.offsetY;
        return this
    };
    t.kk = function(a, b, c, d, e) {
        this.C = a + e.x * c + e.offsetX;
        this.D = b + e.y * d + e.offsetY;
        return this
    };
    t.transform = function(a) {
        a.ta(this);
        return this
    };

    function Qb(a, b) {
        b.Vd(a);
        return a
    }

    function Rb(a, b, c, d, e, f) {
        var g = e - c,
            h = f - d,
            k = g * g + h * h;
        c -= a;
        d -= b;
        var l = -c * g - d * h;
        if (0 >= l || l >= k) return g = e - a, h = f - b, Math.min(c * c + d * d, g * g + h * h);
        a = g * d - h * c;
        return a * a / k
    }

    function Sb(a, b, c, d) {
        a = c - a;
        b = d - b;
        return a * a + b * b
    }

    function Tb(a, b, c, d) {
        a = c - a;
        b = d - b;
        if (0 === a) return 0 < b ? 90 : 0 > b ? 270 : 0;
        if (0 === b) return 0 < a ? 0 : 180;
        if (isNaN(a) || isNaN(b)) return 0;
        d = 180 * Math.atan(Math.abs(b / a)) / Math.PI;
        0 > a ? d = 0 > b ? d + 180 : 180 - d : 0 > b && (d = 360 - d);
        return d
    }
    t.s = function() {
        return isFinite(this.x) && isFinite(this.y)
    };
    G.alloc = function() {
        var a = $b.pop();
        return void 0 === a ? new G : a
    };
    G.allocAt = function(a, b) {
        var c = $b.pop();
        if (void 0 === c) return new G(a, b);
        c.x = a;
        c.y = b;
        return c
    };
    G.free = function(a) {
        $b.push(a)
    };
    pa.Object.defineProperties(G.prototype, {
        x: {
            get: function() {
                return this.C
            },
            set: function(a) {
                this.C = a
            }
        },
        y: {
            get: function() {
                return this.D
            },
            set: function(a) {
                this.D = a
            }
        }
    });
    G.prototype.isReal = G.prototype.s;
    G.prototype.setSpot = G.prototype.kk;
    G.prototype.setRectSpot = G.prototype.Pi;
    G.prototype.snapToGridPoint = G.prototype.Nz;
    G.prototype.snapToGrid = G.prototype.Mz;
    G.prototype.projectOntoLineSegmentPoint = G.prototype.Cz;
    G.prototype.projectOntoLineSegment = G.prototype.Bz;
    G.prototype.direction = G.prototype.direction;
    G.prototype.directionPoint = G.prototype.Va;
    G.prototype.normalize = G.prototype.normalize;
    G.prototype.distanceSquared = G.prototype.ed;
    G.prototype.distanceSquaredPoint = G.prototype.Be;
    G.prototype.scale = G.prototype.scale;
    G.prototype.rotate = G.prototype.rotate;
    G.prototype.offset = G.prototype.offset;
    G.prototype.subtract = G.prototype.Yd;
    G.prototype.add = G.prototype.add;
    G.prototype.equalsApprox = G.prototype.Pa;
    G.prototype.equalTo = G.prototype.Ai;
    G.prototype.equals = G.prototype.A;
    G.prototype.set = G.prototype.set;
    G.prototype.setTo = G.prototype.sg;
    var ac = null,
        bc = null,
        cc = null,
        dc = null,
        ec = null,
        $b = [];
    G.className = "Point";
    G.parse = Nb;
    G.stringify = Ob;
    G.distanceLineSegmentSquared = Rb;
    G.distanceSquared = Sb;
    G.direction = Tb;
    G.Origin = ac = (new G(0, 0)).ga();
    G.InfiniteTopLeft = bc = (new G(-Infinity, -Infinity)).ga();
    G.InfiniteBottomRight = cc = (new G(Infinity, Infinity)).ga();
    G.SixPoint = dc = (new G(6, 6)).ga();
    G.NoPoint = ec = (new G(NaN, NaN)).ga();
    G.parse = Nb;
    G.stringify = Ob;
    G.distanceLineSegmentSquared = Rb;
    G.distanceSquared = Sb;
    G.direction = Tb;

    function L(a, b) {
        void 0 === a ? this.Y = this.$ = 0 : "number" === typeof a && (0 <= a || isNaN(a)) && "number" === typeof b && (0 <= b || isNaN(b)) ? (this.$ = a, this.Y = b) : A("Invalid arguments to Size constructor: " + a + ", " + b);
        this.v = !1
    }
    var fc, gc, hc, ic, kc, lc, mc;
    L.prototype.assign = function(a) {
        this.$ = a.$;
        this.Y = a.Y;
        return this
    };
    L.prototype.h = function(a, b) {
        this.$ = a;
        this.Y = b;
        return this
    };
    L.prototype.sg = function(a, b) {
        this.$ = a;
        this.Y = b;
        return this
    };
    L.prototype.set = function(a) {
        this.$ = a.$;
        this.Y = a.Y;
        return this
    };
    L.prototype.copy = function() {
        var a = new L;
        a.$ = this.$;
        a.Y = this.Y;
        return a
    };
    t = L.prototype;
    t.ga = function() {
        this.v = !0;
        Object.freeze(this);
        return this
    };
    t.I = function() {
        return Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        Object.isFrozen(this) && A("cannot thaw constant: " + this);
        this.v = !1;
        return this
    };

    function nc(a) {
        if ("string" === typeof a) {
            a = a.split(" ");
            for (var b = 0, c = 0;
                "" === a[b];) b++;
            var d = a[b++];
            d && (c = parseFloat(d));
            for (var e = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (e = parseFloat(d));
            return new L(c, e)
        }
        return new L
    }

    function oc(a) {
        return a.width.toString() + " " + a.height.toString()
    }
    t.toString = function() {
        return "Size(" + this.width + "," + this.height + ")"
    };
    t.A = function(a) {
        return a instanceof L ? this.$ === a.width && this.Y === a.height : !1
    };
    t.Ai = function(a, b) {
        return this.$ === a && this.Y === b
    };
    t.Pa = function(a) {
        return H.w(this.$, a.width) && H.w(this.Y, a.height)
    };
    t.s = function() {
        return isFinite(this.width) && isFinite(this.height)
    };
    L.alloc = function() {
        var a = pc.pop();
        return void 0 === a ? new L : a
    };
    L.free = function(a) {
        pc.push(a)
    };
    pa.Object.defineProperties(L.prototype, {
        width: {
            get: function() {
                return this.$
            },
            set: function(a) {
                0 > a && xa(a, ">= 0", L, "width");
                this.$ = a
            }
        },
        height: {
            get: function() {
                return this.Y
            },
            set: function(a) {
                0 > a && xa(a, ">= 0", L, "height");
                this.Y = a
            }
        }
    });
    L.prototype.isReal = L.prototype.s;
    L.prototype.equalsApprox = L.prototype.Pa;
    L.prototype.equalTo = L.prototype.Ai;
    L.prototype.equals = L.prototype.A;
    L.prototype.set = L.prototype.set;
    L.prototype.setTo = L.prototype.sg;
    var pc = [];
    L.className = "Size";
    L.parse = nc;
    L.stringify = oc;
    L.ZeroSize = fc = (new L(0, 0)).ga();
    L.OneSize = gc = (new L(1, 1)).ga();
    L.SixSize = hc = (new L(6, 6)).ga();
    L.EightSize = ic = (new L(8, 8)).ga();
    L.TenSize = kc = (new L(10, 10)).ga();
    L.InfiniteSize = lc = (new L(Infinity, Infinity)).ga();
    L.NoSize = mc = (new L(NaN, NaN)).ga();
    L.parse = nc;
    L.stringify = oc;

    function N(a, b, c, d) {
        void 0 === a ? this.Y = this.$ = this.D = this.C = 0 : a instanceof G ? b instanceof G ? (this.C = Math.min(a.C, b.C), this.D = Math.min(a.D, b.D), this.$ = Math.abs(a.C - b.C), this.Y = Math.abs(a.D - b.D)) : b instanceof L ? (this.C = a.C, this.D = a.D, this.$ = b.$, this.Y = b.Y) : A("Incorrect arguments supplied to Rect constructor") : "number" === typeof a && "number" === typeof b && "number" === typeof c && (0 <= c || isNaN(c)) && "number" === typeof d && (0 <= d || isNaN(d)) ? (this.C = a, this.D = b, this.$ = c, this.Y = d) : A("Invalid arguments to Rect constructor: " +
            a + ", " + b + ", " + c + ", " + d);
        this.v = !1
    }
    t = N.prototype;
    t.assign = function(a) {
        this.C = a.C;
        this.D = a.D;
        this.$ = a.$;
        this.Y = a.Y;
        return this
    };
    t.h = function(a, b, c, d) {
        this.C = a;
        this.D = b;
        this.$ = c;
        this.Y = d;
        return this
    };

    function sc(a, b, c) {
        a.$ = b;
        a.Y = c
    }
    t.sg = function(a, b, c, d) {
        this.C = a;
        this.D = b;
        this.$ = c;
        this.Y = d;
        return this
    };
    t.set = function(a) {
        this.C = a.C;
        this.D = a.D;
        this.$ = a.$;
        this.Y = a.Y;
        return this
    };
    t.ld = function(a) {
        this.C = a.C;
        this.D = a.D;
        return this
    };
    t.Kz = function(a) {
        this.$ = a.$;
        this.Y = a.Y;
        return this
    };
    N.prototype.copy = function() {
        var a = new N;
        a.C = this.C;
        a.D = this.D;
        a.$ = this.$;
        a.Y = this.Y;
        return a
    };
    t = N.prototype;
    t.ga = function() {
        this.v = !0;
        Object.freeze(this);
        return this
    };
    t.I = function() {
        return Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        Object.isFrozen(this) && A("cannot thaw constant: " + this);
        this.v = !1;
        return this
    };

    function tc(a) {
        if ("string" === typeof a) {
            a = a.split(" ");
            for (var b = 0, c = 0;
                "" === a[b];) b++;
            var d = a[b++];
            d && (c = parseFloat(d));
            for (var e = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (e = parseFloat(d));
            for (var f = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (f = parseFloat(d));
            for (var g = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (g = parseFloat(d));
            return new N(c, e, f, g)
        }
        return new N
    }

    function uc(a) {
        return a.x.toString() + " " + a.y.toString() + " " + a.width.toString() + " " + a.height.toString()
    }
    t.toString = function() {
        return "Rect(" + this.x + "," + this.y + "," + this.width + "," + this.height + ")"
    };
    t.A = function(a) {
        return a instanceof N ? this.C === a.x && this.D === a.y && this.$ === a.width && this.Y === a.height : !1
    };
    t.Ai = function(a, b, c, d) {
        return this.C === a && this.D === b && this.$ === c && this.Y === d
    };
    t.Pa = function(a) {
        return H.w(this.C, a.x) && H.w(this.D, a.y) && H.w(this.$, a.width) && H.w(this.Y, a.height)
    };

    function xc(a, b) {
        return H.ba(a.C, b.x) && H.ba(a.D, b.y) && H.ba(a.$, b.width) && H.ba(a.Y, b.height)
    }
    t.ea = function(a) {
        return this.C <= a.x && this.C + this.$ >= a.x && this.D <= a.y && this.D + this.Y >= a.y
    };
    t.mf = function(a) {
        return this.C <= a.x && a.x + a.width <= this.C + this.$ && this.D <= a.y && a.y + a.height <= this.D + this.Y
    };
    t.contains = function(a, b, c, d) {
        void 0 === c && (c = 0);
        void 0 === d && (d = 0);
        return this.C <= a && a + c <= this.C + this.$ && this.D <= b && b + d <= this.D + this.Y
    };
    t.reset = function() {
        this.Y = this.$ = this.D = this.C = 0
    };
    t.offset = function(a, b) {
        this.C += a;
        this.D += b;
        return this
    };
    t.Vc = function(a, b) {
        return yc(this, b, a, b, a)
    };
    t.Jp = function(a) {
        return yc(this, a.top, a.right, a.bottom, a.left)
    };
    t.Iv = function(a) {
        return yc(this, -a.top, -a.right, -a.bottom, -a.left)
    };
    t.ez = function(a, b, c, d) {
        return yc(this, a, b, c, d)
    };

    function yc(a, b, c, d, e) {
        var f = a.$;
        c + e <= -f ? (a.C += f / 2, a.$ = 0) : (a.C -= e, a.$ += c + e);
        c = a.Y;
        b + d <= -c ? (a.D += c / 2, a.Y = 0) : (a.D -= b, a.Y += b + d);
        return a
    }
    t.iz = function(a) {
        return zc(this, a.x, a.y, a.width, a.height)
    };
    t.av = function(a, b, c, d) {
        return zc(this, a, b, c, d)
    };

    function zc(a, b, c, d, e) {
        var f = Math.max(a.C, b),
            g = Math.max(a.D, c);
        b = Math.min(a.C + a.$, b + d);
        c = Math.min(a.D + a.Y, c + e);
        a.C = f;
        a.D = g;
        a.$ = Math.max(0, b - f);
        a.Y = Math.max(0, c - g);
        return a
    }
    t.Kc = function(a) {
        return this.bv(a.x, a.y, a.width, a.height)
    };
    t.bv = function(a, b, c, d) {
        var e = this.$,
            f = this.C;
        if (Infinity !== e && Infinity !== c && (e += f, c += a, isNaN(c) || isNaN(e) || f > c || a > e)) return !1;
        a = this.Y;
        c = this.D;
        return Infinity !== a && Infinity !== d && (a += c, d += b, isNaN(d) || isNaN(a) || c > d || b > a) ? !1 : !0
    };

    function Ac(a, b, c) {
        var d = a.$,
            e = a.C,
            f = b.x - c;
        if (e > b.width + c + c + f || f > d + e) return !1;
        d = a.Y;
        a = a.D;
        e = b.y - c;
        return a > b.height + c + c + e || e > d + a ? !1 : !0
    }
    t.Ie = function(a) {
        return Bc(this, a.x, a.y, 0, 0)
    };
    t.Wc = function(a) {
        return Bc(this, a.C, a.D, a.$, a.Y)
    };
    t.Pv = function(a, b, c, d) {
        void 0 === c && (c = 0);
        void 0 === d && (d = 0);
        return Bc(this, a, b, c, d)
    };

    function Bc(a, b, c, d, e) {
        var f = Math.min(a.C, b),
            g = Math.min(a.D, c);
        b = Math.max(a.C + a.$, b + d);
        c = Math.max(a.D + a.Y, c + e);
        a.C = f;
        a.D = g;
        a.$ = b - f;
        a.Y = c - g;
        return a
    }
    t.kk = function(a, b, c) {
        this.C = a - c.offsetX - c.x * this.$;
        this.D = b - c.offsetY - c.y * this.Y;
        return this
    };

    function Cc(a, b, c, d, e, f, g, h) {
        void 0 === g && (g = 0);
        void 0 === h && (h = 0);
        return a <= e && e + g <= a + c && b <= f && f + h <= b + d
    }

    function Dc(a, b, c, d, e, f, g, h) {
        return a > g + e || e > c + a ? !1 : b > h + f || f > d + b ? !1 : !0
    }
    t.s = function() {
        return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height)
    };
    t.kz = function() {
        return 0 === this.width && 0 === this.height
    };
    N.alloc = function() {
        var a = Fc.pop();
        return void 0 === a ? new N : a
    };
    N.allocAt = function(a, b, c, d) {
        var e = Fc.pop();
        return void 0 === e ? new N(a, b, c, d) : e.h(a, b, c, d)
    };
    N.free = function(a) {
        Fc.push(a)
    };
    pa.Object.defineProperties(N.prototype, {
        x: {
            get: function() {
                return this.C
            },
            set: function(a) {
                this.C = a
            }
        },
        y: {
            get: function() {
                return this.D
            },
            set: function(a) {
                this.D = a
            }
        },
        width: {
            get: function() {
                return this.$
            },
            set: function(a) {
                0 > a && xa(a, ">= 0", N, "width");
                this.$ = a
            }
        },
        height: {
            get: function() {
                return this.Y
            },
            set: function(a) {
                0 > a && xa(a, ">= 0", N, "height");
                this.Y = a
            }
        },
        left: {
            get: function() {
                return this.C
            },
            set: function(a) {
                this.C = a
            }
        },
        top: {
            get: function() {
                return this.D
            },
            set: function(a) {
                this.D = a
            }
        },
        right: {
            get: function() {
                return this.C + this.$
            },
            set: function(a) {
                this.C += a - (this.C + this.$)
            }
        },
        bottom: {
            get: function() {
                return this.D + this.Y
            },
            set: function(a) {
                this.D += a - (this.D + this.Y)
            }
        },
        position: {
            get: function() {
                return new G(this.C, this.D)
            },
            set: function(a) {
                this.C = a.x;
                this.D =
                    a.y
            }
        },
        size: {
            get: function() {
                return new L(this.$, this.Y)
            },
            set: function(a) {
                this.$ = a.width;
                this.Y = a.height
            }
        },
        center: {
            get: function() {
                return new G(this.C + this.$ / 2, this.D + this.Y / 2)
            },
            set: function(a) {
                this.C = a.x - this.$ / 2;
                this.D = a.y - this.Y / 2
            }
        },
        centerX: {
            get: function() {
                return this.C + this.$ / 2
            },
            set: function(a) {
                this.C = a - this.$ / 2
            }
        },
        centerY: {
            get: function() {
                return this.D + this.Y / 2
            },
            set: function(a) {
                this.D =
                    a - this.Y / 2
            }
        }
    });
    N.prototype.isEmpty = N.prototype.kz;
    N.prototype.isReal = N.prototype.s;
    N.prototype.setSpot = N.prototype.kk;
    N.prototype.union = N.prototype.Pv;
    N.prototype.unionRect = N.prototype.Wc;
    N.prototype.unionPoint = N.prototype.Ie;
    N.prototype.intersects = N.prototype.bv;
    N.prototype.intersectsRect = N.prototype.Kc;
    N.prototype.intersect = N.prototype.av;
    N.prototype.intersectRect = N.prototype.iz;
    N.prototype.grow = N.prototype.ez;
    N.prototype.subtractMargin = N.prototype.Iv;
    N.prototype.addMargin = N.prototype.Jp;
    N.prototype.inflate = N.prototype.Vc;
    N.prototype.offset = N.prototype.offset;
    N.prototype.contains = N.prototype.contains;
    N.prototype.containsRect = N.prototype.mf;
    N.prototype.containsPoint = N.prototype.ea;
    N.prototype.equalsApprox = N.prototype.Pa;
    N.prototype.equalTo = N.prototype.Ai;
    N.prototype.equals = N.prototype.A;
    N.prototype.setSize = N.prototype.Kz;
    N.prototype.setPoint = N.prototype.ld;
    N.prototype.set = N.prototype.set;
    N.prototype.setTo = N.prototype.sg;
    var Gc = null,
        Hc = null,
        Fc = [];
    N.className = "Rect";
    N.parse = tc;
    N.stringify = uc;
    N.contains = Cc;
    N.intersects = Dc;
    N.ZeroRect = Gc = (new N(0, 0, 0, 0)).ga();
    N.NoRect = Hc = (new N(NaN, NaN, NaN, NaN)).ga();
    N.parse = tc;
    N.stringify = uc;
    N.contains = Cc;
    N.intersects = Dc;

    function Ic(a, b, c, d) {
        void 0 === a ? this.le = this.ae = this.te = this.we = 0 : void 0 === b ? this.left = this.bottom = this.right = this.top = a : void 0 === c ? (this.top = a, this.right = b, this.bottom = a, this.left = b) : void 0 !== d ? (this.top = a, this.right = b, this.bottom = c, this.left = d) : A("Invalid arguments to Margin constructor: " + a + ", " + b + ", " + c + ", " + d);
        this.v = !1
    }
    Ic.prototype.assign = function(a) {
        this.we = a.we;
        this.te = a.te;
        this.ae = a.ae;
        this.le = a.le;
        return this
    };
    Ic.prototype.sg = function(a, b, c, d) {
        this.we = a;
        this.te = b;
        this.ae = c;
        this.le = d;
        return this
    };
    Ic.prototype.set = function(a) {
        this.we = a.we;
        this.te = a.te;
        this.ae = a.ae;
        this.le = a.le;
        return this
    };
    Ic.prototype.copy = function() {
        var a = new Ic;
        a.we = this.we;
        a.te = this.te;
        a.ae = this.ae;
        a.le = this.le;
        return a
    };
    t = Ic.prototype;
    t.ga = function() {
        this.v = !0;
        Object.freeze(this);
        return this
    };
    t.I = function() {
        return Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        Object.isFrozen(this) && A("cannot thaw constant: " + this);
        this.v = !1;
        return this
    };

    function Jc(a) {
        if ("string" === typeof a) {
            a = a.split(" ");
            for (var b = 0, c = NaN;
                "" === a[b];) b++;
            var d = a[b++];
            d && (c = parseFloat(d));
            if (isNaN(c)) return new Ic;
            for (var e = NaN;
                "" === a[b];) b++;
            (d = a[b++]) && (e = parseFloat(d));
            if (isNaN(e)) return new Ic(c);
            for (var f = NaN;
                "" === a[b];) b++;
            (d = a[b++]) && (f = parseFloat(d));
            if (isNaN(f)) return new Ic(c, e);
            for (var g = NaN;
                "" === a[b];) b++;
            (d = a[b++]) && (g = parseFloat(d));
            return isNaN(g) ? new Ic(c, e) : new Ic(c, e, f, g)
        }
        return new Ic
    }

    function Kc(a) {
        return a.top.toString() + " " + a.right.toString() + " " + a.bottom.toString() + " " + a.left.toString()
    }
    t.toString = function() {
        return "Margin(" + this.top + "," + this.right + "," + this.bottom + "," + this.left + ")"
    };
    t.A = function(a) {
        return a instanceof Ic ? this.we === a.top && this.te === a.right && this.ae === a.bottom && this.le === a.left : !1
    };
    t.Ai = function(a, b, c, d) {
        return this.we === a && this.te === b && this.ae === c && this.le === d
    };
    t.Pa = function(a) {
        return H.w(this.we, a.top) && H.w(this.te, a.right) && H.w(this.ae, a.bottom) && H.w(this.le, a.left)
    };
    t.s = function() {
        return isFinite(this.top) && isFinite(this.right) && isFinite(this.bottom) && isFinite(this.left)
    };
    Ic.alloc = function() {
        var a = Nc.pop();
        return void 0 === a ? new Ic : a
    };
    Ic.free = function(a) {
        Nc.push(a)
    };
    pa.Object.defineProperties(Ic.prototype, {
        top: {
            get: function() {
                return this.we
            },
            set: function(a) {
                this.we = a
            }
        },
        right: {
            get: function() {
                return this.te
            },
            set: function(a) {
                this.te = a
            }
        },
        bottom: {
            get: function() {
                return this.ae
            },
            set: function(a) {
                this.ae = a
            }
        },
        left: {
            get: function() {
                return this.le
            },
            set: function(a) {
                this.le = a
            }
        }
    });
    Ic.prototype.isReal = Ic.prototype.s;
    Ic.prototype.equalsApprox = Ic.prototype.Pa;
    Ic.prototype.equalTo = Ic.prototype.Ai;
    Ic.prototype.equals = Ic.prototype.A;
    Ic.prototype.set = Ic.prototype.set;
    Ic.prototype.setTo = Ic.prototype.sg;
    var Oc = null,
        Pc = null,
        Nc = [];
    Ic.className = "Margin";
    Ic.parse = Jc;
    Ic.stringify = Kc;
    Ic.ZeroMargin = Oc = (new Ic(0, 0, 0, 0)).ga();
    Ic.TwoMargin = Pc = (new Ic(2, 2, 2, 2)).ga();
    Ic.parse = Jc;
    Ic.stringify = Kc;

    function Qc() {
        this.m11 = 1;
        this.m21 = this.m12 = 0;
        this.m22 = 1;
        this.dy = this.dx = 0
    }
    Qc.prototype.set = function(a) {
        this.m11 = a.m11;
        this.m12 = a.m12;
        this.m21 = a.m21;
        this.m22 = a.m22;
        this.dx = a.dx;
        this.dy = a.dy;
        return this
    };
    Qc.prototype.copy = function() {
        var a = new Qc;
        a.m11 = this.m11;
        a.m12 = this.m12;
        a.m21 = this.m21;
        a.m22 = this.m22;
        a.dx = this.dx;
        a.dy = this.dy;
        return a
    };
    t = Qc.prototype;
    t.toString = function() {
        return "Transform(" + this.m11 + "," + this.m12 + "," + this.m21 + "," + this.m22 + "," + this.dx + "," + this.dy + ")"
    };
    t.A = function(a) {
        return a instanceof Qc ? this.m11 === a.m11 && this.m12 === a.m12 && this.m21 === a.m21 && this.m22 === a.m22 && this.dx === a.dx && this.dy === a.dy : !1
    };
    t.$s = function() {
        return 0 === this.dx && 0 === this.dy && 1 === this.m11 && 0 === this.m12 && 0 === this.m21 && 1 === this.m22
    };
    t.reset = function() {
        this.m11 = 1;
        this.m21 = this.m12 = 0;
        this.m22 = 1;
        this.dy = this.dx = 0;
        return this
    };
    t.multiply = function(a) {
        var b = this.m12 * a.m11 + this.m22 * a.m12,
            c = this.m11 * a.m21 + this.m21 * a.m22,
            d = this.m12 * a.m21 + this.m22 * a.m22,
            e = this.m11 * a.dx + this.m21 * a.dy + this.dx,
            f = this.m12 * a.dx + this.m22 * a.dy + this.dy;
        this.m11 = this.m11 * a.m11 + this.m21 * a.m12;
        this.m12 = b;
        this.m21 = c;
        this.m22 = d;
        this.dx = e;
        this.dy = f;
        return this
    };
    t.hv = function(a) {
        var b = 1 / (a.m11 * a.m22 - a.m12 * a.m21),
            c = a.m22 * b,
            d = -a.m12 * b,
            e = -a.m21 * b,
            f = a.m11 * b,
            g = b * (a.m21 * a.dy - a.m22 * a.dx);
        a = b * (a.m12 * a.dx - a.m11 * a.dy);
        b = this.m11 * c + this.m21 * d;
        c = this.m12 * c + this.m22 * d;
        d = this.m11 * e + this.m21 * f;
        e = this.m12 * e + this.m22 * f;
        this.dx = this.m11 * g + this.m21 * a + this.dx;
        this.dy = this.m12 * g + this.m22 * a + this.dy;
        this.m11 = b;
        this.m12 = c;
        this.m21 = d;
        this.m22 = e;
        return this
    };
    t.Zs = function() {
        var a = 1 / (this.m11 * this.m22 - this.m12 * this.m21),
            b = -this.m12 * a,
            c = -this.m21 * a,
            d = this.m11 * a,
            e = a * (this.m21 * this.dy - this.m22 * this.dx),
            f = a * (this.m12 * this.dx - this.m11 * this.dy);
        this.m11 = this.m22 * a;
        this.m12 = b;
        this.m21 = c;
        this.m22 = d;
        this.dx = e;
        this.dy = f;
        return this
    };
    Qc.prototype.rotate = function(a, b, c) {
        360 <= a ? a -= 360 : 0 > a && (a += 360);
        if (0 === a) return this;
        this.translate(b, c);
        if (90 === a) {
            a = 0;
            var d = 1
        } else 180 === a ? (a = -1, d = 0) : 270 === a ? (a = 0, d = -1) : (d = a * Math.PI / 180, a = Math.cos(d), d = Math.sin(d));
        var e = this.m12 * a + this.m22 * d,
            f = this.m11 * -d + this.m21 * a,
            g = this.m12 * -d + this.m22 * a;
        this.m11 = this.m11 * a + this.m21 * d;
        this.m12 = e;
        this.m21 = f;
        this.m22 = g;
        this.translate(-b, -c);
        return this
    };
    t = Qc.prototype;
    t.translate = function(a, b) {
        this.dx += this.m11 * a + this.m21 * b;
        this.dy += this.m12 * a + this.m22 * b;
        return this
    };
    t.scale = function(a, b) {
        void 0 === b && (b = a);
        this.m11 *= a;
        this.m12 *= a;
        this.m21 *= b;
        this.m22 *= b;
        return this
    };
    t.ta = function(a) {
        var b = a.C,
            c = a.D;
        a.C = b * this.m11 + c * this.m21 + this.dx;
        a.D = b * this.m12 + c * this.m22 + this.dy;
        return a
    };
    t.Vd = function(a) {
        var b = 1 / (this.m11 * this.m22 - this.m12 * this.m21),
            c = -this.m12 * b,
            d = this.m11 * b,
            e = b * (this.m12 * this.dx - this.m11 * this.dy),
            f = a.C,
            g = a.D;
        a.C = f * this.m22 * b + g * -this.m21 * b + b * (this.m21 * this.dy - this.m22 * this.dx);
        a.D = f * c + g * d + e;
        return a
    };
    t.Ov = function(a) {
        var b = a.C,
            c = a.D,
            d = b + a.$,
            e = c + a.Y,
            f = this.m11,
            g = this.m12,
            h = this.m21,
            k = this.m22,
            l = this.dx,
            m = this.dy,
            n = b * f + c * h + l,
            p = b * g + c * k + m,
            q = d * f + c * h + l,
            r = d * g + c * k + m;
        c = b * f + e * h + l;
        b = b * g + e * k + m;
        f = d * f + e * h + l;
        d = d * g + e * k + m;
        e = Math.min(n, q);
        n = Math.max(n, q);
        q = Math.min(p, r);
        p = Math.max(p, r);
        e = Math.min(e, c);
        n = Math.max(n, c);
        q = Math.min(q, b);
        p = Math.max(p, b);
        e = Math.min(e, f);
        n = Math.max(n, f);
        q = Math.min(q, d);
        p = Math.max(p, d);
        a.C = e;
        a.D = q;
        a.$ = n - e;
        a.Y = p - q;
        return a
    };
    Qc.alloc = function() {
        var a = Rc.pop();
        return void 0 === a ? new Qc : a
    };
    Qc.free = function(a) {
        Rc.push(a)
    };
    Qc.prototype.transformRect = Qc.prototype.Ov;
    Qc.prototype.invertedTransformPoint = Qc.prototype.Vd;
    Qc.prototype.transformPoint = Qc.prototype.ta;
    Qc.prototype.scale = Qc.prototype.scale;
    Qc.prototype.translate = Qc.prototype.translate;
    Qc.prototype.rotate = Qc.prototype.rotate;
    Qc.prototype.invert = Qc.prototype.Zs;
    Qc.prototype.multiplyInverted = Qc.prototype.hv;
    Qc.prototype.multiply = Qc.prototype.multiply;
    Qc.prototype.reset = Qc.prototype.reset;
    Qc.prototype.isIdentity = Qc.prototype.$s;
    Qc.prototype.equals = Qc.prototype.A;
    Qc.prototype.set = Qc.prototype.set;
    var Rc = [];
    Qc.className = "Transform";
    Qc.xF = "54a702f3e53909c447824c6706603faf4c";

    function O(a, b, c, d) {
        void 0 === a ? this.Od = this.Nd = this.D = this.C = 0 : (void 0 === b && (b = 0), void 0 === c && (c = 0), void 0 === d && (d = 0), this.x = a, this.y = b, this.offsetX = c, this.offsetY = d);
        this.v = !1
    }
    var Sc, Tc, Uc, bd, cd, dd, ed, fd, gd, hd, id, jd, pd, qd, rd, sd, td, ud, vd, wd, zd, Ad, Bd, Cd, Dd, Ed, Fd, Gd, Hd, Id, Jd, Rd, Sd, Td, Ud, Vd;
    O.prototype.assign = function(a) {
        this.C = a.C;
        this.D = a.D;
        this.Nd = a.Nd;
        this.Od = a.Od;
        return this
    };
    O.prototype.sg = function(a, b, c, d) {
        this.C = a;
        this.D = b;
        this.Nd = c;
        this.Od = d;
        return this
    };
    O.prototype.set = function(a) {
        this.C = a.C;
        this.D = a.D;
        this.Nd = a.Nd;
        this.Od = a.Od;
        return this
    };
    O.prototype.copy = function() {
        var a = new O;
        a.C = this.C;
        a.D = this.D;
        a.Nd = this.Nd;
        a.Od = this.Od;
        return a
    };
    t = O.prototype;
    t.ga = function() {
        this.v = !0;
        Object.freeze(this);
        return this
    };
    t.I = function() {
        return Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        Object.isFrozen(this) && A("cannot thaw constant: " + this);
        this.v = !1;
        return this
    };

    function Wd(a, b) {
        a.C = NaN;
        a.D = NaN;
        a.Nd = b;
        return a
    }

    function Xd(a) {
        if ("string" === typeof a) {
            a = a.trim();
            if ("None" === a) return Sc;
            if ("TopLeft" === a) return Tc;
            if ("Top" === a || "TopCenter" === a || "MiddleTop" === a) return Uc;
            if ("TopRight" === a) return bd;
            if ("Left" === a || "LeftCenter" === a || "MiddleLeft" === a) return cd;
            if ("Center" === a) return dd;
            if ("Right" === a || "RightCenter" === a || "MiddleRight" === a) return ed;
            if ("BottomLeft" === a) return fd;
            if ("Bottom" === a || "BottomCenter" === a || "MiddleBottom" === a) return gd;
            if ("BottomRight" === a) return hd;
            if ("TopSide" === a) return id;
            if ("LeftSide" ===
                a) return jd;
            if ("RightSide" === a) return pd;
            if ("BottomSide" === a) return qd;
            if ("TopBottomSides" === a) return rd;
            if ("LeftRightSides" === a) return sd;
            if ("TopLeftSides" === a) return td;
            if ("TopRightSides" === a) return ud;
            if ("BottomLeftSides" === a) return vd;
            if ("BottomRightSides" === a) return wd;
            if ("NotTopSide" === a) return zd;
            if ("NotLeftSide" === a) return Ad;
            if ("NotRightSide" === a) return Bd;
            if ("NotBottomSide" === a) return Cd;
            if ("AllSides" === a) return Dd;
            if ("Default" === a) return Ed;
            a = a.split(" ");
            for (var b = 0, c = 0;
                "" === a[b];) b++;
            var d = a[b++];
            void 0 !== d && 0 < d.length && (c = parseFloat(d));
            for (var e = 0;
                "" === a[b];) b++;
            d = a[b++];
            void 0 !== d && 0 < d.length && (e = parseFloat(d));
            for (var f = 0;
                "" === a[b];) b++;
            d = a[b++];
            void 0 !== d && 0 < d.length && (f = parseFloat(d));
            for (var g = 0;
                "" === a[b];) b++;
            d = a[b++];
            void 0 !== d && 0 < d.length && (g = parseFloat(d));
            return new O(c, e, f, g)
        }
        return new O
    }

    function Yd(a) {
        return a.hb() ? a.x.toString() + " " + a.y.toString() + " " + a.offsetX.toString() + " " + a.offsetY.toString() : a.toString()
    }
    t.toString = function() {
        return this.hb() ? 0 === this.Nd && 0 === this.Od ? "Spot(" + this.x + "," + this.y + ")" : "Spot(" + this.x + "," + this.y + "," + this.offsetX + "," + this.offsetY + ")" : this.A(Sc) ? "None" : this.A(Tc) ? "TopLeft" : this.A(Uc) ? "Top" : this.A(bd) ? "TopRight" : this.A(cd) ? "Left" : this.A(dd) ? "Center" : this.A(ed) ? "Right" : this.A(fd) ? "BottomLeft" : this.A(gd) ? "Bottom" : this.A(hd) ? "BottomRight" : this.A(id) ? "TopSide" : this.A(jd) ? "LeftSide" : this.A(pd) ? "RightSide" : this.A(qd) ? "BottomSide" : this.A(rd) ? "TopBottomSides" : this.A(sd) ? "LeftRightSides" :
            this.A(td) ? "TopLeftSides" : this.A(ud) ? "TopRightSides" : this.A(vd) ? "BottomLeftSides" : this.A(wd) ? "BottomRightSides" : this.A(zd) ? "NotTopSide" : this.A(Ad) ? "NotLeftSide" : this.A(Bd) ? "NotRightSide" : this.A(Cd) ? "NotBottomSide" : this.A(Dd) ? "AllSides" : this.A(Ed) ? "Default" : "None"
    };
    t.A = function(a) {
        return a instanceof O ? (this.C === a.x || isNaN(this.C) && isNaN(a.x)) && (this.D === a.y || isNaN(this.D) && isNaN(a.y)) && this.Nd === a.offsetX && this.Od === a.offsetY : !1
    };
    t.lv = function() {
        return new O(.5 - (this.C - .5), .5 - (this.D - .5), -this.Nd, -this.Od)
    };
    t.pf = function(a) {
        if (!this.qf()) return !1;
        if (!a.qf())
            if (a.A(Fd)) a = jd;
            else if (a.A(Gd)) a = pd;
        else if (a.A(Hd)) a = id;
        else if (a.A(Id)) a = qd;
        else return !1;
        a = a.offsetY;
        return (this.Od & a) === a
    };
    t.hb = function() {
        return !isNaN(this.x) && !isNaN(this.y)
    };
    t.mc = function() {
        return isNaN(this.x) || isNaN(this.y)
    };
    t.qf = function() {
        return isNaN(this.x) && isNaN(this.y) && 1 === this.offsetX && 0 !== this.offsetY
    };
    t.bt = function() {
        return isNaN(this.x) && isNaN(this.y) && 0 === this.offsetX && 0 === this.offsetY
    };
    t.Lb = function() {
        return isNaN(this.x) && isNaN(this.y) && -1 === this.offsetX && 0 === this.offsetY
    };
    O.alloc = function() {
        var a = Zd.pop();
        return void 0 === a ? new O : a
    };
    O.free = function(a) {
        Zd.push(a)
    };
    pa.Object.defineProperties(O.prototype, {
        x: {
            get: function() {
                return this.C
            },
            set: function(a) {
                this.C = a
            }
        },
        y: {
            get: function() {
                return this.D
            },
            set: function(a) {
                this.D = a
            }
        },
        offsetX: {
            get: function() {
                return this.Nd
            },
            set: function(a) {
                this.Nd = a
            }
        },
        offsetY: {
            get: function() {
                return this.Od
            },
            set: function(a) {
                this.Od = a
            }
        }
    });
    O.prototype.isDefault = O.prototype.Lb;
    O.prototype.isNone = O.prototype.bt;
    O.prototype.isSide = O.prototype.qf;
    O.prototype.isNoSpot = O.prototype.mc;
    O.prototype.isSpot = O.prototype.hb;
    O.prototype.includesSide = O.prototype.pf;
    O.prototype.opposite = O.prototype.lv;
    O.prototype.equals = O.prototype.A;
    O.prototype.set = O.prototype.set;
    O.prototype.setTo = O.prototype.sg;
    var Zd = [];
    O.className = "Spot";
    O.parse = Xd;
    O.stringify = Yd;
    O.None = Sc = Wd(new O(0, 0, 0, 0), 0).ga();
    O.Default = Ed = Wd(new O(0, 0, -1, 0), -1).ga();
    O.TopLeft = Tc = (new O(0, 0, 0, 0)).ga();
    O.TopCenter = Uc = (new O(.5, 0, 0, 0)).ga();
    O.TopRight = bd = (new O(1, 0, 0, 0)).ga();
    O.LeftCenter = cd = (new O(0, .5, 0, 0)).ga();
    O.Center = dd = (new O(.5, .5, 0, 0)).ga();
    O.RightCenter = ed = (new O(1, .5, 0, 0)).ga();
    O.BottomLeft = fd = (new O(0, 1, 0, 0)).ga();
    O.BottomCenter = gd = (new O(.5, 1, 0, 0)).ga();
    O.BottomRight = hd = (new O(1, 1, 0, 0)).ga();
    O.MiddleTop = Jd = Uc;
    O.MiddleLeft = Rd = cd;
    O.MiddleRight = Sd = ed;
    O.MiddleBottom = Td = gd;
    O.Top = Hd = Uc;
    O.Left = Fd = cd;
    O.Right = Gd = ed;
    O.Bottom = Id = gd;
    O.TopSide = id = Wd(new O(0, 0, 1, 1), 1).ga();
    O.LeftSide = jd = Wd(new O(0, 0, 1, 2), 1).ga();
    O.RightSide = pd = Wd(new O(0, 0, 1, 4), 1).ga();
    O.BottomSide = qd = Wd(new O(0, 0, 1, 8), 1).ga();
    O.TopBottomSides = rd = Wd(new O(0, 0, 1, 9), 1).ga();
    O.LeftRightSides = sd = Wd(new O(0, 0, 1, 6), 1).ga();
    O.TopLeftSides = td = Wd(new O(0, 0, 1, 3), 1).ga();
    O.TopRightSides = ud = Wd(new O(0, 0, 1, 5), 1).ga();
    O.BottomLeftSides = vd = Wd(new O(0, 0, 1, 10), 1).ga();
    O.BottomRightSides = wd = Wd(new O(0, 0, 1, 12), 1).ga();
    O.NotTopSide = zd = Wd(new O(0, 0, 1, 14), 1).ga();
    O.NotLeftSide = Ad = Wd(new O(0, 0, 1, 13), 1).ga();
    O.NotRightSide = Bd = Wd(new O(0, 0, 1, 11), 1).ga();
    O.NotBottomSide = Cd = Wd(new O(0, 0, 1, 7), 1).ga();
    O.AllSides = Dd = Wd(new O(0, 0, 1, 15), 1).ga();
    Ud = (new O(.156, .156)).ga();
    Vd = (new O(.844, .844)).ga();
    O.parse = Xd;
    O.stringify = Yd;
    var H = {
        Sz: "7da71ca0ad381e90",
        wg: (Math.sqrt(2) - 1) / 3 * 4,
        $v: null,
        sqrt: function(a) {
            if (0 >= a) return 0;
            var b = H.$v;
            if (null === b) {
                b = [];
                for (var c = 0; 2E3 >= c; c++) b[c] = Math.sqrt(c);
                H.$v = b
            }
            return 1 > a ? (c = 1 / a, 2E3 >= c ? 1 / b[c | 0] : Math.sqrt(a)) : 2E3 >= a ? b[a | 0] : Math.sqrt(a)
        },
        w: function(a, b) {
            a -= b;
            return .5 > a && -.5 < a
        },
        ba: function(a, b) {
            a -= b;
            return 5E-8 > a && -5E-8 < a
        },
        Tb: function(a, b, c, d, e, f, g) {
            0 >= e && (e = 1E-6);
            if (a < c) {
                var h = a;
                var k = c
            } else h = c, k = a;
            if (b < d) {
                var l = b;
                var m = d
            } else l = d, m = b;
            if (a === c) return l <= g && g <= m && a - e <= f && f <= a + e;
            if (b === d) return h <=
                f && f <= k && b - e <= g && g <= b + e;
            k += e;
            h -= e;
            if (h <= f && f <= k && (m += e, l -= e, l <= g && g <= m))
                if (k - h > m - l)
                    if (a - c > e || c - a > e) {
                        if (f = (d - b) / (c - a) * (f - a) + b, f - e <= g && g <= f + e) return !0
                    } else return !0;
            else if (b - d > e || d - b > e) {
                if (g = (c - a) / (d - b) * (g - b) + a, g - e <= f && f <= g + e) return !0
            } else return !0;
            return !1
        },
        Fs: function(a, b, c, d, e, f, g, h, k, l, m, n) {
            if (H.Tb(a, b, g, h, n, c, d) && H.Tb(a, b, g, h, n, e, f)) return H.Tb(a, b, g, h, n, l, m);
            var p = (a + c) / 2,
                q = (b + d) / 2,
                r = (c + e) / 2,
                u = (d + f) / 2;
            e = (e + g) / 2;
            f = (f + h) / 2;
            d = (p + r) / 2;
            c = (q + u) / 2;
            r = (r + e) / 2;
            u = (u + f) / 2;
            var v = (d + r) / 2,
                x = (c + u) / 2;
            return H.Fs(a,
                b, p, q, d, c, v, x, k, l, m, n) || H.Fs(v, x, r, u, e, f, g, h, k, l, m, n)
        },
        jy: function(a, b, c, d, e, f, g, h, k) {
            var l = (c + e) / 2,
                m = (d + f) / 2;
            k.h((((a + c) / 2 + l) / 2 + (l + (e + g) / 2) / 2) / 2, (((b + d) / 2 + m) / 2 + (m + (f + h) / 2) / 2) / 2);
            return k
        },
        iy: function(a, b, c, d, e, f, g, h) {
            var k = (c + e) / 2,
                l = (d + f) / 2;
            return Tb(((a + c) / 2 + k) / 2, ((b + d) / 2 + l) / 2, (k + (e + g) / 2) / 2, (l + (f + h) / 2) / 2)
        },
        Pl: function(a, b, c, d, e, f, g, h, k, l) {
            if (H.Tb(a, b, g, h, k, c, d) && H.Tb(a, b, g, h, k, e, f)) Bc(l, a, b, 0, 0), Bc(l, g, h, 0, 0);
            else {
                var m = (a + c) / 2,
                    n = (b + d) / 2,
                    p = (c + e) / 2,
                    q = (d + f) / 2;
                e = (e + g) / 2;
                f = (f + h) / 2;
                d = (m + p) / 2;
                c = (n + q) /
                    2;
                p = (p + e) / 2;
                q = (q + f) / 2;
                var r = (d + p) / 2,
                    u = (c + q) / 2;
                H.Pl(a, b, m, n, d, c, r, u, k, l);
                H.Pl(r, u, p, q, e, f, g, h, k, l)
            }
            return l
        },
        ze: function(a, b, c, d, e, f, g, h, k, l) {
            if (H.Tb(a, b, g, h, k, c, d) && H.Tb(a, b, g, h, k, e, f)) 0 === l.length && (l.push(a), l.push(b)), l.push(g), l.push(h);
            else {
                var m = (a + c) / 2,
                    n = (b + d) / 2,
                    p = (c + e) / 2,
                    q = (d + f) / 2;
                e = (e + g) / 2;
                f = (f + h) / 2;
                d = (m + p) / 2;
                c = (n + q) / 2;
                p = (p + e) / 2;
                q = (q + f) / 2;
                var r = (d + p) / 2,
                    u = (c + q) / 2;
                H.ze(a, b, m, n, d, c, r, u, k, l);
                H.ze(r, u, p, q, e, f, g, h, k, l)
            }
            return l
        },
        Vz: function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
            var r = 1 - k;
            a = a * r + c * k;
            b = b *
                r + d * k;
            c = c * r + e * k;
            d = d * r + f * k;
            e = e * r + g * k;
            f = f * r + h * k;
            h = a * r + c * k;
            g = b * r + d * k;
            c = c * r + e * k;
            d = d * r + f * k;
            var u = h * r + c * k;
            k = g * r + d * k;
            l.h(a, b);
            m.h(h, g);
            n.h(u, k);
            p.h(c, d);
            q.h(e, f)
        },
        ov: function(a, b, c, d, e, f, g, h, k, l) {
            if (H.Tb(a, b, e, f, l, c, d)) return H.Tb(a, b, e, f, l, h, k);
            var m = (a + c) / 2,
                n = (b + d) / 2;
            c = (c + e) / 2;
            d = (d + f) / 2;
            var p = (m + c) / 2,
                q = (n + d) / 2;
            return H.ov(a, b, m, n, p, q, g, h, k, l) || H.ov(p, q, c, d, e, f, g, h, k, l)
        },
        bA: function(a, b, c, d, e, f, g) {
            g.h(((a + c) / 2 + (c + e) / 2) / 2, ((b + d) / 2 + (d + f) / 2) / 2);
            return g
        },
        nv: function(a, b, c, d, e, f, g, h) {
            if (H.Tb(a, b, e, f, g, c, d)) Bc(h,
                a, b, 0, 0), Bc(h, e, f, 0, 0);
            else {
                var k = (a + c) / 2,
                    l = (b + d) / 2;
                c = (c + e) / 2;
                d = (d + f) / 2;
                var m = (k + c) / 2,
                    n = (l + d) / 2;
                H.nv(a, b, k, l, m, n, g, h);
                H.nv(m, n, c, d, e, f, g, h)
            }
            return h
        },
        iq: function(a, b, c, d, e, f, g, h) {
            if (H.Tb(a, b, e, f, g, c, d)) 0 === h.length && (h.push(a), h.push(b)), h.push(e), h.push(f);
            else {
                var k = (a + c) / 2,
                    l = (b + d) / 2;
                c = (c + e) / 2;
                d = (d + f) / 2;
                var m = (k + c) / 2,
                    n = (l + d) / 2;
                H.iq(a, b, k, l, m, n, g, h);
                H.iq(m, n, c, d, e, f, g, h)
            }
            return h
        },
        Kp: function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
            if (H.Tb(a, b, g, h, p, c, d) && H.Tb(a, b, g, h, p, e, f)) {
                var r = (a - g) * (l - n) - (b - h) * (k - m);
                if (0 === r) return !1;
                p = ((a * h - b * g) * (k - m) - (a - g) * (k * n - l * m)) / r;
                r = ((a * h - b * g) * (l - n) - (b - h) * (k * n - l * m)) / r;
                if ((k > m ? k - m : m - k) < (l > n ? l - n : n - l)) {
                    if (b < h ? g = b : (g = h, h = b), r < g || r > h) return !1
                } else if (a < g ? h = a : (h = g, g = a), p < h || p > g) return !1;
                q.h(p, r);
                return !0
            }
            r = (a + c) / 2;
            var u = (b + d) / 2;
            c = (c + e) / 2;
            d = (d + f) / 2;
            e = (e + g) / 2;
            f = (f + h) / 2;
            var v = (r + c) / 2,
                x = (u + d) / 2;
            c = (c + e) / 2;
            d = (d + f) / 2;
            var y = (v + c) / 2,
                z = (x + d) / 2,
                B = (m - k) * (m - k) + (n - l) * (n - l),
                C = !1;
            H.Kp(a, b, r, u, v, x, y, z, k, l, m, n, p, q) && (a = (q.x - k) * (q.x - k) + (q.y - l) * (q.y - l), a < B && (B = a, C = !0));
            a = q.x;
            b = q.y;
            H.Kp(y, z, c, d,
                e, f, g, h, k, l, m, n, p, q) && ((q.x - k) * (q.x - k) + (q.y - l) * (q.y - l) < B ? C = !0 : q.h(a, b));
            return C
        },
        Lp: function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
            var q = 0;
            if (H.Tb(a, b, g, h, p, c, d) && H.Tb(a, b, g, h, p, e, f)) {
                p = (a - g) * (l - n) - (b - h) * (k - m);
                if (0 === p) return q;
                var r = ((a * h - b * g) * (k - m) - (a - g) * (k * n - l * m)) / p,
                    u = ((a * h - b * g) * (l - n) - (b - h) * (k * n - l * m)) / p;
                if (r >= m) return q;
                if ((k > m ? k - m : m - k) < (l > n ? l - n : n - l)) {
                    if (b < h ? (a = b, b = h) : a = h, u < a || u > b) return q
                } else if (a < g ? (b = a, a = g) : b = g, r < b || r > a) return q;
                0 < p ? q++ : 0 > p && q--
            } else {
                r = (a + c) / 2;
                u = (b + d) / 2;
                var v = (c + e) / 2,
                    x = (d + f) / 2;
                e = (e +
                    g) / 2;
                f = (f + h) / 2;
                d = (r + v) / 2;
                c = (u + x) / 2;
                v = (v + e) / 2;
                x = (x + f) / 2;
                var y = (d + v) / 2,
                    z = (c + x) / 2;
                q += H.Lp(a, b, r, u, d, c, y, z, k, l, m, n, p);
                q += H.Lp(y, z, v, x, e, f, g, h, k, l, m, n, p)
            }
            return q
        },
        Mi: function(a, b, c, d, e, f, g) {
            if (H.ba(a, c)) {
                b < d ? (c = b, b = d) : c = d;
                if (f < c) return g.h(a, c), !1;
                if (f > b) return g.h(a, b), !1;
                g.h(a, f);
                return !0
            }
            if (H.ba(b, d)) {
                a < c ? (d = a, a = c) : d = c;
                if (e < d) return g.h(d, b), !1;
                if (e > a) return g.h(a, b), !1;
                g.h(e, b);
                return !0
            }
            e = ((a - e) * (a - c) + (b - f) * (b - d)) / ((c - a) * (c - a) + (d - b) * (d - b));
            if (-5E-6 > e) return g.h(a, b), !1;
            if (1.000005 < e) return g.h(c,
                d), !1;
            g.h(a + e * (c - a), b + e * (d - b));
            return !0
        },
        Fe: function(a, b, c, d, e, f, g, h, k) {
            if (H.w(a, c) && H.w(b, d)) return k.h(a, b), !1;
            if (H.ba(e, g)) return H.ba(a, c) ? (H.Mi(a, b, c, d, e, f, k), !1) : H.Mi(a, b, c, d, e, (d - b) / (c - a) * (e - a) + b, k);
            h = (h - f) / (g - e);
            if (H.ba(a, c)) {
                c = h * (a - e) + f;
                b < d ? (e = b, b = d) : e = d;
                if (c < e) return k.h(a, e), !1;
                if (c > b) return k.h(a, b), !1;
                k.h(a, c);
                return !0
            }
            g = (d - b) / (c - a);
            if (H.ba(h, g)) return H.Mi(a, b, c, d, e, f, k), !1;
            e = (g * a - h * e + f - b) / (g - h);
            if (H.ba(g, 0)) {
                a < c ? (d = a, a = c) : d = c;
                if (e < d) return k.h(d, b), !1;
                if (e > a) return k.h(a, b), !1;
                k.h(e,
                    b);
                return !0
            }
            return H.Mi(a, b, c, d, e, g * (e - a) + b, k)
        },
        Zz: function(a, b, c, d, e) {
            return H.Fe(c.x, c.y, d.x, d.y, a.x, a.y, b.x, b.y, e)
        },
        Yz: function(a, b, c, d, e, f, g, h, k, l) {
            function m(c, d) {
                var e = (c - a) * (c - a) + (d - b) * (d - b);
                e < n && (n = e, k.h(c, d))
            }
            var n = Infinity;
            m(k.x, k.y);
            var p = 0,
                q = 0,
                r = 0,
                u = 0;
            e < g ? (p = e, q = g) : (p = g, q = e);
            f < h ? (r = e, u = g) : (r = g, u = e);
            p = (q - p) / 2 + l;
            l = (u - r) / 2 + l;
            e = (e + g) / 2;
            f = (f + h) / 2;
            if (0 === p || 0 === l) return k;
            if (.5 > (c > a ? c - a : a - c)) {
                p = 1 - (c - e) * (c - e) / (p * p);
                if (0 > p) return k;
                p = Math.sqrt(p);
                d = -l * p + f;
                m(c, l * p + f);
                m(c, d)
            } else {
                c = (d - b) / (c - a);
                d = 1 / (p * p) + c * c / (l * l);
                h = 2 * c * (b - c * a) / (l * l) - 2 * c * f / (l * l) - 2 * e / (p * p);
                p = h * h - 4 * d * (2 * c * a * f / (l * l) - 2 * b * f / (l * l) + f * f / (l * l) + e * e / (p * p) - 1 + (b - c * a) * (b - c * a) / (l * l));
                if (0 > p) return k;
                p = Math.sqrt(p);
                l = (-h + p) / (2 * d);
                m(l, c * l - c * a + b);
                p = (-h - p) / (2 * d);
                m(p, c * p - c * a + b)
            }
            return k
        },
        Uc: function(a, b, c, d, e, f, g, h, k) {
            var l = 1E21,
                m = a,
                n = b;
            if (H.Fe(a, b, a, d, e, f, g, h, k)) {
                var p = (k.x - e) * (k.x - e) + (k.y - f) * (k.y - f);
                p < l && (l = p, m = k.x, n = k.y)
            }
            H.Fe(c, b, c, d, e, f, g, h, k) && (p = (k.x - e) * (k.x - e) + (k.y - f) * (k.y - f), p < l && (l = p, m = k.x, n = k.y));
            H.Fe(a, b, c, b, e, f, g, h, k) && (b = (k.x -
                e) * (k.x - e) + (k.y - f) * (k.y - f), b < l && (l = b, m = k.x, n = k.y));
            H.Fe(a, d, c, d, e, f, g, h, k) && (a = (k.x - e) * (k.x - e) + (k.y - f) * (k.y - f), a < l && (l = a, m = k.x, n = k.y));
            k.h(m, n);
            return 1E21 > l
        },
        Xz: function(a, b, c, d, e, f, g, h, k) {
            c = a - c;
            g = e - g;
            0 === c || 0 === g ? 0 === c ? (b = (f - h) / g, h = a, e = b * h + (f - b * e)) : (f = (b - d) / c, h = e, e = f * h + (b - f * a)) : (d = (b - d) / c, h = (f - h) / g, a = b - d * a, h = (f - h * e - a) / (d - h), e = d * h + a);
            k.h(h, e);
            return k
        },
        Xs: function(a, b, c) {
            var d = b.x,
                e = b.y,
                f = c.x,
                g = c.y,
                h = a.left,
                k = a.right,
                l = a.top,
                m = a.bottom;
            return d === f ? (e < g ? (f = e, e = g) : f = g, h <= d && d <= k && f <= m && e >= l) : e ===
                g ? (d < f ? (g = d, d = f) : g = f, l <= e && e <= m && g <= k && d >= h) : a.ea(b) || a.ea(c) || H.Ws(h, l, k, l, d, e, f, g) || H.Ws(k, l, k, m, d, e, f, g) || H.Ws(k, m, h, m, d, e, f, g) || H.Ws(h, m, h, l, d, e, f, g) ? !0 : !1
        },
        Ws: function(a, b, c, d, e, f, g, h) {
            return 0 >= H.Is(a, b, c, d, e, f) * H.Is(a, b, c, d, g, h) && 0 >= H.Is(e, f, g, h, a, b) * H.Is(e, f, g, h, c, d)
        },
        Is: function(a, b, c, d, e, f) {
            c -= a;
            d -= b;
            a = e - a;
            b = f - b;
            f = a * d - b * c;
            0 === f && (f = a * c + b * d, 0 < f && (f = (a - c) * c + (b - d) * d, 0 > f && (f = 0)));
            return 0 > f ? -1 : 0 < f ? 1 : 0
        },
        fq: function(a) {
            0 > a && (a += 360);
            360 <= a && (a -= 360);
            return a
        },
        Xw: function(a, b, c, d, e, f) {
            var g = Math.PI;
            f || (d *= g / 180, e *= g / 180);
            var h = d > e ? -1 : 1;
            f = [];
            var k = g / 2,
                l = d;
            d = Math.min(2 * g, Math.abs(e - d));
            if (1E-5 > d) return k = l + h * Math.min(d, k), h = a + c * Math.cos(l), l = b + c * Math.sin(l), a += c * Math.cos(k), b += c * Math.sin(k), c = (h + a) / 2, k = (l + b) / 2, f.push([h, l, c, k, c, k, a, b]), f;
            for (; 1E-5 < d;) e = l + h * Math.min(d, k), f.push(H.qy(c, l, e, a, b)), d -= Math.abs(e - l), l = e;
            return f
        },
        qy: function(a, b, c, d, e) {
            var f = (c - b) / 2,
                g = a * Math.cos(f),
                h = a * Math.sin(f),
                k = -h,
                l = g * g + k * k,
                m = l + g * g + k * h;
            l = 4 / 3 * (Math.sqrt(2 * l * m) - m) / (g * h - k * g);
            h = g - l * k;
            g = k + l * g;
            k = -g;
            l = f + b;
            f = Math.cos(l);
            l = Math.sin(l);
            return [d + a * Math.cos(b), e + a * Math.sin(b), d + h * f - g * l, e + h * l + g * f, d + h * f - k * l, e + h * l + k * f, d + a * Math.cos(c), e + a * Math.sin(c)]
        },
        Sp: function(a, b, c, d, e, f, g) {
            c = Math.floor((a - c) / e) * e + c;
            d = Math.floor((b - d) / f) * f + d;
            var h = c;
            c + e - a < e / 2 && (h = c + e);
            a = d;
            d + f - b < f / 2 && (a = d + f);
            g.h(h, a);
            return g
        },
        hx: function(a, b) {
            var c = Math.max(a, b);
            a = Math.min(a, b);
            var d;
            do b = c % a, c = d = a, a = b; while (0 < b);
            return d
        },
        wy: function(a, b, c, d) {
            var e = 0 > c,
                f = 0 > d;
            if (a < b) {
                var g = 1;
                var h = 0
            } else g = 0, h = 1;
            var k = 0 === g ? a : b;
            var l = 0 === g ? c : d;
            if (0 === g ? e : f) l = -l;
            g = h;
            c = 0 === g ? c : d;
            if (0 === g ? e : f) c = -c;
            return H.xy(k, 0 === g ? a : b, l, c, 0, 0)
        },
        xy: function(a, b, c, d, e, f) {
            if (0 < d)
                if (0 < c) {
                    e = a * a;
                    f = b * b;
                    a *= c;
                    var g = b * d,
                        h = -f + g,
                        k = -f + Math.sqrt(a * a + g * g);
                    b = h;
                    for (var l = 0; 9999999999 > l; ++l) {
                        b = .5 * (h + k);
                        if (b === h || b === k) break;
                        var m = a / (b + e),
                            n = g / (b + f);
                        m = m * m + n * n - 1;
                        if (0 < m) h = b;
                        else if (0 > m) k = b;
                        else break
                    }
                    c = e * c / (b + e) - c;
                    d = f * d / (b + f) - d;
                    c = Math.sqrt(c * c + d * d)
                } else c = Math.abs(d - b);
            else d = a * a - b * b, f = a * c, f < d ? (d = f / d, f = b * Math.sqrt(Math.abs(1 - d * d)), c = a * d - c, c = Math.sqrt(c * c + f * f)) : c = Math.abs(c - a);
            return c
        },
        Je: new tb,
        ym: new tb
    };
    H.za = H.Sz;

    function $d(a) {
        mb(this);
        this.v = !1;
        void 0 === a && (a = ae);
        this.va = a;
        this.Dc = this.pc = this.dd = this.cd = 0;
        this.cj = new E;
        this.gr = this.cj.Ba;
        this.Qq = (new N).freeze();
        this.ra = !0;
        this.Lm = this.sk = null;
        this.Mm = NaN;
        this.cf = Tc;
        this.df = hd;
        this.Vk = this.Xk = NaN;
        this.Cf = be
    }
    $d.prototype.copy = function() {
        var a = new $d;
        a.va = this.va;
        a.cd = this.cd;
        a.dd = this.dd;
        a.pc = this.pc;
        a.Dc = this.Dc;
        for (var b = this.cj.j, c = b.length, d = a.cj, e = 0; e < c; e++) {
            var f = b[e].copy();
            d.add(f)
        }
        a.gr = this.gr;
        a.Qq.assign(this.Qq);
        a.ra = this.ra;
        a.sk = this.sk;
        a.Lm = this.Lm;
        a.Mm = this.Mm;
        a.cf = this.cf.I();
        a.df = this.df.I();
        a.Xk = this.Xk;
        a.Vk = this.Vk;
        a.Cf = this.Cf;
        return a
    };
    t = $d.prototype;
    t.ga = function() {
        this.freeze();
        Object.freeze(this);
        return this
    };
    t.freeze = function() {
        this.v = !0;
        var a = this.figures;
        a.freeze();
        a = a.j;
        for (var b = a.length, c = 0; c < b; c++) a[c].freeze();
        return this
    };
    t.ha = function() {
        Object.isFrozen(this) && A("cannot thaw constant: " + this);
        this.v = !1;
        var a = this.figures;
        a.ha();
        a = a.j;
        for (var b = a.length, c = 0; c < b; c++) a[c].ha();
        return this
    };
    t.Pa = function(a) {
        if (!(a instanceof $d)) return !1;
        if (this.type !== a.type) return this.type === ge && a.type === ae ? he(this, a) : a.type === ge && this.type === ae ? he(a, this) : !1;
        if (this.type === ae) {
            var b = this.figures.j;
            a = a.figures.j;
            var c = b.length;
            if (c !== a.length) return !1;
            for (var d = 0; d < c; d++)
                if (!b[d].Pa(a[d])) return !1;
            return !0
        }
        return H.w(this.startX, a.startX) && H.w(this.startY, a.startY) && H.w(this.endX, a.endX) && H.w(this.endY, a.endY)
    };

    function he(a, b) {
        return a.type !== ge || b.type !== ae ? !1 : 1 === b.figures.count && (b = b.figures.N(0), 1 === b.segments.count && H.w(a.startX, b.startX) && H.w(a.startY, b.startY) && (b = b.segments.N(0), b.type === ie && H.w(a.endX, b.endX) && H.w(a.endY, b.endY))) ? !0 : !1
    }

    function je(a) {
        return a.toString()
    }
    t.gb = function(a) {
        a.classType === $d && (this.type = a)
    };
    t.toString = function(a) {
        void 0 === a && (a = -1);
        switch (this.type) {
            case ge:
                return 0 > a ? "M" + this.startX.toString() + " " + this.startY.toString() + "L" + this.endX.toString() + " " + this.endY.toString() : "M" + this.startX.toFixed(a) + " " + this.startY.toFixed(a) + "L" + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
            case ke:
                var b = new N(this.startX, this.startY, 0, 0);
                b.Pv(this.endX, this.endY, 0, 0);
                return 0 > a ? "M" + b.x.toString() + " " + b.y.toString() + "H" + b.right.toString() + "V" + b.bottom.toString() + "H" + b.left.toString() + "z" : "M" + b.x.toFixed(a) +
                    " " + b.y.toFixed(a) + "H" + b.right.toFixed(a) + "V" + b.bottom.toFixed(a) + "H" + b.left.toFixed(a) + "z";
            case le:
                b = new N(this.startX, this.startY, 0, 0);
                b.Pv(this.endX, this.endY, 0, 0);
                if (0 > a) return a = b.left.toString() + " " + (b.y + b.height / 2).toString(), "M" + a + "A" + (b.width / 2).toString() + " " + (b.height / 2).toString() + " 0 0 1 " + (b.right.toString() + " " + (b.y + b.height / 2).toString()) + "A" + (b.width / 2).toString() + " " + (b.height / 2).toString() + " 0 0 1 " + a;
                var c = b.left.toFixed(a) + " " + (b.y + b.height / 2).toFixed(a);
                return "M" + c + "A" + (b.width /
                    2).toFixed(a) + " " + (b.height / 2).toFixed(a) + " 0 0 1 " + (b.right.toFixed(a) + " " + (b.y + b.height / 2).toFixed(a)) + "A" + (b.width / 2).toFixed(a) + " " + (b.height / 2).toFixed(a) + " 0 0 1 " + c;
            case ae:
                b = "";
                c = this.figures.j;
                for (var d = c.length, e = 0; e < d; e++) {
                    var f = c[e];
                    0 < e && (b += " x ");
                    f.isFilled && (b += "F ");
                    b += f.toString(a)
                }
                return b;
            default:
                return this.type.toString()
        }
    };

    function me(a, b) {
        function c() {
            return u >= B - 1 ? !0 : null !== k[u + 1].match(/[UuBbMmZzLlHhVvCcSsQqTtAaFfXx]/)
        }

        function d() {
            u++;
            return k[u]
        }

        function e() {
            var a = new G(parseFloat(d()), parseFloat(d()));
            v === v.toLowerCase() && (a.x = z.x + a.x, a.y = z.y + a.y);
            return a
        }

        function f() {
            return z = e()
        }

        function g() {
            return y = e()
        }

        function h() {
            var a = x.toLowerCase();
            return "c" !== a && "s" !== a && "q" !== a && "t" !== a ? z : new G(2 * z.x - y.x, 2 * z.y - y.y)
        }
        void 0 === b && (b = !1);
        a = a.replace(/,/gm, " ");
        a = a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])/gm,
            "$1 $2");
        a = a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])/gm, "$1 $2");
        a = a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])([^\s])/gm, "$1 $2");
        a = a.replace(/([^\s])([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])/gm, "$1 $2");
        a = a.replace(/([0-9])([+\-])/gm, "$1 $2");
        a = a.replace(/([Aa](\s+[0-9]+){3})\s+([01])\s*([01])/gm, "$1 $3 $4 ");
        a = a.replace(/[\s\r\t\n]+/gm, " ");
        a = a.replace(/^\s+|\s+$/g, "");
        var k = a.split(" ");
        for (a = 0; a < k.length; a++) {
            var l = k[a];
            if (null !== l.match(/(\.[0-9]*)(\.)/gm)) {
                for (var m =
                        Ka(), n = "", p = !1, q = 0; q < l.length; q++) {
                    var r = l[q];
                    "." !== r || p ? "." === r ? (m.push(n), n = ".") : n += r : (p = !0, n += r)
                }
                m.push(n);
                k.splice(a, 1);
                for (l = 0; l < m.length; l++) k.splice(a + l, 0, m[l]);
                a += m.length - 1;
                Oa(m)
            }
        }
        var u = -1,
            v = "",
            x = "";
        m = new G(0, 0);
        var y = new G(0, 0),
            z = new G(0, 0),
            B = k.length;
        a = ne(null);
        n = l = !1;
        p = !0;
        for (q = null; !(u >= B - 1);)
            if (x = v, v = d(), "" !== v) switch (v.toUpperCase()) {
                case "X":
                    p = !0;
                    n = l = !1;
                    break;
                case "M":
                    q = f();
                    null === a.gc || !0 === p ? (oe(a, q.x, q.y, l, !n), p = !1) : a.moveTo(q.x, q.y);
                    for (m = z; !c();) q = f(), a.lineTo(q.x, q.y);
                    break;
                case "L":
                    for (; !c();) q = f(), a.lineTo(q.x, q.y);
                    break;
                case "H":
                    for (; !c();) z = new G((v === v.toLowerCase() ? z.x : 0) + parseFloat(d()), z.y), a.lineTo(z.x, z.y);
                    break;
                case "V":
                    for (; !c();) z = new G(z.x, (v === v.toLowerCase() ? z.y : 0) + parseFloat(d())), a.lineTo(z.x, z.y);
                    break;
                case "C":
                    for (; !c();) {
                        q = e();
                        r = g();
                        var C = f();
                        se(a, q.x, q.y, r.x, r.y, C.x, C.y)
                    }
                    break;
                case "S":
                    for (; !c();) q = h(), r = g(), C = f(), se(a, q.x, q.y, r.x, r.y, C.x, C.y);
                    break;
                case "Q":
                    for (; !c();) q = g(), r = f(), te(a, q.x, q.y, r.x, r.y);
                    break;
                case "T":
                    for (; !c();) y = q = h(), r = f(), te(a,
                        q.x, q.y, r.x, r.y);
                    break;
                case "B":
                    for (; !c();) {
                        q = parseFloat(d());
                        r = parseFloat(d());
                        C = parseFloat(d());
                        var I = parseFloat(d()),
                            J = parseFloat(d()),
                            K = J,
                            X = !1;
                        c() || (K = parseFloat(d()), c() || (X = 0 !== parseFloat(d())));
                        v === v.toLowerCase() && (C += z.x, I += z.y);
                        a.arcTo(q, r, C, I, J, K, X)
                    }
                    break;
                case "A":
                    for (; !c();) q = Math.abs(parseFloat(d())), r = Math.abs(parseFloat(d())), C = parseFloat(d()), I = !!parseFloat(d()), J = !!parseFloat(d()), K = f(), ue(a, q, r, C, I, J, K.x, K.y);
                    break;
                case "Z":
                    ve(a);
                    z = m;
                    break;
                case "F":
                    q = "";
                    for (r = 1; k[u + r];)
                        if (null !==
                            k[u + r].match(/[Uu]/)) r++;
                        else if (null === k[u + r].match(/[UuBbMmZzLlHhVvCcSsQqTtAaFfXx]/)) r++;
                    else {
                        q = k[u + r];
                        break
                    }
                    q.match(/[Mm]/) ? l = !0 : 0 < a.gc.segments.length && (a.gc.isFilled = !0);
                    break;
                case "U":
                    q = "";
                    for (r = 1; k[u + r];)
                        if (null !== k[u + r].match(/[Ff]/)) r++;
                        else if (null === k[u + r].match(/[UuBbMmZzLlHhVvCcSsQqTtAaFfXx]/)) r++;
                    else {
                        q = k[u + r];
                        break
                    }
                    q.match(/[Mm]/) ? n = !0 : a.pq(!1)
            }
        m = a.Rs;
        we = a;
        if (b)
            for (b = m.figures.iterator; b.next();) b.value.isFilled = !0;
        return m
    }

    function xe(a, b) {
        for (var c = a.length, d = G.alloc(), e = 0; e < c; e++) {
            var f = a[e];
            d.x = f[0];
            d.y = f[1];
            b.ta(d);
            f[0] = d.x;
            f[1] = d.y;
            d.x = f[2];
            d.y = f[3];
            b.ta(d);
            f[2] = d.x;
            f[3] = d.y;
            d.x = f[4];
            d.y = f[5];
            b.ta(d);
            f[4] = d.x;
            f[5] = d.y;
            d.x = f[6];
            d.y = f[7];
            b.ta(d);
            f[6] = d.x;
            f[7] = d.y
        }
        G.free(d)
    }
    t.fv = function() {
        if (this.ra || this.gr !== this.figures.Ba) return !0;
        for (var a = this.figures.j, b = a.length, c = 0; c < b; c++)
            if (a[c].fv()) return !0;
        return !1
    };
    $d.prototype.computeBounds = function() {
        this.ra = !1;
        this.Lm = this.sk = null;
        this.Mm = NaN;
        this.gr = this.figures.Ba;
        for (var a = this.figures.j, b = a.length, c = 0; c < b; c++) {
            var d = a[c];
            d.ra = !1;
            var e = d.segments;
            d.os = e.Ba;
            d = e.j;
            e = d.length;
            for (var f = 0; f < e; f++) {
                var g = d[f];
                g.ra = !1;
                g.Ke = null
            }
        }
        a = this.Qq;
        a.ha();
        isNaN(this.Xk) || isNaN(this.Vk) ? a.h(0, 0, 0, 0) : a.h(0, 0, this.Xk, this.Vk);
        ye(this, a, !1);
        Bc(a, 0, 0, 0, 0);
        a.freeze()
    };
    $d.prototype.Vw = function() {
        var a = new N;
        ye(this, a, !0);
        return a
    };

    function ye(a, b, c) {
        switch (a.type) {
            case ge:
            case ke:
            case le:
                c ? b.h(a.cd, a.dd, 0, 0) : Bc(b, a.cd, a.dd, 0, 0);
                Bc(b, a.pc, a.Dc, 0, 0);
                break;
            case ae:
                var d = a.figures;
                a = d.j;
                d = d.length;
                for (var e = 0; e < d; e++) {
                    var f = a[e];
                    c && 0 === e ? b.h(f.startX, f.startY, 0, 0) : Bc(b, f.startX, f.startY, 0, 0);
                    for (var g = f.segments.j, h = g.length, k = f.startX, l = f.startY, m = 0; m < h; m++) {
                        var n = g[m];
                        switch (n.type) {
                            case ie:
                            case ze:
                                k = n.endX;
                                l = n.endY;
                                Bc(b, k, l, 0, 0);
                                break;
                            case Ae:
                                H.Pl(k, l, n.point1X, n.point1Y, n.point2X, n.point2Y, n.endX, n.endY, .5, b);
                                k = n.endX;
                                l = n.endY;
                                break;
                            case Be:
                                H.nv(k, l, n.point1X, n.point1Y, n.endX, n.endY, .5, b);
                                k = n.endX;
                                l = n.endY;
                                break;
                            case Ce:
                            case De:
                                var p = n.type === Ce ? Ee(n, f) : Fe(n, f, k, l),
                                    q = p.length;
                                if (0 === q) {
                                    k = n.centerX;
                                    l = n.centerY;
                                    Bc(b, k, l, 0, 0);
                                    break
                                }
                                n = null;
                                for (var r = 0; r < q; r++) n = p[r], H.Pl(n[0], n[1], n[2], n[3], n[4], n[5], n[6], n[7], .5, b);
                                null !== n && (k = n[6], l = n[7]);
                                break;
                            default:
                                A("Unknown Segment type: " + n.type)
                        }
                    }
                }
                break;
            default:
                A("Unknown Geometry type: " + a.type)
        }
    }
    $d.prototype.normalize = function() {
        this.v && wa(this);
        var a = this.Vw();
        this.offset(-a.x, -a.y);
        return new G(-a.x, -a.y)
    };
    $d.prototype.offset = function(a, b) {
        this.v && wa(this);
        this.transform(1, 0, 0, 1, a, b);
        return this
    };
    $d.prototype.scale = function(a, b) {
        this.v && wa(this);
        this.transform(a, 0, 0, b, 0, 0);
        return this
    };
    $d.prototype.rotate = function(a, b, c) {
        this.v && wa(this);
        void 0 === b && (b = 0);
        void 0 === c && (c = 0);
        var d = Qc.alloc();
        d.reset();
        d.rotate(a, b, c);
        this.transform(d.m11, d.m12, d.m21, d.m22, d.dx, d.dy);
        Qc.free(d);
        return this
    };
    t = $d.prototype;
    t.transform = function(a, b, c, d, e, f) {
        switch (this.type) {
            case ge:
            case ke:
            case le:
                var g = this.cd;
                var h = this.dd;
                this.cd = g * a + h * c + e;
                this.dd = g * b + h * d + f;
                g = this.pc;
                h = this.Dc;
                this.pc = g * a + h * c + e;
                this.Dc = g * b + h * d + f;
                break;
            case ae:
                for (var k = this.figures.j, l = k.length, m = 0; m < l; m++) {
                    var n = k[m];
                    g = n.startX;
                    h = n.startY;
                    n.startX = g * a + h * c + e;
                    n.startY = g * b + h * d + f;
                    n = n.segments.j;
                    for (var p = n.length, q = 0; q < p; q++) {
                        var r = n[q];
                        switch (r.type) {
                            case ie:
                            case ze:
                                g = r.endX;
                                h = r.endY;
                                r.endX = g * a + h * c + e;
                                r.endY = g * b + h * d + f;
                                break;
                            case Ae:
                                g = r.point1X;
                                h = r.point1Y;
                                r.point1X = g * a + h * c + e;
                                r.point1Y = g * b + h * d + f;
                                g = r.point2X;
                                h = r.point2Y;
                                r.point2X = g * a + h * c + e;
                                r.point2Y = g * b + h * d + f;
                                g = r.endX;
                                h = r.endY;
                                r.endX = g * a + h * c + e;
                                r.endY = g * b + h * d + f;
                                break;
                            case Be:
                                g = r.point1X;
                                h = r.point1Y;
                                r.point1X = g * a + h * c + e;
                                r.point1Y = g * b + h * d + f;
                                g = r.endX;
                                h = r.endY;
                                r.endX = g * a + h * c + e;
                                r.endY = g * b + h * d + f;
                                break;
                            case Ce:
                                g = r.centerX;
                                h = r.centerY;
                                r.centerX = g * a + h * c + e;
                                r.centerY = g * b + h * d + f;
                                0 !== b && (g = 180 * Math.atan2(b, a) / Math.PI, 0 > g && (g += 360), r.startAngle += g);
                                0 > a && (r.startAngle = 180 - r.startAngle, r.sweepAngle = -r.sweepAngle);
                                0 > d &&
                                    (r.startAngle = -r.startAngle, r.sweepAngle = -r.sweepAngle);
                                r.radiusX *= Math.sqrt(a * a + c * c);
                                void 0 !== r.radiusY && (r.radiusY *= Math.sqrt(b * b + d * d));
                                break;
                            case De:
                                g = r.endX;
                                h = r.endY;
                                r.endX = g * a + h * c + e;
                                r.endY = g * b + h * d + f;
                                0 !== b && (g = 180 * Math.atan2(b, a) / Math.PI, 0 > g && (g += 360), r.xAxisRotation += g);
                                0 > a && (r.xAxisRotation = 180 - r.xAxisRotation, r.isClockwiseArc = !r.isClockwiseArc);
                                0 > d && (r.xAxisRotation = -r.xAxisRotation, r.isClockwiseArc = !r.isClockwiseArc);
                                r.radiusX *= Math.sqrt(a * a + c * c);
                                r.radiusY *= Math.sqrt(b * b + d * d);
                                break;
                            default:
                                A("Unknown Segment type: " +
                                    r.type)
                        }
                    }
                }
        }
        this.ra = !0;
        return this
    };
    t.ea = function(a, b, c, d) {
        var e = a.x;
        a = a.y;
        for (var f = this.bounds.x - 20, g = 0, h, k, l, m, n, p = this.figures.j, q = p.length, r = 0; r < q; r++) {
            var u = p[r];
            if (u.isFilled) {
                if (c && u.ea(e, a, b)) return !0;
                var v = u.segments;
                h = u.startX;
                k = u.startY;
                for (var x = h, y = k, z = v.j, B = 0; B <= v.length; B++) {
                    var C = void 0;
                    if (B !== v.length) {
                        C = z[B];
                        var I = C.type;
                        m = C.endX;
                        n = C.endY
                    } else I = ie, m = x, n = y;
                    switch (I) {
                        case ze:
                            x = Ge(e, a, f, a, h, k, x, y);
                            if (isNaN(x)) return !0;
                            g += x;
                            x = m;
                            y = n;
                            break;
                        case ie:
                            h = Ge(e, a, f, a, h, k, m, n);
                            if (isNaN(h)) return !0;
                            g += h;
                            break;
                        case Ae:
                            l = H.Lp(h,
                                k, C.point1X, C.point1Y, C.point2X, C.point2Y, m, n, f, a, e, a, .5);
                            g += l;
                            break;
                        case Be:
                            l = H.Lp(h, k, (h + 2 * C.point1X) / 3, (k + 2 * C.point1Y) / 3, (2 * C.point1X + m) / 3, (2 * C.point1Y + n) / 3, m, n, f, a, e, a, .5);
                            g += l;
                            break;
                        case Ce:
                        case De:
                            I = C.type === Ce ? Ee(C, u) : Fe(C, u, h, k);
                            var J = I.length;
                            if (0 === J) {
                                h = Ge(e, a, f, a, h, k, C.centerX, C.centerY);
                                if (isNaN(h)) return !0;
                                g += h;
                                break
                            }
                            C = null;
                            for (var K = 0; K < J; K++) {
                                C = I[K];
                                if (0 === K) {
                                    l = Ge(e, a, f, a, h, k, C[0], C[1]);
                                    if (isNaN(l)) return !0;
                                    g += l
                                }
                                l = H.Lp(C[0], C[1], C[2], C[3], C[4], C[5], C[6], C[7], f, a, e, a, .5);
                                g += l
                            }
                            null !==
                                C && (m = C[6], n = C[7]);
                            break;
                        default:
                            A("Unknown Segment type: " + C.type)
                    }
                    h = m;
                    k = n
                }
                if (0 !== g) return !0;
                g = 0
            } else if (u.ea(e, a, d ? b : b + 2)) return !0
        }
        return 0 !== g
    };

    function Ge(a, b, c, d, e, f, g, h) {
        if (H.Tb(e, f, g, h, .05, a, b)) return NaN;
        var k = (a - c) * (f - h);
        if (0 === k) return 0;
        var l = ((a * d - b * c) * (e - g) - (a - c) * (e * h - f * g)) / k;
        b = (a * d - b * c) * (f - h) / k;
        if (l >= a) return 0;
        if ((e > g ? e - g : g - e) < (f > h ? f - h : h - f))
            if (f < h) {
                if (b < f || b > h) return 0
            } else {
                if (b < h || b > f) return 0
            }
        else if (e < g) {
            if (l < e || l > g) return 0
        } else if (l < g || l > e) return 0;
        return 0 < k ? 1 : -1
    }

    function Se(a, b, c, d) {
        a = a.figures.j;
        for (var e = a.length, f = 0; f < e; f++)
            if (a[f].ea(b, c, d)) return !0;
        return !1
    }
    t.Xu = function(a, b) {
        0 > a ? a = 0 : 1 < a && (a = 1);
        void 0 === b && (b = new G);
        if (this.type === ge) return b.h(this.startX + a * (this.endX - this.startX), this.startY + a * (this.endY - this.startY)), b;
        for (var c = this.flattenedSegments, d = this.flattenedLengths, e = c.length, f = this.flattenedTotalLength * a, g = 0, h = 0; h < e; h++) {
            var k = d[h],
                l = k.length;
            for (a = 0; a < l; a++) {
                var m = k[a];
                if (g + m >= f) return d = (f - g) / m, c = c[h], e = c[2 * a], h = c[2 * a + 1], b.h(e + (c[2 * a + 2] - e) * d, h + (c[2 * a + 3] - h) * d), b;
                g += m
            }
        }
        b.h(NaN, NaN);
        return b
    };
    t.ix = function(a) {
        if (this.type === ge) {
            var b = this.startX,
                c = this.startY,
                d = this.endX,
                e = this.endY;
            if (b !== d || c !== e) {
                var f = a.x;
                a = a.y;
                if (b === d) {
                    if (c < e) {
                        var g = c;
                        d = e
                    } else g = e, d = c;
                    return a <= g ? g === c ? 0 : 1 : a >= d ? d === c ? 0 : 1 : Math.abs(a - c) / (d - g)
                }
                return c === e ? (b < d ? g = b : (g = d, d = b), f <= g ? g === b ? 0 : 1 : f >= d ? d === b ? 0 : 1 : Math.abs(f - b) / (d - g)) : ((f - b) * (f - b) + (a - c) * (a - c)) / ((d - b) * (d - b) + (e - c) * (e - c))
            }
        } else if (this.type === ke) {
            g = this.startX;
            var h = this.startY,
                k = this.endX;
            e = this.endY;
            if (g !== k || h !== e) {
                b = k - g;
                c = e - h;
                f = 2 * b + 2 * c;
                d = a.x;
                a = a.y;
                d = Math.min(Math.max(d,
                    g), k);
                a = Math.min(Math.max(a, h), e);
                g = Math.abs(d - g);
                k = Math.abs(d - k);
                h = Math.abs(a - h);
                e = Math.abs(a - e);
                var l = Math.min(g, k, h, e);
                if (l === h) return d / f;
                if (l === k) return (b + a) / f;
                if (l === e) return (2 * b + c - d) / f;
                if (l === g) return (2 * b + 2 * c - a) / f
            }
        } else {
            b = this.flattenedSegments;
            c = this.flattenedLengths;
            f = this.flattenedTotalLength;
            d = G.alloc();
            e = Infinity;
            h = g = 0;
            k = b.length;
            for (var m = l = 0, n = 0; n < k; n++)
                for (var p = b[n], q = c[n], r = p.length, u = 0; u < r; u += 2) {
                    var v = p[u],
                        x = p[u + 1];
                    if (0 !== u) {
                        H.Mi(l, m, v, x, a.x, a.y, d);
                        var y = (d.x - a.x) * (d.x - a.x) + (d.y -
                            a.y) * (d.y - a.y);
                        y < e && (e = y, g = h, g += Math.sqrt((d.x - l) * (d.x - l) + (d.y - m) * (d.y - m)));
                        h += q[(u - 2) / 2]
                    }
                    l = v;
                    m = x
                }
            G.free(d);
            a = g / f;
            return 0 > a ? 0 : 1 < a ? 1 : a
        }
        return 0
    };

    function Te(a) {
        if (null === a.sk) {
            var b = a.sk = [],
                c = a.Lm = [],
                d = [],
                e = [];
            if (a.type === ge) d.push(a.startX), d.push(a.startY), d.push(a.endX), d.push(a.endY), b.push(d), e.push(Math.sqrt((a.startX - a.endX) * (a.startX - a.endX) + (a.startY - a.endY) * (a.startY - a.endY))), c.push(e);
            else if (a.type === ke) d.push(a.startX), d.push(a.startY), d.push(a.endX), d.push(a.startY), d.push(a.endX), d.push(a.endY), d.push(a.startX), d.push(a.endY), d.push(a.startX), d.push(a.startY), b.push(d), e.push(Math.abs(a.startX - a.endX)), e.push(Math.abs(a.startY -
                a.endY)), e.push(Math.abs(a.startX - a.endX)), e.push(Math.abs(a.startY - a.endY)), c.push(e);
            else if (a.type === le) {
                var f = new Ue;
                f.startX = a.endX;
                f.startY = (a.startY + a.endY) / 2;
                var g = new Ve(Ce);
                g.startAngle = 0;
                g.sweepAngle = 360;
                g.centerX = (a.startX + a.endX) / 2;
                g.centerY = (a.startY + a.endY) / 2;
                g.radiusX = Math.abs(a.startX - a.endX) / 2;
                g.radiusY = Math.abs(a.startY - a.endY) / 2;
                f.add(g);
                a = Ee(g, f);
                e = a.length;
                if (0 === e) d.push(g.centerX), d.push(g.centerY);
                else {
                    g = f.startX;
                    f = f.startY;
                    for (var h = 0; h < e; h++) {
                        var k = a[h];
                        H.ze(g, f, k[2], k[3],
                            k[4], k[5], k[6], k[7], .5, d);
                        g = k[6];
                        f = k[7]
                    }
                }
                b.push(d);
                c.push(We(d))
            } else
                for (a = a.figures.iterator; a.next();) {
                    e = a.value;
                    d = [];
                    d.push(e.startX);
                    d.push(e.startY);
                    g = e.startX;
                    f = e.startY;
                    h = g;
                    k = f;
                    for (var l = e.segments.j, m = l.length, n = 0; n < m; n++) {
                        var p = l[n];
                        switch (p.type) {
                            case ze:
                                4 <= d.length && (b.push(d), c.push(We(d)));
                                d = [];
                                d.push(p.endX);
                                d.push(p.endY);
                                g = p.endX;
                                f = p.endY;
                                h = g;
                                k = f;
                                break;
                            case ie:
                                d.push(p.endX);
                                d.push(p.endY);
                                g = p.endX;
                                f = p.endY;
                                break;
                            case Ae:
                                H.ze(g, f, p.point1X, p.point1Y, p.point2X, p.point2Y, p.endX, p.endY,
                                    .5, d);
                                g = p.endX;
                                f = p.endY;
                                break;
                            case Be:
                                H.iq(g, f, p.point1X, p.point1Y, p.endX, p.endY, .5, d);
                                g = p.endX;
                                f = p.endY;
                                break;
                            case Ce:
                                var q = Ee(p, e),
                                    r = q.length;
                                if (0 === r) {
                                    d.push(p.centerX);
                                    d.push(p.centerY);
                                    g = p.centerX;
                                    f = p.centerY;
                                    break
                                }
                                for (var u = 0; u < r; u++) {
                                    var v = q[u];
                                    H.ze(g, f, v[2], v[3], v[4], v[5], v[6], v[7], .5, d);
                                    g = v[6];
                                    f = v[7]
                                }
                                break;
                            case De:
                                q = Fe(p, e, g, f);
                                r = q.length;
                                if (0 === r) {
                                    d.push(p.centerX);
                                    d.push(p.centerY);
                                    g = p.centerX;
                                    f = p.centerY;
                                    break
                                }
                                for (u = 0; u < r; u++) v = q[u], H.ze(g, f, v[2], v[3], v[4], v[5], v[6], v[7], .5, d), g = v[6],
                                    f = v[7];
                                break;
                            default:
                                A("Segment not of valid type: " + p.type)
                        }
                        p.isClosed && (d.push(h), d.push(k))
                    }
                    4 <= d.length && (b.push(d), c.push(We(d)))
                }
        }
    }

    function We(a) {
        for (var b = [], c = 0, d = 0, e = a.length, f = 0; f < e; f += 2) {
            var g = a[f],
                h = a[f + 1];
            0 !== f && b.push(Math.sqrt(Sb(c, d, g, h)));
            c = g;
            d = h
        }
        return b
    }
    t.add = function(a) {
        this.cj.add(a);
        return this
    };
    t.um = function(a, b, c, d, e, f, g, h) {
        this.v && wa(this);
        this.cf = (new O(a, b, e, f)).freeze();
        this.df = (new O(c, d, g, h)).freeze();
        return this
    };
    pa.Object.defineProperties($d.prototype, {
        flattenedSegments: {
            get: function() {
                Te(this);
                return this.sk
            }
        },
        flattenedLengths: {
            get: function() {
                Te(this);
                return this.Lm
            }
        },
        flattenedTotalLength: {
            get: function() {
                var a = this.Mm;
                if (isNaN(a)) {
                    if (this.type === ge) {
                        a = Math.abs(this.endX - this.startX);
                        var b = Math.abs(this.endY - this.startY);
                        a = Math.sqrt(a * a + b * b)
                    } else if (this.type === ke) a = 2 * Math.abs(this.endX - this.startX) + 2 * Math.abs(this.endY -
                        this.startY);
                    else {
                        b = this.flattenedLengths;
                        for (var c = b.length, d = a = 0; d < c; d++)
                            for (var e = b[d], f = e.length, g = 0; g < f; g++) a += e[g]
                    }
                    this.Mm = a
                }
                return a
            }
        },
        type: {
            get: function() {
                return this.va
            },
            set: function(a) {
                this.va !== a && (this.v && wa(this, a), this.va = a, this.ra = !0)
            }
        },
        startX: {
            get: function() {
                return this.cd
            },
            set: function(a) {
                this.cd !== a && (this.v && wa(this, a), this.cd = a, this.ra = !0)
            }
        },
        startY: {
            get: function() {
                return this.dd
            },
            set: function(a) {
                this.dd !==
                    a && (this.v && wa(this, a), this.dd = a, this.ra = !0)
            }
        },
        endX: {
            get: function() {
                return this.pc
            },
            set: function(a) {
                this.pc !== a && (this.v && wa(this, a), this.pc = a, this.ra = !0)
            }
        },
        endY: {
            get: function() {
                return this.Dc
            },
            set: function(a) {
                this.Dc !== a && (this.v && wa(this, a), this.Dc = a, this.ra = !0)
            }
        },
        figures: {
            get: function() {
                return this.cj
            },
            set: function(a) {
                this.cj !== a && (this.v && wa(this, a), this.cj = a, this.ra = !0)
            }
        },
        spot1: {
            get: function() {
                return this.cf
            },
            set: function(a) {
                this.v && wa(this, a);
                this.cf = a.I()
            }
        },
        spot2: {
            get: function() {
                return this.df
            },
            set: function(a) {
                this.v && wa(this, a);
                this.df = a.I()
            }
        },
        defaultStretch: {
            get: function() {
                return this.Cf
            },
            set: function(a) {
                this.v && wa(this, a);
                this.Cf = a
            }
        },
        bounds: {
            get: function() {
                this.fv() && this.computeBounds();
                return this.Qq
            }
        }
    });
    $d.prototype.setSpots = $d.prototype.um;
    $d.prototype.add = $d.prototype.add;
    $d.prototype.getFractionForPoint = $d.prototype.ix;
    $d.prototype.getPointAlongPath = $d.prototype.Xu;
    $d.prototype.transform = $d.prototype.transform;
    $d.prototype.rotate = $d.prototype.rotate;
    $d.prototype.scale = $d.prototype.scale;
    $d.prototype.offset = $d.prototype.offset;
    $d.prototype.normalize = $d.prototype.normalize;
    $d.prototype.computeBoundsWithoutOrigin = $d.prototype.Vw;
    $d.prototype.equalsApprox = $d.prototype.Pa;
    var ge = new D($d, "Line", 0),
        ke = new D($d, "Rectangle", 1),
        le = new D($d, "Ellipse", 2),
        ae = new D($d, "Path", 3);
    $d.className = "Geometry";
    $d.stringify = je;
    $d.fillPath = function(a) {
        a = a.split(/[Xx]/);
        for (var b = a.length, c = "", d = 0; d < b; d++) {
            var e = a[d];
            c = null !== e.match(/[Ff]/) ? 0 === d ? c + e : c + ("X" + (" " === e[0] ? "" : " ") + e) : c + ((0 === d ? "" : "X ") + "F" + (" " === e[0] ? "" : " ") + e)
        }
        return c
    };
    $d.parse = me;
    $d.Line = ge;
    $d.Rectangle = ke;
    $d.Ellipse = le;
    $d.Path = ae;

    function Ue(a, b, c, d) {
        mb(this);
        this.v = !1;
        void 0 === c && (c = !0);
        this.yr = c;
        void 0 === d && (d = !0);
        this.Br = d;
        void 0 !== a ? this.cd = a : this.cd = 0;
        void 0 !== b ? this.dd = b : this.dd = 0;
        this.vl = new E;
        this.os = this.vl.Ba;
        this.ra = !0
    }
    Ue.prototype.copy = function() {
        var a = new Ue;
        a.yr = this.yr;
        a.Br = this.Br;
        a.cd = this.cd;
        a.dd = this.dd;
        for (var b = this.vl.j, c = b.length, d = a.vl, e = 0; e < c; e++) {
            var f = b[e].copy();
            d.add(f)
        }
        a.os = this.os;
        a.ra = this.ra;
        return a
    };
    t = Ue.prototype;
    t.Pa = function(a) {
        if (!(a instanceof Ue && H.w(this.startX, a.startX) && H.w(this.startY, a.startY))) return !1;
        var b = this.segments.j;
        a = a.segments.j;
        var c = b.length;
        if (c !== a.length) return !1;
        for (var d = 0; d < c; d++)
            if (!b[d].Pa(a[d])) return !1;
        return !0
    };
    t.toString = function(a) {
        void 0 === a && (a = -1);
        var b = 0 > a ? "M" + this.startX.toString() + " " + this.startY.toString() : "M" + this.startX.toFixed(a) + " " + this.startY.toFixed(a);
        for (var c = this.segments.j, d = c.length, e = 0; e < d; e++) b += " " + c[e].toString(a);
        return b
    };
    t.freeze = function() {
        this.v = !0;
        var a = this.segments;
        a.freeze();
        var b = a.j;
        a = a.length;
        for (var c = 0; c < a; c++) b[c].freeze();
        return this
    };
    t.ha = function() {
        this.v = !1;
        var a = this.segments;
        a.ha();
        a = a.j;
        for (var b = a.length, c = 0; c < b; c++) a[c].ha();
        return this
    };
    t.fv = function() {
        if (this.ra) return !0;
        var a = this.segments;
        if (this.os !== a.Ba) return !0;
        a = a.j;
        for (var b = a.length, c = 0; c < b; c++)
            if (a[c].ra) return !0;
        return !1
    };
    t.add = function(a) {
        this.vl.add(a);
        return this
    };
    t.ea = function(a, b, c) {
        for (var d = this.startX, e = this.startY, f = d, g = e, h = this.segments.j, k = h.length, l = 0; l < k; l++) {
            var m = h[l];
            switch (m.type) {
                case ze:
                    f = m.endX;
                    g = m.endY;
                    d = m.endX;
                    e = m.endY;
                    break;
                case ie:
                    if (H.Tb(d, e, m.endX, m.endY, c, a, b)) return !0;
                    d = m.endX;
                    e = m.endY;
                    break;
                case Ae:
                    if (H.Fs(d, e, m.point1X, m.point1Y, m.point2X, m.point2Y, m.endX, m.endY, .5, a, b, c)) return !0;
                    d = m.endX;
                    e = m.endY;
                    break;
                case Be:
                    if (H.ov(d, e, m.point1X, m.point1Y, m.endX, m.endY, .5, a, b, c)) return !0;
                    d = m.endX;
                    e = m.endY;
                    break;
                case Ce:
                case De:
                    var n = m.type ===
                        Ce ? Ee(m, this) : Fe(m, this, d, e),
                        p = n.length;
                    if (0 === p) {
                        if (H.Tb(d, e, m.centerX, m.centerY, c, a, b)) return !0;
                        d = m.centerX;
                        e = m.centerY;
                        break
                    }
                    for (var q = null, r = 0; r < p; r++)
                        if (q = n[r], 0 === r && H.Tb(d, e, q[0], q[1], c, a, b) || H.Fs(q[0], q[1], q[2], q[3], q[4], q[5], q[6], q[7], .5, a, b, c)) return !0;
                    null !== q && (d = q[6], e = q[7]);
                    break;
                default:
                    A("Unknown Segment type: " + m.type)
            }
            if (m.isClosed && (d !== f || e !== g) && H.Tb(d, e, f, g, c, a, b)) return !0
        }
        return !1
    };
    pa.Object.defineProperties(Ue.prototype, {
        isFilled: {
            get: function() {
                return this.yr
            },
            set: function(a) {
                this.v && wa(this, a);
                this.yr = a
            }
        },
        isShadowed: {
            get: function() {
                return this.Br
            },
            set: function(a) {
                this.v && wa(this, a);
                this.Br = a
            }
        },
        startX: {
            get: function() {
                return this.cd
            },
            set: function(a) {
                this.v && wa(this, a);
                this.cd = a;
                this.ra = !0
            }
        },
        startY: {
            get: function() {
                return this.dd
            },
            set: function(a) {
                this.v && wa(this,
                    a);
                this.dd = a;
                this.ra = !0
            }
        },
        segments: {
            get: function() {
                return this.vl
            },
            set: function(a) {
                this.v && wa(this, a);
                this.vl = a;
                this.ra = !0
            }
        }
    });
    Ue.prototype.add = Ue.prototype.add;
    Ue.prototype.equalsApprox = Ue.prototype.Pa;
    Ue.className = "PathFigure";

    function Ve(a, b, c, d, e, f, g, h) {
        mb(this);
        this.v = !1;
        void 0 === a && (a = ie);
        this.va = a;
        void 0 !== b ? this.pc = b : this.pc = 0;
        void 0 !== c ? this.Dc = c : this.Dc = 0;
        void 0 === d && (d = 0);
        void 0 === e && (e = 0);
        void 0 === f && (f = 0);
        void 0 === g && (g = 0);
        a === De ? (a = f % 360, 0 > a && (a += 360), this.se = a, this.ki = 0, this.li = Math.max(d, 0), this.Xg = Math.max(e, 0), this.al = "boolean" === typeof g ? !!g : !1, this.xk = !!h) : (this.se = d, this.ki = e, a === Ce && (f = Math.max(f, 0)), this.li = f, "number" === typeof g ? (a === Ce && (g = Math.max(g, 0)), this.Xg = g) : this.Xg = 0, this.xk = this.al = !1);
        this.hj = !1;
        this.ra = !0;
        this.Ke = null
    }
    Ve.prototype.copy = function() {
        var a = new Ve;
        a.va = this.va;
        a.pc = this.pc;
        a.Dc = this.Dc;
        a.se = this.se;
        a.ki = this.ki;
        a.li = this.li;
        a.Xg = this.Xg;
        a.al = this.al;
        a.xk = this.xk;
        a.hj = this.hj;
        a.ra = this.ra;
        return a
    };
    t = Ve.prototype;
    t.Pa = function(a) {
        if (!(a instanceof Ve) || this.type !== a.type || this.isClosed !== a.isClosed) return !1;
        switch (this.type) {
            case ze:
            case ie:
                return H.w(this.endX, a.endX) && H.w(this.endY, a.endY);
            case Ae:
                return H.w(this.endX, a.endX) && H.w(this.endY, a.endY) && H.w(this.point1X, a.point1X) && H.w(this.point1Y, a.point1Y) && H.w(this.point2X, a.point2X) && H.w(this.point2Y, a.point2Y);
            case Be:
                return H.w(this.endX, a.endX) && H.w(this.endY, a.endY) && H.w(this.point1X, a.point1X) && H.w(this.point1Y, a.point1Y);
            case Ce:
                return H.w(this.startAngle,
                    a.startAngle) && H.w(this.sweepAngle, a.sweepAngle) && H.w(this.centerX, a.centerX) && H.w(this.centerY, a.centerY) && H.w(this.radiusX, a.radiusX) && H.w(this.radiusY, a.radiusY);
            case De:
                return this.isClockwiseArc === a.isClockwiseArc && this.isLargeArc === a.isLargeArc && H.w(this.xAxisRotation, a.xAxisRotation) && H.w(this.endX, a.endX) && H.w(this.endY, a.endY) && H.w(this.radiusX, a.radiusX) && H.w(this.radiusY, a.radiusY);
            default:
                return !1
        }
    };
    t.gb = function(a) {
        a.classType === Ve && (this.type = a)
    };
    t.toString = function(a) {
        void 0 === a && (a = -1);
        switch (this.type) {
            case ze:
                a = 0 > a ? "M" + this.endX.toString() + " " + this.endY.toString() : "M" + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            case ie:
                a = 0 > a ? "L" + this.endX.toString() + " " + this.endY.toString() : "L" + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            case Ae:
                a = 0 > a ? "C" + this.point1X.toString() + " " + this.point1Y.toString() + " " + this.point2X.toString() + " " + this.point2Y.toString() + " " + this.endX.toString() + " " + this.endY.toString() : "C" + this.point1X.toFixed(a) +
                    " " + this.point1Y.toFixed(a) + " " + this.point2X.toFixed(a) + " " + this.point2Y.toFixed(a) + " " + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            case Be:
                a = 0 > a ? "Q" + this.point1X.toString() + " " + this.point1Y.toString() + " " + this.endX.toString() + " " + this.endY.toString() : "Q" + this.point1X.toFixed(a) + " " + this.point1Y.toFixed(a) + " " + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            case Ce:
                a = 0 > a ? "B" + this.startAngle.toString() + " " + this.sweepAngle.toString() + " " + this.centerX.toString() + " " + this.centerY.toString() +
                    " " + this.radiusX.toString() + " " + this.radiusY.toString() : "B" + this.startAngle.toFixed(a) + " " + this.sweepAngle.toFixed(a) + " " + this.centerX.toFixed(a) + " " + this.centerY.toFixed(a) + " " + this.radiusX.toFixed(a) + " " + this.radiusY.toFixed(a);
                break;
            case De:
                a = 0 > a ? "A" + this.radiusX.toString() + " " + this.radiusY.toString() + " " + this.xAxisRotation.toString() + " " + (this.isLargeArc ? 1 : 0) + " " + (this.isClockwiseArc ? 1 : 0) + " " + this.endX.toString() + " " + this.endY.toString() : "A" + this.radiusX.toFixed(a) + " " + this.radiusY.toFixed(a) +
                    " " + this.xAxisRotation.toFixed(a) + " " + (this.isLargeArc ? 1 : 0) + " " + (this.isClockwiseArc ? 1 : 0) + " " + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            default:
                a = this.type.toString()
        }
        return a + (this.hj ? "z" : "")
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        this.v = !1;
        return this
    };
    t.close = function() {
        this.hj = !0;
        return this
    };

    function Ee(a, b) {
        if (null !== a.Ke && !1 === b.ra) return a.Ke;
        var c = a.radiusX,
            d = a.radiusY;
        void 0 === d && (d = c);
        if (0 === c || 0 === d) return a.Ke = [], a.Ke;
        b = a.se;
        var e = a.ki,
            f = H.Xw(0, 0, c < d ? c : d, a.startAngle, a.startAngle + a.sweepAngle, !1);
        if (c !== d) {
            var g = Qc.alloc();
            g.reset();
            c < d ? g.scale(1, d / c) : g.scale(c / d, 1);
            xe(f, g);
            Qc.free(g)
        }
        c = f.length;
        for (d = 0; d < c; d++) g = f[d], g[0] += b, g[1] += e, g[2] += b, g[3] += e, g[4] += b, g[5] += e, g[6] += b, g[7] += e;
        a.Ke = f;
        return a.Ke
    }

    function Fe(a, b, c, d) {
        function e(a, b, c, d) {
            return (a * d < b * c ? -1 : 1) * Math.acos((a * c + b * d) / (Math.sqrt(a * a + b * b) * Math.sqrt(c * c + d * d)))
        }
        if (null !== a.Ke && !1 === b.ra) return a.Ke;
        b = a.li;
        var f = a.Xg;
        0 === b && (b = 1E-4);
        0 === f && (f = 1E-4);
        var g = Math.PI / 180 * a.se,
            h = a.al,
            k = a.xk,
            l = a.pc,
            m = a.Dc,
            n = Math.cos(g),
            p = Math.sin(g),
            q = n * (c - l) / 2 + p * (d - m) / 2;
        g = -p * (c - l) / 2 + n * (d - m) / 2;
        var r = q * q / (b * b) + g * g / (f * f);
        1 < r && (b *= Math.sqrt(r), f *= Math.sqrt(r));
        r = (h === k ? -1 : 1) * Math.sqrt((b * b * f * f - b * b * g * g - f * f * q * q) / (b * b * g * g + f * f * q * q));
        isNaN(r) && (r = 0);
        h = r * b * g / f;
        r = r * -f *
            q / b;
        isNaN(h) && (h = 0);
        isNaN(r) && (r = 0);
        c = (c + l) / 2 + n * h - p * r;
        d = (d + m) / 2 + p * h + n * r;
        m = e(1, 0, (q - h) / b, (g - r) / f);
        n = (q - h) / b;
        l = (g - r) / f;
        q = (-q - h) / b;
        h = (-g - r) / f;
        g = e(n, l, q, h);
        q = (n * q + l * h) / (Math.sqrt(n * n + l * l) * Math.sqrt(q * q + h * h)); - 1 >= q ? g = Math.PI : 1 <= q && (g = 0);
        !k && 0 < g && (g -= 2 * Math.PI);
        k && 0 > g && (g += 2 * Math.PI);
        k = b > f ? 1 : b / f;
        q = b > f ? f / b : 1;
        b = H.Xw(0, 0, b > f ? b : f, m, m + g, !0);
        f = Qc.alloc();
        f.reset();
        f.translate(c, d);
        f.rotate(a.se, 0, 0);
        f.scale(k, q);
        xe(b, f);
        Qc.free(f);
        a.Ke = b;
        return a.Ke
    }
    pa.Object.defineProperties(Ve.prototype, {
        isClosed: {
            get: function() {
                return this.hj
            },
            set: function(a) {
                this.hj !== a && (this.hj = a, this.ra = !0)
            }
        },
        type: {
            get: function() {
                return this.va
            },
            set: function(a) {
                this.v && wa(this, a);
                this.va = a;
                this.ra = !0
            }
        },
        endX: {
            get: function() {
                return this.pc
            },
            set: function(a) {
                this.v && wa(this, a);
                this.pc = a;
                this.ra = !0
            }
        },
        endY: {
            get: function() {
                return this.Dc
            },
            set: function(a) {
                this.v &&
                    wa(this, a);
                this.Dc = a;
                this.ra = !0
            }
        },
        point1X: {
            get: function() {
                return this.se
            },
            set: function(a) {
                this.v && wa(this, a);
                this.se = a;
                this.ra = !0
            }
        },
        point1Y: {
            get: function() {
                return this.ki
            },
            set: function(a) {
                this.v && wa(this, a);
                this.ki = a;
                this.ra = !0
            }
        },
        point2X: {
            get: function() {
                return this.li
            },
            set: function(a) {
                this.v && wa(this, a);
                this.li = a;
                this.ra = !0
            }
        },
        point2Y: {
            get: function() {
                return this.Xg
            },
            set: function(a) {
                this.v &&
                    wa(this, a);
                this.Xg = a;
                this.ra = !0
            }
        },
        centerX: {
            get: function() {
                return this.se
            },
            set: function(a) {
                this.v && wa(this, a);
                this.se = a;
                this.ra = !0
            }
        },
        centerY: {
            get: function() {
                return this.ki
            },
            set: function(a) {
                this.v && wa(this, a);
                this.ki = a;
                this.ra = !0
            }
        },
        radiusX: {
            get: function() {
                return this.li
            },
            set: function(a) {
                0 > a && xa(a, ">= zero", Ve, "radiusX");
                this.v && wa(this, a);
                this.li = a;
                this.ra = !0
            }
        },
        radiusY: {
            get: function() {
                return this.Xg
            },
            set: function(a) {
                0 > a && xa(a, ">= zero", Ve, "radiusY");
                this.v && wa(this, a);
                this.Xg = a;
                this.ra = !0
            }
        },
        startAngle: {
            get: function() {
                return this.pc
            },
            set: function(a) {
                this.pc !== a && (this.v && wa(this, a), a %= 360, 0 > a && (a += 360), this.pc = a, this.ra = !0)
            }
        },
        sweepAngle: {
            get: function() {
                return this.Dc
            },
            set: function(a) {
                this.v && wa(this, a);
                360 < a && (a = 360); - 360 > a && (a = -360);
                this.Dc = a;
                this.ra = !0
            }
        },
        isClockwiseArc: {
            get: function() {
                return this.xk
            },
            set: function(a) {
                this.v &&
                    wa(this, a);
                this.xk = a;
                this.ra = !0
            }
        },
        isLargeArc: {
            get: function() {
                return this.al
            },
            set: function(a) {
                this.v && wa(this, a);
                this.al = a;
                this.ra = !0
            }
        },
        xAxisRotation: {
            get: function() {
                return this.se
            },
            set: function(a) {
                a %= 360;
                0 > a && (a += 360);
                this.v && wa(this, a);
                this.se = a;
                this.ra = !0
            }
        }
    });
    Ve.prototype.equalsApprox = Ve.prototype.Pa;
    var ze = new D(Ve, "Move", 0),
        ie = new D(Ve, "Line", 1),
        Ae = new D(Ve, "Bezier", 2),
        Be = new D(Ve, "QuadraticBezier", 3),
        Ce = new D(Ve, "Arc", 4),
        De = new D(Ve, "SvgArc", 4);
    Ve.className = "PathSegment";
    Ve.Move = ze;
    Ve.Line = ie;
    Ve.Bezier = Ae;
    Ve.QuadraticBezier = Be;
    Ve.Arc = Ce;
    Ve.SvgArc = De;

    function Xe() {
        this.F = null;
        this.yu = (new G(0, 0)).freeze();
        this.Qt = (new G(0, 0)).freeze();
        this.Jq = this.Qr = 0;
        this.Kq = 1;
        this.Fr = "";
        this.As = this.$q = !1;
        this.Zq = this.Mq = 0;
        this.zg = this.mr = this.zr = !1;
        this.fr = null;
        this.ys = 0;
        this.Rd = this.xs = null
    }
    Xe.prototype.copy = function() {
        var a = new Xe;
        return this.clone(a)
    };
    Xe.prototype.clone = function(a) {
        a.F = this.F;
        a.yu.assign(this.viewPoint);
        a.Qt.assign(this.documentPoint);
        a.Qr = this.Qr;
        a.Jq = this.Jq;
        a.Kq = this.Kq;
        a.Fr = this.Fr;
        a.$q = this.$q;
        a.As = this.As;
        a.Mq = this.Mq;
        a.Zq = this.Zq;
        a.zr = this.zr;
        a.mr = this.mr;
        a.zg = this.zg;
        a.fr = this.fr;
        a.ys = this.ys;
        a.xs = this.xs;
        a.Rd = this.Rd;
        return a
    };
    Xe.prototype.toString = function() {
        var a = "^";
        0 !== this.modifiers && (a += "M:" + this.modifiers);
        0 !== this.button && (a += "B:" + this.button);
        "" !== this.key && (a += "K:" + this.key);
        0 !== this.clickCount && (a += "C:" + this.clickCount);
        0 !== this.delta && (a += "D:" + this.delta);
        this.handled && (a += "h");
        this.bubbles && (a += "b");
        null !== this.documentPoint && (a += "@" + this.documentPoint.toString());
        return a
    };
    Xe.prototype.Vp = function(a, b) {
        var c = this.diagram;
        if (null === c) return b;
        Ye(c, this.event, a, b);
        return b
    };
    Xe.prototype.Xy = function(a, b) {
        var c = this.diagram;
        if (null === c) return b;
        Ye(c, this.event, a, b);
        b.assign(c.wt(b));
        return b
    };
    pa.Object.defineProperties(Xe.prototype, {
        diagram: {
            get: function() {
                return this.F
            },
            set: function(a) {
                this.F = a
            }
        },
        viewPoint: {
            get: function() {
                return this.yu
            },
            set: function(a) {
                this.yu.assign(a)
            }
        },
        documentPoint: {
            get: function() {
                return this.Qt
            },
            set: function(a) {
                this.Qt.assign(a)
            }
        },
        modifiers: {
            get: function() {
                return this.Qr
            },
            set: function(a) {
                this.Qr = a
            }
        },
        button: {
            get: function() {
                return this.Jq
            },
            set: function(a) {
                this.Jq = a;
                if (null === this.event) switch (a) {
                    case 0:
                        this.buttons = 1;
                        break;
                    case 1:
                        this.buttons = 4;
                        break;
                    case 2:
                        this.buttons = 2
                }
            }
        },
        buttons: {
            get: function() {
                return this.Kq
            },
            set: function(a) {
                this.Kq = a
            }
        },
        key: {
            get: function() {
                return this.Fr
            },
            set: function(a) {
                this.Fr = a
            }
        },
        down: {
            get: function() {
                return this.$q
            },
            set: function(a) {
                this.$q = a
            }
        },
        up: {
            get: function() {
                return this.As
            },
            set: function(a) {
                this.As =
                    a
            }
        },
        clickCount: {
            get: function() {
                return this.Mq
            },
            set: function(a) {
                this.Mq = a
            }
        },
        delta: {
            get: function() {
                return this.Zq
            },
            set: function(a) {
                this.Zq = a
            }
        },
        isMultiTouch: {
            get: function() {
                return this.zr
            },
            set: function(a) {
                this.zr = a
            }
        },
        handled: {
            get: function() {
                return this.mr
            },
            set: function(a) {
                this.mr = a
            }
        },
        bubbles: {
            get: function() {
                return this.zg
            },
            set: function(a) {
                this.zg = a
            }
        },
        event: {
            get: function() {
                return this.fr
            },
            set: function(a) {
                this.fr = a
            }
        },
        isTouchEvent: {
            get: function() {
                var a = w.TouchEvent,
                    b = this.event;
                return a && b instanceof a ? !0 : (a = w.PointerEvent) && b instanceof a && ("touch" === b.pointerType || "pen" === b.pointerType)
            }
        },
        timestamp: {
            get: function() {
                return this.ys
            },
            set: function(a) {
                this.ys = a
            }
        },
        targetDiagram: {
            get: function() {
                return this.xs
            },
            set: function(a) {
                this.xs = a
            }
        },
        targetObject: {
            get: function() {
                return this.Rd
            },
            set: function(a) {
                this.Rd = a
            }
        },
        control: {
            get: function() {
                return 0 !== (this.modifiers & 1)
            },
            set: function(a) {
                this.modifiers = a ? this.modifiers | 1 : this.modifiers & -2
            }
        },
        shift: {
            get: function() {
                return 0 !== (this.modifiers & 4)
            },
            set: function(a) {
                this.modifiers = a ? this.modifiers | 4 : this.modifiers & -5
            }
        },
        alt: {
            get: function() {
                return 0 !== (this.modifiers & 2)
            },
            set: function(a) {
                this.modifiers = a ? this.modifiers |
                    2 : this.modifiers & -3
            }
        },
        meta: {
            get: function() {
                return 0 !== (this.modifiers & 8)
            },
            set: function(a) {
                this.modifiers = a ? this.modifiers | 8 : this.modifiers & -9
            }
        },
        left: {
            get: function() {
                var a = this.event;
                return null === a || "mousedown" !== a.type && "mouseup" !== a.type && "pointerdown" !== a.type && "pointerup" !== a.type ? 0 !== (this.buttons & 1) : 0 === this.button
            },
            set: function(a) {
                this.buttons = a ? this.buttons | 1 : this.buttons & -2
            }
        },
        right: {
            get: function() {
                var a =
                    this.event;
                return null === a || "mousedown" !== a.type && "mouseup" !== a.type && "pointerdown" !== a.type && "pointerup" !== a.type ? 0 !== (this.buttons & 2) : 2 === this.button
            },
            set: function(a) {
                this.buttons = a ? this.buttons | 2 : this.buttons & -3
            }
        },
        middle: {
            get: function() {
                var a = this.event;
                return null === a || "mousedown" !== a.type && "mouseup" !== a.type && "pointerdown" !== a.type && "pointerup" !== a.type ? 0 !== (this.buttons & 4) : 1 === this.button
            },
            set: function(a) {
                this.buttons = a ? this.buttons | 4 : this.buttons & -5
            }
        }
    });
    Xe.prototype.getMultiTouchDocumentPoint = Xe.prototype.Xy;
    Xe.prototype.getMultiTouchViewPoint = Xe.prototype.Vp;
    Xe.className = "InputEvent";

    function Ze() {
        this.F = null;
        this.Ta = "";
        this.Zr = this.vs = null
    }
    Ze.prototype.copy = function() {
        var a = new Ze;
        a.F = this.F;
        a.Ta = this.Ta;
        a.vs = this.vs;
        a.Zr = this.Zr;
        return a
    };
    Ze.prototype.toString = function() {
        var a = "*" + this.name;
        null !== this.subject && (a += ":" + this.subject.toString());
        null !== this.parameter && (a += "(" + this.parameter.toString() + ")");
        return a
    };
    pa.Object.defineProperties(Ze.prototype, {
        diagram: {
            get: function() {
                return this.F
            },
            set: function(a) {
                this.F = a
            }
        },
        name: {
            get: function() {
                return this.Ta
            },
            set: function(a) {
                this.Ta = a
            }
        },
        subject: {
            get: function() {
                return this.vs
            },
            set: function(a) {
                this.vs = a
            }
        },
        parameter: {
            get: function() {
                return this.Zr
            },
            set: function(a) {
                this.Zr = a
            }
        }
    });
    Ze.className = "DiagramEvent";

    function $e() {
        this.Um = af;
        this.zj = this.Pr = "";
        this.xo = this.yo = this.Do = this.Eo = this.Co = this.F = this.$b = null
    }
    $e.prototype.clear = function() {
        this.xo = this.yo = this.Do = this.Eo = this.Co = this.F = this.$b = null
    };
    $e.prototype.copy = function() {
        var a = new $e;
        a.Um = this.Um;
        a.Pr = this.Pr;
        a.zj = this.zj;
        a.$b = this.$b;
        a.F = this.F;
        a.Co = this.Co;
        var b = this.Eo;
        a.Eo = Ca(b) && "function" === typeof b.I ? b.I() : b;
        b = this.Do;
        a.Do = Ca(b) && "function" === typeof b.I ? b.I() : b;
        b = this.yo;
        a.yo = Ca(b) && "function" === typeof b.I ? b.I() : b;
        b = this.xo;
        a.xo = Ca(b) && "function" === typeof b.I ? b.I() : b;
        return a
    };
    $e.prototype.gb = function(a) {
        a.classType === $e && (this.change = a)
    };
    $e.prototype.toString = function() {
        var a = "";
        a = this.change === bf ? a + "* " : this.change === af ? a + (null !== this.model ? "!m" : "!d") : a + ((null !== this.model ? "!m" : "!d") + this.change);
        this.propertyName && "string" === typeof this.propertyName && (a += " " + this.propertyName);
        this.modelChange && this.modelChange !== this.propertyName && (a += " " + this.modelChange);
        a += ": ";
        this.change === bf ? null !== this.oldValue && (a += " " + this.oldValue) : (null !== this.object && (a += Qa(this.object)), null !== this.oldValue && (a += "  old: " + Qa(this.oldValue)), null !==
            this.oldParam && (a += " " + this.oldParam), null !== this.newValue && (a += "  new: " + Qa(this.newValue)), null !== this.newParam && (a += " " + this.newParam));
        return a
    };
    $e.prototype.J = function(a) {
        return a ? this.oldValue : this.newValue
    };
    $e.prototype.Zy = function(a) {
        return a ? this.oldParam : this.newParam
    };
    $e.prototype.canUndo = function() {
        return null !== this.model || null !== this.diagram ? !0 : !1
    };
    $e.prototype.undo = function() {
        this.canUndo() && (null !== this.model ? this.model.Mj(this, !0) : null !== this.diagram && this.diagram.Mj(this, !0))
    };
    $e.prototype.canRedo = function() {
        return null !== this.model || null !== this.diagram ? !0 : !1
    };
    $e.prototype.redo = function() {
        this.canRedo() && (null !== this.model ? this.model.Mj(this, !1) : null !== this.diagram && this.diagram.Mj(this, !1))
    };
    pa.Object.defineProperties($e.prototype, {
        model: {
            get: function() {
                return this.$b
            },
            set: function(a) {
                this.$b = a
            }
        },
        diagram: {
            get: function() {
                return this.F
            },
            set: function(a) {
                this.F = a
            }
        },
        change: {
            get: function() {
                return this.Um
            },
            set: function(a) {
                this.Um = a
            }
        },
        modelChange: {
            get: function() {
                return this.Pr
            },
            set: function(a) {
                this.Pr = a
            }
        },
        propertyName: {
            get: function() {
                return this.zj
            },
            set: function(a) {
                this.zj = a
            }
        },
        isTransactionFinished: {
            get: function() {
                return this.Um === bf && ("CommittedTransaction" === this.zj || "FinishedUndo" === this.zj || "FinishedRedo" === this.zj)
            }
        },
        object: {
            get: function() {
                return this.Co
            },
            set: function(a) {
                this.Co = a
            }
        },
        oldValue: {
            get: function() {
                return this.Eo
            },
            set: function(a) {
                this.Eo = a
            }
        },
        oldParam: {
            get: function() {
                return this.Do
            },
            set: function(a) {
                this.Do = a
            }
        },
        newValue: {
            get: function() {
                return this.yo
            },
            set: function(a) {
                this.yo = a
            }
        },
        newParam: {
            get: function() {
                return this.xo
            },
            set: function(a) {
                this.xo = a
            }
        }
    });
    $e.prototype.redo = $e.prototype.redo;
    $e.prototype.canRedo = $e.prototype.canRedo;
    $e.prototype.undo = $e.prototype.undo;
    $e.prototype.canUndo = $e.prototype.canUndo;
    $e.prototype.getParam = $e.prototype.Zy;
    $e.prototype.getValue = $e.prototype.J;
    $e.prototype.clear = $e.prototype.clear;
    var bf = new D($e, "Transaction", -1),
        af = new D($e, "Property", 0),
        cf = new D($e, "Insert", 1),
        df = new D($e, "Remove", 2);
    $e.className = "ChangedEvent";
    $e.Transaction = bf;
    $e.Property = af;
    $e.Insert = cf;
    $e.Remove = df;

    function ef() {
        this.u = (new E).freeze();
        this.Ta = "";
        this.l = !1
    }
    ef.prototype.toString = function(a) {
        var b = "Transaction: " + this.name + " " + this.changes.count.toString() + (this.isComplete ? "" : ", incomplete");
        if (void 0 !== a && 0 < a) {
            a = this.changes.count;
            for (var c = 0; c < a; c++) {
                var d = this.changes.N(c);
                null !== d && (b += "\n  " + d.toString())
            }
        }
        return b
    };
    ef.prototype.clear = function() {
        var a = this.changes;
        a.ha();
        for (var b = a.count - 1; 0 <= b; b--) {
            var c = a.N(b);
            null !== c && c.clear()
        }
        a.clear();
        a.freeze()
    };
    ef.prototype.canUndo = function() {
        return this.isComplete
    };
    ef.prototype.undo = function() {
        if (this.canUndo())
            for (var a = this.changes.count - 1; 0 <= a; a--) {
                var b = this.changes.N(a);
                null !== b && b.undo()
            }
    };
    ef.prototype.canRedo = function() {
        return this.isComplete
    };
    ef.prototype.redo = function() {
        if (this.canRedo())
            for (var a = this.changes.count, b = 0; b < a; b++) {
                var c = this.changes.N(b);
                null !== c && c.redo()
            }
    };
    pa.Object.defineProperties(ef.prototype, {
        changes: {
            get: function() {
                return this.u
            }
        },
        name: {
            get: function() {
                return this.Ta
            },
            set: function(a) {
                this.Ta = a
            }
        },
        isComplete: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        }
    });
    ef.prototype.redo = ef.prototype.redo;
    ef.prototype.canRedo = ef.prototype.canRedo;
    ef.prototype.undo = ef.prototype.undo;
    ef.prototype.canUndo = ef.prototype.canUndo;
    ef.prototype.clear = ef.prototype.clear;
    ef.className = "Transaction";

    function ff() {
        this.gu = new F;
        this.Fc = !1;
        this.K = (new E).freeze();
        this.fe = -1;
        this.u = 999;
        this.ie = !1;
        this.Xq = null;
        this.wi = 0;
        this.l = !1;
        this.pe = (new E).freeze();
        this.kl = new E;
        this.Xt = !0;
        this.$t = !1
    }
    t = ff.prototype;
    t.toString = function(a) {
        var b = "UndoManager " + this.historyIndex + "<" + this.history.count + "<=" + this.maxHistoryLength;
        b += "[";
        for (var c = this.nestedTransactionNames.count, d = 0; d < c; d++) 0 < d && (b += " "), b += this.nestedTransactionNames.N(d);
        b += "]";
        if (void 0 !== a && 0 < a)
            for (c = this.history.count, d = 0; d < c; d++) b += "\n " + this.history.N(d).toString(a - 1);
        return b
    };
    t.clear = function() {
        var a = this.history;
        a.ha();
        for (var b = a.count - 1; 0 <= b; b--) {
            var c = a.N(b);
            null !== c && c.clear()
        }
        a.clear();
        this.fe = -1;
        a.freeze();
        this.ie = !1;
        this.Xq = null;
        this.wi = 0;
        this.pe.ha();
        this.pe.clear();
        this.pe.freeze();
        this.kl.clear()
    };
    t.Nw = function(a) {
        this.gu.add(a)
    };
    t.wx = function(a) {
        this.gu.remove(a)
    };
    t.Aa = function(a) {
        void 0 === a && (a = "");
        null === a && (a = "");
        if (this.isUndoingRedoing) return !1;
        !0 === this.Xt && (this.Xt = !1, this.wi++, this.zb("StartingFirstTransaction", a, this.currentTransaction), 0 < this.wi && this.wi--);
        this.isEnabled && (this.pe.ha(), this.pe.add(a), this.pe.freeze(), null === this.currentTransaction ? this.kl.add(0) : this.kl.add(this.currentTransaction.changes.count));
        this.wi++;
        var b = 1 === this.transactionLevel;
        b && this.zb("StartedTransaction", a, this.currentTransaction);
        return b
    };
    t.$a = function(a) {
        void 0 === a && (a = "");
        return jf(this, !0, a)
    };
    t.tf = function() {
        return jf(this, !1, "")
    };

    function jf(a, b, c) {
        if (a.isUndoingRedoing) return !1;
        a.checksTransactionLevel && 1 > a.transactionLevel && ya("Ending transaction without having started a transaction: " + c);
        var d = 1 === a.transactionLevel;
        d && b && a.zb("CommittingTransaction", c, a.currentTransaction);
        var e = 0;
        if (0 < a.transactionLevel && (a.wi--, a.isEnabled)) {
            var f = a.pe.count;
            0 < f && ("" === c && (c = a.pe.N(0)), a.pe.ha(), a.pe.mb(f - 1), a.pe.freeze());
            f = a.kl.count;
            0 < f && (e = a.kl.N(f - 1), a.kl.mb(f - 1))
        }
        f = a.currentTransaction;
        if (d) {
            if (b) {
                a.$t = !1;
                if (a.isEnabled && null !==
                    f) {
                    b = f;
                    b.isComplete = !0;
                    b.name = c;
                    d = a.history;
                    d.ha();
                    for (e = d.count - 1; e > a.historyIndex; e--) f = d.N(e), null !== f && f.clear(), d.mb(e), a.$t = !0;
                    e = a.maxHistoryLength;
                    0 === e && (e = 1);
                    0 < e && d.count >= e && (e = d.N(0), null !== e && e.clear(), d.mb(0), a.fe--);
                    d.add(b);
                    a.fe++;
                    d.freeze();
                    f = b
                }
                a.zb("CommittedTransaction", c, f)
            } else {
                a.ie = !0;
                try {
                    a.isEnabled && null !== f && (f.isComplete = !0, f.undo())
                } finally {
                    a.zb("RolledBackTransaction", c, f), a.ie = !1
                }
                null !== f && f.clear()
            }
            a.Xq = null;
            return !0
        }
        if (a.isEnabled && !b && null !== f) {
            a = e;
            c = f.changes;
            for (b =
                c.count - 1; b >= a; b--) d = c.N(b), null !== d && d.undo(), c.ha(), c.mb(b);
            c.freeze()
        }
        return !1
    }
    ff.prototype.canUndo = function() {
        if (!this.isEnabled || 0 < this.transactionLevel) return !1;
        var a = this.transactionToUndo;
        return null !== a && a.canUndo() ? !0 : !1
    };
    ff.prototype.undo = function() {
        if (this.canUndo()) {
            var a = this.transactionToUndo;
            try {
                this.ie = !0, this.zb("StartingUndo", "Undo", a), this.fe--, a.undo()
            } catch (b) {
                ya("undo error: " + b.toString())
            } finally {
                this.zb("FinishedUndo", "Undo", a), this.ie = !1
            }
        }
    };
    ff.prototype.canRedo = function() {
        if (!this.isEnabled || 0 < this.transactionLevel) return !1;
        var a = this.transactionToRedo;
        return null !== a && a.canRedo() ? !0 : !1
    };
    ff.prototype.redo = function() {
        if (this.canRedo()) {
            var a = this.transactionToRedo;
            try {
                this.ie = !0, this.zb("StartingRedo", "Redo", a), this.fe++, a.redo()
            } catch (b) {
                ya("redo error: " + b.toString())
            } finally {
                this.zb("FinishedRedo", "Redo", a), this.ie = !1
            }
        }
    };
    ff.prototype.zb = function(a, b, c) {
        void 0 === c && (c = null);
        var d = new $e;
        d.change = bf;
        d.propertyName = a;
        d.object = c;
        d.oldValue = b;
        for (a = this.models; a.next();) b = a.value, d.model = b, b.Gs(d)
    };
    ff.prototype.$u = function(a) {
        if (this.isEnabled && !this.isUndoingRedoing && !this.skipsEvent(a)) {
            var b = this.currentTransaction;
            null === b && (this.Xq = b = new ef);
            var c = a.copy();
            b = b.changes;
            b.ha();
            b.add(c);
            b.freeze();
            this.checksTransactionLevel && 0 >= this.transactionLevel && !this.Xt && (a = a.diagram, null !== a && !1 === a.Ki || ya("Change not within a transaction: " + c.toString()))
        }
    };
    ff.prototype.skipsEvent = function(a) {
        if (null === a || 0 > a.change.value) return !0;
        a = a.object;
        if (void 0 !== a.layer) {
            if (a = a.layer, null !== a && a.isTemporary) return !0
        } else if (a.isTemporary) return !0;
        return !1
    };
    pa.Object.defineProperties(ff.prototype, {
        models: {
            get: function() {
                return this.gu.iterator
            }
        },
        isEnabled: {
            get: function() {
                return this.Fc
            },
            set: function(a) {
                this.Fc = a
            }
        },
        transactionToUndo: {
            get: function() {
                return 0 <= this.historyIndex && this.historyIndex <= this.history.count - 1 ? this.history.N(this.historyIndex) : null
            }
        },
        transactionToRedo: {
            get: function() {
                return this.historyIndex < this.history.count -
                    1 ? this.history.N(this.historyIndex + 1) : null
            }
        },
        isUndoingRedoing: {
            get: function() {
                return this.ie
            }
        },
        history: {
            get: function() {
                return this.K
            }
        },
        maxHistoryLength: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        historyIndex: {
            get: function() {
                return this.fe
            }
        },
        currentTransaction: {
            get: function() {
                return this.Xq
            }
        },
        transactionLevel: {
            get: function() {
                return this.wi
            }
        },
        isInTransaction: {
            get: function() {
                return 0 < this.wi
            }
        },
        checksTransactionLevel: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        },
        nestedTransactionNames: {
            get: function() {
                return this.pe
            }
        }
    });
    ff.prototype.handleChanged = ff.prototype.$u;
    ff.prototype.redo = ff.prototype.redo;
    ff.prototype.undo = ff.prototype.undo;
    ff.prototype.canUndo = ff.prototype.canUndo;
    ff.prototype.rollbackTransaction = ff.prototype.tf;
    ff.prototype.commitTransaction = ff.prototype.$a;
    ff.prototype.startTransaction = ff.prototype.Aa;
    ff.prototype.removeModel = ff.prototype.wx;
    ff.prototype.addModel = ff.prototype.Nw;
    ff.prototype.clear = ff.prototype.clear;
    ff.className = "UndoManager";

    function kf() {
        mb(this);
        this.F = lf;
        this.Ta = "";
        this.Fc = !0;
        this.Ub = !1;
        this.Zv = null;
        this.Xx = new Xe;
        this.Ds = -1
    }
    kf.prototype.nb = function(a) {
        this.F = a
    };
    kf.prototype.toString = function() {
        return "" !== this.name ? this.name + " Tool" : Pa(this.constructor)
    };
    kf.prototype.updateAdornments = function() {};
    kf.prototype.canStart = function() {
        return this.isEnabled
    };
    kf.prototype.doStart = function() {};
    kf.prototype.doActivate = function() {
        this.isActive = !0
    };
    kf.prototype.doDeactivate = function() {
        this.isActive = !1
    };
    kf.prototype.doStop = function() {};
    kf.prototype.doCancel = function() {
        this.transactionResult = null;
        this.stopTool()
    };
    kf.prototype.stopTool = function() {
        var a = this.diagram;
        a.currentTool === this && (a.currentTool = null, a.currentCursor = "")
    };
    kf.prototype.doMouseDown = function() {
        !this.isActive && this.canStart() && this.doActivate()
    };
    kf.prototype.doMouseMove = function() {};
    kf.prototype.doMouseUp = function() {
        this.stopTool()
    };
    kf.prototype.doMouseWheel = function() {};
    kf.prototype.canStartMultiTouch = function() {
        return !0
    };
    kf.prototype.standardPinchZoomStart = function() {
        var a = this.diagram,
            b = a.lastInput,
            c = b.Vp(0, G.allocAt(NaN, NaN)),
            d = b.Vp(1, G.allocAt(NaN, NaN));
        if (c.s() && d.s() && (this.doCancel(), a.Zl("hasGestureZoom"))) {
            a.Fo = a.scale;
            var e = d.x - c.x,
                f = d.y - c.y;
            a.Dw = Math.sqrt(e * e + f * f);
            b.bubbles = !1
        }
        G.free(c);
        G.free(d)
    };
    kf.prototype.standardPinchZoomMove = function() {
        var a = this.diagram,
            b = a.lastInput,
            c = b.Vp(0, G.allocAt(NaN, NaN)),
            d = b.Vp(1, G.allocAt(NaN, NaN));
        if (c.s() && d.s() && (this.doCancel(), a.Zl("hasGestureZoom"))) {
            var e = d.x - c.x,
                f = d.y - c.y;
            f = Math.sqrt(e * e + f * f) / a.Dw;
            e = new G((Math.min(d.x, c.x) + Math.max(d.x, c.x)) / 2, (Math.min(d.y, c.y) + Math.max(d.y, c.y)) / 2);
            f *= a.Fo;
            var g = a.commandHandler;
            if (f !== a.scale && g.canResetZoom(f)) {
                var h = a.zoomPoint;
                a.zoomPoint = e;
                g.resetZoom(f);
                a.zoomPoint = h
            }
            b.bubbles = !1
        }
        G.free(c);
        G.free(d)
    };
    kf.prototype.doKeyDown = function() {
        "Esc" === this.diagram.lastInput.key && this.doCancel()
    };
    kf.prototype.doKeyUp = function() {};
    kf.prototype.Aa = function(a) {
        void 0 === a && (a = this.name);
        this.transactionResult = null;
        return this.diagram.Aa(a)
    };
    kf.prototype.ug = function() {
        var a = this.diagram;
        return null === this.transactionResult ? a.tf() : a.$a(this.transactionResult)
    };
    kf.prototype.standardMouseSelect = function() {
        var a = this.diagram;
        if (a.allowSelect) {
            var b = a.lastInput,
                c = a.Xl(b.documentPoint, !1);
            if (null !== c)
                if (ib ? b.meta : b.control) {
                    a.aa("ChangingSelection", a.selection);
                    for (b = c; null !== b && !b.canSelect();) b = b.containingGroup;
                    null !== b && (b.isSelected = !b.isSelected);
                    a.aa("ChangedSelection", a.selection)
                } else if (b.shift) {
                if (!c.isSelected) {
                    a.aa("ChangingSelection", a.selection);
                    for (b = c; null !== b && !b.canSelect();) b = b.containingGroup;
                    null !== b && (b.isSelected = !0);
                    a.aa("ChangedSelection",
                        a.selection)
                }
            } else {
                if (!c.isSelected) {
                    for (b = c; null !== b && !b.canSelect();) b = b.containingGroup;
                    null !== b && a.select(b)
                }
            } else !b.left || (ib ? b.meta : b.control) || b.shift || a.Hs()
        }
    };
    kf.prototype.standardMouseClick = function(a, b) {
        void 0 === a && (a = null);
        void 0 === b && (b = function(a) {
            return !a.layer.isTemporary
        });
        var c = this.diagram,
            d = c.lastInput;
        a = c.Rb(d.documentPoint, a, b);
        d.targetObject = a;
        mf(a, d, c);
        return d.handled
    };

    function mf(a, b, c) {
        b.handled = !1;
        if (null === a || a.qg()) {
            var d = 0;
            b.left ? d = 1 === b.clickCount ? 1 : 2 === b.clickCount ? 2 : 1 : b.right && 1 === b.clickCount && (d = 3);
            var e = "ObjectSingleClicked";
            if (null !== a) {
                switch (d) {
                    case 1:
                        e = "ObjectSingleClicked";
                        break;
                    case 2:
                        e = "ObjectDoubleClicked";
                        break;
                    case 3:
                        e = "ObjectContextClicked"
                }
                0 !== d && c.aa(e, a)
            } else {
                switch (d) {
                    case 1:
                        e = "BackgroundSingleClicked";
                        break;
                    case 2:
                        e = "BackgroundDoubleClicked";
                        break;
                    case 3:
                        e = "BackgroundContextClicked"
                }
                0 !== d && c.aa(e)
            }
            if (null !== a)
                for (; null !== a;) {
                    c = null;
                    switch (d) {
                        case 1:
                            c =
                                a.click;
                            break;
                        case 2:
                            c = a.doubleClick ? a.doubleClick : a.click;
                            break;
                        case 3:
                            c = a.contextClick
                    }
                    if (null !== c && (c(b, a), b.handled)) break;
                    a = a.panel
                } else {
                    a = null;
                    switch (d) {
                        case 1:
                            a = c.click;
                            break;
                        case 2:
                            a = c.doubleClick ? c.doubleClick : c.click;
                            break;
                        case 3:
                            a = c.contextClick
                    }
                    null !== a && a(b)
                }
        }
    }
    kf.prototype.standardMouseOver = function() {
        var a = this.diagram,
            b = a.lastInput;
        if (!0 !== a.animationManager.sb) {
            var c = a.skipsUndoManager;
            a.skipsUndoManager = !0;
            var d = a.he ? a.Rb(b.documentPoint, null, null) : null;
            b.targetObject = d;
            var e = !1;
            if (d !== a.Ck) {
                var f = a.Ck,
                    g = f;
                a.Ck = d;
                this.doCurrentObjectChanged(f, d);
                for (b.handled = !1; null !== f;) {
                    var h = f.mouseLeave;
                    if (null !== h) {
                        if (d === f) break;
                        if (null !== d && d.pg(f)) break;
                        h(b, f, d);
                        e = !0;
                        if (b.handled) break
                    }
                    f = f.panel
                }
                f = g;
                for (b.handled = !1; null !== d;) {
                    g = d.mouseEnter;
                    if (null !== g) {
                        if (f ===
                            d) break;
                        if (null !== f && f.pg(d)) break;
                        g(b, d, f);
                        e = !0;
                        if (b.handled) break
                    }
                    d = d.panel
                }
                d = a.Ck
            }
            if (null !== d) {
                f = d;
                for (g = ""; null !== f;) {
                    g = f.cursor;
                    if ("" !== g) break;
                    f = f.panel
                }
                a.currentCursor = g;
                b.handled = !1;
                for (f = d; null !== f;) {
                    d = f.mouseOver;
                    if (null !== d && (d(b, f), e = !0, b.handled)) break;
                    f = f.panel
                }
            } else a.currentCursor = "", d = a.mouseOver, null !== d && (d(b), e = !0);
            e && a.ec();
            a.skipsUndoManager = c
        }
    };
    kf.prototype.doCurrentObjectChanged = function() {};
    kf.prototype.standardMouseWheel = function() {
        var a = this.diagram,
            b = a.lastInput,
            c = b.delta;
        if (0 !== c && a.documentBounds.s()) {
            var d = a.commandHandler,
                e = a.toolManager.mouseWheelBehavior;
            if (null !== d && (e === nf && !b.shift || e === of && b.control) && (0 < c ? d.canIncreaseZoom() : d.canDecreaseZoom())) e = a.zoomPoint, a.zoomPoint = b.viewPoint, 0 < c ? d.increaseZoom() : d.decreaseZoom(), a.zoomPoint = e, b.bubbles = !1;
            else if (e === nf && b.shift || e === of && !b.control) {
                d = a.position.copy();
                var f = 0 < c ? c : -c,
                    g = b.event,
                    h = g.deltaMode;
                e = g.deltaX;
                g = g.deltaY;
                if (cb || fb || gb) h = 1, 0 < e && (e = 3), 0 > e && (e = -3), 0 < g && (g = 3), 0 > g && (g = -3);
                if (void 0 === h || void 0 === e || void 0 === g || 0 === e && 0 === g || b.shift) !b.shift && a.allowVerticalScroll ? (f = 3 * f * a.scrollVerticalLineChange, 0 < c ? a.scroll("pixel", "up", f) : a.scroll("pixel", "down", f)) : b.shift && a.allowHorizontalScroll && (f = 3 * f * a.scrollHorizontalLineChange, 0 < c ? a.scroll("pixel", "left", f) : a.scroll("pixel", "right", f));
                else {
                    switch (h) {
                        case 0:
                            c = "pixel";
                            break;
                        case 1:
                            c = "line";
                            break;
                        case 2:
                            c = "page";
                            break;
                        default:
                            c = "pixel"
                    }
                    0 !== e && a.allowHorizontalScroll &&
                        (0 < e ? a.scroll(c, "left", -e) : a.scroll(c, "right", e));
                    0 !== g && a.allowVerticalScroll && (0 < g ? a.scroll(c, "up", -g) : a.scroll(c, "down", g))
                }
                a.position.A(d) || (b.bubbles = !1)
            }
        }
    };
    kf.prototype.standardWaitAfter = function(a, b) {
        void 0 === b && (b = this.diagram.lastInput);
        this.cancelWaitAfter();
        var c = this,
            d = b.clone(this.Xx);
        this.Ds = ua(function() {
            c.doWaitAfter(d)
        }, a)
    };
    kf.prototype.cancelWaitAfter = function() {
        -1 !== this.Ds && w.clearTimeout(this.Ds);
        this.Ds = -1
    };
    kf.prototype.doWaitAfter = function() {};
    kf.prototype.findToolHandleAt = function(a, b) {
        a = this.diagram.Rb(a, function(a) {
            for (; null !== a && !(a.panel instanceof pf);) a = a.panel;
            return a
        });
        return null === a ? null : a.part.category === b ? a : null
    };
    kf.prototype.isBeyondDragSize = function(a, b) {
        var c = this.diagram;
        void 0 === a && (a = c.firstInput.viewPoint);
        void 0 === b && (b = c.lastInput.viewPoint);
        var d = c.toolManager.dragSize,
            e = d.width;
        d = d.height;
        c.firstInput.isTouchEvent && (e += 6, d += 6);
        return Math.abs(b.x - a.x) > e || Math.abs(b.y - a.y) > d
    };
    pa.Object.defineProperties(kf.prototype, {
        diagram: {
            get: function() {
                return this.F
            },
            set: function(a) {
                a instanceof P && (this.F = a)
            }
        },
        name: {
            get: function() {
                return this.Ta
            },
            set: function(a) {
                this.Ta = a
            }
        },
        isEnabled: {
            get: function() {
                return this.Fc
            },
            set: function(a) {
                this.Fc = a
            }
        },
        isActive: {
            get: function() {
                return this.Ub
            },
            set: function(a) {
                this.Ub = a
            }
        },
        transactionResult: {
            get: function() {
                return this.Zv
            },
            set: function(a) {
                this.Zv = a
            }
        }
    });
    kf.prototype.stopTransaction = kf.prototype.ug;
    kf.prototype.startTransaction = kf.prototype.Aa;
    kf.className = "Tool";

    function Ua() {
        kf.call(this);
        this.name = "ToolManager";
        this.Lc = new E;
        this.Xc = new E;
        this.vg = new E;
        this.da = this.La = 850;
        this.u = (new L(2, 2)).ga();
        this.Vb = 5E3;
        this.Wa = of ;
        this.K = qf;
        this.Wq = this.l = null;
        this.Fj = -1
    }
    oa(Ua, kf);
    Ua.prototype.initializeStandardTools = function() {};
    Ua.prototype.updateAdornments = function(a) {
        var b = this.currentToolTip;
        if (b instanceof pf && this.Wq === a) {
            var c = b.adornedObject;
            (null !== a ? c.part === a : null === c) ? this.showToolTip(b, c): this.hideToolTip()
        }
    };
    Ua.prototype.doMouseDown = function() {
        var a = this.diagram,
            b = a.lastInput;
        b.isTouchEvent && this.gestureBehavior === rf && (b.bubbles = !1);
        if (b.isMultiTouch) {
            this.cancelWaitAfter();
            if (this.gestureBehavior === sf) {
                b.bubbles = !0;
                return
            }
            if (this.gestureBehavior === rf) return;
            if (a.currentTool.canStartMultiTouch()) {
                a.currentTool.standardPinchZoomStart();
                return
            }
        }
        for (var c = this.mouseDownTools.length, d = 0; d < c; d++) {
            var e = this.mouseDownTools.N(d);
            e.nb(this.diagram);
            if (e.canStart()) {
                a.doFocus();
                a.currentTool = e;
                a.currentTool ===
                    e && (e.isActive || e.doActivate(), e.doMouseDown());
                return
            }
        }
        1 === a.lastInput.button && (this.mouseWheelBehavior === of ? this.mouseWheelBehavior = nf : this.mouseWheelBehavior === nf && (this.mouseWheelBehavior = of ));
        this.doActivate();
        this.standardWaitAfter(this.holdDelay, b)
    };
    Ua.prototype.doMouseMove = function() {
        var a = this.diagram,
            b = a.lastInput;
        if (b.isMultiTouch) {
            if (this.gestureBehavior === sf) {
                b.bubbles = !0;
                return
            }
            if (this.gestureBehavior === rf) return;
            if (a.currentTool.canStartMultiTouch()) {
                a.currentTool.standardPinchZoomMove();
                return
            }
        }
        if (this.isActive)
            for (var c = this.mouseMoveTools.length, d = 0; d < c; d++) {
                var e = this.mouseMoveTools.N(d);
                e.nb(this.diagram);
                if (e.canStart()) {
                    a.doFocus();
                    a.currentTool = e;
                    a.currentTool === e && (e.isActive || e.doActivate(), e.doMouseMove());
                    return
                }
            }
        tf(this,
            a);
        a = b.event;
        null === a || "mousemove" !== a.type && "pointermove" !== a.type && a.cancelable || (b.bubbles = !0)
    };

    function tf(a, b) {
        a.standardMouseOver();
        a.isBeyondDragSize() && a.standardWaitAfter(a.isActive ? a.holdDelay : a.hoverDelay, b.lastInput)
    }
    Ua.prototype.doCurrentObjectChanged = function(a, b) {
        a = this.currentToolTip;
        null === a || null !== b && a instanceof pf && (b === a || b.pg(a)) || this.hideToolTip()
    };
    Ua.prototype.doWaitAfter = function(a) {
        var b = this.diagram;
        b.Da && (this.doMouseHover(), this.isActive || this.doToolTip(), a.isTouchEvent && !b.lastInput.handled && (a = a.copy(), a.button = 2, a.buttons = 2, b.lastInput = a, b.Il = !0, b.doMouseUp()))
    };
    Ua.prototype.doMouseHover = function() {
        var a = this.diagram,
            b = a.lastInput;
        null === b.targetObject && (b.targetObject = a.Rb(b.documentPoint, null, null));
        var c = b.targetObject;
        if (null !== c)
            for (b.handled = !1; null !== c;) {
                a = this.isActive ? c.mouseHold : c.mouseHover;
                if (null !== a && (a(b, c), b.handled)) break;
                c = c.panel
            } else c = this.isActive ? a.mouseHold : a.mouseHover, null !== c && c(b)
    };
    Ua.prototype.doToolTip = function() {
        var a = this.diagram,
            b = a.lastInput;
        null === b.targetObject && (b.targetObject = a.Rb(b.documentPoint, null, null));
        b = b.targetObject;
        if (null !== b) {
            if (a = this.currentToolTip, !(a instanceof pf) || b !== a && !b.pg(a)) {
                for (; null !== b;) {
                    a = b.toolTip;
                    if (null !== a) {
                        this.showToolTip(a, b);
                        return
                    }
                    b = b.panel
                }
                this.hideToolTip()
            }
        } else b = a.toolTip, null !== b ? this.showToolTip(b, null) : this.hideToolTip()
    };
    Ua.prototype.showToolTip = function(a, b) {
        var c = this.diagram;
        a !== this.currentToolTip && this.hideToolTip();
        if (a instanceof pf) {
            a.layerName = "Tool";
            a.selectable = !1;
            a.scale = 1 / c.scale;
            a.category = "ToolTip";
            null !== a.placeholder && (a.placeholder.scale = c.scale);
            var d = a.diagram;
            null !== d && d !== c && d.remove(a);
            c.add(a);
            null !== b ? (c = null, d = b.sh(), null !== d && (c = d.data), a.adornedObject = b, a.data = c) : a.data = c.model;
            a.bc();
            this.positionToolTip(a, b)
        } else a instanceof uf && a !== this.currentToolTip && a.show(b, c, this);
        this.currentToolTip =
            a; - 1 !== this.Fj && (w.clearTimeout(this.Fj), this.Fj = -1);
        a = this.toolTipDuration;
        if (0 < a && Infinity !== a) {
            var e = this;
            this.Fj = ua(function() {
                e.hideToolTip()
            }, a)
        }
    };
    Ua.prototype.positionToolTip = function(a) {
        if (null === a.placeholder) {
            var b = this.diagram,
                c = b.lastInput.documentPoint.copy(),
                d = a.measuredBounds,
                e = b.viewportBounds;
            b.lastInput.isTouchEvent && (c.x -= d.width);
            c.x + d.width > e.right && (c.x -= d.width + 5 / b.scale);
            c.x < e.x && (c.x = e.x);
            c.y = c.y + 20 / b.scale + d.height > e.bottom ? c.y - (d.height + 5 / b.scale) : c.y + 20 / b.scale;
            c.y < e.y && (c.y = e.y);
            a.position = c
        }
    };
    Ua.prototype.hideToolTip = function() {
        -1 !== this.Fj && (w.clearTimeout(this.Fj), this.Fj = -1);
        var a = this.diagram,
            b = this.currentToolTip;
        null !== b && (b instanceof pf ? (a.remove(b), null !== this.Wq && this.Wq.sf(b.category), b.data = null, b.adornedObject = null) : b instanceof uf && null !== b.hide && b.hide(a, this), this.currentToolTip = null)
    };
    Ua.prototype.doMouseUp = function() {
        this.cancelWaitAfter();
        var a = this.diagram;
        if (this.isActive)
            for (var b = this.mouseUpTools.length, c = 0; c < b; c++) {
                var d = this.mouseUpTools.N(c);
                d.nb(this.diagram);
                if (d.canStart()) {
                    a.doFocus();
                    a.currentTool = d;
                    a.currentTool === d && (d.isActive || d.doActivate(), d.doMouseUp());
                    return
                }
            }
        a.doFocus();
        this.doDeactivate()
    };
    Ua.prototype.doMouseWheel = function() {
        this.standardMouseWheel()
    };
    Ua.prototype.doKeyDown = function() {
        var a = this.diagram;
        null !== a.commandHandler && a.commandHandler.doKeyDown()
    };
    Ua.prototype.doKeyUp = function() {
        var a = this.diagram;
        null !== a.commandHandler && a.commandHandler.doKeyUp()
    };
    Ua.prototype.findTool = function(a) {
        for (var b = this.mouseDownTools.length, c = 0; c < b; c++) {
            var d = this.mouseDownTools.N(c);
            if (d.name === a) return d
        }
        b = this.mouseMoveTools.length;
        for (c = 0; c < b; c++)
            if (d = this.mouseMoveTools.N(c), d.name === a) return d;
        b = this.mouseUpTools.length;
        for (c = 0; c < b; c++)
            if (d = this.mouseUpTools.N(c), d.name === a) return d;
        return null
    };
    Ua.prototype.replaceTool = function(a, b) {
        null !== b && b.nb(this.diagram);
        for (var c = this.mouseDownTools.length, d = 0; d < c; d++) {
            var e = this.mouseDownTools.N(d);
            if (e.name === a) return null !== b ? this.mouseDownTools.jd(d, b) : this.mouseDownTools.mb(d), e
        }
        c = this.mouseMoveTools.length;
        for (d = 0; d < c; d++)
            if (e = this.mouseMoveTools.N(d), e.name === a) return null !== b ? this.mouseMoveTools.jd(d, b) : this.mouseMoveTools.mb(d), e;
        c = this.mouseUpTools.length;
        for (d = 0; d < c; d++)
            if (e = this.mouseUpTools.N(d), e.name === a) return null !== b ? this.mouseUpTools.jd(d,
                b) : this.mouseUpTools.mb(d), e;
        return null
    };

    function vf(a, b, c, d) {
        null !== c && (c.name = b, c.nb(a.diagram));
        a.findTool(b) ? a.replaceTool(b, c) : null !== c && d.add(c)
    }
    pa.Object.defineProperties(Ua.prototype, {
        mouseWheelBehavior: {
            get: function() {
                return this.Wa
            },
            set: function(a) {
                this.Wa = a
            }
        },
        gestureBehavior: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K = a
            }
        },
        currentToolTip: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a;
                this.Wq = null !== a && a instanceof pf ? a.adornedPart : null
            }
        },
        mouseDownTools: {
            get: function() {
                return this.Lc
            }
        },
        mouseMoveTools: {
            get: function() {
                return this.Xc
            }
        },
        mouseUpTools: {
            get: function() {
                return this.vg
            }
        },
        hoverDelay: {
            get: function() {
                return this.La
            },
            set: function(a) {
                this.La = a
            }
        },
        holdDelay: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da = a
            }
        },
        dragSize: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a.I()
            }
        },
        toolTipDuration: {
            get: function() {
                return this.Vb
            },
            set: function(a) {
                this.Vb = a
            }
        }
    });
    var of = new D(Ua, "WheelScroll", 0), nf = new D(Ua, "WheelZoom", 1), wf = new D(Ua, "WheelNone", 2), qf = new D(Ua, "GestureZoom", 3), rf = new D(Ua, "GestureCancel", 4), sf = new D(Ua, "GestureNone", 5);
    Ua.className = "ToolManager";
    Ua.WheelScroll = of ;
    Ua.WheelZoom = nf;
    Ua.WheelNone = wf;
    Ua.GestureZoom = qf;
    Ua.GestureCancel = rf;
    Ua.GestureNone = sf;

    function xf() {
        kf.call(this);
        this.name = "Dragging";
        this.K = this.Lc = !0;
        this.u = this.Wa = this.da = this.ag = null;
        this.wn = this.Xc = !1;
        this.Bl = new G(NaN, NaN);
        this.ts = new G;
        this.Vb = !0;
        this.Jk = 100;
        this.Gg = [];
        this.vg = (new F).freeze();
        this.La = new yf
    }
    oa(xf, kf);
    xf.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (a.isReadOnly && !a.allowDragOut || !a.allowMove && !a.allowCopy && !a.allowDragOut || !a.allowSelect) return !1;
        var b = a.lastInput;
        return !b.left || a.currentTool !== this && (!this.isBeyondDragSize() || b.isTouchEvent && b.timestamp - a.firstInput.timestamp < this.Jk) ? !1 : null !== this.findDraggablePart()
    };
    xf.prototype.findDraggablePart = function() {
        var a = this.diagram;
        a = a.Xl(a.firstInput.documentPoint, !1);
        if (null === a) return null;
        for (; null !== a && !a.canSelect();) a = a.containingGroup;
        return null !== a && (a.canMove() || a.canCopy()) ? a : null
    };
    xf.prototype.standardMouseSelect = function() {
        var a = this.diagram;
        if (a.allowSelect) {
            var b = a.Xl(a.firstInput.documentPoint, !1);
            if (null !== b) {
                for (; null !== b && !b.canSelect();) b = b.containingGroup;
                this.currentPart = b;
                null === this.currentPart || this.currentPart.isSelected || (a.aa("ChangingSelection", a.selection), b = a.lastInput, (ib ? b.meta : b.control) || b.shift || Hf(a), this.currentPart.isSelected = !0, a.aa("ChangedSelection", a.selection))
            }
        }
    };
    xf.prototype.doActivate = function() {
        var a = this.diagram;
        null === this.currentPart && this.standardMouseSelect();
        var b = this.currentPart;
        null !== b && (b.canMove() || b.canCopy()) && (If = null, this.isActive = !0, this.Bl.set(a.position), Jf(this, a.selection), this.Gg.length = 0, this.draggedParts = this.computeEffectiveCollection(a.selection, this.dragOptions), a.Qi = !0, !0 === a.De("temporaryPixelRatio") && 30 < a.au && (a.ve = 1), Kf(a, this.draggedParts), this.Aa("Drag"), this.startPoint = a.firstInput.documentPoint, a.isMouseCaptured = !0, a.allowDragOut &&
            (this.isDragOutStarted = !0, this.wn = !1, If = this, Lf = this.diagram, this.doSimulatedDragOut()))
    };

    function Jf(a, b) {
        if (a.dragsLink) {
            var c = a.diagram;
            c.allowRelink && (c.model.Yj() && 1 === b.count && b.first() instanceof S ? (a.draggedLink = b.first(), a.draggedLink.canRelinkFrom() && a.draggedLink.canRelinkTo() && a.draggedLink.Nj(), a.ag = c.toolManager.findTool("Relinking"), null === a.ag && (a.ag = new Mf, a.ag.nb(c))) : (a.draggedLink = null, a.ag = null))
        }
    }
    xf.prototype.computeEffectiveCollection = function(a, b) {
        return this.diagram.commandHandler.computeEffectiveCollection(a, b)
    };
    xf.prototype.rd = function(a) {
        return void 0 === a ? new Nf(ac) : this.isGridSnapEnabled ? new Nf(new G(Math.round(a.x), Math.round(a.y))) : new Nf(a.copy())
    };
    xf.prototype.doDeactivate = function() {
        this.isActive = !1;
        var a = this.diagram;
        a.uf();
        Of(this);
        Pf(a, this.draggedParts);
        this.draggedParts = this.currentPart = null;
        this.wn = this.isDragOutStarted = !1;
        if (0 < Qf.count) {
            for (var b = Qf, c = b.length, d = 0; d < c; d++) {
                var e = b.N(d);
                Rf(e);
                Sf(e);
                Of(e);
                e.diagram.uf()
            }
            b.clear()
        }
        Rf(this);
        this.Bl.h(NaN, NaN);
        If = Lf = null;
        Sf(this);
        a.isMouseCaptured = !1;
        a.currentCursor = "";
        a.Qi = !1;
        this.ug();
        Tf(a, !0)
    };

    function Of(a) {
        var b = a.diagram,
            c = b.skipsUndoManager;
        b.skipsUndoManager = !0;
        Uf(a, b.lastInput, null);
        b.skipsUndoManager = c;
        a.Gg.length = 0
    }

    function Vf() {
        var a = If;
        Sf(a);
        Wf(a);
        var b = a.diagram;
        a.Bl.s() && (b.position = a.Bl);
        b.uf()
    }
    xf.prototype.doCancel = function() {
        Sf(this);
        Wf(this);
        var a = this.diagram;
        this.Bl.s() && (a.position = this.Bl);
        this.stopTool()
    };
    xf.prototype.doKeyDown = function() {
        this.isActive && ("Esc" === this.diagram.lastInput.key ? this.doCancel() : this.doMouseMove())
    };
    xf.prototype.doKeyUp = function() {
        this.isActive && this.doMouseMove()
    };

    function Xf(a, b) {
        var c = Infinity,
            d = Infinity,
            e = -Infinity,
            f = -Infinity;
        for (a = a.iterator; a.next();) {
            var g = a.value;
            if (g.dc() && g.isVisible()) {
                var h = g.location;
                g = h.x;
                h = h.y;
                isNaN(g) || isNaN(h) || (g < c && (c = g), h < d && (d = h), g > e && (e = g), h > f && (f = h))
            }
        }
        Infinity === c ? b.h(0, 0, 0, 0) : b.h(c, d, e - c, f - d)
    }

    function Yf(a, b) {
        if (null === a.copiedParts) {
            var c = a.diagram;
            if ((!b || !c.isReadOnly && !c.isModelReadOnly) && null !== a.draggedParts) {
                var d = c.undoManager;
                d.isEnabled && d.isInTransaction ? null !== d.currentTransaction && 0 < d.currentTransaction.changes.count && (c.undoManager.tf(), c.Aa("Drag")) : Wf(a);
                c.skipsUndoManager = !b;
                c.partManager.addsToTemporaryLayer = !b;
                a.startPoint = c.firstInput.documentPoint;
                b = a.copiesEffectiveCollection ? a.draggedParts.Zd() : c.selection;
                c = c.Sj(b, c, !0);
                for (b = c.iterator; b.next();) b.value.location =
                    b.key.location;
                b = N.alloc();
                Xf(c, b);
                N.free(b);
                b = new Lb;
                for (d = a.draggedParts.iterator; d.next();) {
                    var e = d.key;
                    e.dc() && e.canCopy() && (e = c.J(e), null !== e && (e.bc(), b.add(e, a.rd(e.location))))
                }
                for (c = c.iterator; c.next();) d = c.value, d instanceof S && d.canCopy() && b.add(d, a.rd());
                a.copiedParts = b;
                Jf(a, b.Zd());
                null !== a.draggedLink && (c = a.draggedLink, b = c.routeBounds, Zf(c, a.startPoint.x - (b.x + b.width / 2), a.startPoint.y - (b.y + b.height / 2)))
            }
        }
    }

    function Sf(a) {
        var b = a.diagram;
        if (null !== a.copiedParts && (b.ot(a.copiedParts.Zd(), !1), a.copiedParts = null, null !== a.draggedParts))
            for (var c = a.draggedParts.iterator; c.next();) c.key instanceof S && (c.value.point = new G(0, 0));
        b.skipsUndoManager = !1;
        b.partManager.addsToTemporaryLayer = !1;
        a.startPoint = b.firstInput.documentPoint
    }

    function Rf(a) {
        if (null !== a.draggedLink) {
            if (a.dragsLink && null !== a.ag) {
                var b = a.ag;
                b.diagram.remove(b.temporaryFromNode);
                b.diagram.remove(b.temporaryToNode)
            }
            a.draggedLink = null;
            a.ag = null
        }
    }

    function $f(a, b, c) {
        var d = a.diagram,
            e = a.startPoint,
            f = G.alloc();
        f.assign(d.lastInput.documentPoint);
        a.moveParts(b, f.Yd(e), c);
        G.free(f);
        !0 === d.De("temporaryPixelRatio") && null === d.ve && 30 < d.au && (d.ve = 1, d.lt())
    }
    xf.prototype.moveParts = function(a, b, c) {
        var d = this.diagram;
        null !== d && ag(d, a, b, this.dragOptions, c)
    };

    function Wf(a) {
        if (null !== a.draggedParts) {
            for (var b = a.diagram, c = a.draggedParts.iterator; c.next();) {
                var d = c.key;
                d.dc() && (d.location = c.value.point)
            }
            for (c = a.draggedParts.iterator; c.next();)
                if (d = c.key, d instanceof S && d.suspendsRouting) {
                    var e = c.value.point;
                    a.draggedParts.add(d, a.rd());
                    Zf(d, -e.x, -e.y)
                } b.hd()
        }
    }

    function cg(a, b) {
        if (null === b) return !0;
        b = b.part;
        return null === b || b instanceof pf || b.layer.isTemporary || a.draggedParts && a.draggedParts.contains(b) || a.copiedParts && a.copiedParts.contains(b) ? !0 : !1
    }

    function dg(a, b) {
        var c = a.diagram;
        a.dragsLink && (null !== a.draggedLink && (a.draggedLink.fromNode = null, a.draggedLink.toNode = null), eg(a, !1));
        var d = fg(c, b, null, function(b) {
                return !cg(a, b)
            }),
            e = c.lastInput;
        e.targetObject = d;
        var f = c.skipsUndoManager,
            g = !1;
        try {
            c.skipsUndoManager = !0;
            g = Uf(a, e, d);
            if (!a.isActive && null === If) return;
            if (null === d || c.handlesDragDropForTopLevelParts) {
                var h = c.mouseDragOver;
                null !== h && (h(e), g = !0)
            }
            if (!a.isActive && null === If) return;
            a.doDragOver(b, d);
            if (!a.isActive && null === If) return
        } finally {
            c.skipsUndoManager =
                f, g && c.hd()
        }(c.allowHorizontalScroll || c.allowVerticalScroll) && c.Ls(e.viewPoint)
    }

    function Uf(a, b, c) {
        var d = !1,
            e = a.Gg.length,
            f = 0 < e ? a.Gg[0] : null;
        if (c === f) return !1;
        b.handled = !1;
        for (var g = 0; g < e; g++) {
            var h = a.Gg[g],
                k = h.mouseDragLeave;
            if (null !== k && (k(b, h, c), d = !0, b.handled)) break
        }
        a.Gg.length = 0;
        if (!a.isActive && null === If || null === c) return d;
        b.handled = !1;
        for (e = c; null !== e;) a.Gg.push(e), e = gg(e);
        e = a.Gg.length;
        for (c = 0; c < e && (g = a.Gg[c], h = g.mouseDragEnter, null === h || (h(b, g, f), d = !0, !b.handled)); c++);
        return d
    }

    function gg(a) {
        var b = a.panel;
        return null !== b ? b : a instanceof T && !(a instanceof hg) && (a = a.containingGroup, null !== a && a.handlesDragDropForMembers) ? a : null
    }

    function ig(a, b, c) {
        var d = a.ag;
        if (null === d) return null;
        var e = a.diagram.mg(b, d.portGravity, function(a) {
            return d.findValidLinkablePort(a, c)
        });
        a = G.alloc();
        var f = Infinity,
            g = null;
        for (e = e.iterator; e.next();) {
            var h = e.value;
            if (null !== h.part) {
                var k = h.ma(dd, a);
                k = b.Be(k);
                k < f && (g = h, f = k)
            }
        }
        G.free(a);
        return g
    }

    function eg(a, b) {
        var c = a.draggedLink;
        if (null !== c && !(2 > c.pointsCount)) {
            var d = a.diagram;
            if (!d.isReadOnly) {
                var e = a.ag;
                if (null !== e) {
                    var f = null,
                        g = null;
                    null === c.fromNode && (f = ig(a, c.i(0), !1), null !== f && (g = f.part));
                    var h = null,
                        k = null;
                    null === c.toNode && (h = ig(a, c.i(c.pointsCount - 1), !0), null !== h && (k = h.part));
                    e.isValidLink(g, f, k, h) ? b ? (c.defaultFromPoint = c.i(0), c.defaultToPoint = c.i(c.pointsCount - 1), c.suspendsRouting = !1, c.fromNode = g, null !== f && (c.fromPortId = f.portId), c.toNode = k, null !== h && (c.toPortId = h.portId), c.fromPort !==
                        d.qx && d.aa("LinkRelinked", c, d.qx), c.toPort !== d.sx && d.aa("LinkRelinked", c, d.sx)) : jg(e, g, f, k, h) : jg(e, null, null, null, null)
                }
            }
        }
    }
    xf.prototype.doDragOver = function() {};

    function kg(a, b) {
        var c = a.diagram;
        a.dragsLink && eg(a, !0);
        Of(a);
        var d = fg(c, b, null, function(b) {
                return !cg(a, b)
            }),
            e = c.lastInput;
        e.targetObject = d;
        if (null !== d) {
            e.handled = !1;
            for (var f = d; null !== f;) {
                var g = f.mouseDrop;
                if (null !== g && (g(e, f), e.handled)) break;
                lg(a, e, f);
                f = gg(f)
            }
        } else f = c.mouseDrop, null !== f && f(e);
        if (a.isActive || null !== If) {
            for (e = (a.copiedParts || a.draggedParts).iterator; e.next();) f = e.key, f instanceof U && f.linksConnected.each(function(a) {
                a.suspendsRouting = !1
            });
            a.doDropOnto(b, d);
            if (a.isActive || null !==
                If) {
                b = N.alloc();
                for (d = c.selection.iterator; d.next();) e = d.value, e instanceof U && mg(a, c, e, b);
                N.free(b)
            }
        }
    }

    function lg(a, b, c) {
        a = a.diagram;
        c instanceof T && null === c.containingGroup && !(c instanceof hg) && a.handlesDragDropForTopLevelParts && (c = a.mouseDrop, null !== c && c(b))
    }

    function mg(a, b, c, d) {
        var e = !1;
        c.getAvoidableRect(d);
        b.viewportBounds.mf(d) && (e = !0);
        b = b.links;
        for (a = a.copiedParts || a.draggedParts; b.next();) {
            var f = b.value;
            if (!e || ng(f)) a.contains(f) && a.contains(c) || !f.Wd(c) && f.isAvoiding && Ac(f.actualBounds, d, 0) && f.Qa()
        }
    }
    xf.prototype.doDropOnto = function() {};
    xf.prototype.doMouseMove = function() {
        if (this.isActive) {
            var a = this.diagram,
                b = a.lastInput;
            this.simulatedMouseMove(b.event, null, b.targetDiagram || null) || null === this.currentPart || null === this.draggedParts || (this.mayCopy() ? (a.currentCursor = "copy", Yf(this, !1), Kf(a, this.copiedParts), $f(this, this.copiedParts, !1), Pf(a, this.copiedParts)) : this.mayMove() ? (Sf(this), $f(this, this.draggedParts, !0)) : this.mayDragOut() ? (a.currentCursor = "no-drop", Yf(this, !1), $f(this, this.copiedParts, !1)) : Sf(this), dg(this, a.lastInput.documentPoint))
        }
    };
    xf.prototype.doMouseUp = function() {
        if (this.isActive) {
            var a = this.diagram,
                b = a.lastInput;
            if (!this.simulatedMouseUp(b.event, null, b.documentPoint, b.targetDiagram)) {
                var c = !1;
                (b = this.mayCopy()) && null !== this.copiedParts ? (Sf(this), Yf(this, !0), Kf(a, this.copiedParts), $f(this, this.copiedParts, !1), Pf(a, this.copiedParts), null !== this.copiedParts && a.Av(this.copiedParts.Zd())) : (c = !0, Sf(this), this.mayMove() && ($f(this, this.draggedParts, !0), dg(this, a.lastInput.documentPoint)));
                this.wn = !0;
                kg(this, a.lastInput.documentPoint);
                if (this.isActive) {
                    var d = b ? this.copiedParts.Zd() : this.draggedParts.Zd();
                    this.copiedParts = null;
                    if (c && null !== this.draggedParts)
                        for (c = this.draggedParts.iterator; c.next();) {
                            var e = c.key;
                            e instanceof U && (e = e.containingGroup, null === e || null === e.placeholder || this.draggedParts.contains(e) || e.placeholder.o())
                        }
                    a.Xa();
                    Pf(a, this.draggedParts);
                    this.transactionResult = b ? "Copy" : "Move";
                    a.aa(b ? "SelectionCopied" : "SelectionMoved", d)
                }
                this.stopTool()
            }
        }
    };
    xf.prototype.simulatedMouseMove = function(a, b, c) {
        if (null === If) return !1;
        var d = If.diagram;
        c instanceof P || (c = null);
        var e = Lf;
        c !== e && (null !== e && e !== d && (e.uf(), If.isDragOutStarted = !1, e = e.toolManager.findTool("Dragging"), null !== e && e.doSimulatedDragLeave()), Lf = c, null !== c && c !== d && (Vf(), e = c.toolManager.findTool("Dragging"), null !== e && (Qf.contains(e) || Qf.add(e), e.doSimulatedDragEnter())));
        if (null === c || c === d || !c.allowDrop || c.isReadOnly || !c.allowInsert) return !1;
        d = c.toolManager.findTool("Dragging");
        null !== d && (null !==
            a ? (void 0 !== a.targetTouches && (0 < a.targetTouches.length ? a = a.targetTouches[0] : 0 < a.changedTouches.length && (a = a.changedTouches[0])), b = c.getMouse(a)) : null === b && (b = new G), c.lastInput.documentPoint = b, c.lastInput.viewPoint = c.vt(b), c.lastInput.down = !1, c.lastInput.up = !1, d.doSimulatedDragOver());
        return !0
    };
    xf.prototype.simulatedMouseUp = function(a, b, c, d) {
        if (null === If) return !1;
        null === d && (d = b);
        b = Lf;
        var e = If.diagram;
        if (d !== b) {
            var f = b.toolManager.findTool("Dragging");
            if (null !== b && b !== e && null !== f) return b.uf(), If.isDragOutStarted = !1, f.doSimulatedDragLeave(), !1;
            Lf = d;
            b = d.toolManager.findTool("Dragging");
            null !== d && null !== b && (Vf(), Qf.contains(b) || Qf.add(b), b.doSimulatedDragEnter())
        }
        return null === d ? (If.doCancel(), !0) : d !== this.diagram ? (null !== a ? (void 0 !== a.targetTouches && (0 < a.targetTouches.length ? a = a.targetTouches[0] :
            0 < a.changedTouches.length && (a = a.changedTouches[0])), c = d.getMouse(a)) : null === c && (c = new G), d.lastInput.documentPoint = c, d.lastInput.viewPoint = d.vt(c), d.lastInput.down = !1, d.lastInput.up = !0, a = d.toolManager.findTool("Dragging"), null !== a && a.doSimulatedDrop(), a = If, null !== a && (d = a.mayCopy(), a.transactionResult = d ? "Copy" : "Move", a.stopTool()), !0) : !1
    };
    xf.prototype.mayCopy = function() {
        if (!this.isCopyEnabled) return !1;
        var a = this.diagram;
        if (a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.allowCopy || (ib ? !a.lastInput.alt : !a.lastInput.control)) return !1;
        for (a = a.selection.iterator; a.next();) {
            var b = a.value;
            if (b.dc() && b.canCopy()) return !0
        }
        return null !== this.draggedLink && this.dragsLink && this.draggedLink.canCopy() ? !0 : !1
    };
    xf.prototype.mayDragOut = function() {
        if (!this.isCopyEnabled) return !1;
        var a = this.diagram;
        if (!a.allowDragOut || !a.allowCopy || a.allowMove) return !1;
        for (a = a.selection.iterator; a.next();) {
            var b = a.value;
            if (b.dc() && b.canCopy()) return !0
        }
        return null !== this.draggedLink && this.dragsLink && this.draggedLink.canCopy() ? !0 : !1
    };
    xf.prototype.mayMove = function() {
        var a = this.diagram;
        if (a.isReadOnly || !a.allowMove) return !1;
        for (a = a.selection.iterator; a.next();) {
            var b = a.value;
            if (b.dc() && b.canMove()) return !0
        }
        return null !== this.draggedLink && this.dragsLink && this.draggedLink.canMove() ? !0 : !1
    };
    xf.prototype.computeBorder = function(a, b, c) {
        return this.wn || null === this.draggedParts || this.draggedParts.contains(a) ? null : c.assign(b)
    };
    xf.prototype.Uy = function() {
        return If
    };
    xf.prototype.mayDragIn = function() {
        var a = this.diagram;
        if (!a.allowDrop || a.isReadOnly || a.isModelReadOnly || !a.allowInsert) return !1;
        var b = If;
        return null === b || b.diagram.model.dataFormat !== a.model.dataFormat ? !1 : !0
    };
    xf.prototype.doSimulatedDragEnter = function() {
        if (this.mayDragIn()) {
            var a = this.diagram;
            a.animationManager.xd();
            og(a);
            a.animationManager.xd();
            a = If;
            null !== a && (a.diagram.currentCursor = "copy", a.diagram.Qi = !1)
        }
    };
    xf.prototype.doSimulatedDragLeave = function() {
        var a = If;
        null !== a && a.doSimulatedDragOut();
        this.doCancel()
    };
    xf.prototype.doSimulatedDragOver = function() {
        var a = this.diagram,
            b = If;
        null !== b && null !== b.draggedParts && this.mayDragIn() && (a.currentCursor = "copy", pg(this, b.draggedParts.Zd(), !1, a.firstInput), $f(this, this.copiedParts, !1), dg(this, a.lastInput.documentPoint))
    };
    xf.prototype.doSimulatedDrop = function() {
        var a = this.diagram,
            b = If;
        if (null !== b) {
            var c = b.diagram;
            b.wn = !0;
            Sf(this);
            this.mayDragIn() && (this.Aa("Drop"), pg(this, b.draggedParts.Zd(), !0, a.lastInput), $f(this, this.copiedParts, !1), null !== this.copiedParts && a.Av(this.copiedParts.Zd()), kg(this, a.lastInput.documentPoint), a.Xa(), b = a.selection, null !== this.copiedParts ? this.transactionResult = "ExternalCopy" : b = new F, this.copiedParts = null, a.doFocus(), a.aa("ExternalObjectsDropped", b, c), this.ug())
        }
    };

    function pg(a, b, c, d) {
        if (null === a.copiedParts) {
            var e = a.diagram;
            if (!e.isReadOnly && !e.isModelReadOnly) {
                e.skipsUndoManager = !c;
                e.partManager.addsToTemporaryLayer = !c;
                a.startPoint = d.documentPoint;
                c = e.Sj(b, e, !0);
                var f = N.alloc();
                Xf(b, f);
                d = f.x + f.width / 2;
                e = f.y + f.height / 2;
                N.free(f);
                f = a.ts;
                var g = new Lb,
                    h = G.alloc();
                for (b = b.iterator; b.next();) {
                    var k = b.value,
                        l = c.J(k);
                    k.dc() && k.canCopy() ? (k = k.location, h.h(f.x - (d - k.x), f.y - (e - k.y)), l.location = h, l.bc(), g.add(l, a.rd(h))) : l instanceof S && k.canCopy() && (Zf(l, f.x - d, f.y - e),
                        g.add(l, a.rd()))
                }
                G.free(h);
                a.copiedParts = g;
                Jf(a, g.Zd());
                null !== a.draggedLink && (c = a.draggedLink, d = c.routeBounds, Zf(c, a.startPoint.x - (d.x + d.width / 2), a.startPoint.y - (d.y + d.height / 2)))
            }
        }
    }
    xf.prototype.doSimulatedDragOut = function() {
        var a = this.diagram;
        a.Qi = !1;
        this.mayCopy() || this.mayMove() ? a.currentCursor = "" : a.currentCursor = "no-drop"
    };
    xf.prototype.computeMove = function(a, b, c, d) {
        c = this.diagram;
        return null !== c ? c.computeMove(a, b, this.dragOptions, d) : new G
    };
    pa.Object.defineProperties(xf.prototype, {
        isCopyEnabled: {
            get: function() {
                return this.Lc
            },
            set: function(a) {
                this.Lc = a
            }
        },
        copiesEffectiveCollection: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K = a
            }
        },
        dragOptions: {
            get: function() {
                return this.La
            },
            set: function(a) {
                this.La = a
            }
        },
        isGridSnapEnabled: {
            get: function() {
                return this.dragOptions.isGridSnapEnabled
            },
            set: function(a) {
                this.dragOptions.isGridSnapEnabled =
                    a
            }
        },
        isComplexRoutingRealtime: {
            get: function() {
                return this.Vb
            },
            set: function(a) {
                this.Vb = a
            }
        },
        isGridSnapRealtime: {
            get: function() {
                return this.dragOptions.isGridSnapRealtime
            },
            set: function(a) {
                this.dragOptions.isGridSnapRealtime = a
            }
        },
        gridSnapCellSize: {
            get: function() {
                return this.dragOptions.gridSnapCellSize
            },
            set: function(a) {
                null === this.diagram || this.dragOptions.gridSnapCellSize.A(a) || (a = a.I(), this.dragOptions.gridSnapCellSize =
                    a)
            }
        },
        gridSnapCellSpot: {
            get: function() {
                return this.dragOptions.gridSnapCellSpot
            },
            set: function(a) {
                this.dragOptions.gridSnapCellSpot.A(a) || (a = a.I(), this.dragOptions.gridSnapCellSpot = a)
            }
        },
        gridSnapOrigin: {
            get: function() {
                return this.dragOptions.gridSnapOrigin
            },
            set: function(a) {
                this.dragOptions.gridSnapOrigin.A(a) || (a = a.I(), this.dragOptions.gridSnapOrigin = a)
            }
        },
        dragsLink: {
            get: function() {
                return this.dragOptions.dragsLink
            },
            set: function(a) {
                this.dragOptions.dragsLink = a
            }
        },
        dragsTree: {
            get: function() {
                return this.dragOptions.dragsTree
            },
            set: function(a) {
                this.dragOptions.dragsTree = a
            }
        },
        currentPart: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da = a
            }
        },
        copiedParts: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        draggedParts: {
            get: function() {
                return this.Wa
            },
            set: function(a) {
                this.Wa = a
            }
        },
        draggingParts: {
            get: function() {
                return null !== this.copiedParts ? this.copiedParts.Zd() : null !== this.draggedParts ? this.draggedParts.Zd() : this.vg
            }
        },
        draggedLink: {
            get: function() {
                return this.diagram.draggedLink
            },
            set: function(a) {
                this.diagram.draggedLink = a
            }
        },
        isDragOutStarted: {
            get: function() {
                return this.Xc
            },
            set: function(a) {
                this.Xc = a
            }
        },
        startPoint: {
            get: function() {
                return this.ts
            },
            set: function(a) {
                this.ts.A(a) || this.ts.assign(a)
            }
        },
        delay: {
            get: function() {
                return this.Jk
            },
            set: function(a) {
                this.Jk = a
            }
        }
    });
    xf.prototype.getDraggingSource = xf.prototype.Uy;
    var Qf = null,
        If = null,
        Lf = null;
    xf.className = "DraggingTool";
    Qf = new E;
    Ta("draggingTool", function() {
        return this.findTool("Dragging")
    }, function(a) {
        vf(this, "Dragging", a, this.mouseMoveTools)
    });
    Ua.prototype.doCancel = function() {
        null !== If && If.doCancel();
        kf.prototype.doCancel.call(this)
    };

    function qg() {
        kf.call(this);
        this.vg = 100;
        this.da = !1;
        var a = new S,
            b = new V;
        b.isPanelMain = !0;
        b.stroke = "blue";
        a.add(b);
        b = new V;
        b.toArrow = "Standard";
        b.fill = "blue";
        b.stroke = "blue";
        a.add(b);
        a.layerName = "Tool";
        this.Em = a;
        a = new U;
        b = new V;
        b.portId = "";
        b.figure = "Rectangle";
        b.fill = null;
        b.stroke = "magenta";
        b.strokeWidth = 2;
        b.desiredSize = gc;
        a.add(b);
        a.selectable = !1;
        a.layerName = "Tool";
        this.Cm = a;
        this.Dm = b;
        a = new U;
        b = new V;
        b.portId = "";
        b.figure = "Rectangle";
        b.fill = null;
        b.stroke = "magenta";
        b.strokeWidth = 2;
        b.desiredSize = gc;
        a.add(b);
        a.selectable = !1;
        a.layerName = "Tool";
        this.vq = a;
        this.Yv = b;
        this.Xc = this.Lc = this.Wa = this.La = this.Vb = null;
        this.K = !0;
        this.Mx = new Lb;
        this.zm = this.gi = this.Bm = null
    }
    oa(qg, kf);
    qg.prototype.doStop = function() {
        this.diagram.uf();
        this.originalToPort = this.originalToNode = this.originalFromPort = this.originalFromNode = this.originalLink = null;
        this.validPortsCache.clear();
        this.targetPort = null
    };
    qg.prototype.copyPortProperties = function(a, b, c, d, e) {
        if (null !== a && null !== b && null !== c && null !== d) {
            var f = b.Ce(),
                g = L.alloc();
            g.width = b.naturalBounds.width * f;
            g.height = b.naturalBounds.height * f;
            d.desiredSize = g;
            L.free(g);
            e ? (d.toSpot = b.toSpot, d.toEndSegmentLength = b.toEndSegmentLength) : (d.fromSpot = b.fromSpot, d.fromEndSegmentLength = b.fromEndSegmentLength);
            c.locationSpot = dd;
            f = G.alloc();
            c.location = b.ma(dd, f);
            G.free(f);
            d.angle = b.Fi();
            null !== this.portTargeted && this.portTargeted(a, b, c, d, e)
        }
    };
    qg.prototype.setNoTargetPortProperties = function(a, b, c) {
        null !== b && (b.desiredSize = gc, b.fromSpot = Sc, b.toSpot = Sc);
        null !== a && (a.location = this.diagram.lastInput.documentPoint);
        null !== this.portTargeted && this.portTargeted(null, null, a, b, c)
    };
    qg.prototype.doMouseDown = function() {
        this.isActive && this.doMouseMove()
    };
    qg.prototype.doMouseMove = function() {
        if (this.isActive) {
            var a = this.diagram;
            this.targetPort = this.findTargetPort(this.isForwards);
            if (null !== this.targetPort && this.targetPort.part instanceof U) {
                var b = this.targetPort.part;
                this.isForwards ? this.copyPortProperties(b, this.targetPort, this.temporaryToNode, this.temporaryToPort, !0) : this.copyPortProperties(b, this.targetPort, this.temporaryFromNode, this.temporaryFromPort, !1)
            } else this.isForwards ? this.setNoTargetPortProperties(this.temporaryToNode, this.temporaryToPort,
                !0) : this.setNoTargetPortProperties(this.temporaryFromNode, this.temporaryFromPort, !1);
            (a.allowHorizontalScroll || a.allowVerticalScroll) && a.Ls(a.lastInput.viewPoint)
        }
    };
    qg.prototype.findValidLinkablePort = function(a, b) {
        if (null === a) return null;
        var c = a.part;
        if (!(c instanceof U)) return null;
        for (; null !== a;) {
            var d = b ? a.toLinkable : a.fromLinkable;
            if (!0 === d && (null !== a.portId || a instanceof U) && (b ? this.isValidTo(c, a) : this.isValidFrom(c, a))) return a;
            if (!1 === d) break;
            a = a.panel
        }
        return null
    };
    qg.prototype.findTargetPort = function(a) {
        var b = this.diagram,
            c = b.lastInput.documentPoint,
            d = this.portGravity;
        0 >= d && (d = .1);
        var e = this,
            f = b.mg(c, d, function(b) {
                return e.findValidLinkablePort(b, a)
            }, null, !0);
        d = Infinity;
        b = null;
        for (f = f.iterator; f.next();) {
            var g = f.value,
                h = g.part;
            if (h instanceof U) {
                var k = g.ma(dd, G.alloc()),
                    l = c.x - k.x,
                    m = c.y - k.y;
                G.free(k);
                k = l * l + m * m;
                k < d && (l = this.validPortsCache.J(g), null !== l ? l && (b = g, d = k) : a && this.isValidLink(this.originalFromNode, this.originalFromPort, h, g) || !a && this.isValidLink(h,
                    g, this.originalToNode, this.originalToPort) ? (this.validPortsCache.add(g, !0), b = g, d = k) : this.validPortsCache.add(g, !1))
            }
        }
        return null !== b && (c = b.part, c instanceof U && (null === c.layer || c.layer.allowLink)) ? b : null
    };
    qg.prototype.isValidFrom = function(a, b) {
        if (null === a || null === b) return this.isUnconnectedLinkValid;
        if (this.diagram.currentTool === this && (null !== a.layer && !a.layer.allowLink || !0 !== b.fromLinkable)) return !1;
        var c = b.fromMaxLinks;
        if (Infinity > c) {
            if (null !== this.originalLink && a === this.originalFromNode && b === this.originalFromPort) return !0;
            b = b.portId;
            null === b && (b = "");
            if (a.Rp(b).count >= c) return !1
        }
        return !0
    };
    qg.prototype.isValidTo = function(a, b) {
        if (null === a || null === b) return this.isUnconnectedLinkValid;
        if (this.diagram.currentTool === this && (null !== a.layer && !a.layer.allowLink || !0 !== b.toLinkable)) return !1;
        var c = b.toMaxLinks;
        if (Infinity > c) {
            if (null !== this.originalLink && a === this.originalToNode && b === this.originalToPort) return !0;
            b = b.portId;
            null === b && (b = "");
            if (a.ud(b).count >= c) return !1
        }
        return !0
    };
    qg.prototype.isInSameNode = function(a, b) {
        if (null === a || null === b) return !1;
        if (a === b) return !0;
        a = a.part;
        b = b.part;
        return null !== a && a === b
    };
    qg.prototype.isLinked = function(a, b) {
        if (null === a || null === b) return !1;
        var c = a.part;
        if (!(c instanceof U)) return !1;
        a = a.portId;
        null === a && (a = "");
        var d = b.part;
        if (!(d instanceof U)) return !1;
        b = b.portId;
        null === b && (b = "");
        for (b = d.ud(b); b.next();)
            if (d = b.value, d.fromNode === c && d.fromPortId === a) return !0;
        return !1
    };
    qg.prototype.isValidLink = function(a, b, c, d) {
        if (!this.isValidFrom(a, b) || !this.isValidTo(c, d) || !(null === b || null === d || (b.fromLinkableSelfNode && d.toLinkableSelfNode || !this.isInSameNode(b, d)) && (b.fromLinkableDuplicates && d.toLinkableDuplicates || !this.isLinked(b, d))) || null !== this.originalLink && (null !== a && this.isLabelDependentOnLink(a, this.originalLink) || null !== c && this.isLabelDependentOnLink(c, this.originalLink)) || null !== a && null !== c && (null === a.data && null !== c.data || null !== a.data && null === c.data) || !this.isValidCycle(a,
                c, this.originalLink)) return !1;
        if (null !== a) {
            var e = a.linkValidation;
            if (null !== e && !e(a, b, c, d, this.originalLink)) return !1
        }
        if (null !== c && (e = c.linkValidation, null !== e && !e(a, b, c, d, this.originalLink))) return !1;
        e = this.linkValidation;
        return null !== e ? e(a, b, c, d, this.originalLink) : !0
    };
    qg.prototype.isLabelDependentOnLink = function(a, b) {
        if (null === a) return !1;
        var c = a.labeledLink;
        if (null === c) return !1;
        if (c === b) return !0;
        var d = new F;
        d.add(a);
        return rg(this, c, b, d)
    };

    function rg(a, b, c, d) {
        if (b === c) return !0;
        var e = b.fromNode;
        if (null !== e && e.isLinkLabel && (d.add(e), rg(a, e.labeledLink, c, d))) return !0;
        b = b.toNode;
        return null !== b && b.isLinkLabel && (d.add(b), rg(a, b.labeledLink, c, d)) ? !0 : !1
    }
    qg.prototype.isValidCycle = function(a, b, c) {
        void 0 === c && (c = null);
        if (null === a || null === b) return this.isUnconnectedLinkValid;
        var d = this.diagram.validCycle;
        if (d !== sg) {
            if (d === tg) {
                d = c || this.temporaryLink;
                if (null !== d && !d.isTreeLink) return !0;
                for (d = b.linksConnected; d.next();) {
                    var e = d.value;
                    if (e !== c && e.isTreeLink && e.toNode === b) return !1
                }
                return !ug(this, a, b, c, !0)
            }
            if (d === vg) {
                d = c || this.temporaryLink;
                if (null !== d && !d.isTreeLink) return !0;
                for (d = a.linksConnected; d.next();)
                    if (e = d.value, e !== c && e.isTreeLink && e.fromNode ===
                        a) return !1;
                return !ug(this, a, b, c, !0)
            }
            if (d === wg) return a === b ? a = !0 : (d = new F, d.add(b), a = xg(this, d, a, b, c)), !a;
            if (d === yg) return !ug(this, a, b, c, !1);
            if (d === zg) return a === b ? a = !0 : (d = new F, d.add(b), a = Ag(this, d, a, b, c)), !a
        }
        return !0
    };

    function ug(a, b, c, d, e) {
        if (b === c) return !0;
        if (null === b || null === c) return !1;
        for (var f = b.linksConnected; f.next();) {
            var g = f.value;
            if (g !== d && (!e || g.isTreeLink) && g.toNode === b && (g = g.fromNode, g !== b && ug(a, g, c, d, e))) return !0
        }
        return !1
    }

    function xg(a, b, c, d, e) {
        if (c === d) return !0;
        if (null === c || null === d || b.contains(c)) return !1;
        b.add(c);
        for (var f = c.linksConnected; f.next();) {
            var g = f.value;
            if (g !== e && g.toNode === c && (g = g.fromNode, g !== c && xg(a, b, g, d, e))) return !0
        }
        return !1
    }

    function Ag(a, b, c, d, e) {
        if (c === d) return !0;
        if (null === c || null === d || b.contains(c)) return !1;
        b.add(c);
        for (var f = c.linksConnected; f.next();) {
            var g = f.value;
            if (g !== e) {
                var h = g.fromNode;
                g = g.toNode;
                h = h === c ? g : h;
                if (h !== c && Ag(a, b, h, d, e)) return !0
            }
        }
        return !1
    }
    pa.Object.defineProperties(qg.prototype, {
        portGravity: {
            get: function() {
                return this.vg
            },
            set: function(a) {
                0 <= a && (this.vg = a)
            }
        },
        isUnconnectedLinkValid: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da = a
            }
        },
        temporaryLink: {
            get: function() {
                return this.Em
            },
            set: function(a) {
                this.Em = a
            }
        },
        temporaryFromNode: {
            get: function() {
                return this.Cm
            },
            set: function(a) {
                this.Cm = a
            }
        },
        temporaryFromPort: {
            get: function() {
                return this.Dm
            },
            set: function(a) {
                this.Dm = a
            }
        },
        temporaryToNode: {
            get: function() {
                return this.vq
            },
            set: function(a) {
                this.vq = a
            }
        },
        temporaryToPort: {
            get: function() {
                return this.Yv
            },
            set: function(a) {
                this.Yv = a
            }
        },
        originalLink: {
            get: function() {
                return this.Vb
            },
            set: function(a) {
                this.Vb = a
            }
        },
        originalFromNode: {
            get: function() {
                return this.La
            },
            set: function(a) {
                this.La = a
            }
        },
        originalFromPort: {
            get: function() {
                return this.Wa
            },
            set: function(a) {
                this.Wa = a
            }
        },
        originalToNode: {
            get: function() {
                return this.Lc
            },
            set: function(a) {
                this.Lc = a
            }
        },
        originalToPort: {
            get: function() {
                return this.Xc
            },
            set: function(a) {
                this.Xc = a
            }
        },
        isForwards: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K = a
            }
        },
        validPortsCache: {
            get: function() {
                return this.Mx
            }
        },
        targetPort: {
            get: function() {
                return this.Bm
            },
            set: function(a) {
                this.Bm = a
            }
        },
        linkValidation: {
            get: function() {
                return this.gi
            },
            set: function(a) {
                this.gi = a
            }
        },
        portTargeted: {
            get: function() {
                return this.zm
            },
            set: function(a) {
                this.zm = a
            }
        }
    });
    qg.className = "LinkingBaseTool";

    function Hg() {
        qg.call(this);
        this.name = "Linking";
        this.u = {};
        this.l = null;
        this.L = Ig;
        this.Am = null
    }
    oa(Hg, qg);
    Hg.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly || !a.allowLink || !a.model.at() || !a.lastInput.left || a.currentTool !== this && !this.isBeyondDragSize() ? !1 : null !== this.findLinkablePort()
    };
    Hg.prototype.findLinkablePort = function() {
        var a = this.diagram,
            b = this.startObject;
        null === b && (b = a.Rb(a.firstInput.documentPoint, null, null));
        if (null === b || !(b.part instanceof U)) return null;
        a = this.direction;
        if (a === Ig || a === Jg) {
            var c = this.findValidLinkablePort(b, !1);
            if (null !== c) return this.isForwards = !0, c
        }
        if (a === Ig || a === Kg)
            if (b = this.findValidLinkablePort(b, !0), null !== b) return this.isForwards = !1, b;
        return null
    };
    Hg.prototype.doActivate = function() {
        var a = this.diagram,
            b = this.findLinkablePort();
        null !== b && (this.Aa(this.name), a.isMouseCaptured = !0, a.currentCursor = "pointer", this.isForwards ? (null === this.temporaryToNode || this.temporaryToNode.location.s() || (this.temporaryToNode.location = a.lastInput.documentPoint), this.originalFromPort = b, b = this.originalFromPort.part, b instanceof U && (this.originalFromNode = b), this.copyPortProperties(this.originalFromNode, this.originalFromPort, this.temporaryFromNode, this.temporaryFromPort,
            !1)) : (null === this.temporaryFromNode || this.temporaryFromNode.location.s() || (this.temporaryFromNode.location = a.lastInput.documentPoint), this.originalToPort = b, b = this.originalToPort.part, b instanceof U && (this.originalToNode = b), this.copyPortProperties(this.originalToNode, this.originalToPort, this.temporaryToNode, this.temporaryToPort, !0)), a.add(this.temporaryFromNode), a.add(this.temporaryToNode), null !== this.temporaryLink && (null !== this.temporaryFromNode && (this.temporaryLink.fromNode = this.temporaryFromNode),
            null !== this.temporaryToNode && (this.temporaryLink.toNode = this.temporaryToNode), this.temporaryLink.isTreeLink = this.isNewTreeLink(), this.temporaryLink.Qa(), a.add(this.temporaryLink)), this.isActive = !0)
    };
    Hg.prototype.doDeactivate = function() {
        this.isActive = !1;
        var a = this.diagram;
        a.remove(this.temporaryLink);
        a.remove(this.temporaryFromNode);
        a.remove(this.temporaryToNode);
        a.isMouseCaptured = !1;
        a.currentCursor = "";
        this.ug()
    };
    Hg.prototype.doStop = function() {
        qg.prototype.doStop.call(this);
        this.startObject = null
    };
    Hg.prototype.doMouseUp = function() {
        if (this.isActive) {
            var a = this.diagram,
                b = this.transactionResult = null,
                c = null,
                d = null,
                e = null,
                f = this.targetPort = this.findTargetPort(this.isForwards);
            if (null !== f) {
                var g = f.part;
                g instanceof U && (this.isForwards ? (null !== this.originalFromNode && (b = this.originalFromNode, c = this.originalFromPort), d = g, e = f) : (b = g, c = f, null !== this.originalToNode && (d = this.originalToNode, e = this.originalToPort)))
            } else this.isForwards ? null !== this.originalFromNode && this.isUnconnectedLinkValid && (b = this.originalFromNode,
                c = this.originalFromPort) : null !== this.originalToNode && this.isUnconnectedLinkValid && (d = this.originalToNode, e = this.originalToPort);
            null !== b || null !== d ? (g = this.insertLink(b, c, d, e), null !== g ? (null === f && (this.isForwards ? g.defaultToPoint = a.lastInput.documentPoint : g.defaultFromPoint = a.lastInput.documentPoint), a.allowSelect && a.select(g), this.transactionResult = this.name, a.aa("LinkDrawn", g)) : (a.model.Hu(), this.doNoLink(b, c, d, e))) : this.isForwards ? this.doNoLink(this.originalFromNode, this.originalFromPort, null, null) :
                this.doNoLink(null, null, this.originalToNode, this.originalToPort)
        }
        this.stopTool()
    };
    Hg.prototype.isNewTreeLink = function() {
        var a = this.archetypeLinkData;
        if (null === a) return !0;
        if (a instanceof S) return a.isTreeLink;
        var b = this.diagram;
        if (null === b) return !0;
        a = b.partManager.getLinkCategoryForData(a);
        b = b.partManager.findLinkTemplateForCategory(a);
        return null !== b ? b.isTreeLink : !0
    };
    Hg.prototype.insertLink = function(a, b, c, d) {
        return this.diagram.partManager.insertLink(a, b, c, d)
    };
    Hg.prototype.doNoLink = function() {};
    pa.Object.defineProperties(Hg.prototype, {
        archetypeLinkData: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        archetypeLabelNodeData: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        },
        direction: {
            get: function() {
                return this.L
            },
            set: function(a) {
                this.L = a
            }
        },
        startObject: {
            get: function() {
                return this.Am
            },
            set: function(a) {
                this.Am = a
            }
        }
    });
    var Ig = new D(Hg, "Either", 0),
        Jg = new D(Hg, "ForwardsOnly", 0),
        Kg = new D(Hg, "BackwardsOnly", 0);
    Hg.className = "LinkingTool";
    Hg.Either = Ig;
    Hg.ForwardsOnly = Jg;
    Hg.BackwardsOnly = Kg;

    function Mf() {
        qg.call(this);
        this.name = "Relinking";
        var a = new V;
        a.figure = "Diamond";
        a.desiredSize = ic;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.cursor = "pointer";
        a.segmentIndex = 0;
        this.l = a;
        a = new V;
        a.figure = "Diamond";
        a.desiredSize = ic;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.cursor = "pointer";
        a.segmentIndex = -1;
        this.u = a;
        this.Ya = null;
        this.Cw = new N
    }
    oa(Mf, qg);
    Mf.prototype.updateAdornments = function(a) {
        if (null !== a && a instanceof S) {
            var b = "RelinkFrom",
                c = null;
            if (a.isSelected && !this.diagram.isReadOnly) {
                var d = a.selectionObject;
                null !== d && a.canRelinkFrom() && a.actualBounds.s() && a.isVisible() && d.actualBounds.s() && d.rf() && (c = a.Vj(b), null === c && (c = this.makeAdornment(d, !1), a.kh(b, c)))
            }
            null === c && a.sf(b);
            b = "RelinkTo";
            c = null;
            a.isSelected && !this.diagram.isReadOnly && (d = a.selectionObject, null !== d && a.canRelinkTo() && a.actualBounds.s() && a.isVisible() && d.actualBounds.s() && d.rf() &&
                (c = a.Vj(b), null === c ? (c = this.makeAdornment(d, !0), a.kh(b, c)) : c.o()));
            null === c && a.sf(b)
        }
    };
    Mf.prototype.makeAdornment = function(a, b) {
        var c = new pf;
        c.type = W.Link;
        b = b ? this.toHandleArchetype : this.fromHandleArchetype;
        null !== b && c.add(b.copy());
        c.adornedObject = a;
        return c
    };
    Mf.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (a.isReadOnly || a.isModelReadOnly || !a.allowRelink || !a.model.at() || !a.lastInput.left) return !1;
        var b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkFrom");
        null === b && (b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkTo"));
        return null !== b
    };
    Mf.prototype.doActivate = function() {
        var a = this.diagram;
        if (null === this.originalLink) {
            var b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkFrom");
            null === b && (b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkTo"));
            if (null === b) return;
            var c = b.part;
            if (!(c instanceof pf && c.adornedPart instanceof S)) return;
            this.Ya = b;
            this.isForwards = null === c || "RelinkTo" === c.category;
            this.originalLink = c.adornedPart
        }
        this.Aa(this.name);
        a.isMouseCaptured = !0;
        a.currentCursor = "pointer";
        this.originalFromPort = this.originalLink.fromPort;
        this.originalFromNode = this.originalLink.fromNode;
        this.originalToPort = this.originalLink.toPort;
        this.originalToNode = this.originalLink.toNode;
        this.Cw.set(this.originalLink.actualBounds);
        null !== this.originalLink && 0 < this.originalLink.pointsCount && (null === this.originalLink.fromNode && (null !== this.temporaryFromPort && (this.temporaryFromPort.desiredSize = fc), null !== this.temporaryFromNode && (this.temporaryFromNode.location = this.originalLink.i(0))), null === this.originalLink.toNode && (null !== this.temporaryToPort &&
            (this.temporaryToPort.desiredSize = fc), null !== this.temporaryToNode && (this.temporaryToNode.location = this.originalLink.i(this.originalLink.pointsCount - 1))));
        this.copyPortProperties(this.originalFromNode, this.originalFromPort, this.temporaryFromNode, this.temporaryFromPort, !1);
        this.copyPortProperties(this.originalToNode, this.originalToPort, this.temporaryToNode, this.temporaryToPort, !0);
        a.add(this.temporaryFromNode);
        a.add(this.temporaryToNode);
        null !== this.temporaryLink && (null !== this.temporaryFromNode && (this.temporaryLink.fromNode =
            this.temporaryFromNode), null !== this.temporaryToNode && (this.temporaryLink.toNode = this.temporaryToNode), this.copyLinkProperties(this.originalLink, this.temporaryLink), this.temporaryLink.Qa(), a.add(this.temporaryLink));
        this.isActive = !0
    };
    Mf.prototype.copyLinkProperties = function(a, b) {
        if (null !== a && null !== b) {
            b.adjusting = a.adjusting;
            b.corner = a.corner;
            var c = a.curve;
            if (c === Lg || c === Mg) c = Ng;
            b.curve = c;
            b.curviness = a.curviness;
            b.isTreeLink = a.isTreeLink;
            b.points = a.points;
            b.routing = a.routing;
            b.smoothness = a.smoothness;
            b.fromSpot = a.fromSpot;
            b.fromEndSegmentLength = a.fromEndSegmentLength;
            b.fromShortLength = a.fromShortLength;
            b.toSpot = a.toSpot;
            b.toEndSegmentLength = a.toEndSegmentLength;
            b.toShortLength = a.toShortLength
        }
    };
    Mf.prototype.doDeactivate = function() {
        this.isActive = !1;
        var a = this.diagram;
        a.remove(this.temporaryLink);
        a.remove(this.temporaryFromNode);
        a.remove(this.temporaryToNode);
        a.isMouseCaptured = !1;
        a.currentCursor = "";
        this.ug()
    };
    Mf.prototype.doStop = function() {
        qg.prototype.doStop.call(this);
        this.Ya = null
    };
    Mf.prototype.doMouseUp = function() {
        if (this.isActive) {
            var a = this.diagram;
            this.transactionResult = null;
            var b = this.originalFromNode,
                c = this.originalFromPort,
                d = this.originalToNode,
                e = this.originalToPort,
                f = this.originalLink;
            this.targetPort = this.findTargetPort(this.isForwards);
            if (null !== this.targetPort) {
                var g = this.targetPort.part;
                g instanceof U && (this.isForwards ? (d = g, e = this.targetPort) : (b = g, c = this.targetPort))
            } else this.isUnconnectedLinkValid ? this.isForwards ? e = d = null : c = b = null : f = null;
            null !== f ? (this.reconnectLink(f,
                this.isForwards ? d : b, this.isForwards ? e : c, this.isForwards), null === this.targetPort && (this.isForwards ? f.defaultToPoint = a.lastInput.documentPoint : f.defaultFromPoint = a.lastInput.documentPoint, f.Qa()), a.allowSelect && (f.isSelected = !0), this.transactionResult = this.name, a.aa("LinkRelinked", f, this.isForwards ? this.originalToPort : this.originalFromPort)) : this.doNoRelink(this.originalLink, this.isForwards);
            this.originalLink.Zp(this.Cw)
        }
        this.stopTool()
    };
    Mf.prototype.reconnectLink = function(a, b, c, d) {
        c = null !== c && null !== c.portId ? c.portId : "";
        d ? (a.toNode = b, a.toPortId = c) : (a.fromNode = b, a.fromPortId = c);
        return !0
    };
    Mf.prototype.doNoRelink = function() {};

    function jg(a, b, c, d, e) {
        null !== b ? (a.copyPortProperties(b, c, a.temporaryFromNode, a.temporaryFromPort, !1), a.diagram.add(a.temporaryFromNode)) : a.diagram.remove(a.temporaryFromNode);
        null !== d ? (a.copyPortProperties(d, e, a.temporaryToNode, a.temporaryToPort, !0), a.diagram.add(a.temporaryToNode)) : a.diagram.remove(a.temporaryToNode)
    }
    pa.Object.defineProperties(Mf.prototype, {
        fromHandleArchetype: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        },
        toHandleArchetype: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        handle: {
            get: function() {
                return this.Ya
            }
        }
    });
    Mf.className = "RelinkingTool";
    Ta("linkingTool", function() {
        return this.findTool("Linking")
    }, function(a) {
        vf(this, "Linking", a, this.mouseMoveTools)
    });
    Ta("relinkingTool", function() {
        return this.findTool("Relinking")
    }, function(a) {
        vf(this, "Relinking", a, this.mouseDownTools)
    });

    function Og() {
        kf.call(this);
        this.name = "LinkReshaping";
        var a = new V;
        a.figure = "Rectangle";
        a.desiredSize = hc;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        this.l = a;
        a = new V;
        a.figure = "Diamond";
        a.desiredSize = ic;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.cursor = "move";
        this.u = a;
        this.K = 3;
        this.Et = this.Ya = null;
        this.ml = new G;
        this.Yr = new E
    }
    oa(Og, kf);
    Og.prototype.Yu = function(a) {
        return a && a.ds && 0 !== a.ds.value ? a.ds : Pg
    };
    Og.prototype.tm = function(a, b) {
        a.ds = b
    };
    Og.prototype.updateAdornments = function(a) {
        if (null !== a && a instanceof S) {
            var b = null;
            if (a.isSelected && !this.diagram.isReadOnly) {
                var c = a.path;
                null !== c && a.canReshape() && a.actualBounds.s() && a.isVisible() && c.actualBounds.s() && c.rf() && (b = a.Vj(this.name), null === b || b.zw !== a.pointsCount || b.Kw !== a.resegmentable) && (b = this.makeAdornment(c), null !== b && (b.zw = a.pointsCount, b.Kw = a.resegmentable, a.kh(this.name, b)))
            }
            null === b && a.sf(this.name)
        }
    };
    Og.prototype.makeAdornment = function(a) {
        var b = a.part,
            c = b.pointsCount,
            d = b.isOrthogonal,
            e = null;
        if (null !== b.points && 1 < c) {
            e = new pf;
            e.type = W.Link;
            c = b.firstPickIndex;
            var f = b.lastPickIndex,
                g = d ? 1 : 0;
            if (b.resegmentable && b.computeCurve() !== Qg)
                for (var h = c + g; h < f - g; h++) {
                    var k = this.makeResegmentHandle(a, h);
                    null !== k && (k.segmentIndex = h, k.segmentFraction = .5, k.fromMaxLinks = 999, e.add(k))
                }
            for (g = c + 1; g < f; g++)
                if (h = this.makeHandle(a, g), null !== h) {
                    h.segmentIndex = g;
                    if (g !== c)
                        if (g === c + 1 && d) {
                            k = b.i(c);
                            var l = b.i(c + 1);
                            H.w(k.x, l.x) &&
                                H.w(k.y, l.y) && (l = b.i(c - 1));
                            H.w(k.x, l.x) ? (this.tm(h, Rg), h.cursor = "n-resize") : H.w(k.y, l.y) && (this.tm(h, Sg), h.cursor = "w-resize")
                        } else g === f - 1 && d ? (k = b.i(f - 1), l = b.i(f), H.w(k.x, l.x) && H.w(k.y, l.y) && (k = b.i(f + 1)), H.w(k.x, l.x) ? (this.tm(h, Rg), h.cursor = "n-resize") : H.w(k.y, l.y) && (this.tm(h, Sg), h.cursor = "w-resize")) : g !== f && (this.tm(h, Tg), h.cursor = "move");
                    e.add(h)
                } e.adornedObject = a
        }
        return e
    };
    Og.prototype.makeHandle = function() {
        var a = this.handleArchetype;
        return null === a ? null : a.copy()
    };
    Og.prototype.makeResegmentHandle = function() {
        var a = this.midHandleArchetype;
        return null === a ? null : a.copy()
    };
    Og.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return !a.isReadOnly && a.allowReshape && a.lastInput.left ? null !== this.findToolHandleAt(a.firstInput.documentPoint, this.name) : !1
    };
    Og.prototype.doActivate = function() {
        var a = this.diagram;
        this.Ya = this.findToolHandleAt(a.firstInput.documentPoint, this.name);
        if (null !== this.Ya) {
            var b = this.Ya.part.adornedPart;
            if (b instanceof S) {
                this.Et = b;
                a.isMouseCaptured = !0;
                this.Aa(this.name);
                if (b.resegmentable && 999 === this.Ya.fromMaxLinks) {
                    var c = b.points.copy(),
                        d = this.getResegmentingPoint();
                    c.Jb(this.Ya.segmentIndex + 1, d);
                    b.isOrthogonal && c.Jb(this.Ya.segmentIndex + 1, d);
                    b.points = c;
                    b.Kb();
                    b.updateAdornments();
                    this.Ya = this.findToolHandleAt(a.firstInput.documentPoint,
                        this.name);
                    if (null === this.Ya) {
                        this.doDeactivate();
                        return
                    }
                }
                this.ml = b.i(this.Ya.segmentIndex);
                this.Yr = b.points.copy();
                this.isActive = !0
            }
        }
    };
    Og.prototype.doDeactivate = function() {
        this.ug();
        this.Et = this.Ya = null;
        this.isActive = this.diagram.isMouseCaptured = !1
    };
    Og.prototype.doCancel = function() {
        var a = this.adornedLink;
        null !== a && (a.points = this.Yr);
        this.stopTool()
    };
    Og.prototype.getResegmentingPoint = function() {
        return this.handle.ma(dd)
    };
    Og.prototype.doMouseMove = function() {
        var a = this.diagram;
        this.isActive && (a = this.computeReshape(a.lastInput.documentPoint), this.reshape(a))
    };
    Og.prototype.doMouseUp = function() {
        var a = this.diagram;
        if (this.isActive) {
            var b = this.computeReshape(a.lastInput.documentPoint);
            this.reshape(b);
            b = this.adornedLink;
            if (null !== b && b.resegmentable) {
                var c = this.handle.segmentIndex,
                    d = b.i(c - 1),
                    e = b.i(c),
                    f = b.i(c + 1);
                if (b.isOrthogonal) {
                    if (c > b.firstPickIndex + 1 && c < b.lastPickIndex - 1) {
                        var g = b.i(c - 2);
                        if (Math.abs(d.x - e.x) < this.resegmentingDistance && Math.abs(d.y - e.y) < this.resegmentingDistance && (Ug(this, g, d, e, f, !0) || Ug(this, g, d, e, f, !1))) {
                            var h = b.points.copy();
                            Ug(this, g, d,
                                e, f, !0) ? (h.jd(c - 2, new G(g.x, (f.y + g.y) / 2)), h.jd(c + 1, new G(f.x, (f.y + g.y) / 2))) : (h.jd(c - 2, new G((f.x + g.x) / 2, g.y)), h.jd(c + 1, new G((f.x + g.x) / 2, f.y)));
                            h.mb(c);
                            h.mb(c - 1);
                            b.points = h;
                            b.Kb()
                        } else g = b.i(c + 2), Math.abs(e.x - f.x) < this.resegmentingDistance && Math.abs(e.y - f.y) < this.resegmentingDistance && (Ug(this, d, e, f, g, !0) || Ug(this, d, e, f, g, !1)) && (h = b.points.copy(), Ug(this, d, e, f, g, !0) ? (h.jd(c - 1, new G(d.x, (d.y + g.y) / 2)), h.jd(c + 2, new G(g.x, (d.y + g.y) / 2))) : (h.jd(c - 1, new G((d.x + g.x) / 2, d.y)), h.jd(c + 2, new G((d.x + g.x) / 2, g.y))),
                            h.mb(c + 1), h.mb(c), b.points = h, b.Kb())
                    }
                } else g = G.alloc(), H.Mi(d.x, d.y, f.x, f.y, e.x, e.y, g) && g.Be(e) < this.resegmentingDistance * this.resegmentingDistance && (d = b.points.copy(), d.mb(c), b.points = d, b.Kb()), G.free(g)
            }
            a.Xa();
            this.transactionResult = this.name;
            a.aa("LinkReshaped", this.adornedLink, this.Yr)
        }
        this.stopTool()
    };

    function Ug(a, b, c, d, e, f) {
        return f ? Math.abs(b.y - c.y) < a.resegmentingDistance && Math.abs(c.y - d.y) < a.resegmentingDistance && Math.abs(d.y - e.y) < a.resegmentingDistance : Math.abs(b.x - c.x) < a.resegmentingDistance && Math.abs(c.x - d.x) < a.resegmentingDistance && Math.abs(d.x - e.x) < a.resegmentingDistance
    }
    Og.prototype.reshape = function(a) {
        var b = this.adornedLink;
        b.zh();
        var c = this.handle.segmentIndex,
            d = this.Yu(this.handle);
        if (b.isOrthogonal)
            if (c === b.firstPickIndex + 1) c = b.firstPickIndex + 1, d === Rg ? (b.M(c, b.i(c - 1).x, a.y), b.M(c + 1, b.i(c + 2).x, a.y)) : d === Sg && (b.M(c, a.x, b.i(c - 1).y), b.M(c + 1, a.x, b.i(c + 2).y));
            else if (c === b.lastPickIndex - 1) c = b.lastPickIndex - 1, d === Rg ? (b.M(c - 1, b.i(c - 2).x, a.y), b.M(c, b.i(c + 1).x, a.y)) : d === Sg && (b.M(c - 1, a.x, b.i(c - 2).y), b.M(c, a.x, b.i(c + 1).y));
        else {
            d = c;
            var e = b.i(d),
                f = b.i(d - 1),
                g = b.i(d + 1);
            H.w(f.x,
                e.x) && H.w(e.y, g.y) ? (H.w(f.x, b.i(d - 2).x) && !H.w(f.y, b.i(d - 2).y) ? (b.m(d, a.x, f.y), c++, d++) : b.M(d - 1, a.x, f.y), H.w(g.y, b.i(d + 2).y) && !H.w(g.x, b.i(d + 2).x) ? b.m(d + 1, g.x, a.y) : b.M(d + 1, g.x, a.y)) : H.w(f.y, e.y) && H.w(e.x, g.x) ? (H.w(f.y, b.i(d - 2).y) && !H.w(f.x, b.i(d - 2).x) ? (b.m(d, f.x, a.y), c++, d++) : b.M(d - 1, f.x, a.y), H.w(g.x, b.i(d + 2).x) && !H.w(g.y, b.i(d + 2).y) ? b.m(d + 1, a.x, g.y) : b.M(d + 1, a.x, g.y)) : H.w(f.x, e.x) && H.w(e.x, g.x) ? (H.w(f.x, b.i(d - 2).x) && !H.w(f.y, b.i(d - 2).y) ? (b.m(d, a.x, f.y), c++, d++) : b.M(d - 1, a.x, f.y), H.w(g.x, b.i(d + 2).x) &&
                !H.w(g.y, b.i(d + 2).y) ? b.m(d + 1, a.x, g.y) : b.M(d + 1, a.x, g.y)) : H.w(f.y, e.y) && H.w(e.y, g.y) && (H.w(f.y, b.i(d - 2).y) && !H.w(f.x, b.i(d - 2).x) ? (b.m(d, f.x, a.y), c++, d++) : b.M(d - 1, f.x, a.y), H.w(g.y, b.i(d + 2).y) && !H.w(g.x, b.i(d + 2).x) ? b.m(d + 1, g.x, a.y) : b.M(d + 1, g.x, a.y));
            b.M(c, a.x, a.y)
        } else b.M(c, a.x, a.y), d = b.fromNode, e = b.fromPort, null !== d && (f = d.findVisibleNode(), null !== f && f !== d && (d = f, e = d.port)), 1 === c && b.computeSpot(!0, e).mc() && (f = e.ma(dd, G.alloc()), d = b.getLinkPointFromPoint(d, e, f, a, !0, G.alloc()), b.M(0, d.x, d.y), G.free(f),
            G.free(d)), d = b.toNode, e = b.toPort, null !== d && (f = d.findVisibleNode(), null !== f && f !== d && (d = f, e = d.port)), c === b.pointsCount - 2 && b.computeSpot(!1, e).mc() && (c = e.ma(dd, G.alloc()), a = b.getLinkPointFromPoint(d, e, c, a, !1, G.alloc()), b.M(b.pointsCount - 1, a.x, a.y), G.free(c), G.free(a));
        b.lf()
    };
    Og.prototype.computeReshape = function(a) {
        var b = this.adornedLink,
            c = this.handle.segmentIndex;
        switch (this.Yu(this.handle)) {
            case Tg:
                return a;
            case Rg:
                return new G(b.i(c).x, a.y);
            case Sg:
                return new G(a.x, b.i(c).y);
            default:
            case Pg:
                return b.i(c)
        }
    };
    pa.Object.defineProperties(Og.prototype, {
        handleArchetype: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        },
        midHandleArchetype: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        handle: {
            get: function() {
                return this.Ya
            }
        },
        adornedLink: {
            get: function() {
                return this.Et
            }
        },
        resegmentingDistance: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K =
                    a
            }
        },
        originalPoint: {
            get: function() {
                return this.ml
            }
        },
        originalPoints: {
            get: function() {
                return this.Yr
            }
        }
    });
    Og.prototype.setReshapingBehavior = Og.prototype.tm;
    Og.prototype.getReshapingBehavior = Og.prototype.Yu;
    var Pg = new D(Og, "None", 0),
        Sg = new D(Og, "Horizontal", 1),
        Rg = new D(Og, "Vertical", 2),
        Tg = new D(Og, "All", 3);
    Og.className = "LinkReshapingTool";
    Og.None = Pg;
    Og.Horizontal = Sg;
    Og.Vertical = Rg;
    Og.All = Tg;
    Ta("linkReshapingTool", function() {
        return this.findTool("LinkReshaping")
    }, function(a) {
        vf(this, "LinkReshaping", a, this.mouseDownTools)
    });

    function Vg() {
        kf.call(this);
        this.name = "Resizing";
        this.Of = (new L(1, 1)).freeze();
        this.Nf = (new L(9999, 9999)).freeze();
        this.Ag = (new L(NaN, NaN)).freeze();
        this.u = !1;
        this.Wb = null;
        var a = new V;
        a.alignmentFocus = dd;
        a.figure = "Rectangle";
        a.desiredSize = hc;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.strokeWidth = 1;
        a.cursor = "pointer";
        this.l = a;
        this.Ya = null;
        this.ml = new G;
        this.Bw = new L;
        this.Go = new G;
        this.Vt = new L(0, 0);
        this.Ut = new L(Infinity, Infinity);
        this.Tt = new L(1, 1);
        this.yw = !0
    }
    oa(Vg, kf);
    Vg.prototype.updateAdornments = function(a) {
        if (!(null === a || a instanceof S)) {
            if (a.isSelected && !this.diagram.isReadOnly) {
                var b = a.resizeObject,
                    c = a.Vj(this.name);
                if (null !== b && a.canResize() && a.actualBounds.s() && a.isVisible() && b.actualBounds.s() && b.rf()) {
                    if (null === c || c.adornedObject !== b) c = this.makeAdornment(b);
                    if (null !== c) {
                        b = b.Fi();
                        ng(a) && this.updateResizeHandles(c, b);
                        a.kh(this.name, c);
                        return
                    }
                }
            }
            a.sf(this.name)
        }
    };
    Vg.prototype.makeAdornment = function(a) {
        var b = a.part.resizeAdornmentTemplate;
        if (null === b) {
            b = new pf;
            b.type = W.Spot;
            b.locationSpot = dd;
            var c = new Wg;
            c.isPanelMain = !0;
            b.add(c);
            b.add(this.makeHandle(a, Tc));
            b.add(this.makeHandle(a, bd));
            b.add(this.makeHandle(a, hd));
            b.add(this.makeHandle(a, fd));
            b.add(this.makeHandle(a, Jd));
            b.add(this.makeHandle(a, Sd));
            b.add(this.makeHandle(a, Td));
            b.add(this.makeHandle(a, Rd))
        } else if (Xg(b), b = b.copy(), null === b) return null;
        b.adornedObject = a;
        return b
    };
    Vg.prototype.makeHandle = function(a, b) {
        a = this.handleArchetype;
        if (null === a) return null;
        a = a.copy();
        a.alignment = b;
        return a
    };
    Vg.prototype.updateResizeHandles = function(a, b) {
        if (null !== a)
            if (!a.alignment.Lb() && ("pointer" === a.cursor || 0 < a.cursor.indexOf("resize"))) a: {
                var c = a.alignment;c.mc() && (c = dd);
                if (0 >= c.x) b = 0 >= c.y ? b + 225 : 1 <= c.y ? b + 135 : b + 180;
                else if (1 <= c.x) 0 >= c.y ? b += 315 : 1 <= c.y && (b += 45);
                else if (0 >= c.y) b += 270;
                else if (1 <= c.y) b += 90;
                else break a;0 > b ? b += 360 : 360 <= b && (b -= 360);a.cursor = 22.5 > b ? "e-resize" : 67.5 > b ? "se-resize" : 112.5 > b ? "s-resize" : 157.5 > b ? "sw-resize" : 202.5 > b ? "w-resize" : 247.5 > b ? "nw-resize" : 292.5 > b ? "n-resize" : 337.5 > b ? "ne-resize" : "e-resize"
            }
        else if (a instanceof W)
            for (a = a.elements; a.next();) this.updateResizeHandles(a.value, b)
    };
    Vg.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return !a.isReadOnly && a.allowResize && a.lastInput.left ? null !== this.findToolHandleAt(a.firstInput.documentPoint, this.name) : !1
    };
    Vg.prototype.doActivate = function() {
        var a = this.diagram;
        this.Ya = this.findToolHandleAt(a.firstInput.documentPoint, this.name);
        null !== this.Ya && (this.Wb = this.Ya.part.adornedObject, this.ml.set(this.adornedObject.ma(this.handle.alignment.lv())), this.Go.set(this.Wb.part.location), this.Bw.set(this.Wb.desiredSize), this.Tt = this.computeCellSize(), this.Vt = this.computeMinSize(), this.Ut = this.computeMaxSize(), a.isMouseCaptured = !0, this.yw = a.animationManager.isEnabled, a.animationManager.isEnabled = !1, this.Aa(this.name),
            this.isActive = !0)
    };
    Vg.prototype.doDeactivate = function() {
        var a = this.diagram;
        this.ug();
        this.Wb = this.Ya = null;
        this.isActive = a.isMouseCaptured = !1;
        a.animationManager.isEnabled = this.yw
    };
    Vg.prototype.doCancel = function() {
        null !== this.adornedObject && (this.adornedObject.desiredSize = this.originalDesiredSize, this.adornedObject.part.location = this.originalLocation);
        this.stopTool()
    };
    Vg.prototype.doMouseMove = function() {
        var a = this.diagram;
        if (this.isActive) {
            var b = this.Vt,
                c = this.Ut,
                d = this.Tt,
                e = this.adornedObject.Ts(a.lastInput.documentPoint, G.alloc()),
                f = this.computeReshape();
            b = this.computeResize(e, this.handle.alignment, b, c, d, f);
            this.resize(b);
            a.hd();
            G.free(e)
        }
    };
    Vg.prototype.doMouseUp = function() {
        var a = this.diagram;
        if (this.isActive) {
            var b = this.Vt,
                c = this.Ut,
                d = this.Tt,
                e = this.adornedObject.Ts(a.lastInput.documentPoint, G.alloc()),
                f = this.computeReshape();
            b = this.computeResize(e, this.handle.alignment, b, c, d, f);
            this.resize(b);
            G.free(e);
            a.Xa();
            this.transactionResult = this.name;
            a.aa("PartResized", this.adornedObject, this.originalDesiredSize)
        }
        this.stopTool()
    };
    Vg.prototype.resize = function(a) {
        var b = this.diagram,
            c = this.adornedObject,
            d = c.part;
        c.desiredSize = a.size;
        d.bc();
        a = this.adornedObject.ma(this.handle.alignment.lv());
        d instanceof hg ? (c = new E, c.add(d), b.moveParts(c, this.ml.copy().Yd(a), !0)) : d.location = d.location.copy().Yd(a).add(this.ml)
    };
    Vg.prototype.computeResize = function(a, b, c, d, e, f) {
        b.mc() && (b = dd);
        var g = this.adornedObject.naturalBounds,
            h = g.x,
            k = g.y,
            l = g.x + g.width,
            m = g.y + g.height,
            n = 1;
        if (!f) {
            n = g.width;
            var p = g.height;
            0 >= n && (n = 1);
            0 >= p && (p = 1);
            n = p / n
        }
        p = G.alloc();
        H.Sp(a.x, a.y, h, k, e.width, e.height, p);
        a = g.copy();
        0 >= b.x ? 0 >= b.y ? (a.x = Math.max(p.x, l - d.width), a.x = Math.min(a.x, l - c.width), a.width = Math.max(l - a.x, c.width), a.y = Math.max(p.y, m - d.height), a.y = Math.min(a.y, m - c.height), a.height = Math.max(m - a.y, c.height), f || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n *
            a.width, d.height), c.height), a.width = a.height / n) : (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width), a.x = l - a.width, a.y = m - a.height)) : 1 <= b.y ? (a.x = Math.max(p.x, l - d.width), a.x = Math.min(a.x, l - c.width), a.width = Math.max(l - a.x, c.width), a.height = Math.max(Math.min(p.y - k, d.height), c.height), f || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n) : (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width), a.x = l - a.width)) : (a.x =
            Math.max(p.x, l - d.width), a.x = Math.min(a.x, l - c.width), a.width = l - a.x, f || (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n, a.y = k + .5 * (m - k - a.height))) : 1 <= b.x ? 0 >= b.y ? (a.width = Math.max(Math.min(p.x - h, d.width), c.width), a.y = Math.max(p.y, m - d.height), a.y = Math.min(a.y, m - c.height), a.height = Math.max(m - a.y, c.height), f || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n) : (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width),
            a.y = m - a.height)) : 1 <= b.y ? (a.width = Math.max(Math.min(p.x - h, d.width), c.width), a.height = Math.max(Math.min(p.y - k, d.height), c.height), f || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n) : (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width))) : (a.width = Math.max(Math.min(p.x - h, d.width), c.width), f || (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n, a.y = k + .5 * (m - k - a.height))) : 0 >= b.y ? (a.y = Math.max(p.y, m - d.height),
            a.y = Math.min(a.y, m - c.height), a.height = m - a.y, f || (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width, a.x = h + .5 * (l - h - a.width))) : 1 <= b.y && (a.height = Math.max(Math.min(p.y - k, d.height), c.height), f || (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width, a.x = h + .5 * (l - h - a.width)));
        G.free(p);
        return a
    };
    Vg.prototype.computeReshape = function() {
        var a = Yg;
        this.adornedObject instanceof V && (a = Zg(this.adornedObject));
        return !(a === $g || this.diagram.lastInput.shift)
    };
    Vg.prototype.computeMinSize = function() {
        var a = this.adornedObject.minSize.copy(),
            b = this.minSize;
        !isNaN(b.width) && b.width > a.width && (a.width = b.width);
        !isNaN(b.height) && b.height > a.height && (a.height = b.height);
        return a
    };
    Vg.prototype.computeMaxSize = function() {
        var a = this.adornedObject.maxSize.copy(),
            b = this.maxSize;
        !isNaN(b.width) && b.width < a.width && (a.width = b.width);
        !isNaN(b.height) && b.height < a.height && (a.height = b.height);
        return a
    };
    Vg.prototype.computeCellSize = function() {
        var a = new L(NaN, NaN),
            b = this.adornedObject.part;
        null !== b && (b = b.resizeCellSize, !isNaN(b.width) && 0 < b.width && (a.width = b.width), !isNaN(b.height) && 0 < b.height && (a.height = b.height));
        b = this.cellSize;
        isNaN(a.width) && !isNaN(b.width) && 0 < b.width && (a.width = b.width);
        isNaN(a.height) && !isNaN(b.height) && 0 < b.height && (a.height = b.height);
        b = this.diagram;
        (isNaN(a.width) || isNaN(a.height)) && b && (b = b.grid, null !== b && b.visible && this.isGridSnapEnabled && (b = b.gridCellSize, isNaN(a.width) &&
            !isNaN(b.width) && 0 < b.width && (a.width = b.width), isNaN(a.height) && !isNaN(b.height) && 0 < b.height && (a.height = b.height)));
        if (isNaN(a.width) || 0 === a.width || Infinity === a.width) a.width = 1;
        if (isNaN(a.height) || 0 === a.height || Infinity === a.height) a.height = 1;
        return a
    };
    pa.Object.defineProperties(Vg.prototype, {
        handleArchetype: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        },
        handle: {
            get: function() {
                return this.Ya
            }
        },
        adornedObject: {
            get: function() {
                return this.Wb
            },
            set: function(a) {
                this.Wb = a
            }
        },
        minSize: {
            get: function() {
                return this.Of
            },
            set: function(a) {
                if (!this.Of.A(a)) {
                    var b = a.width;
                    isNaN(b) && (b = 0);
                    a = a.height;
                    isNaN(a) && (a = 0);
                    this.Of.h(b, a)
                }
            }
        },
        maxSize: {
            get: function() {
                return this.Nf
            },
            set: function(a) {
                if (!this.Nf.A(a)) {
                    var b = a.width;
                    isNaN(b) && (b = Infinity);
                    a = a.height;
                    isNaN(a) && (a = Infinity);
                    this.Nf.h(b, a)
                }
            }
        },
        cellSize: {
            get: function() {
                return this.Ag
            },
            set: function(a) {
                this.Ag.A(a) || this.Ag.assign(a)
            }
        },
        isGridSnapEnabled: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        originalDesiredSize: {
            get: function() {
                return this.Bw
            }
        },
        originalLocation: {
            get: function() {
                return this.Go
            }
        }
    });
    Vg.className = "ResizingTool";
    Ta("resizingTool", function() {
        return this.findTool("Resizing")
    }, function(a) {
        vf(this, "Resizing", a, this.mouseDownTools)
    });

    function ah() {
        kf.call(this);
        this.name = "Rotating";
        this.La = 45;
        this.da = 2;
        this.Go = new G;
        this.Wb = null;
        var a = new V;
        a.figure = "Ellipse";
        a.desiredSize = ic;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.strokeWidth = 1;
        a.cursor = "pointer";
        this.l = a;
        this.Ya = null;
        this.Aw = 0;
        this.mu = new G(NaN, NaN);
        this.u = 0;
        this.K = 50
    }
    oa(ah, kf);
    ah.prototype.updateAdornments = function(a) {
        if (null !== a) {
            if (a.wh()) {
                var b = a.rotateObject;
                if (b === a || b === a.path || b.isPanelMain) return
            }
            if (a.isSelected && !this.diagram.isReadOnly && (b = a.rotateObject, null !== b && a.canRotate() && a.actualBounds.s() && a.isVisible() && b.actualBounds.s() && b.rf())) {
                var c = a.Vj(this.name);
                if (null === c || c.adornedObject !== b) c = this.makeAdornment(b);
                if (null !== c) {
                    c.angle = b.Fi();
                    null === c.placeholder && (c.location = this.computeAdornmentLocation(b));
                    a.kh(this.name, c);
                    return
                }
            }
            a.sf(this.name)
        }
    };
    ah.prototype.makeAdornment = function(a) {
        var b = a.part.rotateAdornmentTemplate;
        if (null === b) {
            b = new pf;
            b.type = W.Position;
            b.locationSpot = dd;
            var c = this.handleArchetype;
            null !== c && b.add(c.copy())
        } else if (Xg(b), b = b.copy(), null === b) return null;
        b.adornedObject = a;
        return b
    };
    ah.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return !a.isReadOnly && a.allowRotate && a.lastInput.left ? null !== this.findToolHandleAt(a.firstInput.documentPoint, this.name) : !1
    };
    ah.prototype.doActivate = function() {
        var a = this.diagram;
        this.Ya = this.findToolHandleAt(a.firstInput.documentPoint, this.name);
        null !== this.Ya && (this.Wb = this.Ya.part.adornedObject, this.Aw = this.Wb.angle, this.mu = this.computeRotationPoint(this.Wb), this.Go = this.adornedObject.part.location.copy(), a.isMouseCaptured = !0, a.delaysLayout = !0, this.Aa(this.name), this.isActive = !0)
    };
    ah.prototype.computeRotationPoint = function(a) {
        var b = a.part,
            c = b.locationObject;
        return b.rotationSpot.hb() ? a.ma(b.rotationSpot) : a === b || a === c ? c.ma(b.locationSpot) : a.ma(dd)
    };
    ah.prototype.computeAdornmentLocation = function(a) {
        var b = this.rotationPoint;
        b.s() || (b = this.computeRotationPoint(a));
        b = a.Ts(b);
        var c = this.handleAngle;
        0 > c ? c += 360 : 360 <= c && (c -= 360);
        c = Math.round(45 * Math.round(c / 45));
        var d = this.handleDistance;
        0 === c ? b.x = a.naturalBounds.width + d : 45 === c ? (b.x = a.naturalBounds.width + d, b.y = a.naturalBounds.height + d) : 90 === c ? b.y = a.naturalBounds.height + d : 135 === c ? (b.x = -d, b.y = a.naturalBounds.height + d) : 180 === c ? b.x = -d : 225 === c ? (b.x = -d, b.y = -d) : 270 === c ? b.y = -d : 315 === c && (b.x = a.naturalBounds.width +
            d, b.y = -d);
        return a.ma(b)
    };
    ah.prototype.doDeactivate = function() {
        var a = this.diagram;
        this.ug();
        this.Wb = this.Ya = null;
        this.mu = new G(NaN, NaN);
        this.isActive = a.isMouseCaptured = !1
    };
    ah.prototype.doCancel = function() {
        this.diagram.delaysLayout = !1;
        this.rotate(this.originalAngle);
        this.stopTool()
    };
    ah.prototype.doMouseMove = function() {
        var a = this.diagram;
        this.isActive && (a = this.computeRotate(a.lastInput.documentPoint), this.rotate(a))
    };
    ah.prototype.doMouseUp = function() {
        var a = this.diagram;
        if (this.isActive) {
            a.delaysLayout = !1;
            var b = this.computeRotate(a.lastInput.documentPoint);
            this.rotate(b);
            a.Xa();
            this.transactionResult = this.name;
            a.aa("PartRotated", this.Wb, this.originalAngle)
        }
        this.stopTool()
    };
    ah.prototype.rotate = function(a) {
        var b = this.adornedObject;
        if (null !== b) {
            b.angle = a;
            b = b.part;
            b.bc();
            var c = b.locationObject,
                d = b.rotateObject;
            if (c === d || c.pg(d)) c = this.Go.copy(), b.location = c.Yd(this.rotationPoint).rotate(a - this.originalAngle).add(this.rotationPoint)
        }
    };
    ah.prototype.computeRotate = function(a) {
        a = this.rotationPoint.Va(a) - this.handleAngle;
        var b = this.Wb.panel;
        null !== b && (a -= b.Fi());
        360 <= a ? a -= 360 : 0 > a && (a += 360);
        b = Math.min(Math.abs(this.snapAngleMultiple), 180);
        var c = Math.min(Math.abs(this.snapAngleEpsilon), b / 2);
        !this.diagram.lastInput.shift && 0 < b && 0 < c && (a % b < c ? a = Math.floor(a / b) * b : a % b > b - c && (a = (Math.floor(a / b) + 1) * b));
        360 <= a ? a -= 360 : 0 > a && (a += 360);
        return a
    };
    pa.Object.defineProperties(ah.prototype, {
        handleArchetype: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        },
        handle: {
            get: function() {
                return this.Ya
            }
        },
        adornedObject: {
            get: function() {
                return this.Wb
            },
            set: function(a) {
                this.Wb = a
            }
        },
        snapAngleMultiple: {
            get: function() {
                return this.La
            },
            set: function(a) {
                this.La = a
            }
        },
        snapAngleEpsilon: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da = a
            }
        },
        originalAngle: {
            get: function() {
                return this.Aw
            }
        },
        rotationPoint: {
            get: function() {
                return this.mu
            }
        },
        handleAngle: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        handleDistance: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K = a
            }
        }
    });
    ah.className = "RotatingTool";
    Ta("rotatingTool", function() {
        return this.findTool("Rotating")
    }, function(a) {
        vf(this, "Rotating", a, this.mouseDownTools)
    });

    function bh() {
        kf.call(this);
        this.name = "ClickSelecting"
    }
    oa(bh, kf);
    bh.prototype.canStart = function() {
        return !this.isEnabled || this.isBeyondDragSize() ? !1 : !0
    };
    bh.prototype.doMouseUp = function() {
        this.isActive && (this.standardMouseSelect(), !this.standardMouseClick() && this.diagram.lastInput.isTouchEvent && this.diagram.toolManager.doToolTip());
        this.stopTool()
    };
    bh.className = "ClickSelectingTool";

    function ch() {
        kf.call(this);
        this.name = "Action";
        this.pk = null
    }
    oa(ch, kf);
    ch.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram,
            b = a.lastInput,
            c = a.Rb(b.documentPoint, function(a) {
                for (; null !== a.panel && !a.isActionable;) a = a.panel;
                return a
            });
        if (null !== c) {
            if (!c.isActionable) return !1;
            this.pk = c;
            a.Ck = a.Rb(b.documentPoint, null, null);
            return !0
        }
        return !1
    };
    ch.prototype.doMouseDown = function() {
        if (this.isActive) {
            var a = this.diagram.lastInput,
                b = this.pk;
            null !== b && (a.targetObject = b, null !== b.actionDown && b.actionDown(a, b))
        } else this.canStart() && this.doActivate()
    };
    ch.prototype.doMouseMove = function() {
        if (this.isActive) {
            var a = this.diagram.lastInput,
                b = this.pk;
            null !== b && (a.targetObject = b, null !== b.actionMove && b.actionMove(a, b))
        }
    };
    ch.prototype.doMouseUp = function() {
        if (this.isActive) {
            var a = this.diagram.lastInput,
                b = this.pk;
            if (null === b) return;
            a.targetObject = b;
            null !== b.actionUp && b.actionUp(a, b);
            this.standardMouseClick(function(a) {
                for (; null !== a.panel && (!a.isActionable || a !== b);) a = a.panel;
                return a
            }, function(a) {
                return a === b
            })
        }
        this.stopTool()
    };
    ch.prototype.doCancel = function() {
        var a = this.diagram.lastInput,
            b = this.pk;
        null !== b && (a.targetObject = b, null !== b.actionCancel && b.actionCancel(a, b), this.stopTool())
    };
    ch.prototype.doStop = function() {
        this.pk = null
    };
    ch.className = "ActionTool";

    function dh() {
        kf.call(this);
        this.name = "ClickCreating";
        this.Wi = null;
        this.u = !0;
        this.l = !1;
        this.sw = new G(0, 0)
    }
    oa(dh, kf);
    dh.prototype.canStart = function() {
        if (!this.isEnabled || null === this.archetypeNodeData) return !1;
        var a = this.diagram;
        if (a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.lastInput.left || this.isBeyondDragSize()) return !1;
        if (this.isDoubleClick) {
            if (1 === a.lastInput.clickCount && (this.sw = a.lastInput.viewPoint.copy()), 2 !== a.lastInput.clickCount || this.isBeyondDragSize(this.sw)) return !1
        } else if (1 !== a.lastInput.clickCount) return !1;
        return a.currentTool !== this && null !== a.Xl(a.lastInput.documentPoint, !0) ? !1 : !0
    };
    dh.prototype.doMouseUp = function() {
        var a = this.diagram;
        this.isActive && this.insertPart(a.lastInput.documentPoint);
        this.stopTool()
    };
    dh.prototype.insertPart = function(a) {
        var b = this.diagram,
            c = this.archetypeNodeData;
        if (null === c) return null;
        this.Aa(this.name);
        var d = null;
        c instanceof T ? c.dc() && (Xg(c), d = c.copy(), null !== d && b.add(d)) : null !== c && (c = b.model.copyNodeData(c), Ca(c) && (b.model.jf(c), d = b.xc(c)));
        null !== d && (c = G.allocAt(a.x, a.y), this.isGridSnapEnabled && eh(this.diagram, d, a, c), d.location = c, b.allowSelect && b.select(d), G.free(c));
        b.Xa();
        this.transactionResult = this.name;
        b.aa("PartCreated", d);
        this.ug();
        return d
    };
    pa.Object.defineProperties(dh.prototype, {
        archetypeNodeData: {
            get: function() {
                return this.Wi
            },
            set: function(a) {
                this.Wi = a
            }
        },
        isDoubleClick: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        isGridSnapEnabled: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        }
    });
    dh.className = "ClickCreatingTool";

    function fh() {
        kf.call(this);
        this.name = "DragSelecting";
        this.Jk = 175;
        this.u = !1;
        var a = new T;
        a.layerName = "Tool";
        a.selectable = !1;
        var b = new V;
        b.name = "SHAPE";
        b.figure = "Rectangle";
        b.fill = null;
        b.stroke = "magenta";
        a.add(b);
        this.l = a
    }
    oa(fh, kf);
    fh.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (!a.allowSelect) return !1;
        var b = a.lastInput;
        return !b.left || a.currentTool !== this && (!this.isBeyondDragSize() || b.timestamp - a.firstInput.timestamp < this.delay || null !== a.Xl(b.documentPoint, !0)) ? !1 : !0
    };
    fh.prototype.doActivate = function() {
        var a = this.diagram;
        this.isActive = !0;
        a.isMouseCaptured = !0;
        a.skipsUndoManager = !0;
        a.add(this.box);
        this.doMouseMove()
    };
    fh.prototype.doDeactivate = function() {
        var a = this.diagram;
        a.uf();
        a.remove(this.box);
        a.skipsUndoManager = !1;
        this.isActive = a.isMouseCaptured = !1
    };
    fh.prototype.doMouseMove = function() {
        var a = this.diagram;
        if (this.isActive && null !== this.box) {
            var b = this.computeBoxBounds(),
                c = this.box.ab("SHAPE");
            null === c && (c = this.box.Ab());
            var d = L.alloc().h(b.width, b.height);
            b = G.alloc().h(b.x, b.y);
            c.desiredSize = d;
            this.box.position = b;
            L.free(d);
            G.free(b);
            (a.allowHorizontalScroll || a.allowVerticalScroll) && a.Ls(a.lastInput.viewPoint)
        }
    };
    fh.prototype.doMouseUp = function() {
        if (this.isActive) {
            var a = this.diagram;
            a.remove(this.box);
            try {
                a.currentCursor = "wait", a.aa("ChangingSelection", a.selection), this.selectInRect(this.computeBoxBounds()), a.aa("ChangedSelection", a.selection)
            } finally {
                a.currentCursor = ""
            }
        }
        this.stopTool()
    };
    fh.prototype.computeBoxBounds = function() {
        var a = this.diagram;
        return new N(a.firstInput.documentPoint, a.lastInput.documentPoint)
    };
    fh.prototype.selectInRect = function(a) {
        var b = this.diagram,
            c = b.lastInput;
        a = b.gx(a, this.isPartialInclusion);
        if (ib ? c.meta : c.control)
            if (c.shift)
                for (a = a.iterator; a.next();) b = a.value, b.isSelected && (b.isSelected = !1);
            else
                for (a = a.iterator; a.next();) b = a.value, b.isSelected = !b.isSelected;
        else if (c.shift)
            for (a = a.iterator; a.next();) b = a.value, b.isSelected || (b.isSelected = !0);
        else {
            c = new E;
            for (b = b.selection.iterator; b.next();) {
                var d = b.value;
                a.contains(d) || c.add(d)
            }
            for (b = c.iterator; b.next();) b.value.isSelected = !1;
            for (a =
                a.iterator; a.next();) b = a.value, b.isSelected || (b.isSelected = !0)
        }
    };
    pa.Object.defineProperties(fh.prototype, {
        delay: {
            get: function() {
                return this.Jk
            },
            set: function(a) {
                this.Jk = a
            }
        },
        isPartialInclusion: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        box: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        }
    });
    fh.className = "DragSelectingTool";

    function gh() {
        kf.call(this);
        this.name = "Panning";
        this.iu = new G;
        this.Wx = new G;
        this.zg = !1;
        var a = this;
        this.Ew = function() {
            w.document.removeEventListener("scroll", a.Ew, !1);
            a.stopTool()
        }
    }
    oa(gh, kf);
    gh.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return !a.allowHorizontalScroll && !a.allowVerticalScroll || !a.lastInput.left || a.currentTool !== this && !this.isBeyondDragSize() ? !1 : !0
    };
    gh.prototype.doActivate = function() {
        var a = this.diagram;
        this.zg ? (a.lastInput.bubbles = !0, w.document.addEventListener("scroll", this.Ew, !1)) : (a.currentCursor = "move", a.isMouseCaptured = !0, this.iu.assign(a.position));
        this.isActive = !0
    };
    gh.prototype.doDeactivate = function() {
        var a = this.diagram;
        a.currentCursor = "";
        this.isActive = a.isMouseCaptured = !1
    };
    gh.prototype.doCancel = function() {
        var a = this.diagram;
        a.position = this.iu;
        a.isMouseCaptured = !1;
        this.stopTool()
    };
    gh.prototype.doMouseMove = function() {
        this.move()
    };
    gh.prototype.doMouseUp = function() {
        this.move();
        this.stopTool()
    };
    gh.prototype.move = function() {
        var a = this.diagram;
        if (this.isActive && a)
            if (this.zg) a.lastInput.bubbles = !0;
            else {
                var b = a.position,
                    c = a.firstInput.documentPoint,
                    d = a.lastInput.documentPoint,
                    e = b.x + c.x - d.x;
                c = b.y + c.y - d.y;
                a.allowHorizontalScroll || (e = b.x);
                a.allowVerticalScroll || (c = b.y);
                a.position = this.Wx.h(e, c)
            }
    };
    pa.Object.defineProperties(gh.prototype, {
        bubbles: {
            get: function() {
                return this.zg
            },
            set: function(a) {
                this.zg = a
            }
        },
        originalPosition: {
            get: function() {
                return this.iu
            }
        }
    });
    gh.className = "PanningTool";
    Ta("clickCreatingTool", function() {
        return this.findTool("ClickCreating")
    }, function(a) {
        vf(this, "ClickCreating", a, this.mouseUpTools)
    });
    Ta("clickSelectingTool", function() {
        return this.findTool("ClickSelecting")
    }, function(a) {
        vf(this, "ClickSelecting", a, this.mouseUpTools)
    });
    Ta("panningTool", function() {
        return this.findTool("Panning")
    }, function(a) {
        vf(this, "Panning", a, this.mouseMoveTools)
    });
    Ta("dragSelectingTool", function() {
        return this.findTool("DragSelecting")
    }, function(a) {
        vf(this, "DragSelecting", a, this.mouseMoveTools)
    });
    Ta("actionTool", function() {
        return this.findTool("Action")
    }, function(a) {
        vf(this, "Action", a, this.mouseDownTools)
    });

    function uf() {
        this.da = this.K = this.l = this.u = null
    }
    pa.Object.defineProperties(uf.prototype, {
        mainElement: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K = a
            }
        },
        show: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u !== a && (this.u = a)
            }
        },
        hide: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l !== a && (this.l = a)
            }
        },
        valueFunction: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da = a
            }
        }
    });
    uf.className = "HTMLInfo";

    function hh(a, b, c) {
        this.text = a;
        this.Uw = b;
        this.visible = c
    }
    hh.className = "ContextMenuButtonInfo";

    function ih() {
        kf.call(this);
        this.name = "ContextMenu";
        this.u = this.Kt = this.l = null;
        this.xw = new G;
        this.Lt = null;
        var a = this;
        this.wu = function() {
            a.stopTool()
        }
    }
    oa(ih, kf);

    function jh(a) {
        var b = new uf;
        b.show = function(a, b, c) {
            c.showDefaultContextMenu()
        };
        b.hide = function(a, b) {
            b.hideDefaultContextMenu()
        };
        kh = b;
        a.wu = function() {
            a.stopTool()
        };
        b = va("div");
        var c = va("div");
        b.style.cssText = "top: 0px;z-index:10002;position: fixed;display: none;text-align: center;left: 25%;width: 50%;background-color: #F5F5F5;padding: 16px;border: 16px solid #444;border-radius: 10px;margin-top: 10px";
        c.style.cssText = "z-index:10001;position: fixed;display: none;top: 0;left: 0;width: 100%;height: 100%;background-color: black;opacity: 0.8;";
        var d = va("style");
        w.document.getElementsByTagName("head")[0].appendChild(d);
        d.sheet.insertRule(".goCXul { list-style: none; }", 0);
        d.sheet.insertRule(".goCXli {font:700 1.5em Helvetica, Arial, sans-serif;position: relative;min-width: 60px; }", 0);
        d.sheet.insertRule(".goCXa {color: #444;display: inline-block;padding: 4px;text-decoration: none;margin: 2px;border: 1px solid gray;border-radius: 10px; }", 0);
        b.addEventListener("contextmenu", lh, !1);
        b.addEventListener("selectstart", lh, !1);
        c.addEventListener("contextmenu",
            lh, !1);
        b.className = "goCXforeground";
        c.className = "goCXbackground";
        w.document.body && (w.document.body.appendChild(b), w.document.body.appendChild(c));
        mh = b;
        nh = c;
        oh = !0
    }

    function lh(a) {
        a.preventDefault();
        return !1
    }
    ih.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return this.isBeyondDragSize() || !a.lastInput.right ? !1 : a.lastInput.isTouchEvent && null !== this.defaultTouchContextMenu || null !== this.findObjectWithContextMenu() ? !0 : !1
    };
    ih.prototype.doStart = function() {
        this.xw.set(this.diagram.firstInput.documentPoint)
    };
    ih.prototype.doStop = function() {
        this.hideContextMenu();
        this.currentObject = null
    };
    ih.prototype.findObjectWithContextMenu = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram,
            c = b.lastInput,
            d = null;
        a instanceof P || (a instanceof Y ? d = a : d = b.Rb(c.documentPoint, null, function(a) {
            return !a.layer.isTemporary
        }));
        if (null !== d) {
            for (a = d; null !== a;) {
                if (null !== a.contextMenu) return a;
                a = a.panel
            }
            if (b.lastInput.isTouchEvent && this.defaultTouchContextMenu) return d.part
        } else if (null !== b.contextMenu) return b;
        return null
    };
    ih.prototype.doActivate = function() {};
    ih.prototype.doMouseDown = function() {
        kf.prototype.doMouseDown.call(this);
        if (this.isActive && this.currentContextMenu instanceof pf) {
            var a = this.diagram.toolManager.findTool("Action");
            null !== a && a.canStart() && (a.doActivate(), a.doMouseDown(), a.doDeactivate())
        }
        this.diagram.toolManager.mouseDownTools.contains(this) && ph(this)
    };
    ih.prototype.doMouseUp = function() {
        if (this.isActive && this.currentContextMenu instanceof pf) {
            var a = this.diagram.toolManager.findTool("Action");
            null !== a && a.canStart() && (a.doActivate(), a.doCancel(), a.doDeactivate())
        }
        ph(this)
    };

    function ph(a) {
        var b = a.diagram;
        if (a.isActive) {
            var c = a.currentContextMenu;
            if (null !== c) {
                if (!(c instanceof uf)) {
                    var d = b.Rb(b.lastInput.documentPoint, null, null);
                    null !== d && d.pg(c) && a.standardMouseClick(null, null)
                }
                a.stopTool();
                a.canStart() && (b.currentTool = a, a.doMouseUp())
            }
        } else a.canStart() && (qh(a, !0), a.isActive || a.stopTool())
    }

    function qh(a, b, c) {
        void 0 === c && (c = null);
        b && a.standardMouseSelect();
        if (!a.standardMouseClick())
            if (a.isActive = !0, b = kh, null === c && (c = a.findObjectWithContextMenu()), null !== c) {
                var d = c.contextMenu;
                null !== d ? (a.currentObject = c instanceof Y ? c : null, a.showContextMenu(d, a.currentObject)) : null !== b && a.showContextMenu(b, a.currentObject)
            } else null !== b && a.showContextMenu(b, null)
    }
    ih.prototype.doMouseMove = function() {
        var a = this.diagram.toolManager.findTool("Action");
        null !== a && a.doMouseMove();
        this.isActive && this.diagram.toolManager.doMouseMove()
    };
    ih.prototype.showContextMenu = function(a, b) {
        var c = this.diagram;
        a !== this.currentContextMenu && this.hideContextMenu();
        if (a instanceof pf) {
            a.layerName = "Tool";
            a.selectable = !1;
            a.scale = 1 / c.scale;
            a.category = this.name;
            null !== a.placeholder && (a.placeholder.scale = c.scale);
            var d = a.diagram;
            null !== d && d !== c && d.remove(a);
            c.add(a);
            null !== b ? (c = null, d = b.sh(), null !== d && (c = d.data), a.adornedObject = b, a.data = c) : a.data = c.model;
            a.bc();
            this.positionContextMenu(a, b)
        } else a instanceof uf && a.show(b, c, this);
        this.currentContextMenu =
            a
    };
    ih.prototype.positionContextMenu = function(a) {
        if (null === a.placeholder) {
            var b = this.diagram,
                c = b.lastInput.documentPoint.copy(),
                d = a.measuredBounds,
                e = b.viewportBounds;
            b.lastInput.isTouchEvent && (c.x -= d.width);
            c.x + d.width > e.right && (c.x -= d.width + 5 / b.scale);
            c.x < e.x && (c.x = e.x);
            c.y + d.height > e.bottom && (c.y -= d.height + 5 / b.scale);
            c.y < e.y && (c.y = e.y);
            a.position = c
        }
    };
    ih.prototype.hideContextMenu = function() {
        var a = this.diagram,
            b = this.currentContextMenu;
        null !== b && (b instanceof pf ? (a.remove(b), null !== this.Kt && this.Kt.sf(b.category), b.data = null, b.adornedObject = null) : b instanceof uf && (null !== b.hide ? b.hide(a, this) : null !== b.mainElement && (b.mainElement.style.display = "none")), this.currentContextMenu = null, this.standardMouseOver())
    };

    function rh() {
        var a = new E;
        a.add(new hh("Copy", function(a) {
            a.commandHandler.copySelection()
        }, function(a) {
            return a.commandHandler.canCopySelection()
        }));
        a.add(new hh("Cut", function(a) {
            a.commandHandler.cutSelection()
        }, function(a) {
            return a.commandHandler.canCutSelection()
        }));
        a.add(new hh("Delete", function(a) {
            a.commandHandler.deleteSelection()
        }, function(a) {
            return a.commandHandler.canDeleteSelection()
        }));
        a.add(new hh("Paste", function(a) {
            a.commandHandler.pasteSelection(a.lastInput.documentPoint)
        }, function(a) {
            return a.commandHandler.canPasteSelection()
        }));
        a.add(new hh("Select All", function(a) {
            a.commandHandler.selectAll()
        }, function(a) {
            return a.commandHandler.canSelectAll()
        }));
        a.add(new hh("Undo", function(a) {
            a.commandHandler.undo()
        }, function(a) {
            return a.commandHandler.canUndo()
        }));
        a.add(new hh("Redo", function(a) {
            a.commandHandler.redo()
        }, function(a) {
            return a.commandHandler.canRedo()
        }));
        a.add(new hh("Scroll To Part", function(a) {
            a.commandHandler.scrollToPart()
        }, function(a) {
            return a.commandHandler.canScrollToPart()
        }));
        a.add(new hh("Zoom To Fit", function(a) {
                a.commandHandler.zoomToFit()
            },
            function(a) {
                return a.commandHandler.canZoomToFit()
            }));
        a.add(new hh("Reset Zoom", function(a) {
            a.commandHandler.resetZoom()
        }, function(a) {
            return a.commandHandler.canResetZoom()
        }));
        a.add(new hh("Group Selection", function(a) {
            a.commandHandler.groupSelection()
        }, function(a) {
            return a.commandHandler.canGroupSelection()
        }));
        a.add(new hh("Ungroup Selection", function(a) {
            a.commandHandler.ungroupSelection()
        }, function(a) {
            return a.commandHandler.canUngroupSelection()
        }));
        a.add(new hh("Edit Text", function(a) {
                a.commandHandler.editTextBlock()
            },
            function(a) {
                return a.commandHandler.canEditTextBlock()
            }));
        return a
    }
    ih.prototype.showDefaultContextMenu = function() {
        var a = this.diagram;
        null === this.Lt && (this.Lt = rh());
        mh.innerHTML = "";
        nh.addEventListener("click", this.wu, !1);
        var b = this,
            c = va("ul");
        c.className = "goCXul";
        mh.appendChild(c);
        c.innerHTML = "";
        for (var d = this.Lt.iterator; d.next();) {
            var e = d.value,
                f = e.visible;
            if ("function" === typeof e.Uw && ("function" !== typeof f || f(a))) {
                f = va("li");
                f.className = "goCXli";
                var g = va("a");
                g.className = "goCXa";
                g.href = "#";
                g.Ox = e.Uw;
                g.addEventListener("click", function(c) {
                    this.Ox(a);
                    b.stopTool();
                    c.preventDefault();
                    return !1
                }, !1);
                g.textContent = e.text;
                f.appendChild(g);
                c.appendChild(f)
            }
        }
        mh.style.display = "block";
        nh.style.display = "block"
    };
    ih.prototype.hideDefaultContextMenu = function() {
        null !== this.currentContextMenu && this.currentContextMenu === kh && (mh.style.display = "none", nh.style.display = "none", nh.removeEventListener("click", this.wu, !1), this.currentContextMenu = null)
    };
    pa.Object.defineProperties(ih.prototype, {
        currentContextMenu: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a;
                this.Kt = a instanceof pf ? a.adornedPart : null
            }
        },
        defaultTouchContextMenu: {
            get: function() {
                !1 === oh && null === kh && sh && jh(this);
                return kh
            },
            set: function(a) {
                null === a && (oh = !0);
                kh = a
            }
        },
        currentObject: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        mouseDownPoint: {
            get: function() {
                return this.xw
            }
        }
    });
    var kh = null,
        oh = !1,
        nh = null,
        mh = null;
    ih.className = "ContextMenuTool";
    Ta("contextMenuTool", function() {
        return this.findTool("ContextMenu")
    }, function(a) {
        vf(this, "ContextMenu", a, this.mouseUpTools)
    });

    function th() {
        kf.call(this);
        this.name = "TextEditing";
        this.eh = new uh;
        this.Wa = null;
        this.La = vh;
        this.ti = null;
        this.la = wh;
        this.K = 1;
        this.da = !0;
        this.u = null;
        this.l = new uf;
        this.Mt = null;
        xh(this, this.l)
    }
    oa(th, kf);

    function xh(a, b) {
        if (sh) {
            var c = va("textarea");
            a.Mt = c;
            c.addEventListener("input", function() {
                if (null !== a.textBlock) {
                    var b = a.px(this.value);
                    this.style.width = 20 + b.measuredBounds.width * this.Oz + "px";
                    this.rows = b.lineCount
                }
            }, !1);
            c.addEventListener("keydown", function(b) {
                if (null !== a.textBlock) {
                    var c = b.which;
                    13 === c ? (!1 === a.textBlock.isMultiline && b.preventDefault(), a.acceptText(yh)) : 9 === c ? (a.acceptText(zh), b.preventDefault()) : 27 === c && (a.doCancel(), null !== a.diagram && a.diagram.doFocus())
                }
            }, !1);
            c.addEventListener("focus",
                function() {
                    if (null !== a.currentTextEditor && a.state !== wh) {
                        var b = a.Mt;
                        a.la === Ah && (a.la = Bh);
                        "function" === typeof b.select && a.selectsTextOnActivate && (b.select(), b.setSelectionRange(0, 9999))
                    }
                }, !1);
            c.addEventListener("blur", function() {
                if (null !== a.currentTextEditor && a.state !== wh) {
                    var b = a.Mt;
                    "function" === typeof b.focus && b.focus();
                    "function" === typeof b.select && a.selectsTextOnActivate && (b.select(), b.setSelectionRange(0, 9999))
                }
            }, !1);
            b.valueFunction = function() {
                return c.value
            };
            b.mainElement = c;
            b.show = function(a,
                b, f) {
                if (a instanceof uh && f instanceof th)
                    if (f.state === Ch) c.style.border = "3px solid red", c.focus();
                    else {
                        var d = a.ma(dd),
                            e = b.position,
                            k = b.scale,
                            l = a.Ce() * k;
                        l < f.minimumEditorScale && (l = f.minimumEditorScale);
                        var m = a.naturalBounds.width * l + 6,
                            n = a.naturalBounds.height * l + 2,
                            p = (d.x - e.x) * k;
                        d = (d.y - e.y) * k;
                        c.value = a.text;
                        b.div.style.font = a.font;
                        c.style.position = "absolute";
                        c.style.zIndex = "100";
                        c.style.font = "inherit";
                        c.style.fontSize = 100 * l + "%";
                        c.style.lineHeight = "normal";
                        c.style.width = m + "px";
                        c.style.left = (p - m / 2 | 0) - 1 +
                            "px";
                        c.style.top = (d - n / 2 | 0) - 1 + "px";
                        c.style.textAlign = a.textAlign;
                        c.style.margin = "0";
                        c.style.padding = "1px";
                        c.style.border = "0";
                        c.style.outline = "none";
                        c.style.whiteSpace = "pre-wrap";
                        c.style.overflow = "hidden";
                        c.rows = a.lineCount;
                        c.Oz = l;
                        c.className = "goTXarea";
                        b.div.appendChild(c);
                        c.focus();
                        f.selectsTextOnActivate && (c.select(), c.setSelectionRange(0, 9999))
                    }
            };
            b.hide = function(a) {
                a.div.removeChild(c)
            }
        }
    }
    th.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (null === a || a.isReadOnly || !a.lastInput.left || this.isBeyondDragSize()) return !1;
        var b = a.Rb(a.lastInput.documentPoint);
        if (!(null !== b && b instanceof uh && b.editable && b.part.canEdit())) return !1;
        b = b.part;
        return null === b || this.starting === vh && !b.isSelected || this.starting === Gh && 2 > a.lastInput.clickCount ? !1 : !0
    };
    th.prototype.doStart = function() {
        this.isActive || null === this.textBlock || this.doActivate()
    };
    th.prototype.doActivate = function() {
        if (!this.isActive) {
            var a = this.diagram;
            if (null !== a) {
                var b = this.textBlock;
                null === b && (b = a.Rb(a.lastInput.documentPoint));
                if (null !== b && b instanceof uh && (this.textBlock = b, null !== b.part)) {
                    this.isActive = !0;
                    this.la = Ah;
                    var c = this.defaultTextEditor;
                    null !== b.textEditor && (c = b.textEditor);
                    this.eh = this.textBlock.copy();
                    var d = new N(this.textBlock.ma(Tc), this.textBlock.ma(hd));
                    a.zv(d);
                    c.show(b, a, this);
                    this.currentTextEditor = c
                }
            }
        }
    };
    th.prototype.doCancel = function() {
        this.stopTool()
    };
    th.prototype.doMouseUp = function() {
        !this.isActive && this.canStart() && this.doActivate()
    };
    th.prototype.doMouseDown = function() {
        this.isActive && this.acceptText(Hh)
    };
    th.prototype.acceptText = function(a) {
        switch (a) {
            case Hh:
                if (this.la === Ih) this.currentTextEditor instanceof HTMLElement && this.currentTextEditor.focus();
                else if (this.la === Ah || this.la === Ch || this.la === Bh) this.la = Jh, Kh(this);
                break;
            case Lh:
            case yh:
            case zh:
                if (yh !== a || !0 !== this.textBlock.isMultiline)
                    if (this.la === Ah || this.la === Ch || this.la === Bh) this.la = Jh, Kh(this)
        }
    };

    function Kh(a) {
        var b = a.textBlock,
            c = a.diagram,
            d = a.currentTextEditor;
        if (null !== b && null !== d) {
            var e = b.text,
                f = "";
            null !== d.valueFunction && (f = d.valueFunction());
            a.isValidText(b, e, f) ? (a.Aa(a.name), a.la = Ih, a.transactionResult = a.name, b.text = f, null !== b.textEdited && b.textEdited(b, e, f), null !== c && c.aa("TextEdited", b, e), a.ug(), a.stopTool(), null !== c && c.doFocus()) : (a.la = Ch, null !== b.errorFunction && b.errorFunction(a, e, f), d.show(b, c, a))
        }
    }
    th.prototype.doDeactivate = function() {
        var a = this.diagram;
        null !== a && (this.la = wh, this.textBlock = null, null !== this.currentTextEditor && this.currentTextEditor.hide(a, this), this.isActive = !1)
    };
    th.prototype.isValidText = function(a, b, c) {
        var d = this.textValidation;
        if (null !== d && !d(a, b, c)) return !1;
        d = a.textValidation;
        return null === d || d(a, b, c) ? !0 : !1
    };
    th.prototype.px = function(a) {
        var b = this.eh;
        b.text = a;
        b.measure(this.textBlock.bl, Infinity);
        return b
    };
    pa.Object.defineProperties(th.prototype, {
        textBlock: {
            get: function() {
                return this.Wa
            },
            set: function(a) {
                this.Wa = a
            }
        },
        currentTextEditor: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        defaultTextEditor: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        },
        starting: {
            get: function() {
                return this.La
            },
            set: function(a) {
                this.La = a
            }
        },
        textValidation: {
            get: function() {
                return this.ti
            },
            set: function(a) {
                this.ti = a
            }
        },
        minimumEditorScale: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K = a
            }
        },
        selectsTextOnActivate: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da = a
            }
        },
        state: {
            get: function() {
                return this.la
            },
            set: function(a) {
                this.la !== a && (this.la = a)
            }
        }
    });
    th.prototype.measureTemporaryTextBlock = th.prototype.px;
    var Lh = new D(th, "LostFocus", 0),
        Hh = new D(th, "MouseDown", 1),
        zh = new D(th, "Tab", 2),
        yh = new D(th, "Enter", 3),
        Mh = new D(th, "SingleClick", 0),
        vh = new D(th, "SingleClickSelected", 1),
        Gh = new D(th, "DoubleClick", 2),
        wh = new D(th, "StateNone", 0),
        Ah = new D(th, "StateActive", 1),
        Bh = new D(th, "StateEditing", 2),
        Jh = new D(th, "StateValidating", 3),
        Ch = new D(th, "StateInvalid", 4),
        Ih = new D(th, "StateValidated", 5);
    th.className = "TextEditingTool";
    th.LostFocus = Lh;
    th.MouseDown = Hh;
    th.Tab = zh;
    th.Enter = yh;
    th.SingleClick = Mh;
    th.SingleClickSelected = vh;
    th.DoubleClick = Gh;
    th.StateNone = wh;
    th.StateActive = Ah;
    th.StateEditing = Bh;
    th.StateValidating = Jh;
    th.StateInvalid = Ch;
    th.StateValidated = Ih;
    Ta("textEditingTool", function() {
        return this.findTool("TextEditing")
    }, function(a) {
        vf(this, "TextEditing", a, this.mouseUpTools)
    });

    function Nh() {
        this.kw = Oh;
        this.F = lf;
        this.pn = this.qn = null;
        this.Vi = this.rn = this.sn = 0;
        this.tk = this.$f = this.sb = this.Cr = this.$h = !1;
        this.Og = this.Fc = !0;
        this.Uq = this.Tq = this.jw = null;
        this.iw = 0;
        this.Vq = new Lb;
        this.Nm = new F;
        this.St = 600;
        this.Qx = new G(0, 0);
        this.gw = this.fw = this.Hw = !1;
        this.tj = new Lb
    }
    Nh.prototype.nb = function(a) {
        this.F = a
    };

    function Oh(a, b, c, d) {
        a /= d / 2;
        return 1 > a ? c / 2 * a * a + b : -c / 2 * (--a * (a - 2) - 1) + b
    }
    Nh.prototype.canStart = function() {
        return !0
    };
    t = Nh.prototype;
    t.Ni = function(a) {
        this.Fc && (this.Og || this.F.Ki) && (this.Nm.add(a), this.canStart(a) && (this.$h && this.xd(), this.$f = this.sb = !0))
    };
    t.Az = function(a) {
        this.Fc && (this.Og || this.F.Ki) && (this.Nm.add(a), this.canStart(a) && (this.$h && this.xd(), this.sb = !0))
    };

    function Ph(a) {
        if (a.Fc && (a.Nm.clear(), a.sb))
            if (!a.tk) a.sb = !1, a.$f = !1;
            else if (0 === a.Vi) {
            var b = +new Date;
            a.Vi = b;
            w.requestAnimationFrame(function() {
                if (!1 !== a.sb && !a.$h && a.Vi === b) {
                    var c = a.F;
                    c.De("temporaryPixelRatio") && (c.ve = 1);
                    Qh(c);
                    a.sb = !1;
                    a.$f = !1;
                    c.aa("AnimationStarting");
                    Rh(a, b)
                }
            })
        }
    }
    t.mh = function(a, b, c, d, e) {
        if (!(!this.sb || "position" === b && c.A(d) || a instanceof T && !a.isAnimated)) {
            var f = !1;
            if ("delete" === b && a instanceof T) {
                f = !0;
                b = "scale";
                c = 1;
                d = .1;
                e = !0;
                var g = a.diagram;
                a = a.copy();
                a.data = null;
                g.add(a)
            }
            g = this.tj;
            if (g.contains(a)) {
                var h = g.J(a);
                g = h.start;
                var k = h.end;
                void 0 === g[b] && (g[b] = Sh(c));
                h.Js && void 0 !== k[b] ? h.Pp[b] = Sh(d) : (e || (h.Pp[b] = Sh(d)), k[b] = Sh(d))
            } else h = {}, k = {}, h[b] = Sh(c), k[b] = Sh(d), c = h.position, c instanceof G && !c.s() && this.Nm.contains("Expand SubGraph") && c.assign(k.position),
                h = new Th(h, k, e), g.add(a, h);
            e && 0 === b.indexOf("position:") && a instanceof T && (h.Pp.location = Sh(a.location));
            e && f && (h.Pp.scale = .001);
            this.tk = !0
        }
    };

    function Sh(a) {
        return a instanceof G ? a.copy() : a instanceof L ? a.copy() : a
    }

    function Rh(a, b) {
        var c;

        function d() {
            if (!1 !== f.$h && f.Vi === b) {
                var a = +new Date,
                    c = a > r ? l : a - q;
                Uh(f);
                Vh(f, e, p, g, c, l);
                f.Tq && f.Tq();
                og(e);
                Wh(f);
                a > r ? Xh(f) : w.requestAnimationFrame(d)
            }
        }
        void 0 === c && (c = {});
        var e = a.F;
        if (null !== e) {
            var f = a,
                g = c.Wz || a.kw,
                h = c.$z || null,
                k = c.aA || null,
                l = c.duration || a.St,
                m = a.Qx;
            for (c = a.tj.iterator; c.next();) {
                var n = c.value.start.position;
                n instanceof G && (n.s() || n.assign(m))
            }
            a.jw = g;
            a.Tq = h;
            a.Uq = k;
            a.iw = l;
            a.Vq = a.tj;
            var p = a.Vq;
            for (c = p.iterator; c.next();) h = c.value.end, h["position:placeholder"] &&
                (k = c.key.findVisibleNode(), k instanceof hg && null !== k.placeholder && (m = k.placeholder, k = m.ma(Tc), m = m.padding, k.x += m.left, k.y += m.top, h["position:placeholder"] = k));
            a.$h = !0;
            Uh(a);
            Vh(a, e, p, g, 0, l);
            og(a.F, !0);
            Wh(a);
            var q = +new Date,
                r = q + l;
            f.Vi === b && w.requestAnimationFrame(function() {
                d()
            })
        }
    }

    function Uh(a) {
        if (!a.Cr) {
            var b = a.F;
            a.Hw = b.skipsUndoManager;
            a.fw = b.skipsModelSourceBindings;
            a.gw = b.Qi;
            b.skipsUndoManager = !0;
            b.skipsModelSourceBindings = !0;
            b.Qi = !0;
            a.Cr = !0
        }
    }

    function Wh(a) {
        var b = a.F;
        b.skipsUndoManager = a.Hw;
        b.skipsModelSourceBindings = a.fw;
        b.Qi = a.gw;
        a.Cr = !1
    }

    function Vh(a, b, c, d, e, f) {
        for (c = c.iterator; c.next();) {
            var g = c.key,
                h = c.value,
                k = h.start;
            h = h.end;
            for (var l in h)
                if (("position" !== l || !h["position:placeholder"] && !h["position:node"]) && void 0 !== Yh[l]) Yh[l](g, k[l], h[l], d, e, f)
        }
        d = b.dv;
        b.dv = !0;
        l = a.kw;
        0 !== a.sn && 0 !== a.rn && (c = a.sn, b.Ca = l(e, c, a.rn - c, f));
        null !== a.qn && null !== a.pn && (c = a.qn, a = a.pn, b.sa = new G(l(e, c.x, a.x - c.x, f), l(e, c.y, a.y - c.y, f)));
        b.dv = d
    }
    t.xd = function() {
        !0 === this.sb && (this.$f = this.sb = !1, this.Vi = 0, this.tk && this.F.ec());
        this.$h && this.Fc && Xh(this)
    };

    function Xh(a) {
        a.$h = !1;
        a.tk = !1;
        Uh(a);
        for (var b = a.F, c = a.jw, d = a.iw, e = a.Vq.iterator; e.next();) {
            var f = e.key,
                g = e.value,
                h = g.start,
                k = g.end,
                l = g.Pp,
                m;
            for (m in k)
                if (void 0 !== Yh[m]) {
                    var n = m;
                    !g.Js || "position:node" !== n && "position:placeholder" !== n || (n = "position");
                    Yh[n](f, h[m], void 0 !== l[m] ? l[m] : g.Js ? h[m] : k[m], c, d, d)
                } g.Js && void 0 !== l.location && f instanceof T && (f.location = l.location);
            g.mt && f instanceof T && f.Mb(!1)
        }
        for (c = a.F.links; c.next();) d = c.value, null !== d.rl && (d.points = d.rl, d.rl = null);
        b.dt.clear();
        Tf(b, !1);
        b.Xa();
        b.R();
        b.hd();
        Zh(b);
        Wh(a);
        a.Uq && a.Uq();
        a.Vi = 0;
        a.Vq = new Lb;
        a.Uq = null;
        a.Tq = null;
        a.qn = null;
        a.pn = null;
        a.sn = 0;
        a.rn = 0;
        a.tj = new Lb;
        b.aa("AnimationFinished");
        b.ec()
    }
    t.Ip = function(a, b) {
        if (this.$f) {
            var c = a.actualBounds,
                d = b.actualBounds,
                e = null;
            b instanceof hg && (e = b.placeholder);
            null !== e ? (c = e.ma(Tc), e = e.padding, c.x += e.left, c.y += e.top, this.mh(a, "position", c, a.position, !1)) : this.mh(a, "position", new G(d.x + d.width / 2 - c.width / 2, d.y + d.height / 2 - c.height / 2), a.position, !1);
            this.mh(a, "scale", .01, a.scale, !1);
            if (a instanceof hg)
                for (a = a.memberParts; a.next();) e = a.value, e instanceof U && this.Ip(e, b)
        }
    };
    t.Hp = function(a, b) {
        if (a.isVisible() && this.$f) {
            var c = null;
            b instanceof hg && (c = b.placeholder);
            null !== c ? this.mh(a, "position:placeholder", a.position, c, !0) : this.mh(a, "position:node", a.position, b, !0);
            this.mh(a, "scale", a.scale, .01, !0);
            this.sb && (c = this.tj, c.contains(a) && (c.J(a).mt = !0));
            if (a instanceof hg)
                for (a = a.memberParts; a.next();) c = a.value, c instanceof U && this.Hp(c, b)
        }
    };

    function $h(a, b, c) {
        a.$f && !b.A(c) && (null === a.qn && b.s() && null === a.pn && (a.qn = b.copy()), a.pn = c.copy(), a.tk = !0)
    }

    function ai(a, b, c) {
        a.$f && a.F.Ki && (0 === a.sn && 0 === a.rn && (a.sn = b), a.rn = c, a.tk = !0)
    }
    pa.Object.defineProperties(Nh.prototype, {
        animationReasons: {
            get: function() {
                return this.Nm
            }
        },
        isEnabled: {
            get: function() {
                return this.Fc
            },
            set: function(a) {
                this.Fc = a
            }
        },
        duration: {
            get: function() {
                return this.St
            },
            set: function(a) {
                1 > a && xa(a, ">= 1", Nh, "duration");
                this.St = a
            }
        },
        isAnimating: {
            get: function() {
                return this.$h
            }
        },
        isTicking: {
            get: function() {
                return this.Cr
            }
        },
        isInitial: {
            get: function() {
                return this.Og
            },
            set: function(a) {
                this.Og = a
            }
        }
    });
    Nh.prototype.stopAnimation = Nh.prototype.xd;
    Nh.prototype.addToAnimation = Nh.prototype.mh;
    Nh.prototype.prepareAnimation = Nh.prototype.Az;
    Nh.prototype.prepareAutomaticAnimation = Nh.prototype.Ni;
    Nh.className = "AnimationManager";

    function Th(a, b, c) {
        this.start = a;
        this.end = b;
        this.Pp = {};
        this.Js = c;
        this.mt = !1
    }
    Th.className = "AnimationStates";
    var Yh = {
        opacity: function(a, b, c, d, e, f) {
            a.opacity = d(e, b, c - b, f)
        },
        position: function(a, b, c, d, e, f) {
            e !== f ? a.ut(d(e, b.x, c.x - b.x, f), d(e, b.y, c.y - b.y, f)) : a.position = new G(d(e, b.x, c.x - b.x, f), d(e, b.y, c.y - b.y, f))
        },
        "position:node": function(a, b, c, d, e, f) {
            var g = a.actualBounds,
                h = c.actualBounds;
            c = h.x + h.width / 2 - g.width / 2;
            g = h.y + h.height / 2 - g.height / 2;
            e !== f ? a.ut(d(e, b.x, c - b.x, f), d(e, b.y, g - b.y, f)) : a.position = new G(d(e, b.x, c - b.x, f), d(e, b.y, g - b.y, f))
        },
        "position:placeholder": function(a, b, c, d, e, f) {
            e !== f ? a.ut(d(e, b.x, c.x - b.x,
                f), d(e, b.y, c.y - b.y, f)) : a.position = new G(d(e, b.x, c.x - b.x, f), d(e, b.y, c.y - b.y, f))
        },
        scale: function(a, b, c, d, e, f) {
            a.scale = d(e, b, c - b, f)
        },
        visible: function(a, b, c, d, e, f) {
            a.visible = e !== f ? b : c
        }
    };

    function bi() {
        mb(this);
        this.F = null;
        this.Fa = new E;
        this.Ta = "";
        this.lb = 1;
        this.u = !1;
        this.xj = this.K = this.Kh = this.Jh = this.Ih = this.Hh = this.Fh = this.Gh = this.Eh = this.Mh = this.Dh = this.Lh = this.Ch = this.Bh = !0;
        this.l = !1;
        this.Ho = []
    }
    t = bi.prototype;
    t.nb = function(a) {
        this.F = a
    };
    t.toString = function(a) {
        void 0 === a && (a = 0);
        var b = 'Layer "' + this.name + '"';
        if (0 >= a) return b;
        for (var c = 0, d = 0, e = 0, f = 0, g = 0, h = this.Fa.iterator; h.next();) {
            var k = h.value;
            k instanceof hg ? e++ : k instanceof U ? d++ : k instanceof S ? f++ : k instanceof pf ? g++ : c++
        }
        h = "";
        0 < c && (h += c + " Parts ");
        0 < d && (h += d + " Nodes ");
        0 < e && (h += e + " Groups ");
        0 < f && (h += f + " Links ");
        0 < g && (h += g + " Adornments ");
        if (1 < a)
            for (a = this.Fa.iterator; a.next();) c = a.value, h += "\n    " + c.toString(), d = c.data, null !== d && Bb(d) && (h += " #" + Bb(d)), c instanceof U ? h += " " +
                Qa(d) : c instanceof S && (h += " " + Qa(c.fromNode) + " " + Qa(c.toNode));
        return b + " " + this.Fa.count + ": " + h
    };
    t.Rb = function(a, b, c) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        if (!1 === this.xj) return null;
        var d = !1;
        null !== this.diagram && this.diagram.viewportBounds.ea(a) && (d = !0);
        for (var e = G.alloc(), f = this.Fa.j, g = f.length; g--;) {
            var h = f[g];
            if ((!0 !== d || !1 !== ng(h)) && h.isVisible() && (e.assign(a), Qb(e, h.td), h = h.Rb(e, b, c), null !== h && (null !== b && (h = b(h)), null !== h && (null === c || c(h))))) return G.free(e), h
        }
        G.free(e);
        return null
    };
    t.Ci = function(a, b, c, d) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        d instanceof E || d instanceof F || (d = new F);
        if (!1 === this.xj) return d;
        var e = !1;
        null !== this.diagram && this.diagram.viewportBounds.ea(a) && (e = !0);
        for (var f = G.alloc(), g = this.Fa.j, h = g.length; h--;) {
            var k = g[h];
            if ((!0 !== e || !1 !== ng(k)) && k.isVisible()) {
                f.assign(a);
                Qb(f, k.td);
                var l = k;
                k.Ci(f, b, c, d) && (null !== b && (l = b(l)), null === l || null !== c && !c(l) || d.add(l))
            }
        }
        G.free(f);
        return d
    };
    t.lg = function(a, b, c, d, e) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        void 0 === d && (d = !1);
        e instanceof E || e instanceof F || (e = new F);
        if (!1 === this.xj) return e;
        var f = !1;
        null !== this.diagram && this.diagram.viewportBounds.mf(a) && (f = !0);
        for (var g = this.Fa.j, h = g.length; h--;) {
            var k = g[h];
            if ((!0 !== f || !1 !== ng(k)) && k.isVisible()) {
                var l = k;
                k.lg(a, b, c, d, e) && (null !== b && (l = b(l)), null === l || null !== c && !c(l) || e.add(l))
            }
        }
        return e
    };
    t.mg = function(a, b, c, d, e, f) {
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        void 0 === e && (e = !0);
        if (!1 !== e && !0 !== e) {
            if (e instanceof E || e instanceof F) f = e;
            e = !0
        }
        f instanceof E || f instanceof F || (f = new F);
        if (!1 === this.xj) return f;
        var g = !1;
        null !== this.diagram && this.diagram.viewportBounds.ea(a) && (g = !0);
        for (var h = G.alloc(), k = G.alloc(), l = this.Fa.j, m = l.length; m--;) {
            var n = l[m];
            if ((!0 !== g || !1 !== ng(n)) && n.isVisible()) {
                h.assign(a);
                Qb(h, n.td);
                k.h(a.x + b, a.y);
                Qb(k, n.td);
                var p = n;
                n.mg(h, k, c, d, e, f) && (null !== c && (p = c(p)), null ===
                    p || null !== d && !d(p) || f.add(p))
            }
        }
        G.free(h);
        G.free(k);
        return f
    };
    t.kd = function(a, b) {
        if (this.visible) {
            var c = void 0 === b ? a.viewportBounds : b;
            var d = this.Fa.j,
                e = d.length;
            a = Ka();
            b = Ka();
            for (var f = 0; f < e; f++) {
                var g = d[f];
                g.ww = f;
                g instanceof S && !1 === g.Mc || g instanceof pf && null !== g.adornedPart || (Ac(g.actualBounds, c, 10) ? (g.kd(!0), a.push(g)) : (g.kd(!1), null !== g.adornments && 0 < g.adornments.count && b.push(g)))
            }
            for (c = 0; c < a.length; c++)
                for (d = a[c], ci(d), d = d.adornments; d.next();) e = d.value, e.measure(Infinity, Infinity), e.arrange(), e.kd(!0);
            for (c = 0; c < b.length; c++) d = b[c], d.updateAdornments(),
                di(d, !0);
            Oa(a);
            Oa(b)
        }
    };
    t.kc = function(a, b, c) {
        if (this.visible && 0 !== this.lb && (void 0 === c && (c = !0), c || !this.isTemporary)) {
            c = this.Fa.j;
            var d = c.length;
            if (0 !== d) {
                1 !== this.lb && (a.globalAlpha = this.lb);
                var e = this.Ho;
                e.length = 0;
                for (var f = b.scale, g = 0; g < d; g++) {
                    var h = c[g];
                    if (ng(h)) {
                        if (h instanceof S && (h.isOrthogonal && e.push(h), !1 === h.Mc)) continue;
                        var k = h.actualBounds;
                        1 < k.width * f || 1 < k.height * f ? h.kc(a, b) : ei(a, h)
                    }
                }
                a.globalAlpha = 1
            }
        }
    };

    function ei(a, b) {
        var c = b.actualBounds,
            d = b.naturalBounds;
        if (0 !== c.width && 0 !== c.height && !isNaN(c.x) && !isNaN(c.y) && b.isVisible()) {
            var e = b.transform;
            null !== b.areaBackground && (fi(b, a, b.areaBackground, !0, !0, d, c), a.fillRect(c.x, c.y, c.width, c.height));
            null === b.areaBackground && null === b.background && (fi(b, a, "rgba(0,0,0,0.4)", !0, !1, d, c), a.fillRect(c.x, c.y, c.width, c.height));
            null !== b.background && (a.transform(e.m11, e.m12, e.m21, e.m22, e.dx, e.dy), fi(b, a, b.background, !0, !1, d, c), a.fillRect(0, 0, d.width, d.height), e.$s() ||
                (b = 1 / (e.m11 * e.m22 - e.m12 * e.m21), a.transform(e.m22 * b, -e.m12 * b, -e.m21 * b, e.m11 * b, b * (e.m21 * e.dy - e.m22 * e.dx), b * (e.m12 * e.dx - e.m11 * e.dy))))
        }
    }
    t.g = function(a, b, c, d, e) {
        var f = this.diagram;
        null !== f && f.bb(af, a, this, b, c, d, e)
    };
    t.Ji = function(a, b, c) {
        var d = this.Fa;
        b.di = this;
        if (a >= d.count) a = d.count;
        else if (d.N(a) === b) return -1;
        d.Jb(a, b);
        b.Xp(c);
        d = this.diagram;
        null !== d && (c ? d.R() : d.Ji(b));
        gi(this, a, b);
        return a
    };
    t.zc = function(a, b, c) {
        if (!c && b.layer !== this && null !== b.layer) return b.layer.zc(a, b, c);
        var d = this.Fa;
        if (0 > a || a >= d.length) {
            if (a = d.indexOf(b), 0 > a) return -1
        } else if (d.N(a) !== b && (a = d.indexOf(b), 0 > a)) return -1;
        b.Yp(c);
        d.mb(a);
        d = this.diagram;
        null !== d && (c ? d.R() : d.zc(b));
        b.di = null;
        return a
    };

    function gi(a, b, c) {
        b = hi(a, b, c);
        if (c instanceof hg && null !== c && isNaN(c.zOrder)) {
            if (0 !== c.memberParts.count) {
                for (var d = -1, e = a.Fa.j, f = e.length, g = 0; g < f; g++) {
                    var h = e[g];
                    if (h === c && (b = g, 0 <= d)) break;
                    if (0 > d && h.containingGroup === c && (d = g, 0 <= b)) break
                }!(0 > d) && d < b && (e = a.Fa, e.mb(b), e.Jb(d, c))
            }
            c = c.containingGroup;
            null !== c && gi(a, -1, c)
        }
    }

    function hi(a, b, c) {
        var d = c.zOrder;
        if (isNaN(d)) return b;
        a = a.Fa;
        var e = a.count;
        if (1 >= e) return b;
        0 > b && (b = a.indexOf(c));
        if (0 > b) return -1;
        for (var f = b - 1, g = NaN; 0 <= f;) {
            g = a.N(f).zOrder;
            if (!isNaN(g)) break;
            f--
        }
        for (var h = b + 1, k = NaN; h < e;) {
            k = a.N(h).zOrder;
            if (!isNaN(k)) break;
            h++
        }
        if (!isNaN(g) && g > d)
            for (;;) {
                if (-1 === f || g <= d) {
                    f++;
                    if (f === b) break;
                    a.mb(b);
                    a.Jb(f, c);
                    return f
                }
                for (g = NaN; 0 <= --f && (g = a.N(f).zOrder, isNaN(g)););
            } else if (!isNaN(k) && k < d)
                for (;;) {
                    if (h === e || k >= d) {
                        h--;
                        if (h === b) break;
                        a.mb(b);
                        a.Jb(h, c);
                        return h
                    }
                    for (k = NaN; ++h <
                        e && (k = a.N(h).zOrder, isNaN(k)););
                }
        return b
    }
    t.clear = function() {
        for (var a = this.Fa.Ma(), b = a.length, c = 0; c < b; c++) a[c].kd(!1), this.zc(-1, a[c], !1);
        this.Ho.length = 0
    };
    pa.Object.defineProperties(bi.prototype, {
        parts: {
            get: function() {
                return this.Fa.iterator
            }
        },
        partsBackwards: {
            get: function() {
                return this.Fa.iteratorBackwards
            }
        },
        diagram: {
            get: function() {
                return this.F
            }
        },
        name: {
            get: function() {
                return this.Ta
            },
            set: function(a) {
                var b = this.Ta;
                if (b !== a) {
                    var c = this.diagram;
                    if (null !== c)
                        for ("" === b && A("Cannot rename default Layer to: " + a), c = c.layers; c.next();) c.value.name ===
                            a && A("Layer.name is already present in this diagram: " + a);
                    this.Ta = a;
                    this.g("name", b, a);
                    for (a = this.Fa.iterator; a.next();) a.value.layerName = this.Ta
                }
            }
        },
        opacity: {
            get: function() {
                return this.lb
            },
            set: function(a) {
                var b = this.lb;
                b !== a && ((0 > a || 1 < a) && xa(a, "0 <= value <= 1", bi, "opacity"), this.lb = a, this.g("opacity", b, a), a = this.diagram, null !== a && a.R())
            }
        },
        isTemporary: {
            get: function() {
                return this.u
            },
            set: function(a) {
                var b = this.u;
                b !== a && (this.u = a, this.g("isTemporary",
                    b, a))
            }
        },
        visible: {
            get: function() {
                return this.K
            },
            set: function(a) {
                var b = this.K;
                if (b !== a) {
                    this.K = a;
                    this.g("visible", b, a);
                    for (b = this.Fa.iterator; b.next();) b.value.Mb(a);
                    a = this.diagram;
                    null !== a && a.R()
                }
            }
        },
        pickable: {
            get: function() {
                return this.xj
            },
            set: function(a) {
                var b = this.xj;
                b !== a && (this.xj = a, this.g("pickable", b, a))
            }
        },
        isBoundsIncluded: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l !== a && (this.l = a, null !== this.diagram &&
                    this.diagram.Xa())
            }
        },
        allowCopy: {
            get: function() {
                return this.Bh
            },
            set: function(a) {
                var b = this.Bh;
                b !== a && (this.Bh = a, this.g("allowCopy", b, a))
            }
        },
        allowDelete: {
            get: function() {
                return this.Ch
            },
            set: function(a) {
                var b = this.Ch;
                b !== a && (this.Ch = a, this.g("allowDelete", b, a))
            }
        },
        allowTextEdit: {
            get: function() {
                return this.Lh
            },
            set: function(a) {
                var b = this.Lh;
                b !== a && (this.Lh = a, this.g("allowTextEdit", b, a))
            }
        },
        allowGroup: {
            get: function() {
                return this.Dh
            },
            set: function(a) {
                var b = this.Dh;
                b !== a && (this.Dh = a, this.g("allowGroup", b, a))
            }
        },
        allowUngroup: {
            get: function() {
                return this.Mh
            },
            set: function(a) {
                var b = this.Mh;
                b !== a && (this.Mh = a, this.g("allowUngroup", b, a))
            }
        },
        allowLink: {
            get: function() {
                return this.Eh
            },
            set: function(a) {
                var b = this.Eh;
                b !== a && (this.Eh = a, this.g("allowLink", b, a))
            }
        },
        allowRelink: {
            get: function() {
                return this.Gh
            },
            set: function(a) {
                var b =
                    this.Gh;
                b !== a && (this.Gh = a, this.g("allowRelink", b, a))
            }
        },
        allowMove: {
            get: function() {
                return this.Fh
            },
            set: function(a) {
                var b = this.Fh;
                b !== a && (this.Fh = a, this.g("allowMove", b, a))
            }
        },
        allowReshape: {
            get: function() {
                return this.Hh
            },
            set: function(a) {
                var b = this.Hh;
                b !== a && (this.Hh = a, this.g("allowReshape", b, a))
            }
        },
        allowResize: {
            get: function() {
                return this.Ih
            },
            set: function(a) {
                var b = this.Ih;
                b !== a && (this.Ih = a, this.g("allowResize", b, a))
            }
        },
        allowRotate: {
            get: function() {
                return this.Jh
            },
            set: function(a) {
                var b = this.Jh;
                b !== a && (this.Jh = a, this.g("allowRotate", b, a))
            }
        },
        allowSelect: {
            get: function() {
                return this.Kh
            },
            set: function(a) {
                var b = this.Kh;
                b !== a && (this.Kh = a, this.g("allowSelect", b, a))
            }
        }
    });
    bi.prototype.findObjectsNear = bi.prototype.mg;
    bi.prototype.findObjectsIn = bi.prototype.lg;
    bi.prototype.findObjectsAt = bi.prototype.Ci;
    bi.prototype.findObjectAt = bi.prototype.Rb;
    bi.className = "Layer";

    function P(a) {
        function b() {
            w.document.removeEventListener("DOMContentLoaded", b, !1);
            c.setRTL()
        }
        1 < arguments.length && A("Diagram constructor can only take one optional argument, the DIV HTML element or its id.");
        ii || (ji(), ii = !0);
        mb(this);
        lf = this;
        Ya = [];
        this.pb = !0;
        this.Gq = new Nh;
        this.Gq.nb(this);
        this.Hb = 17;
        this.Rn = !1;
        this.nu = "default";
        this.Ia = null;
        var c = this;
        sh && (null !== w.document.body ? this.setRTL() : w.document.addEventListener("DOMContentLoaded", b, !1));
        this.Oa = new E;
        this.wa = this.xa = 0;
        this.Da = null;
        this.ql =
            new Lb;
        this.Yg = this.$c = null;
        this.xv();
        this.Wk = null;
        this.wv();
        this.sa = (new G(NaN, NaN)).freeze();
        this.Yq = this.Ca = 1;
        this.tr = (new G(NaN, NaN)).freeze();
        this.ur = NaN;
        this.Or = 1E-4;
        this.Mr = 100;
        this.ub = new Qc;
        this.Es = (new G(NaN, NaN)).freeze();
        this.ir = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.oi = (new Ic(0, 0, 0, 0)).freeze();
        this.ks = ki;
        this.ns = !1;
        this.gs = this.cs = null;
        this.Xi = li;
        this.Zi = Ed;
        this.Yh = li;
        this.Mn = Ed;
        this.vr = this.sr = Tc;
        this.qc = !0;
        this.Nn = !1;
        this.Fd = new F;
        this.Th = new Lb;
        this.vn = !0;
        this.Rm = 250;
        this.uk = -1;
        this.Sm = (new Ic(16, 16, 16, 16)).freeze();
        this.Kk = this.sd = !1;
        this.Pk = !0;
        this.Uh = new Xe;
        this.Uh.diagram = this;
        this.Ye = new Xe;
        this.Ye.diagram = this;
        this.mj = new Xe;
        this.mj.diagram = this;
        this.ne = this.yf = null;
        this.Il = !1;
        this.Ot = this.Pt = null;
        this.Fq = w.PointerEvent && (cb || fb || gb) && w.navigator && !1 !== w.navigator.msPointerEnabled;
        mi(this);
        this.vi = new F;
        this.Dr = !0;
        this.zs = ni;
        this.Vb = !1;
        this.Bs = sg;
        this.Wa = null;
        oi.add("Model", pi);
        this.da = this.La = this.Ub = null;
        this.Sq = "";
        this.on = "auto";
        this.Pf = this.Rr = this.Rf = this.Sf =
            this.Uf = this.Af = this.Ef = this.zf = null;
        this.nr = !1;
        this.Bf = this.fg = this.Tf = this.Qf = null;
        this.hu = !1;
        this.ku = {};
        this.nl = [null, null];
        this.K = null;
        this.Nt = this.su = this.Am = this.ah = !1;
        this.Xc = !0;
        this.ij = this.Zb = !1;
        this.$b = null;
        var d = this;
        this.vg = function(a) {
            var b = d.partManager;
            if (a.model === b.diagram.model && b.diagram.ca) {
                b.diagram.ca = !1;
                try {
                    var c = a.change;
                    "" === a.modelChange && c === af && b.updateDataBindings(a.object, a.propertyName)
                } finally {
                    b.diagram.ca = !0
                }
            }
        };
        this.zm = function(a) {
            d.partManager.doModelChanged(a)
        };
        this.Jw = !0;
        this.fe = -2;
        this.yj = new Lb;
        this.ju = new E;
        this.Jf = !1;
        this.Ch = this.Bh = this.xq = this.Fc = !0;
        this.yq = !1;
        this.Eq = this.Cq = this.Kh = this.Jh = this.Ih = this.Hh = this.Fh = this.Gh = this.Eh = this.Bq = this.Mh = this.Dh = this.Lh = this.zq = !0;
        this.he = this.Lc = !1;
        this.Dq = this.Aq = this.qr = this.pr = !0;
        this.ms = this.js = 16;
        this.pu = this.hs = !1;
        this.cp = this.ls = null;
        this.qu = this.ru = 0;
        this.fb = (new Ic(5)).freeze();
        this.ps = (new F).freeze();
        this.Nr = 999999999;
        this.rr = (new F).freeze();
        this.Zh = this.gj = this.Ng = !0;
        this.Wh = this.Mg = !1;
        this.ic =
            null;
        this.yg = !0;
        this.ge = !1;
        this.vq = new F;
        this.uw = new F;
        this.Nb = null;
        this.Fo = 1;
        this.Dw = 0;
        this.xe = {
            scale: 1,
            position: new G,
            bounds: new N,
            mx: !1
        };
        this.Iw = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.Cp = (new L(NaN, NaN)).freeze();
        this.tn = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.Er = !1;
        this.br = null;
        qi(this);
        this.Jr = this.lr = this.Ur = this.mw = this.lw = this.nw = this.Rg = this.Vh = this.Vf = null;
        ri(this);
        this.Fb = null;
        this.kr = !1;
        this.Ck = null;
        this.partManager = new pi;
        this.toolManager = new Ua;
        this.toolManager.initializeStandardTools();
        this.currentTool = this.defaultTool = this.toolManager;
        this.ar = null;
        this.Ek = new yf;
        this.Xr = this.Wr = null;
        this.sp = !1;
        this.commandHandler = si();
        this.model = ti();
        this.ah = !0;
        this.layout = new ui;
        this.ah = !1;
        this.pw = this.Rt = null;
        this.ac = 1;
        this.ve = null;
        this.au = 9999;
        this.Te = 1;
        this.cl = 0;
        this.Gr = new G;
        this.xu = 500;
        this.Hq = new G;
        this.Qe = !1;
        this.preventDefault = this.lt = this.hm = this.im = this.gm = this.fm = this.ek = this.gk = this.fk = this.ck = this.dk = this.Tv = this.Lv = this.Mv = this.Nv = this.ni = this.Yo = this.mi = this.Xo = null;
        this.u = !1;
        this.Xh =
            new vi;
        this.ws = !1;
        void 0 !== a && wi(this, a);
        this.pb = !1
    }
    P.prototype.clear = function() {
        this.model.clear();
        xi = null;
        yi = "";
        zi(this, !1);
        this.tn = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.R()
    };

    function zi(a, b) {
        var c = null;
        null !== a.Fb && (c = a.Fb.part);
        a.animationManager.xd();
        for (var d = [], e = a.Oa.length, f = 0; f < e; f++) {
            var g = a.Oa.j[f];
            if (b)
                for (var h = g.parts; h.next();) {
                    var k = h.value;
                    k !== c && null === k.data && d.push(k)
                }
            g.clear()
        }
        a.partManager.clear();
        a.Fd.clear();
        a.Th.clear();
        a.vi.clear();
        a.ps.ha();
        a.ps.clear();
        a.ps.freeze();
        a.rr.ha();
        a.rr.clear();
        a.rr.freeze();
        a.Ck = null;
        La = [];
        null !== c && (a.add(c), a.partManager.parts.remove(c));
        if (b)
            for (b = 0; b < d.length; b++) a.add(d[b])
    }

    function si() {
        return null
    }
    P.prototype.reset = function() {
        this.pb = !0;
        this.clear();
        this.Oa = new E;
        this.xv();
        this.wv();
        this.sa = (new G(NaN, NaN)).freeze();
        this.Ca = 1;
        this.tr = (new G(NaN, NaN)).freeze();
        this.ur = NaN;
        this.Or = 1E-4;
        this.Mr = 100;
        this.Es = (new G(NaN, NaN)).freeze();
        this.ir = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.oi = (new Ic(0, 0, 0, 0)).freeze();
        this.ks = ki;
        this.ns = !1;
        this.gs = this.cs = null;
        this.Xi = li;
        this.Zi = Ed;
        this.Yh = li;
        this.Mn = Ed;
        this.vr = this.sr = Tc;
        this.Rm = 250;
        this.Sm = (new Ic(16, 16, 16, 16)).freeze();
        this.Dr = !0;
        this.zs = ni;
        this.Bs = sg;
        this.on = "auto";
        this.Pf = this.Rr = this.Rf = this.Sf = this.Uf = this.Af = this.Ef = this.zf = null;
        this.nr = !1;
        this.Bf = this.fg = this.Tf = this.Qf = null;
        this.Jf = !1;
        this.Ch = this.Bh = this.xq = this.Fc = !0;
        this.yq = !1;
        this.Dq = this.Aq = this.qr = this.pr = this.Eq = this.Cq = this.Kh = this.Jh = this.Ih = this.Hh = this.Fh = this.Gh = this.Eh = this.Bq = this.Mh = this.Dh = this.Lh = this.zq = !0;
        this.ms = this.js = 16;
        this.fb = (new Ic(5)).freeze();
        this.Nr = 999999999;
        this.ic = null;
        this.Er = !1;
        ri(this);
        this.Fb = null;
        this.partManager = new pi;
        this.toolManager = new Ua;
        this.toolManager.initializeStandardTools();
        this.Xr = this.Wr = this.ar = null;
        this.sp = !1;
        this.Ek.reset();
        this.ql = new Lb;
        this.ql.clear();
        this.currentTool = this.defaultTool = this.toolManager;
        this.commandHandler = si();
        this.ah = !0;
        qi(this);
        this.layout = new ui;
        this.ah = !1;
        this.model = ti();
        this.ge = !1;
        this.Pk = !0;
        this.pb = this.sd = !1;
        this.R();
        this.ne = this.yf = null;
        mi(this);
        this.Sq = ""
    };

    function ri(a) {
        a.Vf = new Lb;
        var b = new U,
            c = new uh;
        c.bind(new Ai("text", "", Qa));
        b.add(c);
        a.nw = b;
        a.Vf.add("", b);
        b = new U;
        c = new uh;
        c.stroke = "brown";
        c.bind(new Ai("text", "", Qa));
        b.add(c);
        a.Vf.add("Comment", b);
        b = new U;
        b.selectable = !1;
        b.avoidable = !1;
        c = new V;
        c.figure = "Ellipse";
        c.fill = "black";
        c.stroke = null;
        c.desiredSize = (new L(3, 3)).ga();
        b.add(c);
        a.Vf.add("LinkLabel", b);
        a.Vh = new Lb;
        b = new hg;
        b.selectionObjectName = "GROUPPANEL";
        b.type = W.Vertical;
        c = new uh;
        c.font = "bold 12pt sans-serif";
        c.bind(new Ai("text", "", Qa));
        b.add(c);
        c = new W(W.Auto);
        c.name = "GROUPPANEL";
        var d = new V;
        d.figure = "Rectangle";
        d.fill = "rgba(128,128,128,0.2)";
        d.stroke = "black";
        c.add(d);
        d = new Wg;
        d.padding = (new Ic(5, 5, 5, 5)).ga();
        c.add(d);
        b.add(c);
        a.lw = b;
        a.Vh.add("", b);
        a.Rg = new Lb;
        b = new S;
        c = new V;
        c.isPanelMain = !0;
        b.add(c);
        c = new V;
        c.toArrow = "Standard";
        c.fill = "black";
        c.stroke = null;
        c.strokeWidth = 0;
        b.add(c);
        a.mw = b;
        a.Rg.add("", b);
        b = new S;
        c = new V;
        c.isPanelMain = !0;
        c.stroke = "brown";
        b.add(c);
        a.Rg.add("Comment", b);
        b = new pf;
        b.type = W.Auto;
        c = new V;
        c.fill = null;
        c.stroke =
            "dodgerblue";
        c.strokeWidth = 3;
        b.add(c);
        c = new Wg;
        c.margin = (new Ic(1.5, 1.5, 1.5, 1.5)).ga();
        b.add(c);
        a.Ur = b;
        a.lr = b;
        b = new pf;
        b.type = W.Link;
        c = new V;
        c.isPanelMain = !0;
        c.fill = null;
        c.stroke = "dodgerblue";
        c.strokeWidth = 3;
        b.add(c);
        a.Jr = b
    }
    P.prototype.setRTL = function(a) {
        a = void 0 === a ? this.div : a;
        null === a && (a = w.document.body);
        var b = va("div");
        b.dir = "rtl";
        b.style.cssText = "font-size: 14px; width: 1px; height: 1px; position: absolute; top: -1000px; overflow: scroll;";
        b.textContent = "A";
        a.appendChild(b);
        var c = "reverse";
        0 < b.scrollLeft ? c = "default" : (b.scrollLeft = 1, 0 === b.scrollLeft && (c = "negative"));
        a.removeChild(b);
        this.nu = c
    };
    P.prototype.setScrollWidth = function(a) {
        a = void 0 === a ? this.div : a;
        null === a && (a = w.document.body);
        var b = 0;
        if (sh) {
            var c = Bi;
            b = Ci;
            null === c && (c = Bi = va("p"), c.style.width = "100%", c.style.height = "200px", c.style.boxSizing = "content-box", b = Ci = va("div"), b.style.position = "absolute", b.style.visibility = "hidden", b.style.width = "200px", b.style.height = "150px", b.style.boxSizing = "content-box", b.appendChild(c));
            b.style.overflow = "hidden";
            a.appendChild(b);
            var d = c.offsetWidth;
            b.style.overflow = "scroll";
            c = c.offsetWidth;
            d === c && (c =
                b.clientWidth);
            a.removeChild(b);
            b = d - c;
            0 !== b || lb || (b = 11)
        }
        this.Hb = b
    };
    P.prototype.gb = function(a) {
        a.classType === P && (this.autoScale = a)
    };
    P.prototype.toString = function(a) {
        void 0 === a && (a = 0);
        var b = "";
        this.div && this.div.id && (b = this.div.id);
        b = 'Diagram "' + b + '"';
        if (0 >= a) return b;
        for (var c = this.Oa.iterator; c.next();) b += "\n  " + c.value.toString(a - 1);
        return b
    };

    function Gi(a) {
        var b = a.Da.Ga;
        b instanceof HTMLCanvasElement && (a.Fq ? (b.addEventListener("pointerdown", a.fm, !1), b.addEventListener("pointermove", a.gm, !1), b.addEventListener("pointerup", a.im, !1), b.addEventListener("pointerout", a.hm, !1)) : (b.addEventListener("touchstart", a.Nv, !1), b.addEventListener("touchmove", a.Mv, !1), b.addEventListener("touchend", a.Lv, !1), b.addEventListener("mousemove", a.dk, !1), b.addEventListener("mousedown", a.ck, !1), b.addEventListener("mouseup", a.fk, !1), b.addEventListener("mouseout",
            a.ek, !1)), b.addEventListener("mouseenter", a.yy, !1), b.addEventListener("mouseleave", a.zy, !1), b.addEventListener("wheel", a.gk, !1), b.addEventListener("keydown", a.nz, !1), b.addEventListener("keyup", a.oz, !1), b.addEventListener("blur", a.ky, !1), b.addEventListener("focus", a.ly, !1), b.addEventListener("selectstart", function(a) {
            a.preventDefault();
            return !1
        }, !1), b.addEventListener("contextmenu", function(a) {
            a.preventDefault();
            return !1
        }, !1), b.addEventListener("gesturestart", function(b) {
            a.toolManager.gestureBehavior !==
                sf && (a.toolManager.gestureBehavior === rf ? b.preventDefault() : a.Qe && a.lastInput.handled || (b.preventDefault(), a.Fo = a.scale, a.currentTool.doCancel()))
        }, !1), b.addEventListener("gesturechange", function(b) {
            if (a.toolManager.gestureBehavior !== sf)
                if (a.toolManager.gestureBehavior === rf) b.preventDefault();
                else if (!a.Qe || !a.lastInput.handled) {
                b.preventDefault();
                var c = b.scale;
                if (null !== a.Fo) {
                    var e = a.Da.getBoundingClientRect();
                    b = new G(b.pageX - window.scrollX - a.xa / e.width * e.left, b.pageY - window.scrollY - a.wa / e.height *
                        e.top);
                    c = a.Fo * c;
                    e = a.commandHandler;
                    if (c !== a.scale && e.canResetZoom(c)) {
                        var f = a.zoomPoint;
                        a.zoomPoint = b;
                        e.resetZoom(c);
                        a.zoomPoint = f
                    }
                }
            }
        }, !1), w.addEventListener("resize", a.Tv, !1))
    }

    function Tf(a, b) {
        null !== a.ve && (a.ve = null, b && a.lt())
    }
    P.prototype.computePixelRatio = function() {
        return null !== this.ve ? this.ve : w.devicePixelRatio || 1
    };
    P.prototype.doMouseMove = function() {
        this.currentTool.doMouseMove()
    };
    P.prototype.doMouseDown = function() {
        this.currentTool.doMouseDown()
    };
    P.prototype.doMouseUp = function() {
        this.currentTool.doMouseUp()
    };
    P.prototype.doMouseWheel = function() {
        this.currentTool.doMouseWheel()
    };
    P.prototype.doKeyDown = function() {
        this.currentTool.doKeyDown()
    };
    P.prototype.doKeyUp = function() {
        this.currentTool.doKeyUp()
    };
    P.prototype.doFocus = function() {
        this.focus()
    };
    P.prototype.focus = function() {
        if (this.Da)
            if (this.scrollsPageOnFocus) this.Da.focus();
            else {
                var a = w.scrollX || w.pageXOffset,
                    b = w.scrollY || w.pageYOffset;
                this.Da.focus();
                w.scrollTo(a, b)
            }
    };
    P.prototype.ly = function() {
        this.F.aa("GainedFocus")
    };
    P.prototype.ky = function() {
        this.F.aa("LostFocus")
    };

    function Qh(a) {
        if (null !== a.Da) {
            var b = a.Ia;
            if (0 !== b.clientWidth && 0 !== b.clientHeight) {
                a.setScrollWidth();
                var c = a.Wh ? a.Hb : 0,
                    d = a.Mg ? a.Hb : 0,
                    e = a.ac;
                a.ac = a.computePixelRatio();
                a.ac !== e && (a.Nn = !0, a.ec());
                if (b.clientWidth !== a.xa + c || b.clientHeight !== a.wa + d) a.gj = !0, a.qc = !0, b = a.layout, null !== b && b.isViewportSized && a.autoScale === li && (a.Kk = !0, b.B()), a.Zb || a.ec()
            }
        }
    }

    function qi(a) {
        var b = new bi;
        b.name = "Background";
        a.Ml(b);
        b = new bi;
        b.name = "";
        a.Ml(b);
        b = new bi;
        b.name = "Foreground";
        a.Ml(b);
        b = new bi;
        b.name = "Adornment";
        b.isTemporary = !0;
        a.Ml(b);
        b = new bi;
        b.name = "Tool";
        b.isTemporary = !0;
        b.isBoundsIncluded = !0;
        a.Ml(b);
        b = new bi;
        b.name = "Grid";
        b.allowSelect = !1;
        b.pickable = !1;
        b.isTemporary = !0;
        a.Mw(b, a.Wl("Background"))
    }

    function Hi(a) {
        a.Fb = new W(W.Grid);
        a.Fb.name = "GRID";
        var b = new V;
        b.figure = "LineH";
        b.stroke = "lightgray";
        b.strokeWidth = .5;
        b.interval = 1;
        a.Fb.add(b);
        b = new V;
        b.figure = "LineH";
        b.stroke = "gray";
        b.strokeWidth = .5;
        b.interval = 5;
        a.Fb.add(b);
        b = new V;
        b.figure = "LineH";
        b.stroke = "gray";
        b.strokeWidth = 1;
        b.interval = 10;
        a.Fb.add(b);
        b = new V;
        b.figure = "LineV";
        b.stroke = "lightgray";
        b.strokeWidth = .5;
        b.interval = 1;
        a.Fb.add(b);
        b = new V;
        b.figure = "LineV";
        b.stroke = "gray";
        b.strokeWidth = .5;
        b.interval = 5;
        a.Fb.add(b);
        b = new V;
        b.figure = "LineV";
        b.stroke = "gray";
        b.strokeWidth = 1;
        b.interval = 10;
        a.Fb.add(b);
        b = new T;
        b.add(a.Fb);
        b.layerName = "Grid";
        b.zOrder = 0;
        b.isInDocumentBounds = !1;
        b.isAnimated = !1;
        b.pickable = !1;
        b.locationObjectName = "GRID";
        a.add(b);
        a.partManager.parts.remove(b);
        a.Fb.visible = !1
    }

    function Ii() {
        this.F.pu ? this.F.pu = !1 : this.F.isEnabled ? this.F.Yw(this) : Ji(this.F)
    }

    function Ki(a) {
        this.F.isEnabled ? (this.F.ru = a.target.scrollTop, this.F.qu = a.target.scrollLeft) : Ji(this.F)
    }
    P.prototype.Yw = function(a) {
        if (null !== this.Da) {
            this.hs = !0;
            var b = this.documentBounds,
                c = this.viewportBounds,
                d = this.oi,
                e = b.x - d.left,
                f = b.y - d.top,
                g = b.width + d.left + d.right,
                h = b.height + d.top + d.bottom,
                k = b.right + d.right;
            d = b.bottom + d.bottom;
            var l = c.x;
            b = c.y;
            var m = c.width,
                n = c.height,
                p = c.right,
                q = c.bottom;
            c = this.scale;
            var r = a.scrollLeft;
            if (this.Rn) switch (this.nu) {
                case "negative":
                    r = r + a.scrollWidth - a.clientWidth;
                    break;
                case "reverse":
                    r = a.scrollWidth - r - a.clientWidth
            }
            var u = r;
            m < g || n < h ? (r = G.allocAt(this.position.x, this.position.y),
                this.allowHorizontalScroll && this.qu !== u && (r.x = u / c + e, this.qu = u), this.allowVerticalScroll && this.ru !== a.scrollTop && (r.y = a.scrollTop / c + f, this.ru = a.scrollTop), this.position = r, G.free(r), this.gj = this.hs = !1) : (r = G.alloc(), a.Sx && this.allowHorizontalScroll && (e < l && (this.position = r.h(u + e, this.position.y)), k > p && (this.position = r.h(-(this.ls.scrollWidth - this.xa) + u - this.xa / c + k, this.position.y))), a.Tx && this.allowVerticalScroll && (f < b && (this.position = r.h(this.position.x, a.scrollTop + f)), d > q && (this.position = r.h(this.position.x,
                -(this.ls.scrollHeight - this.wa) + a.scrollTop - this.wa / c + d))), G.free(r), Li(this), this.gj = this.hs = !1, b = this.documentBounds, c = this.viewportBounds, k = b.right, p = c.right, d = b.bottom, q = c.bottom, e = b.x, l = c.x, f = b.y, b = c.y, m >= g && e >= l && k <= p && (this.cp.style.width = "1px"), n >= h && f >= b && d <= q && (this.cp.style.height = "1px"))
        }
    };
    P.prototype.computeBounds = function() {
        0 < this.Fd.count && Mi(this);
        return Ni(this)
    };

    function Ni(a) {
        if (a.fixedBounds.s()) {
            var b = a.fixedBounds.copy();
            b.Jp(a.fb);
            return b
        }
        for (var c = !0, d = a.Oa.j, e = d.length, f = 0; f < e; f++) {
            var g = d[f];
            if (g.visible && (!g.isTemporary || g.isBoundsIncluded)) {
                g = g.Fa.j;
                for (var h = g.length, k = 0; k < h; k++) {
                    var l = g[k];
                    l.isInDocumentBounds && l.isVisible() && (l = l.actualBounds, l.s() && (c ? (c = !1, b = l.copy()) : b.Wc(l)))
                }
            }
        }
        c && (b = new N(0, 0, 0, 0));
        b.Jp(a.fb);
        return b
    }
    P.prototype.computePartsBounds = function(a, b) {
        void 0 === b && (b = !1);
        var c = null;
        if (Ea(a))
            for (var d = 0; d < a.length; d++) {
                var e = a[d];
                !b && e instanceof S || (e.bc(), null === c ? c = e.actualBounds.copy() : c.Wc(e.actualBounds))
            } else
                for (a = a.iterator; a.next();) d = a.value, !b && d instanceof S || (d.bc(), null === c ? c = d.actualBounds.copy() : c.Wc(d.actualBounds));
        return null === c ? new N(NaN, NaN, 0, 0) : c
    };

    function Oi(a, b) {
        if ((b || a.ge) && !a.pb && null !== a.Da && !a.animationManager.isAnimating && a.documentBounds.s()) {
            a.pb = !0;
            var c = a.Xi;
            b && a.Yh !== li && (c = a.Yh);
            var d = c !== li ? Pi(a, c) : a.scale;
            c = a.viewportBounds.copy();
            var e = a.xa / d,
                f = a.wa / d,
                g = null,
                h = a.animationManager;
            h.sb && (g = a.sa.copy());
            var k = a.Zi,
                l = a.Mn;
            b && !k.hb() && (l.hb() || l.Lb()) && (k = l.Lb() ? dd : l);
            Qi(a, a.documentBounds, e, f, k, b);
            null !== g && $h(h, g, a.sa);
            b = a.scale;
            a.scale = d;
            a.pb = !1;
            d = a.viewportBounds;
            d.Pa(c) || a.hq(c, d, b, !1)
        }
    }

    function Pi(a, b) {
        var c = a.Yq;
        if (null === a.Da) return c;
        a.Ng && Ri(a, a.computeBounds());
        var d = a.documentBounds;
        if (!d.s()) return c;
        var e = d.width;
        d = d.height;
        var f = a.xa,
            g = a.wa,
            h = f / e,
            k = g / d;
        return b === Si ? (b = Math.min(k, h), b > c && (b = c), b < a.minScale && (b = a.minScale), b > a.maxScale && (b = a.maxScale), b) : b === Ti ? (b = k > h ? (g - a.Hb) / d : (f - a.Hb) / e, b > c && (b = c), b < a.minScale && (b = a.minScale), b > a.maxScale && (b = a.maxScale), b) : a.scale
    }
    P.prototype.zoomToFit = function() {
        this.scale = Pi(this, Si);
        this.scrollMode !== ki && Qi(this, this.documentBounds, this.xa / this.Ca, this.wa / this.Ca, this.Zi, !0)
    };
    t = P.prototype;
    t.Tz = function(a, b) {
        void 0 === b && (b = Si);
        var c = a.width,
            d = a.height;
        if (!(0 === c || 0 === d || isNaN(c) && isNaN(d))) {
            var e = 1;
            if (b === Si || b === Ti)
                if (isNaN(c)) e = this.viewportBounds.height * this.scale / d;
                else if (isNaN(d)) e = this.viewportBounds.width * this.scale / c;
            else {
                e = this.xa;
                var f = this.wa;
                e = b === Ti ? f / d > e / c ? (f - (this.Mg ? this.Hb : 0)) / d : (e - (this.Wh ? this.Hb : 0)) / c : Math.min(f / d, e / c)
            }
            this.scale = e;
            this.position = new G(a.x, a.y)
        }
    };
    t.ey = function(a, b) {
        this.Ng && Ri(this, this.computeBounds());
        var c = this.documentBounds,
            d = this.viewportBounds;
        this.position = new G(c.x + (a.x * c.width + a.offsetX) - (b.x * d.width - b.offsetX), c.y + (a.y * c.height + a.offsetY) - (b.y * d.height - b.offsetY))
    };

    function Qi(a, b, c, d, e, f) {
        a.sa.ha();
        var g = a.sa,
            h = g.x,
            k = g.y;
        if (f || a.scrollMode === ki) e.hb() && (c > b.width && (h = b.x + (e.x * b.width + e.offsetX) - (e.x * c - e.offsetX)), d > b.height && (k = b.y + (e.y * b.height + e.offsetY) - (e.y * d - e.offsetY))), e = a.oi, f = c - b.width, c < b.width + e.left + e.right ? (h = Math.min(h + c / 2, b.right + Math.max(f, e.right) - c / 2), h = Math.max(h, b.left - Math.max(f, e.left) + c / 2), h -= c / 2) : h > b.left ? h = b.left : h < b.right - c && (h = b.right - c), c = d - b.height, d < b.height + e.top + e.bottom ? (k = Math.min(k + d / 2, b.bottom + Math.max(c, e.bottom) - d / 2), k =
            Math.max(k, b.top - Math.max(c, e.top) + d / 2), k -= d / 2) : k > b.top ? k = b.top : k < b.bottom - d && (k = b.bottom - d);
        g.x = isFinite(h) ? h : -a.fb.left;
        g.y = isFinite(k) ? k : -a.fb.top;
        null !== a.positionComputation && (b = a.positionComputation(a, g), g.x = b.x, g.y = b.y);
        a.sa.freeze()
    }
    t.Xl = function(a, b) {
        void 0 === b && (b = !0);
        if (b) {
            if (a = fg(this, a, function(a) {
                    return a.part
                }, function(a) {
                    return a.canSelect()
                }), a instanceof T) return a
        } else if (a = fg(this, a, function(a) {
                return a.part
            }), a instanceof T) return a;
        return null
    };
    t.Rb = function(a, b, c) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        Mi(this);
        for (var d = this.Oa.iteratorBackwards; d.next();) {
            var e = d.value;
            if (e.visible && (e = e.Rb(a, b, c), null !== e)) return e
        }
        return null
    };

    function fg(a, b, c, d) {
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        Mi(a);
        for (a = a.Oa.iteratorBackwards; a.next();) {
            var e = a.value;
            if (e.visible && !e.isTemporary && (e = e.Rb(b, c, d), null !== e)) return e
        }
        return null
    }
    t.Iy = function(a, b, c) {
        void 0 === b && (b = !0);
        return Ui(this, a, function(a) {
            return a.part
        }, b ? function(a) {
            return a instanceof T && a.canSelect()
        } : null, c)
    };

    function Ui(a, b, c, d, e) {
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        e instanceof E || e instanceof F || (e = new F);
        Mi(a);
        for (a = a.Oa.iteratorBackwards; a.next();) {
            var f = a.value;
            f.visible && !f.isTemporary && f.Ci(b, c, d, e)
        }
        return e
    }
    t.Ci = function(a, b, c, d) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        d instanceof E || d instanceof F || (d = new F);
        Mi(this);
        for (var e = this.Oa.iteratorBackwards; e.next();) {
            var f = e.value;
            f.visible && f.Ci(a, b, c, d)
        }
        return d
    };
    t.gx = function(a, b, c, d) {
        void 0 === b && (b = !1);
        void 0 === c && (c = !0);
        return Vi(this, a, function(a) {
            return a instanceof T && (!c || a.canSelect())
        }, b, d)
    };
    t.lg = function(a, b, c, d, e) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        void 0 === d && (d = !1);
        e instanceof E || e instanceof F || (e = new F);
        Mi(this);
        for (var f = this.Oa.iteratorBackwards; f.next();) {
            var g = f.value;
            g.visible && g.lg(a, b, c, d, e)
        }
        return e
    };

    function Vi(a, b, c, d, e) {
        var f = null;
        void 0 === f && (f = null);
        void 0 === c && (c = null);
        void 0 === d && (d = !1);
        e instanceof E || e instanceof F || (e = new F);
        Mi(a);
        for (a = a.Oa.iteratorBackwards; a.next();) {
            var g = a.value;
            g.visible && !g.isTemporary && g.lg(b, f, c, d, e)
        }
        return e
    }
    t.Jy = function(a, b, c, d, e) {
        void 0 === c && (c = !0);
        void 0 === d && (d = !0);
        return Wi(this, a, b, function(a) {
            return a instanceof T && (!d || a.canSelect())
        }, c, e)
    };
    t.mg = function(a, b, c, d, e, f) {
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        void 0 === e && (e = !0);
        if (!1 !== e && !0 !== e) {
            if (e instanceof E || e instanceof F) f = e;
            e = !0
        }
        f instanceof E || f instanceof F || (f = new F);
        Mi(this);
        for (var g = this.Oa.iteratorBackwards; g.next();) {
            var h = g.value;
            h.visible && h.mg(a, b, c, d, e, f)
        }
        return f
    };

    function Wi(a, b, c, d, e, f) {
        var g = null;
        void 0 === g && (g = null);
        void 0 === d && (d = null);
        void 0 === e && (e = !0);
        if (!1 !== e && !0 !== e) {
            if (e instanceof E || e instanceof F) f = e;
            e = !0
        }
        f instanceof E || f instanceof F || (f = new F);
        Mi(a);
        for (a = a.Oa.iteratorBackwards; a.next();) {
            var h = a.value;
            h.visible && !h.isTemporary && h.mg(b, c, g, d, e, f)
        }
        return f
    }
    P.prototype.acceptEvent = function(a) {
        return Xi(this, a, a instanceof MouseEvent)
    };

    function Xi(a, b, c) {
        var d = a.Ye;
        a.Ye = a.mj;
        a.mj = d;
        d.diagram = a;
        d.event = b;
        c ? Yi(a, b, d) : (d.viewPoint = a.Ye.viewPoint, d.documentPoint = a.Ye.documentPoint);
        a = 0;
        b.ctrlKey && (a += 1);
        b.altKey && (a += 2);
        b.shiftKey && (a += 4);
        b.metaKey && (a += 8);
        d.modifiers = a;
        d.button = b.button;
        void 0 === b.buttons || bb || (d.buttons = b.buttons);
        ib && 0 === b.button && b.ctrlKey && (d.button = 2);
        d.down = !1;
        d.up = !1;
        d.clickCount = 1;
        d.delta = 0;
        d.handled = !1;
        d.bubbles = !1;
        d.timestamp = b.timeStamp;
        d.isMultiTouch = !1;
        d.targetDiagram = Zi(b);
        d.targetObject = null;
        return d
    }

    function Zi(a) {
        var b = a.target.F;
        if (!b) {
            var c = a.path;
            c || "function" !== typeof a.composedPath || (c = a.composedPath());
            c && c[0] && (b = c[0].F)
        }
        return b ? b : null
    }

    function $i(a, b, c, d) {
        var e = aj(a, b, !0, !1, !0, d);
        Yi(a, c, e);
        e.targetDiagram = Zi(b);
        e.targetObject = null;
        d || e.clone(a.Uh);
        return e
    }

    function bj(a, b, c, d) {
        var e;
        d = aj(a, b, !1, !1, !1, d);
        null !== c ? ((e = w.document.elementFromPoint(c.clientX, c.clientY)) && e.F ? (b = c, c = e.F) : (b = void 0 !== b.targetTouches ? b.targetTouches[0] : b, c = a), d.targetDiagram = c, Yi(a, b, d)) : null !== a.Ye ? (d.documentPoint = a.Ye.documentPoint, d.viewPoint = a.Ye.viewPoint, d.targetDiagram = a.Ye.targetDiagram) : null !== a.Uh && (d.documentPoint = a.Uh.documentPoint, d.viewPoint = a.Uh.viewPoint, d.targetDiagram = a.Uh.targetDiagram);
        d.targetObject = null;
        return d
    }

    function aj(a, b, c, d, e, f) {
        var g = a.Ye;
        a.Ye = a.mj;
        a.mj = g;
        g.diagram = a;
        g.clickCount = 1;
        var h = g.delta = 0;
        b.ctrlKey && (h += 1);
        b.altKey && (h += 2);
        b.shiftKey && (h += 4);
        b.metaKey && (h += 8);
        g.modifiers = h;
        g.button = 0;
        g.buttons = 1;
        g.event = b;
        g.timestamp = b.timeStamp;
        a.Fq && b instanceof w.PointerEvent && "touch" !== b.pointerType && (g.button = b.button, void 0 === b.buttons || bb || (g.buttons = b.buttons), ib && 0 === b.button && b.ctrlKey && (g.button = 2));
        g.down = c;
        g.up = d;
        g.handled = !1;
        g.bubbles = e;
        g.isMultiTouch = f;
        return g
    }

    function cj(a, b) {
        if (a.bubbles) return !0;
        void 0 !== b.stopPropagation && b.stopPropagation();
        b.preventDefault();
        b.cancelBubble = !0;
        return !1
    }
    P.prototype.nz = function(a) {
        var b = this.F;
        if (!this.F.isEnabled) return !1;
        var c = Xi(b, a, !1);
        c.key = String.fromCharCode(a.which);
        c.down = !0;
        switch (a.which) {
            case 8:
                c.key = "Backspace";
                break;
            case 33:
                c.key = "PageUp";
                break;
            case 34:
                c.key = "PageDown";
                break;
            case 35:
                c.key = "End";
                break;
            case 36:
                c.key = "Home";
                break;
            case 37:
                c.key = "Left";
                break;
            case 38:
                c.key = "Up";
                break;
            case 39:
                c.key = "Right";
                break;
            case 40:
                c.key = "Down";
                break;
            case 45:
                c.key = "Insert";
                break;
            case 46:
                c.key = "Del";
                break;
            case 48:
                c.key = "0";
                break;
            case 187:
            case 61:
            case 107:
                c.key =
                    "Add";
                break;
            case 189:
            case 173:
            case 109:
                c.key = "Subtract";
                break;
            case 27:
                c.key = "Esc"
        }
        b.doKeyDown();
        return cj(c, a)
    };
    P.prototype.oz = function(a) {
        var b = this.F;
        if (!b.isEnabled) return !1;
        var c = Xi(b, a, !1);
        c.key = String.fromCharCode(a.which);
        c.up = !0;
        switch (a.which) {
            case 8:
                c.key = "Backspace";
                break;
            case 33:
                c.key = "PageUp";
                break;
            case 34:
                c.key = "PageDown";
                break;
            case 35:
                c.key = "End";
                break;
            case 36:
                c.key = "Home";
                break;
            case 37:
                c.key = "Left";
                break;
            case 38:
                c.key = "Up";
                break;
            case 39:
                c.key = "Right";
                break;
            case 40:
                c.key = "Down";
                break;
            case 45:
                c.key = "Insert";
                break;
            case 46:
                c.key = "Del"
        }
        b.doKeyUp();
        return cj(c, a)
    };
    P.prototype.yy = function(a) {
        var b = this.F;
        if (!b.isEnabled) return !1;
        var c = Xi(b, a, !0);
        null !== b.mouseEnter && b.mouseEnter(c);
        return cj(c, a)
    };
    P.prototype.zy = function(a) {
        var b = this.F;
        if (!b.isEnabled) return !1;
        var c = Xi(b, a, !0);
        null !== b.mouseLeave && b.mouseLeave(c);
        return cj(c, a)
    };
    P.prototype.getMouse = function(a) {
        var b = this.Da;
        if (null === b) return new G(0, 0);
        var c = b.getBoundingClientRect();
        b = a.clientX - this.xa / c.width * c.left;
        a = a.clientY - this.wa / c.height * c.top;
        return null !== this.ub ? Qb(new G(b, a), this.ub) : new G(b, a)
    };

    function Yi(a, b, c) {
        var d = a.Da,
            e = a.xa,
            f = a.wa,
            g = 0,
            h = 0;
        null !== d && (d = d.getBoundingClientRect(), g = b.clientX - e / d.width * d.left, h = b.clientY - f / d.height * d.top);
        c.viewPoint.h(g, h);
        null !== a.ub ? (b = G.allocAt(g, h), a.ub.Vd(b), c.documentPoint.assign(b), G.free(b)) : c.documentPoint.h(g, h)
    }

    function Ye(a, b, c, d) {
        if (void 0 !== b.targetTouches) {
            if (2 > b.targetTouches.length) return;
            b = b.targetTouches[c]
        } else if (null !== a.nl[0]) b = a.nl[c];
        else return;
        c = a.Da;
        null !== c && (c = c.getBoundingClientRect(), d.h(b.clientX - a.xa / c.width * c.left, b.clientY - a.wa / c.height * c.top))
    }
    t = P.prototype;
    t.Xa = function() {
        this.Ng || (this.Ng = !0, this.ec(!0))
    };

    function Zh(a) {
        a.Zb || Mi(a);
        a.Ng && Ri(a, a.computeBounds())
    }
    t.yh = function() {
        this.pb || this.Zb || (this.R(), dj(this), Li(this), this.Xa(), this.hd())
    };
    t.mz = function() {
        return this.sd
    };
    t.ty = function(a) {
        void 0 === a && (a = null);
        var b = this.animationManager,
            c = b.isEnabled;
        b.xd();
        b.isEnabled = !1;
        og(this);
        this.ge = !1;
        b.isEnabled = c;
        null !== a && ua(a, 1)
    };
    t.ec = function(a) {
        void 0 === a && (a = !1);
        if (!0 !== this.sd && !(this.pb || !1 === a && this.Zb)) {
            this.sd = !0;
            var b = this;
            w.requestAnimationFrame(function() {
                b.sd && b.hd()
            })
        }
    };
    t.hd = function() {
        if (!this.Pk || this.sd) this.Pk && (this.Pk = !1), og(this)
    };

    function ej(a, b) {
        a.animationManager.isAnimating || a.pb || !a.gj || Ji(a) || (b && Mi(a), Oi(a, !1))
    }

    function og(a, b) {
        if (!a.Zb && (a.sd = !1, null !== a.Ia || a.Cp.s())) {
            a.Zb = !0;
            var c = a.animationManager,
                d = a.ju;
            if (!c.isTicking && 0 !== d.length) {
                for (var e = d.j, f = e.length, g = 0; g < f; g++) {
                    var h = e[g];
                    fj(h, !1);
                    h.o()
                }
                d.clear()
            }
            d = a.uw;
            0 < d.count && (d.each(function(a) {
                a.Sv()
            }), d.clear());
            e = d = !1;
            c.isAnimating && (e = !0, d = a.skipsUndoManager, a.skipsUndoManager = !0);
            c.sb || Qh(a);
            ej(a, !1);
            null !== a.Fb && (a.Fb.visible && !a.kr && (gj(a), a.kr = !0), !a.Fb.visible && a.kr && (a.kr = !1));
            Mi(a);
            f = !1;
            if (!a.ge || a.yg) a.ge ? hj(a, !a.Kk) : (a.Aa("Initial Layout"),
                !1 === c.isEnabled && c.xd(), hj(a, !1)), f = !0;
            a.Kk = !1;
            Mi(a);
            a.su || c.isAnimating || Zh(a);
            ej(a, !0);
            f && (a.ge || ij(a), a.aa("LayoutCompleted"));
            Mi(a);
            f && !a.ge && (a.ge = !0, a.$a("Initial Layout"), a.skipsUndoManager || a.undoManager.clear(), ua(function() {
                a.isModified = !1
            }, 1));
            a.Gu();
            Ph(c);
            b || a.kc(a.$c);
            e && (a.skipsUndoManager = d);
            a.Zb = !1
        }
    }

    function ij(a) {
        var b = a.Oa.j;
        a.kd(b, b.length, a);
        a.Yh !== li ? a.scale = Pi(a, a.Yh) : a.Xi !== li ? a.scale = Pi(a, a.Xi) : (b = a.initialScale, isFinite(b) && 0 < b && (a.scale = b));
        b = a.initialPosition;
        if (b.s()) a.position = b;
        else {
            b = G.alloc();
            b.Pi(a.documentBounds, a.initialDocumentSpot);
            var c = a.viewportBounds;
            c = N.allocAt(0, 0, c.width, c.height);
            var d = G.alloc();
            d.Pi(c, a.initialViewportSpot);
            d.h(b.x - d.x, b.y - d.y);
            a.position = d;
            N.free(c);
            G.free(d);
            G.free(b);
            dj(a);
            ej(a, !0);
            Oi(a, !0)
        }
        a.aa("InitialLayoutCompleted");
        gj(a)
    }

    function Mi(a) {
        if ((a.Zb || !a.animationManager.isAnimating) && 0 !== a.Fd.count) {
            for (var b = 0; 23 > b; b++) {
                var c = a.Fd.iterator;
                if (null === c || 0 === a.Fd.count) break;
                a.Fd = new F;
                a.Sv(c, a.Fd)
            }
            a.nodes.each(function(a) {
                a instanceof hg && 0 !== (a.Z & 65536) !== !1 && (a.Z = a.Z ^ 65536)
            })
        }
    }
    t.Sv = function(a, b) {
        for (a.reset(); a.next();) {
            var c = a.value;
            !c.dc() || c instanceof hg || (c.Li() ? (c.measure(Infinity, Infinity), c.arrange()) : b.add(c))
        }
        for (a.reset(); a.next();) c = a.value, c instanceof hg && c.isVisible() && jj(this, c);
        for (a.reset(); a.next();) c = a.value, c instanceof S && c.isVisible() && (c.Li() ? (c.measure(Infinity, Infinity), c.arrange()) : b.add(c));
        for (a.reset(); a.next();) c = a.value, c instanceof pf && c.isVisible() && (c.Li() ? (c.measure(Infinity, Infinity), c.arrange()) : b.add(c))
    };

    function jj(a, b) {
        for (var c = Ka(), d = Ka(), e = b.memberParts; e.next();) {
            var f = e.value;
            f.isVisible() && (f instanceof hg ? (kj(f) || lj(f) || mj(f)) && jj(a, f) : f instanceof S ? f.fromNode === b || f.toNode === b ? d.push(f) : c.push(f) : (f.measure(Infinity, Infinity), f.arrange()))
        }
        a = c.length;
        for (e = 0; e < a; e++) f = c[e], f.measure(Infinity, Infinity), f.arrange();
        Oa(c);
        b.measure(Infinity, Infinity);
        b.arrange();
        a = d.length;
        for (b = 0; b < a; b++) c = d[b], c.measure(Infinity, Infinity), c.arrange();
        Oa(d)
    }
    t.kd = function(a, b, c, d) {
        if (this.Zh || this.animationManager.isAnimating)
            for (var e = 0; e < b; e++) a[e].kd(c, d)
    };
    t.kc = function(a, b) {
        void 0 === b && (b = null);
        if (null !== this.Ia) {
            null === this.Da && A("No canvas specified");
            var c = this.animationManager;
            if (!c.sb) {
                var d = new Date;
                nj(this);
                if ("0" !== this.Ia.style.opacity) {
                    var e = a !== this.$c,
                        f = this.Oa.j,
                        g = f.length,
                        h = this;
                    this.kd(f, g, h);
                    if (e) a.Sc(!0), Li(this);
                    else if (!this.qc && null === b && !c.isAnimating) return;
                    g = this.sa;
                    var k = this.Ca,
                        l = Math.round(g.x * k) / k,
                        m = Math.round(g.y * k) / k;
                    c = this.ub;
                    c.reset();
                    1 !== k && c.scale(k);
                    0 === g.x && 0 === g.y || c.translate(-l, -m);
                    k = this.ac;
                    a.setTransform(1, 0,
                        0, 1, 0, 0);
                    a.scale(k, k);
                    a.clearRect(0, 0, this.xa, this.wa);
                    a.setTransform(1, 0, 0, 1, 0, 0);
                    a.scale(k, k);
                    a.transform(c.m11, c.m12, c.m21, c.m22, c.dx, c.dy);
                    l = null !== b ? function(c) {
                        var d = b;
                        if (c.visible && 0 !== c.lb) {
                            var e = c.Fa.j,
                                f = e.length;
                            if (0 !== f) {
                                1 !== c.lb && (a.globalAlpha = c.lb);
                                c = c.Ho;
                                c.length = 0;
                                for (var g = h.scale, k = 0; k < f; k++) {
                                    var l = e[k];
                                    if (ng(l) && !d.contains(l)) {
                                        if (l instanceof S && (l.isOrthogonal && c.push(l), !1 === l.Mc)) continue;
                                        var m = l.actualBounds;
                                        1 < m.width * g || 1 < m.height * g ? l.kc(a, h) : ei(a, l)
                                    }
                                }
                                a.globalAlpha = 1
                            }
                        }
                    } : function(b) {
                        b.kc(a,
                            h)
                    };
                    oj(this, a);
                    g = f.length;
                    for (m = 0; m < g; m++) a.setTransform(1, 0, 0, 1, 0, 0), a.scale(k, k), a.transform(c.m11, c.m12, c.m21, c.m22, c.dx, c.dy), l(f[m]);
                    this.Xh && pj(this.Xh, this) && this.br();
                    e ? (this.$c.Sc(!0), Li(this)) : this.qc = this.Zh = !1;
                    d = +new Date - +d;
                    null === this.ve && (this.au = d)
                }
            }
        }
    };

    function qj(a, b, c, d, e, f, g, h, k, l) {
        if (null !== a.Ia) {
            null === a.Da && A("No canvas specified");
            void 0 === g && (g = null);
            void 0 === h && (h = null);
            void 0 === k && (k = !1);
            void 0 === l && (l = !1);
            nj(a);
            a.$c.Sc(!0);
            Li(a);
            a.ij = !0;
            var m = a.Ca;
            a.Ca = e;
            var n = a.Oa.j,
                p = n.length;
            try {
                var q = new N(f.x, f.y, d.width / e, d.height / e),
                    r = q.copy();
                r.Jp(c);
                gj(a, r);
                Mi(a);
                a.kd(n, p, a, q);
                var u = a.ac;
                b.setTransform(1, 0, 0, 1, 0, 0);
                b.scale(u, u);
                b.clearRect(0, 0, d.width, d.height);
                null !== h && "" !== h && (b.fillStyle = h, b.fillRect(0, 0, d.width, d.height));
                var v = Qc.alloc();
                v.reset();
                v.translate(c.left, c.top);
                v.scale(e);
                0 === f.x && 0 === f.y || v.translate(-f.x, -f.y);
                b.setTransform(v.m11, v.m12, v.m21, v.m22, v.dx, v.dy);
                Qc.free(v);
                oj(a, b);
                if (null !== g) {
                    var x = new F,
                        y = g.iterator;
                    for (y.reset(); y.next();) {
                        var z = y.value;
                        !1 === l && "Grid" === z.layer.name || null === z || x.add(z)
                    }
                    var B = function(c) {
                        var d = k;
                        if (c.visible && 0 !== c.lb && (void 0 === d && (d = !0), d || !c.isTemporary)) {
                            d = c.Fa.j;
                            var e = d.length;
                            if (0 !== e) {
                                1 !== c.lb && (b.globalAlpha = c.lb);
                                c = c.Ho;
                                c.length = 0;
                                for (var f = a.scale, g = 0; g < e; g++) {
                                    var h = d[g];
                                    if (ng(h) &&
                                        x.contains(h)) {
                                        if (h instanceof S && (h.isOrthogonal && c.push(h), !1 === h.Mc)) continue;
                                        var l = h.actualBounds;
                                        1 < l.width * f || 1 < l.height * f ? h.kc(b, a) : ei(b, h)
                                    }
                                }
                                b.globalAlpha = 1
                            }
                        }
                    }
                } else if (!k && l) {
                    var C = a.grid.part,
                        I = C.layer;
                    B = function(c) {
                        c === I ? C.kc(b, a) : c.kc(b, a, k)
                    }
                } else B = function(c) {
                    c.kc(b, a, k)
                };
                for (c = 0; c < p; c++) B(n[c]);
                a.ij = !1;
                a.Xh && pj(a.Xh, a) && a.br()
            } finally {
                a.Ca = m, a.$c.Sc(!0), Li(a), a.kd(n, p, a), gj(a)
            }
        }
    }
    t.De = function(a) {
        return this.Yg[a]
    };
    t.Cx = function(a, b) {
        this.Yg[a] = b;
        this.yh()
    };
    t.xv = function() {
        this.Yg = new tb;
        this.Yg.drawShadows = !0;
        this.Yg.textGreeking = !0;
        this.Yg.viewportOptimizations = lb || cb || fb ? !1 : !0;
        this.Yg.temporaryPixelRatio = !0;
        this.Yg.pictureRatioOptimization = !0
    };

    function oj(a, b) {
        a = a.Yg;
        null !== a && (void 0 !== a.imageSmoothingEnabled && b.st(!!a.imageSmoothingEnabled), a = a.defaultFont, void 0 !== a && null !== a && (b.font = a))
    }
    t.Zl = function(a) {
        return this.Wk[a]
    };
    t.Jz = function(a, b) {
        this.Wk[a] = b
    };
    t.wv = function() {
        this.Wk = new tb;
        this.Wk.extraTouchArea = 10;
        this.Wk.extraTouchThreshold = 10;
        this.Wk.hasGestureZoom = !0
    };
    t.Gv = function(a) {
        rj(this, a)
    };

    function rj(a, b) {
        var c = a instanceof W,
            d = a instanceof P,
            e;
        for (e in b) {
            "" === e && A("Setting properties requires non-empty property names");
            var f = a,
                g = e;
            if (c || d) {
                var h = e.indexOf(".");
                if (0 < h) {
                    var k = e.substring(0, h);
                    if (c) f = a.ab(k);
                    else if (f = a[k], void 0 === f || null === f) f = a.toolManager[k];
                    Ca(f) ? g = e.substr(h + 1) : A("Unable to find object named: " + k + " in " + a.toString() + " when trying to set property: " + e)
                }
            }
            if ("_" !== g[0] && !Sa(f, g))
                if (d && "ModelChanged" === g) {
                    a.Ow(b[g]);
                    continue
                } else if (d && "Changed" === g) {
                a.lh(b[g]);
                continue
            } else if (d &&
                Sa(a.toolManager, g)) f = a.toolManager;
            else if (d && sj(a, g)) {
                a.Ij(g, b[g]);
                continue
            } else if (a instanceof Z && "Changed" === g) {
                a.lh(b[g]);
                continue
            } else A('Trying to set undefined property "' + g + '" on object: ' + f.toString());
            f[g] = b[e];
            "_" === g[0] && f instanceof Y && f.Lw(g)
        }
    }
    t.Gu = function() {
        if (0 === this.undoManager.transactionLevel && 0 !== this.Th.count) {
            for (; 0 < this.Th.count;) {
                var a = this.Th;
                this.Th = new Lb;
                for (a = a.iterator; a.next();) {
                    var b = a.key;
                    b.Zp(a.value);
                    b.cc()
                }
            }
            this.R()
        }
    };
    t.R = function(a) {
        void 0 === a && (a = null);
        if (null === a) this.qc = !0, this.ec();
        else {
            var b = this.viewportBounds;
            null !== a && a.s() && b.Kc(a) && (this.qc = !0, this.ec())
        }
        this.aa("InvalidateDraw")
    };
    t.kx = function(a, b) {
        if (!0 !== this.qc) {
            this.qc = !0;
            var c = !0 === this.De("temporaryPixelRatio");
            if (!0 === this.De("viewportOptimizations") && this.scrollMode !== tj && this.oi.Ai(0, 0, 0, 0) && b.width === a.width && b.height === a.height) {
                var d = this.scale,
                    e = Math.max(a.x, b.x),
                    f = Math.max(a.y, b.y);
                d = N.allocAt(e, f, Math.max(0, Math.min(a.x + a.width, b.x + b.width) - e) * d, Math.max(0, Math.min(a.y + a.height, b.y + b.height) - f) * d);
                if (!this.ws && 0 < d.width && 0 < d.height) {
                    if (!(this.Zb || (this.sd = !1, null === this.Ia || (this.Zb = !0, this.Gu(), this.documentBounds.s() ||
                            Ri(this, this.computeBounds()), e = this.Da, null === e || e instanceof uj)))) {
                        var g = this.ac;
                        f = this.xa * g;
                        var h = this.wa * g,
                            k = this.scale * g,
                            l = Math.round(Math.round(b.x * k) - Math.round(a.x * k));
                        b = Math.round(Math.round(b.y * k) - Math.round(a.y * k));
                        k = this.Rt;
                        a = this.pw;
                        k.width !== f && (k.width = f);
                        k.height !== h && (k.height = h);
                        a.clearRect(0, 0, f, h);
                        k = 190 * g;
                        var m = 70 * g,
                            n = Math.max(l, 0),
                            p = Math.max(b, 0),
                            q = Math.floor(f - n),
                            r = Math.floor(h - p);
                        a.st(!1);
                        a.drawImage(e.Ga, n, p, q, r, 0, 0, q, r);
                        pj(this.Xh, this) && a.clearRect(0, 0, k, m);
                        e = Ka();
                        a = Ka();
                        r = Math.abs(l);
                        q = Math.abs(b);
                        var u = 0 === n ? 0 : f - r;
                        n = G.allocAt(u, 0);
                        r = G.allocAt(r + u, h);
                        a.push(new N(Math.min(n.x, r.x), Math.min(n.y, r.y), Math.abs(n.x - r.x), Math.abs(n.y - r.y)));
                        var v = this.ub;
                        v.reset();
                        v.scale(g, g);
                        1 !== this.Ca && v.scale(this.Ca);
                        g = this.sa;
                        (0 !== g.x || 0 !== g.y) && isFinite(g.x) && isFinite(g.y) && v.translate(-g.x, -g.y);
                        Qb(n, v);
                        Qb(r, v);
                        e.push(new N(Math.min(n.x, r.x), Math.min(n.y, r.y), Math.abs(n.x - r.x), Math.abs(n.y - r.y)));
                        u = 0 === p ? 0 : h - q;
                        n.h(0, u);
                        r.h(f, q + u);
                        a.push(new N(Math.min(n.x, r.x), Math.min(n.y, r.y),
                            Math.abs(n.x - r.x), Math.abs(n.y - r.y)));
                        Qb(n, v);
                        Qb(r, v);
                        e.push(new N(Math.min(n.x, r.x), Math.min(n.y, r.y), Math.abs(n.x - r.x), Math.abs(n.y - r.y)));
                        pj(this.Xh, this) && (f = 0 < l ? 0 : -l, h = 0 < b ? 0 : -b, n.h(f, h), r.h(k + f, m + h), a.push(new N(Math.min(n.x, r.x), Math.min(n.y, r.y), Math.abs(n.x - r.x), Math.abs(n.y - r.y))), Qb(n, v), Qb(r, v), e.push(new N(Math.min(n.x, r.x), Math.min(n.y, r.y), Math.abs(n.x - r.x), Math.abs(n.y - r.y))));
                        G.free(n);
                        G.free(r);
                        ej(this, !1);
                        null === this.Ia && A("No div specified");
                        null === this.Da && A("No canvas specified");
                        if (!this.animationManager.sb && (f = this.$c, this.qc)) {
                            nj(this);
                            h = this.ac;
                            f.setTransform(1, 0, 0, 1, 0, 0);
                            f.clearRect(0, 0, this.xa * h, this.wa * h);
                            f.st(!1);
                            f.drawImage(this.Rt.Ga, 0 < l ? 0 : Math.round(-l), 0 < b ? 0 : Math.round(-b));
                            l = this.sa;
                            g = this.Ca;
                            k = Math.round(l.x * g) / g;
                            m = Math.round(l.y * g) / g;
                            b = this.ub;
                            b.reset();
                            1 !== g && b.scale(g);
                            0 === l.x && 0 === l.y || b.translate(-k, -m);
                            f.save();
                            f.beginPath();
                            l = a.length;
                            for (g = 0; g < l; g++) k = a[g], 0 !== k.width && 0 !== k.height && f.rect(Math.floor(k.x), Math.floor(k.y), Math.ceil(k.width), Math.ceil(k.height));
                            f.clip();
                            f.setTransform(1, 0, 0, 1, 0, 0);
                            f.scale(h, h);
                            f.transform(b.m11, b.m12, b.m21, b.m22, b.dx, b.dy);
                            b = this.Oa.j;
                            l = b.length;
                            this.kd(b, l, this);
                            oj(this, f);
                            for (h = 0; h < l; h++)
                                if (p = b[h], g = e, p.visible && 0 !== p.lb) {
                                    1 !== p.lb && (f.globalAlpha = p.lb);
                                    k = p.Ho;
                                    k.length = 0;
                                    m = this.scale;
                                    p = p.Fa.j;
                                    n = p.length;
                                    q = g.length;
                                    for (r = 0; r < n; r++)
                                        if (v = p[r], ng(v)) {
                                            if (v instanceof S && (v.isOrthogonal && k.push(v), !1 === v.Mc)) continue;
                                            u = vj(v, v.actualBounds);
                                            a: {
                                                var x = 2 / m;
                                                for (var y = 4 / m, z = 0; z < q; z++) {
                                                    var B = g[z];
                                                    if (0 !== B.width && 0 !== B.height && u.bv(B.x -
                                                            x, B.y - x, B.width + y, B.height + y)) {
                                                        x = !0;
                                                        break a
                                                    }
                                                }
                                                x = !1
                                            }
                                            x && (1 < u.width * m || 1 < u.height * m ? v.kc(f, this) : ei(f, v))
                                        } f.globalAlpha = 1
                                } f.restore();
                            f.Sc(!0);
                            this.Xh && pj(this.Xh, this) && this.br();
                            this.qc = this.Zh = !1;
                            this.lt()
                        }
                        Oa(e);
                        Oa(a);
                        this.Zb = !1
                    }
                } else this.hd();
                N.free(d);
                c && (this.ve = 1, this.hd(), Tf(this, !0))
            } else c ? (this.ve = 1, this.hd(), Tf(this, !0)) : this.hd()
        }
    };

    function dj(a) {
        !1 === a.gj && (a.gj = !0)
    }

    function Li(a) {
        !1 === a.Zh && (a.Zh = !0)
    }

    function nj(a) {
        !1 !== a.Nn && (a.Nn = !1, wj(a, a.xa, a.wa))
    }

    function wj(a, b, c) {
        var d = a.ac;
        a.Da.resize(b * d, c * d, b, c) && (a.qc = !0, a.$c.Sc(!0))
    }

    function Ji(a) {
        var b = a.Da;
        if (null === b) return !0;
        var c = a.Ia,
            d = a.xa,
            e = a.wa,
            f = a.Iw.copy();
        if (!f.s()) return !0;
        var g = !1,
            h = a.Wh ? a.Hb : 0,
            k = a.Mg ? a.Hb : 0,
            l = c.clientWidth || d + h;
        c = c.clientHeight || e + k;
        if (l !== d + h || c !== e + k) a.Wh = !1, a.Mg = !1, k = h = 0, a.xa = l, a.wa = c, g = a.Nn = !0;
        a.gj = !1;
        var m = a.documentBounds,
            n = 0,
            p = 0,
            q = 0,
            r = 0;
        l = f.width;
        c = f.height;
        var u = a.oi;
        a.contentAlignment.hb() ? (m.width > l && (n = u.left, p = u.right), m.height > c && (q = u.top, r = u.bottom)) : (n = u.left, p = u.right, q = u.top, r = u.bottom);
        u = m.width + n + p;
        var v = m.height + q + r;
        n = m.x - n;
        var x = f.x;
        p = m.right + p;
        var y = f.right + h;
        q = m.y - q;
        var z = f.y;
        r = m.bottom + r;
        var B = f.bottom + k,
            C = "1px",
            I = "1px";
        m = a.scale;
        var J = !(u < l + h),
            K = !(v < c + k);
        a.scrollMode === ki && (J || K) && (J && a.hasHorizontalScrollbar && a.allowHorizontalScroll && (C = 1, n + 1 < x && (C = Math.max((x - n) * m + a.xa, C)), p > y + 1 && (C = Math.max((p - y) * m + a.xa, C)), l + h + 1 < u && (C = Math.max((u - l + h) * m + a.xa, C)), C = C.toString() + "px"), K && a.hasVerticalScrollbar && a.allowVerticalScroll && (I = 1, q + 1 < z && (I = Math.max((z - q) * m + a.wa, I)), r > B + 1 && (I = Math.max((r - B) * m + a.wa, I)), c + k + 1 < v && (I = Math.max((v -
            c + k) * m + a.wa, I)), I = I.toString() + "px"));
        K = "1px" !== C;
        J = "1px" !== I;
        K && J || !K && !J || (J && (y -= a.Hb), K && (B -= a.Hb), u < l + h || !a.hasHorizontalScrollbar || !a.allowHorizontalScroll || (h = 1, n + 1 < x && (h = Math.max((x - n) * m + a.xa, h)), p > y + 1 && (h = Math.max((p - y) * m + a.xa, h)), l + 1 < u && (h = Math.max((u - l) * m + a.xa, h)), C = h.toString() + "px"), K = "1px" !== C, h = a.wa, K !== a.Mg && (h = K ? a.wa - a.Hb : a.wa + a.Hb), v < c + k || !a.hasVerticalScrollbar || !a.allowVerticalScroll || (k = 1, q + 1 < z && (k = Math.max((z - q) * m + h, k)), r > B + 1 && (k = Math.max((r - B) * m + h, k)), c + 1 < v && (k = Math.max((v -
            c) * m + h, k)), I = k.toString() + "px"), J = "1px" !== I);
        if (a.hs && K === a.Mg && J === a.Wh) return d === a.xa && e === a.wa || a.hd(), !1;
        K !== a.Mg && ("1px" === C ? a.wa = a.wa + a.Hb : a.wa = Math.max(a.wa - a.Hb, 1), g = !0);
        a.Mg = K;
        a.cp.style.width = C;
        J !== a.Wh && ("1px" === I ? a.xa = a.xa + a.Hb : a.xa = Math.max(a.xa - a.Hb, 1), g = !0, a.Rn && (k = G.alloc(), J ? (b.style.left = a.Hb + "px", a.position = k.h(a.sa.x + a.Hb / a.scale, a.sa.y)) : (b.style.left = "0px", a.position = k.h(a.sa.x - a.Hb / a.scale, a.sa.y)), G.free(k)));
        a.Wh = J;
        a.cp.style.height = I;
        a.pu = !0;
        g && (a.Nn = !0);
        b = a.ls;
        k = b.scrollLeft;
        a.hasHorizontalScrollbar && a.allowHorizontalScroll && (l + 1 < u ? k = (a.position.x - n) * m : n + 1 < x ? k = b.scrollWidth - b.clientWidth : p > y + 1 && (k = a.position.x * m));
        if (a.Rn) switch (a.nu) {
            case "negative":
                k = -(b.scrollWidth - k - b.clientWidth);
                break;
            case "reverse":
                k = b.scrollWidth - k - b.clientWidth
        }
        b.scrollLeft = k;
        a.hasVerticalScrollbar && a.allowVerticalScroll && (c + 1 < v ? b.scrollTop = (a.position.y - q) * m : q + 1 < z ? b.scrollTop = b.scrollHeight - b.clientHeight : r > B + 1 && (b.scrollTop = a.position.y * m));
        l = a.xa;
        c = a.wa;
        b.style.width = l + (a.Wh ? a.Hb : 0) + "px";
        b.style.height = c + (a.Mg ? a.Hb : 0) + "px";
        return d !== l || e !== c || a.animationManager.sb ? (a.hq(f, a.viewportBounds, m, g), !1) : !0
    }
    t.add = function(a) {
        var b = a.diagram;
        if (b !== this && (null !== b && A("Cannot add part " + a.toString() + " to " + this.toString() + ". It is already a part of " + b.toString()), b = this.Wl(a.layerName), null === b && (b = this.Wl("")), null === b && A('Cannot add a Part when unable find a Layer named "' + a.layerName + '" and there is no default Layer'), a.layer !== b)) {
            var c = b.Ji(99999999, a, a.diagram === this);
            0 <= c && this.bb(cf, "parts", b, null, a, null, c);
            b.isTemporary || this.Xa();
            a.B(1);
            c = a.layerChanged;
            null !== c && c(a, null, b)
        }
    };
    t.Ji = function(a) {
        this.partManager.Ji(a);
        var b = this;
        xj(a, function(a) {
            yj(b, a)
        });
        (a instanceof pf || a instanceof hg && null !== a.placeholder) && a.o();
        null !== a.data && xj(a, function(a) {
            zj(b.partManager, a)
        });
        !0 !== lj(a) && !0 !== mj(a) || this.Fd.add(a);
        Aj(a, !0, this);
        Bj(a) ? (a.actualBounds.s() && this.R(vj(a, a.actualBounds)), this.Xa()) : a.isVisible() && a.actualBounds.s() && this.R(vj(a, a.actualBounds));
        this.ec()
    };
    t.zc = function(a) {
        a.Nj();
        this.partManager.zc(a);
        var b = this;
        xj(a, function(a) {
            Cj(b, a)
        });
        null !== a.data && xj(a, function(a) {
            Dj(b.partManager, a)
        });
        this.Fd.remove(a);
        Bj(a) ? (a.actualBounds.s() && this.R(vj(a, a.actualBounds)), this.Xa()) : a.isVisible() && a.actualBounds.s() && this.R(vj(a, a.actualBounds));
        this.ec()
    };
    t.remove = function(a) {
        Ej(this, a, !0)
    };

    function Ej(a, b, c) {
        var d = b.layer;
        null !== d && d.diagram === a && (b.isSelected = !1, b.isHighlighted = !1, b.B(2), c && b.Tj(), c = d.zc(-1, b, !1), 0 <= c && a.bb(df, "parts", d, b, null, c, null), a = b.layerChanged, null !== a && a(b, d, null))
    }
    t.ot = function(a, b) {
        if (Ea(a))
            for (var c = a.length, d = 0; d < c; d++) {
                var e = a[d];
                b && !e.canDelete() || this.remove(e)
            } else
                for (c = new F, c.addAll(a), a = c.iterator; a.next();) c = a.value, b && !c.canDelete() || this.remove(c)
    };
    t.Sj = function(a, b, c) {
        return this.partManager.Sj(a, b, c)
    };
    P.prototype.moveParts = function(a, b, c, d) {
        void 0 === d && (d = Fj(this));
        if (null !== this.toolManager) {
            var e = new Lb;
            if (null !== a)
                if (Ea(a))
                    for (var f = 0; f < a.length; f++) Gj(this, e, a[f], c, d);
                else
                    for (a = a.iterator; a.next();) Gj(this, e, a.value, c, d);
            else {
                for (a = this.parts; a.next();) Gj(this, e, a.value, c, d);
                for (a = this.nodes; a.next();) Gj(this, e, a.value, c, d);
                for (a = this.links; a.next();) Gj(this, e, a.value, c, d)
            }
            ag(this, e, b, d, c)
        }
    };

    function Gj(a, b, c, d, e) {
        void 0 === e && (e = Fj(a));
        if (!b.contains(c) && (!d || c.canMove() || c.canCopy()))
            if (c instanceof U) {
                b.add(c, a.rd(e, c, c.location));
                if (c instanceof hg)
                    for (var f = c.memberParts; f.next();) Gj(a, b, f.value, d, e);
                for (f = c.linksConnected; f.next();) {
                    var g = f.value;
                    if (!b.contains(g)) {
                        var h = g.fromNode,
                            k = g.toNode;
                        null !== h && b.contains(h) && null !== k && b.contains(k) && Gj(a, b, g, d, e)
                    }
                }
                if (e.dragsTree)
                    for (c = c.Uu(); c.next();) Gj(a, b, c.value, d, e)
            } else if (c instanceof S)
            for (b.add(c, a.rd(e, c)), c = c.labelNodes; c.next();) Gj(a,
                b, c.value, d, e);
        else c instanceof pf || b.add(c, a.rd(e, c, c.location))
    }

    function ag(a, b, c, d, e) {
        if (null !== b && 0 !== b.count) {
            var f = G.alloc(),
                g = G.alloc();
            g.assign(c);
            isNaN(g.x) && (g.x = 0);
            isNaN(g.y) && (g.y = 0);
            (c = a.sp) || Kf(a, b);
            for (var h = Ka(), k = Ka(), l = b.iterator, m = G.alloc(); l.next();) {
                var n = l.key,
                    p = l.value;
                if (n.dc()) {
                    var q = Hj(a, n, b);
                    if (null !== q) h.push(new Ij(n, p, q));
                    else if (!e || n.canMove()) q = p.point, f.assign(q), a.computeMove(n, f.add(g), d, m), n.location = m, void 0 === p.shifted && (p.shifted = new G), p.shifted.assign(m.Yd(q))
                } else l.key instanceof S && k.push(l.na)
            }
            G.free(m);
            e = h.length;
            for (l =
                0; l < e; l++) n = h[l], f.assign(n.info.point), void 0 === n.Zu.shifted && (n.Zu.shifted = new G), n.node.location = f.add(n.Zu.shifted);
            e = G.alloc();
            l = G.alloc();
            n = k.length;
            for (p = 0; p < n; p++) {
                var r = k[p];
                q = r.key;
                if (q instanceof S)
                    if (q.suspendsRouting) {
                        m = q.fromNode;
                        var u = q.toNode;
                        if (null !== a.draggedLink && d.dragsLink)
                            if (u = r.value.point, null === q.dragComputation) b.add(q, a.rd(d, q, g)), Zf(q, g.x - u.x, g.y - u.y);
                            else {
                                r = G.allocAt(0, 0);
                                (m = q.i(0)) && m.s() && r.assign(m);
                                var v = m = G.alloc().assign(r).add(g);
                                d.isGridSnapEnabled && (d.isGridSnapRealtime ||
                                    a.lastInput.up) && (v = G.alloc(), eh(a, q, m, v, d));
                                m.assign(q.dragComputation(q, m, v)).Yd(r);
                                b.add(q, a.rd(d, q, m));
                                Zf(q, m.x - u.x, m.y - u.y);
                                G.free(r);
                                G.free(m);
                                v !== m && G.free(v)
                            }
                        else null !== m && (e.assign(m.location), v = b.J(m), null !== v && e.Yd(v.point)), null !== u && (l.assign(u.location), v = b.J(u), null !== v && l.Yd(v.point)), null !== m && null !== u ? e.Pa(l) ? (m = r.value.point, u = f, u.assign(e), u.Yd(m), b.add(q, a.rd(d, q, e)), Zf(q, u.x, u.y)) : (q.suspendsRouting = !1, q.Qa()) : (r = r.value.point, m = null !== m ? e : null !== u ? l : g, b.add(q, a.rd(d, q, m)),
                            Zf(q, m.x - r.x, m.y - r.y))
                    } else if (null === q.fromNode || null === q.toNode) m = r.value.point, b.add(q, a.rd(d, q, g)), Zf(q, g.x - m.x, g.y - m.y)
            }
            G.free(f);
            G.free(g);
            G.free(e);
            G.free(l);
            Oa(h);
            Oa(k);
            c || (Mi(a), Pf(a, b))
        }
    }
    P.prototype.computeMove = function(a, b, c, d) {
        void 0 === d && (d = new G);
        d.assign(b);
        if (null === a) return d;
        var e = b,
            f = c.isGridSnapEnabled;
        f && (c.isGridSnapRealtime || this.lastInput.up) && (e = G.alloc(), eh(this, a, b, e, c));
        c = null !== a.dragComputation ? a.dragComputation(a, b, e) : e;
        var g = a.minLocation,
            h = g.x;
        isNaN(h) && (h = f ? Math.round(a.location.x) : a.location.x);
        g = g.y;
        isNaN(g) && (g = f ? Math.round(a.location.y) : a.location.y);
        var k = a.maxLocation,
            l = k.x;
        isNaN(l) && (l = f ? Math.round(a.location.x) : a.location.x);
        k = k.y;
        isNaN(k) && (k = f ? Math.round(a.location.y) :
            a.location.y);
        d.h(Math.max(h, Math.min(c.x, l)), Math.max(g, Math.min(c.y, k)));
        e !== b && G.free(e);
        return d
    };

    function Fj(a) {
        var b = a.toolManager.findTool("Dragging");
        return null !== b ? b.dragOptions : a.Ek
    }

    function eh(a, b, c, d, e) {
        void 0 === e && (e = Fj(a));
        d.assign(c);
        if (null !== b) {
            var f = a.grid;
            b = e.gridSnapCellSize;
            a = b.width;
            b = b.height;
            var g = e.gridSnapOrigin,
                h = g.x;
            g = g.y;
            e = e.gridSnapCellSpot;
            if (null !== f) {
                var k = f.gridCellSize;
                isNaN(a) && (a = k.width);
                isNaN(b) && (b = k.height);
                f = f.gridOrigin;
                isNaN(h) && (h = f.x);
                isNaN(g) && (g = f.y)
            }
            f = G.allocAt(0, 0);
            f.kk(0, 0, a, b, e);
            H.Sp(c.x, c.y, h + f.x, g + f.y, a, b, d);
            G.free(f)
        }
    }

    function Kf(a, b) {
        if (null !== b)
            for (a.sp = !0, a = b.iterator; a.next();) b = a.key, b instanceof S && (b.suspendsRouting = !0)
    }

    function Pf(a, b) {
        if (null !== b) {
            for (b = b.iterator; b.next();) {
                var c = b.key;
                c instanceof S && (c.suspendsRouting = !1, Jj(c) && c.Qa())
            }
            a.sp = !1
        }
    }

    function Hj(a, b, c) {
        b = b.containingGroup;
        if (null !== b) {
            a = Hj(a, b, c);
            if (null !== a) return a;
            a = c.J(b);
            if (null !== a) return a
        }
        return null
    }
    t = P.prototype;
    t.rd = function(a, b, c) {
        if (void 0 === c) return new Nf(ac);
        var d = a.isGridSnapEnabled;
        a.dz || null === b.containingGroup || (d = !1);
        return d ? new Nf(new G(Math.round(c.x), Math.round(c.y))) : new Nf(c.copy())
    };

    function Kj(a, b, c) {
        null !== b.diagram && b.diagram !== a && A("Cannot share a Layer with another Diagram: " + b + " of " + b.diagram);
        null === c ? null !== b.diagram && A("Cannot add an existing Layer to this Diagram again: " + b) : (c.diagram !== a && A("Existing Layer must be in this Diagram: " + c + " not in " + c.diagram), b === c && A("Cannot move a Layer before or after itself: " + b));
        if (b.diagram !== a) {
            b = b.name;
            a = a.Oa;
            c = a.count;
            for (var d = 0; d < c; d++) a.N(d).name === b && A("Cannot add Layer with the name '" + b + "'; a Layer with the same name is already present in this Diagram.")
        }
    }
    t.Ml = function(a) {
        Kj(this, a, null);
        a.nb(this);
        var b = this.Oa,
            c = b.count - 1;
        if (!a.isTemporary)
            for (; 0 <= c && b.N(c).isTemporary;) c--;
        b.Jb(c + 1, a);
        null !== this.$b && this.bb(cf, "layers", this, null, a, null, c + 1);
        this.R();
        this.Xa()
    };
    t.Mw = function(a, b) {
        Kj(this, a, b);
        a.nb(this);
        var c = this.Oa,
            d = c.indexOf(a);
        0 <= d && (c.remove(a), null !== this.$b && this.bb(df, "layers", this, a, null, d, null));
        var e = c.count,
            f;
        for (f = 0; f < e; f++)
            if (c.N(f) === b) {
                c.Jb(f, a);
                break
            } null !== this.$b && this.bb(cf, "layers", this, null, a, null, f);
        this.R();
        0 > d && this.Xa()
    };
    t.Zx = function(a, b) {
        Kj(this, a, b);
        a.nb(this);
        var c = this.Oa,
            d = c.indexOf(a);
        0 <= d && (c.remove(a), null !== this.$b && this.bb(df, "layers", this, a, null, d, null));
        var e = c.count,
            f;
        for (f = 0; f < e; f++)
            if (c.N(f) === b) {
                c.Jb(f + 1, a);
                break
            } null !== this.$b && this.bb(cf, "layers", this, null, a, null, f + 1);
        this.R();
        0 > d && this.Xa()
    };
    t.Dz = function(a) {
        a.diagram !== this && A("Cannot remove a Layer from another Diagram: " + a + " of " + a.diagram);
        if ("" !== a.name) {
            var b = this.Oa,
                c = b.indexOf(a);
            if (b.remove(a)) {
                for (b = a.Fa.copy().iterator; b.next();) {
                    var d = b.value,
                        e = d.layerName;
                    e !== a.name ? d.layerName = e : d.layerName = ""
                }
                null !== this.$b && this.bb(df, "layers", this, a, null, c, null);
                this.R();
                this.Xa()
            }
        }
    };
    t.Wl = function(a) {
        for (var b = this.layers; b.next();) {
            var c = b.value;
            if (c.name === a) return c
        }
        return null
    };
    t.Ow = function(a) {
        null === this.ne && (this.ne = new E);
        this.ne.add(a);
        this.model.lh(a)
    };
    t.Fz = function(a) {
        null !== this.ne && (this.ne.remove(a), 0 === this.ne.count && (this.ne = null));
        this.model.jk(a)
    };
    t.lh = function(a) {
        null === this.yf && (this.yf = new E);
        this.yf.add(a)
    };
    t.jk = function(a) {
        null !== this.yf && (this.yf.remove(a), 0 === this.yf.count && (this.yf = null))
    };
    t.Gs = function(a) {
        this.skipsUndoManager || this.undoManager.$u(a);
        a.change !== bf && (this.isModified = !0);
        if (null !== this.yf)
            for (var b = this.yf, c = b.length, d = 0; d < c; d++) b.N(d)(a)
    };
    t.bb = function(a, b, c, d, e, f, g) {
        void 0 === f && (f = null);
        void 0 === g && (g = null);
        var h = new $e;
        h.diagram = this;
        h.change = a;
        h.propertyName = b;
        h.object = c;
        h.oldValue = d;
        h.oldParam = f;
        h.newValue = e;
        h.newParam = g;
        this.Gs(h)
    };
    t.g = function(a, b, c, d, e) {
        this.bb(af, a, this, b, c, d, e)
    };
    t.Mj = function(a, b) {
        if (null !== a && a.diagram === this) {
            var c = this.skipsModelSourceBindings;
            try {
                this.skipsModelSourceBindings = !0;
                var d = a.change;
                if (d === af) {
                    var e = a.object;
                    Lj(e, a.propertyName, a.J(b));
                    if (e instanceof Y) {
                        var f = e.part;
                        null !== f && f.Kb()
                    }
                    this.isModified = !0
                } else if (d === cf) {
                    var g = a.object,
                        h = a.newParam,
                        k = a.newValue;
                    if (g instanceof W)
                        if ("number" === typeof h && k instanceof Y) {
                            b ? g.zc(h) : g.Jb(h, k);
                            var l = g.part;
                            null !== l && l.Kb()
                        } else {
                            if ("number" === typeof h && k instanceof Mj)
                                if (b) k.isRow ? g.uv(h) : g.sv(h);
                                else {
                                    var m =
                                        k.isRow ? g.getRowDefinition(k.index) : g.getColumnDefinition(k.index);
                                    m.Sl(k)
                                }
                        }
                    else if (g instanceof bi) {
                        var n = !0 === a.oldParam;
                        "number" === typeof h && k instanceof T && (b ? (k.isSelected = !1, k.isHighlighted = !1, k.Kb(), g.zc(n ? h : -1, k, n)) : g.Ji(h, k, n))
                    } else g instanceof P ? "number" === typeof h && k instanceof bi && (b ? this.Oa.mb(h) : (k.nb(this), this.Oa.Jb(h, k))) : A("unknown ChangedEvent.Insert object: " + a.toString());
                    this.isModified = !0
                } else if (d === df) {
                    var p = a.object,
                        q = a.oldParam,
                        r = a.oldValue;
                    if (p instanceof W) "number" ===
                        typeof q && r instanceof Y ? b ? p.Jb(q, r) : p.zc(q) : "number" === typeof q && r instanceof Mj && (b ? (m = r.isRow ? p.getRowDefinition(r.index) : p.getColumnDefinition(r.index), m.Sl(r)) : r.isRow ? p.uv(q) : p.sv(q));
                    else if (p instanceof bi) {
                        var u = !0 === a.newParam;
                        "number" === typeof q && r instanceof T && (b ? 0 > p.Fa.indexOf(r) && p.Ji(q, r, u) : (r.isSelected = !1, r.isHighlighted = !1, r.Kb(), p.zc(u ? q : -1, r, u)))
                    } else p instanceof P ? "number" === typeof q && r instanceof bi && (b ? (r.nb(this), this.Oa.Jb(q, r)) : this.Oa.mb(q)) : A("unknown ChangedEvent.Remove object: " +
                        a.toString());
                    this.isModified = !0
                } else d !== bf && A("unknown ChangedEvent: " + a.toString())
            } finally {
                this.skipsModelSourceBindings = c
            }
        }
    };
    t.Aa = function(a) {
        return this.undoManager.Aa(a)
    };
    t.$a = function(a) {
        return this.undoManager.$a(a)
    };
    t.tf = function() {
        return this.undoManager.tf()
    };
    P.prototype.commit = function(a, b) {
        void 0 === b && (b = "");
        var c = this.skipsUndoManager;
        null === b && (this.skipsUndoManager = !0, b = "");
        this.undoManager.Aa(b);
        var d = !1;
        try {
            a(this), d = !0
        } finally {
            d ? this.undoManager.$a(b) : this.undoManager.tf(), this.skipsUndoManager = c
        }
    };
    P.prototype.updateAllTargetBindings = function(a) {
        this.partManager.updateAllTargetBindings(a)
    };
    t = P.prototype;
    t.sq = function() {
        this.partManager.sq()
    };

    function Nj(a, b, c) {
        var d = a.animationManager;
        if (a.pb || a.Zb) a.Ca = c, d.sb && ai(d, b, a.Ca);
        else if (a.pb = !0, null === a.Da) a.Ca = c;
        else {
            var e = a.viewportBounds.copy(),
                f = a.xa,
                g = a.wa;
            e.width = a.xa / b;
            e.height = a.wa / b;
            var h = a.zoomPoint.x,
                k = a.zoomPoint.y,
                l = a.contentAlignment;
            isNaN(h) && (l.qf() ? l.pf(jd) ? h = 0 : l.pf(pd) && (h = f - 1) : h = l.hb() ? l.x * (f - 1) : f / 2);
            isNaN(k) && (l.qf() ? l.pf(id) ? k = 0 : l.pf(qd) && (k = g - 1) : k = l.hb() ? l.y * (g - 1) : g / 2);
            null !== a.scaleComputation && (c = a.scaleComputation(a, c));
            c < a.minScale && (c = a.minScale);
            c > a.maxScale && (c =
                a.maxScale);
            f = G.allocAt(a.sa.x + h / b - h / c, a.sa.y + k / b - k / c);
            a.position = f;
            G.free(f);
            a.Ca = c;
            a.hq(e, a.viewportBounds, b, !1);
            a.pb = !1;
            Oi(a, !1);
            d.sb && ai(d, b, a.Ca);
            a.R();
            dj(a)
        }
    }
    t.hq = function(a, b, c, d) {
        if (!a.A(b)) {
            void 0 === d && (d = !1);
            d || dj(this);
            Li(this);
            var e = this.layout;
            null === e || !e.isViewportSized || this.autoScale !== li || d || a.width === b.width && a.height === b.height || e.B();
            e = this.currentTool;
            !0 === this.he && e instanceof Ua && (this.lastInput.documentPoint = this.wt(this.lastInput.viewPoint), tf(e, this));
            this.pb || this.kx(a, b);
            gj(this);
            this.xe.scale = c;
            this.xe.position.x = a.x;
            this.xe.position.y = a.y;
            this.xe.bounds.assign(a);
            this.xe.mx = d;
            this.aa("ViewportBoundsChanged", this.xe, a);
            this.isVirtualized &&
                this.links.each(function(a) {
                    a.isAvoiding && a.actualBounds.Kc(b) && a.Qa()
                })
        }
    };

    function gj(a, b) {
        void 0 === b && (b = null);
        var c = a.Fb;
        if (null !== c && c.visible) {
            for (var d = L.alloc(), e = 1, f = 1, g = c.W.j, h = g.length, k = 0; k < h; k++) {
                var l = g[k],
                    m = l.interval;
                2 > m || (Oj(l.figure) ? f = f * m / H.hx(f, m) : e = e * m / H.hx(e, m))
            }
            g = c.gridCellSize;
            d.h(f * g.width, e * g.height);
            if (null !== b) e = b.width, f = b.height, a = b.x, g = b.y;
            else {
                b = N.alloc();
                a = a.viewportBounds;
                b.h(a.x, a.y, a.width, a.height);
                if (!b.s()) {
                    N.free(b);
                    return
                }
                e = b.width;
                f = b.height;
                a = b.x;
                g = b.y;
                N.free(b)
            }
            c.width = e + 2 * d.width;
            c.height = f + 2 * d.height;
            b = G.alloc();
            H.Sp(a, g, 0, 0,
                d.width, d.height, b);
            b.offset(-d.width, -d.height);
            L.free(d);
            c.part.location = b;
            G.free(b)
        }
    }
    t.Hs = function() {
        var a = 0 < this.selection.count;
        a && this.aa("ChangingSelection", this.selection);
        Hf(this);
        a && this.aa("ChangedSelection", this.selection)
    };

    function Hf(a) {
        a = a.selection;
        if (0 < a.count) {
            for (var b = a.Ma(), c = b.length, d = 0; d < c; d++) b[d].isSelected = !1;
            a.ha();
            a.clear();
            a.freeze()
        }
    }
    t.select = function(a) {
        null !== a && a.layer.diagram === this && (!a.isSelected || 1 < this.selection.count) && (this.aa("ChangingSelection", this.selection), Hf(this), a.isSelected = !0, this.aa("ChangedSelection", this.selection))
    };
    t.Av = function(a) {
        this.aa("ChangingSelection", this.selection);
        Hf(this);
        if (Ea(a))
            for (var b = a.length, c = 0; c < b; c++) {
                var d = a[c];
                d instanceof T || A("Diagram.selectCollection given something that is not a Part: " + d);
                d.isSelected = !0
            } else
                for (a = a.iterator; a.next();) b = a.value, b instanceof T || A("Diagram.selectCollection given something that is not a Part: " + b), b.isSelected = !0;
        this.aa("ChangedSelection", this.selection)
    };
    t.Rw = function() {
        var a = this.highlighteds;
        if (0 < a.count) {
            for (var b = a.Ma(), c = b.length, d = 0; d < c; d++) b[d].isHighlighted = !1;
            a.ha();
            a.clear();
            a.freeze()
        }
    };
    t.fz = function(a) {
        null !== a && a.layer.diagram === this && (!a.isHighlighted || 1 < this.highlighteds.count) && (this.Rw(), a.isHighlighted = !0)
    };
    t.gz = function(a) {
        a = (new F).addAll(a);
        for (var b = this.highlighteds.copy().kq(a).iterator; b.next();) b.value.isHighlighted = !1;
        for (a = a.iterator; a.next();) b = a.value, b instanceof T || A("Diagram.highlightCollection given something that is not a Part: " + b), b.isHighlighted = !0
    };
    t.scroll = function(a, b, c) {
        void 0 === c && (c = 1);
        var d = "up" === b || "down" === b,
            e = 0;
        if ("pixel" === a) e = c;
        else if ("line" === a) e = c * (d ? this.scrollVerticalLineChange : this.scrollHorizontalLineChange);
        else if ("page" === a) a = d ? this.viewportBounds.height : this.viewportBounds.width, a *= this.scale, 0 !== a && (e = c * Math.max(a - (d ? this.scrollVerticalLineChange : this.scrollHorizontalLineChange), 0));
        else {
            if ("document" === a) {
                e = this.documentBounds;
                c = this.viewportBounds;
                d = G.alloc();
                "up" === b ? this.position = d.h(c.x, e.y) : "left" === b ? this.position =
                    d.h(e.x, c.y) : "down" === b ? this.position = d.h(c.x, e.bottom - c.height) : "right" === b && (this.position = d.h(e.right - c.width, c.y));
                G.free(d);
                return
            }
            A("scrolling unit must be 'pixel', 'line', 'page', or 'document', not: " + a)
        }
        e /= this.scale;
        c = this.position.copy();
        "up" === b ? c.y = this.position.y - e : "down" === b ? c.y = this.position.y + e : "left" === b ? c.x = this.position.x - e : "right" === b ? c.x = this.position.x + e : A("scrolling direction must be 'up', 'down', 'left', or 'right', not: " + b);
        this.position = c
    };
    t.zv = function(a) {
        var b = this.viewportBounds;
        b.mf(a) || (a = a.center, a.x -= b.width / 2, a.y -= b.height / 2, this.position = a)
    };
    t.Fu = function(a) {
        var b = this.viewportBounds;
        a = a.center;
        a.x -= b.width / 2;
        a.y -= b.height / 2;
        this.position = a
    };
    t.vt = function(a) {
        var b = this.ub;
        b.reset();
        1 !== this.Ca && b.scale(this.Ca);
        var c = this.sa;
        (0 !== c.x || 0 !== c.y) && isFinite(c.x) && isFinite(c.y) && b.translate(-c.x, -c.y);
        return a.copy().transform(this.ub)
    };
    t.Qz = function(a) {
        var b = this.ub,
            c = a.x,
            d = a.y,
            e = c + a.width,
            f = d + a.height,
            g = b.m11,
            h = b.m12,
            k = b.m21,
            l = b.m22,
            m = b.dx,
            n = b.dy,
            p = c * g + d * k + m;
        b = c * h + d * l + n;
        var q = e * g + d * k + m;
        a = e * h + d * l + n;
        d = c * g + f * k + m;
        c = c * h + f * l + n;
        g = e * g + f * k + m;
        e = e * h + f * l + n;
        f = Math.min(p, q);
        p = Math.max(p, q);
        q = Math.min(b, a);
        b = Math.max(b, a);
        f = Math.min(f, d);
        p = Math.max(p, d);
        q = Math.min(q, c);
        b = Math.max(b, c);
        f = Math.min(f, g);
        p = Math.max(p, g);
        q = Math.min(q, e);
        b = Math.max(b, e);
        return new N(f, q, p - f, b - q)
    };
    t.wt = function(a) {
        var b = this.ub;
        b.reset();
        1 !== this.Ca && b.scale(this.Ca);
        var c = this.sa;
        (0 !== c.x || 0 !== c.y) && isFinite(c.x) && isFinite(c.y) && b.translate(-c.x, -c.y);
        return Qb(a.copy(), this.ub)
    };

    function Pj(a) {
        var b = a.isModified;
        a.Jw !== b && (a.Jw = b, a.aa("Modified"))
    }

    function Qj(a) {
        a = oi.get(a);
        return null !== a ? new a : new pi
    }
    P.prototype.doModelChanged = function(a) {
        if (a.model === this.model) {
            var b = a.change,
                c = a.propertyName;
            if (b === bf && "S" === c[0])
                if ("StartingFirstTransaction" === c) {
                    var d = this;
                    a = this.toolManager;
                    a.mouseDownTools.each(function(a) {
                        a.nb(d)
                    });
                    a.mouseMoveTools.each(function(a) {
                        a.nb(d)
                    });
                    a.mouseUpTools.each(function(a) {
                        a.nb(d)
                    });
                    this.Zb || this.ge || (this.Kk = !0, this.Pk && (this.sd = !0))
                } else "StartingUndo" === c || "StartingRedo" === c ? (a = this.animationManager, a.isAnimating && !this.skipsUndoManager && a.xd(), this.aa("ChangingSelection",
                    this.selection)) : "StartedTransaction" === c && (a = this.animationManager, a.isAnimating && !this.skipsUndoManager && a.xd());
            else if (this.ca) {
                this.ca = !1;
                try {
                    if ("" === a.modelChange && b === bf) {
                        if ("FinishedUndo" === c || "FinishedRedo" === c) this.aa("ChangedSelection", this.selection), Mi(this);
                        var e = this.animationManager;
                        "RolledBackTransaction" === c && e.xd();
                        this.Kk = !0;
                        this.hd();
                        0 === this.undoManager.transactionLevel && Ph(e);
                        "CommittedTransaction" === c && this.undoManager.$t && (this.fe = Math.min(this.fe, this.undoManager.historyIndex -
                            1));
                        var f = a.isTransactionFinished;
                        f && (Pj(this), this.dt.clear());
                        if (!this.hu && f) {
                            this.hu = !0;
                            var g = this;
                            ua(function() {
                                g.currentTool.standardMouseOver();
                                g.hu = !1
                            }, 10)
                        }
                    }
                } finally {
                    this.ca = !0
                }
            }
        }
    };

    function yj(a, b) {
        b = b.W.j;
        for (var c = b.length, d = 0; d < c; d++) Rj(a, b[d])
    }

    function Rj(a, b) {
        if (b instanceof Sj) {
            var c = b.element;
            if (null !== c && c instanceof HTMLImageElement) {
                var d = b.Hg;
                null !== d && (d.Rk instanceof Event && null !== b.Ec && b.Ec(b, d.Rk), !0 === d.Pn && (null !== b.ef && b.ef(b, d.ou), null !== b.diagram && b.diagram.ju.add(b)));
                c = c.src;
                d = a.yj.J(c);
                if (null === d) d = [], d.push(b), a.yj.add(c, d);
                else {
                    for (a = 0; a < d.length; a++)
                        if (d[a] === b) return;
                    d.push(b)
                }
            }
        }
    }

    function Cj(a, b) {
        b = b.W.j;
        for (var c = b.length, d = 0; d < c; d++) Tj(a, b[d])
    }

    function Tj(a, b) {
        if (b instanceof Sj) {
            var c = b.element;
            if (null !== c && c instanceof HTMLImageElement) {
                c = c.src;
                var d = a.yj.J(c);
                if (null !== d)
                    for (var e = 0; e < d.length; e++)
                        if (d[e] === b) {
                            d.splice(e, 1);
                            0 === d.length && (a.yj.remove(c), Xj(c));
                            break
                        }
            }
        }
    }
    P.prototype.wd = function() {
        this.partManager.wd()
    };
    P.prototype.Hp = function(a, b) {
        this.Gq.Hp(a, b)
    };
    P.prototype.Ip = function(a, b) {
        this.Gq.Ip(a, b)
    };
    P.prototype.findPartForKey = function(a) {
        return this.partManager.findPartForKey(a)
    };
    t = P.prototype;
    t.Ib = function(a) {
        return this.partManager.Ib(a)
    };
    t.xc = function(a) {
        return this.partManager.xc(a)
    };
    t.Bi = function(a) {
        return this.partManager.Bi(a)
    };
    t.wc = function(a) {
        return this.partManager.wc(a)
    };
    t.Ps = function(a) {
        for (var b = [], c = 0; c < arguments.length; ++c) b[c] = arguments[c];
        return this.partManager.Ps.apply(this.partManager, b instanceof Array ? b : ca(ba(b)))
    };
    t.Os = function(a) {
        for (var b = [], c = 0; c < arguments.length; ++c) b[c] = arguments[c];
        return this.partManager.Os.apply(this.partManager, b instanceof Array ? b : ca(ba(b)))
    };

    function Ri(a, b) {
        a.Ng = !1;
        var c = a.tn;
        c.A(b) || (b = b.I(), a.tn = b, Oi(a, !1), a.aa("DocumentBoundsChanged", null, c.copy()), dj(a))
    }
    t.Ny = function() {
        for (var a = new F, b = this.nodes; b.next();) {
            var c = b.value;
            c.isTopLevel && a.add(c)
        }
        for (b = this.links; b.next();) c = b.value, c.isTopLevel && a.add(c);
        return a.iterator
    };
    t.My = function() {
        return this.vi.iterator
    };
    t.qz = function(a) {
        Mi(this);
        a && bk(this, !0);
        this.Kk = !0;
        og(this)
    };

    function bk(a, b) {
        for (var c = a.vi.iterator; c.next();) ck(a, c.value, b);
        null !== a.layout && (b ? a.layout.isValidLayout = !1 : a.layout.B())
    }

    function ck(a, b, c) {
        if (null !== b) {
            for (var d = b.jl.iterator; d.next();) ck(a, d.value, c);
            null !== b.layout && (c ? b.layout.isValidLayout = !1 : b.layout.B())
        }
    }

    function hj(a, b) {
        if (a.yg && !a.Nt) {
            var c = a.ca;
            a.ca = !0;
            var d = a.undoManager.transactionLevel,
                e = a.layout;
            try {
                0 === d && a.Aa("Layout");
                var f = a.animationManager;
                1 >= d && !f.isAnimating && !f.sb && (b || f.Ni("Layout"));
                a.yg = !1;
                for (var g = a.vi.iterator; g.next();) dk(a, g.value, b, d);
                e.isValidLayout || (!b || e.isRealtime || null === e.isRealtime || 0 === d ? (e.doLayout(a), Mi(a), e.isValidLayout = !0) : a.yg = !0)
            } finally {
                0 === d && a.$a("Layout"), a.yg = !e.isValidLayout, a.ca = c
            }
        }
    }

    function dk(a, b, c, d) {
        if (null !== b) {
            for (var e = b.jl.iterator; e.next();) dk(a, e.value, c, d);
            e = b.layout;
            null === e || e.isValidLayout || (!c || e.isRealtime || 0 === d ? (b.hk = !b.location.s(), e.doLayout(b), b.B(32), jj(a, b), e.isValidLayout = !0) : a.yg = !0)
        }
    }
    t.Ty = function() {
        for (var a = new E, b = this.nodes; b.next();) {
            var c = b.value;
            c.isTopLevel && null === c.Di() && a.add(c)
        }
        return a.iterator
    };

    function mi(a) {
        function b(a) {
            var b = a.toLowerCase(),
                e = new E;
            c.add(a, e);
            c.add(b, e);
            d.add(a, a);
            d.add(b, a)
        }
        var c = new Lb,
            d = new Lb;
        b("AnimationStarting");
        b("AnimationFinished");
        b("BackgroundSingleClicked");
        b("BackgroundDoubleClicked");
        b("BackgroundContextClicked");
        b("ClipboardChanged");
        b("ClipboardPasted");
        b("DocumentBoundsChanged");
        b("ExternalObjectsDropped");
        b("GainedFocus");
        b("InitialLayoutCompleted");
        b("LayoutCompleted");
        b("LinkDrawn");
        b("LinkRelinked");
        b("LinkReshaped");
        b("LostFocus");
        b("Modified");
        b("ObjectSingleClicked");
        b("ObjectDoubleClicked");
        b("ObjectContextClicked");
        b("PartCreated");
        b("PartResized");
        b("PartRotated");
        b("SelectionMoved");
        b("SelectionCopied");
        b("SelectionDeleting");
        b("SelectionDeleted");
        b("SelectionGrouped");
        b("SelectionUngrouped");
        b("ChangingSelection");
        b("ChangedSelection");
        b("SubGraphCollapsed");
        b("SubGraphExpanded");
        b("TextEdited");
        b("TreeCollapsed");
        b("TreeExpanded");
        b("ViewportBoundsChanged");
        b("InvalidateDraw");
        a.Pt = c;
        a.Ot = d
    }

    function sj(a, b) {
        var c = a.Ot.J(b);
        return null !== c ? c : a.Ot.J(b.toLowerCase())
    }

    function ek(a, b) {
        var c = a.Pt.J(b);
        if (null !== c) return c;
        c = a.Pt.J(b.toLowerCase());
        if (null !== c) return c;
        A("Unknown DiagramEvent name: " + b);
        return null
    }
    t.Ij = function(a, b) {
        a = ek(this, a);
        null !== a && a.add(b)
    };
    t.jm = function(a, b) {
        a = ek(this, a);
        null !== a && a.remove(b)
    };
    t.aa = function(a, b, c) {
        var d = ek(this, a),
            e = new Ze;
        e.diagram = this;
        a = sj(this, a);
        null !== a && (e.name = a);
        void 0 !== b && (e.subject = b);
        void 0 !== c && (e.parameter = c);
        b = d.length;
        if (1 === b) d.N(0)(e);
        else if (0 !== b)
            for (d = d.Ma(), c = 0; c < b; c++)(0, d[c])(e)
    };

    function fk(a) {
        if (a.animationManager.isAnimating) return !1;
        var b = a.currentTool;
        return b === a.toolManager.findTool("Dragging") ? !a.sp || b.isComplexRoutingRealtime : !0
    }
    t.$j = function(a, b) {
        void 0 === b && (b = null);
        return gk(this, !1, null, b).$j(a.x, a.y, a.width, a.height)
    };
    P.prototype.computeOccupiedArea = function() {
        return this.isVirtualized ? this.viewportBounds.copy() : this.Ng ? Ni(this) : this.documentBounds.copy()
    };

    function gk(a, b, c, d) {
        null === a.Nb && (a.Nb = new hk);
        if (a.Nb.Ys || a.Nb.group !== c || a.Nb.Gx !== d) {
            if (null === c) {
                b = a.computeOccupiedArea();
                b.Vc(100, 100);
                a.Nb.initialize(b);
                b = N.alloc();
                for (var e = a.nodes; e.next();) {
                    var f = e.value,
                        g = f.layer;
                    null !== g && g.visible && !g.isTemporary && ik(a, f, d, b)
                }
                N.free(b)
            } else {
                0 < c.memberParts.count && (b = a.computePartsBounds(c.memberParts, !1), b.Vc(20, 20), a.Nb.initialize(b));
                b = N.alloc();
                for (e = c.memberParts; e.next();) f = e.value, f instanceof U && ik(a, f, d, b);
                N.free(b)
            }
            a.Nb.group = c;
            a.Nb.Gx = d;
            a.Nb.Ys = !1
        } else b && jk(a.Nb);
        return a.Nb
    }

    function ik(a, b, c, d) {
        if (b !== c)
            if (b.isVisible() && b.avoidable && !b.isLinkLabel) {
                var e = b.getAvoidableRect(d),
                    f = a.Nb.Rl;
                c = a.Nb.Ql;
                d = e.x + e.width;
                b = e.y + e.height;
                for (var g = e.x; g < d; g += f) {
                    for (var h = e.y; h < b; h += c) kk(a.Nb, g, h);
                    kk(a.Nb, g, b)
                }
                for (e = e.y; e < b; e += c) kk(a.Nb, d, e);
                kk(a.Nb, d, b)
            } else if (b instanceof hg)
            for (b = b.memberParts; b.next();) e = b.value, e instanceof U && ik(a, e, c, d)
    }

    function lk(a, b) {
        null !== a.Nb && !a.Nb.Ys && (void 0 === b && (b = null), null === b || b.avoidable && !b.isLinkLabel) && (a.Nb.Ys = !0)
    }
    t = P.prototype;
    t.Ls = function(a) {
        this.Hq.assign(a);
        mk(this, this.Hq).Pa(this.position) ? this.uf() : nk(this)
    };

    function nk(a) {
        -1 === a.uk && (a.uk = ua(function() {
            if (-1 !== a.uk && (a.uf(), null !== a.lastInput.event)) {
                var b = mk(a, a.Hq);
                b.Pa(a.position) || (a.position = b, a.lastInput.documentPoint = a.wt(a.Hq), a.doMouseMove(), a.Ng = !0, Ri(a, a.documentBounds.copy().Wc(a.computeBounds())), a.qc = !0, a.hd(), nk(a))
            }
        }, a.Rm))
    }
    t.uf = function() {
        -1 !== this.uk && (w.clearTimeout(this.uk), this.uk = -1)
    };

    function mk(a, b) {
        var c = a.position,
            d = a.Sm;
        if (0 >= d.top && 0 >= d.left && 0 >= d.right && 0 >= d.bottom) return c;
        var e = a.viewportBounds,
            f = a.scale;
        e = N.allocAt(0, 0, e.width * f, e.height * f);
        var g = G.allocAt(0, 0);
        if (b.x >= e.x && b.x < e.x + d.left) {
            var h = Math.max(a.scrollHorizontalLineChange, 1);
            h |= 0;
            g.x -= h;
            b.x < e.x + d.left / 2 && (g.x -= h);
            b.x < e.x + d.left / 4 && (g.x -= 4 * h)
        } else b.x <= e.x + e.width && b.x > e.x + e.width - d.right && (h = Math.max(a.scrollHorizontalLineChange, 1), h |= 0, g.x += h, b.x > e.x + e.width - d.right / 2 && (g.x += h), b.x > e.x + e.width - d.right / 4 &&
            (g.x += 4 * h));
        b.y >= e.y && b.y < e.y + d.top ? (a = Math.max(a.scrollVerticalLineChange, 1), a |= 0, g.y -= a, b.y < e.y + d.top / 2 && (g.y -= a), b.y < e.y + d.top / 4 && (g.y -= 4 * a)) : b.y <= e.y + e.height && b.y > e.y + e.height - d.bottom && (a = Math.max(a.scrollVerticalLineChange, 1), a |= 0, g.y += a, b.y > e.y + e.height - d.bottom / 2 && (g.y += a), b.y > e.y + e.height - d.bottom / 4 && (g.y += 4 * a));
        g.Pa(ac) || (c = new G(c.x + g.x / f, c.y + g.y / f));
        N.free(e);
        G.free(g);
        return c
    }
    t.ft = function() {
        return null
    };
    t.gv = function() {
        return null
    };
    t.Pw = function(a, b) {
        this.ql.add(a, b)
    };
    t.sz = function(a) {
        if (!sh) return null;
        void 0 === a && (a = new tb);
        a.returnType = "Image";
        return this.nx(a)
    };
    t.nx = function(a) {
        function b() {
            var k = +new Date;
            d = !0;
            for (e.reset(); e.next();)
                if (!e.value[0].fl) {
                    d = !1;
                    break
                } d || k - g > f ? ok(h, a, c) : w.requestAnimationFrame(b)
        }
        void 0 === a && (a = new tb);
        for (var c = a.callback, d = !0, e = this.yj.iterator; e.next();)
            if (!e.value[0].fl) {
                d = !1;
                break
            } if ("function" !== typeof c || d) return ok(this, a, c);
        var f = a.callbackTimeout || 300,
            g = +new Date,
            h = this;
        w.requestAnimationFrame(function() {
            b()
        });
        return null
    };

    function ok(a, b, c) {
        var d = pk(a, b, "canvas");
        if (null === d) return null;
        a = d.V.canvas;
        var e = null;
        if (null !== a) switch (e = b.returnType, void 0 === e ? e = "string" : e = e.toLowerCase(), e) {
            case "imagedata":
                e = d.getImageData(0, 0, a.width, a.height);
                break;
            case "image":
                d = (b.document || document).createElement("img");
                d.src = a.toDataURL(b.type, b.details);
                e = d;
                break;
            case "blob":
                "function" !== typeof c && A('Error: Diagram.makeImageData called with "returnType: toBlob", but no required "callback" function property defined.');
                if ("function" ===
                    typeof a.toBlob) return a.toBlob(c, b.type, b.details), "toBlob";
                if ("function" === typeof a.msToBlob) return c(a.msToBlob()), "msToBlob";
                c(null);
                return null;
            default:
                e = a.toDataURL(b.type, b.details)
        }
        return "function" === typeof c ? (c(e), null) : e
    }

    function pk(a, b, c) {
        a.animationManager.xd();
        a.hd();
        if (null === a.Da) return null;
        "object" !== typeof b && A("properties argument must be an Object.");
        var d = b.size || null,
            e = b.scale || null;
        void 0 !== b.scale && isNaN(b.scale) && (e = "NaN");
        var f = b.maxSize;
        void 0 === b.maxSize && (f = "SVG" === c ? new L(Infinity, Infinity) : new L(2E3, 2E3));
        var g = b.position || null,
            h = b.parts || null,
            k = void 0 === b.padding ? 1 : b.padding,
            l = b.background || null,
            m = b.omitTemporary;
        void 0 === m && (m = !0);
        var n = b.document || document,
            p = b.elementFinished || null,
            q = b.showTemporary;
        void 0 === q && (q = !m);
        b = b.showGrid;
        void 0 === b && (b = q);
        null !== d && isNaN(d.width) && isNaN(d.height) && (d = null);
        "number" === typeof k ? k = new Ic(k) : k instanceof Ic || A("MakeImage padding must be a Margin or a number.");
        k.left = Math.max(k.left, 0);
        k.right = Math.max(k.right, 0);
        k.top = Math.max(k.top, 0);
        k.bottom = Math.max(k.bottom, 0);
        a.$c.Sc(!0);
        m = new qk(null, n);
        var r = m.context;
        if (!(d || e || h || g)) {
            m.width = a.xa + Math.ceil(k.left + k.right);
            m.height = a.wa + Math.ceil(k.top + k.bottom);
            if ("SVG" === c) {
                e = a.ql.J("SVG");
                if (null === e) return null;
                e.resize(m.width, m.height, m.width, m.height);
                e.ownerDocument = n;
                e.Op = p;
                qj(a, e.context, k, new L(m.width, m.height), a.Ca, a.sa, h, l, q, b);
                return e.context
            }
            a.vn = !1;
            qj(a, r, k, new L(m.width, m.height), a.Ca, a.sa, h, l, q, b);
            a.vn = !0;
            return m.context
        }
        var u = a.Yq,
            v = a.documentBounds.copy();
        v.Iv(a.fb);
        if (q)
            for (var x = a.Oa.j, y = x.length, z = 0; z < y; z++) {
                var B = x[z];
                if (B.visible && B.isTemporary) {
                    B = B.Fa.j;
                    for (var C = B.length, I = 0; I < C; I++) {
                        var J = B[I];
                        J.isInDocumentBounds && J.isVisible() && (J = J.actualBounds, J.s() && v.Wc(J))
                    }
                }
            }
        x = new G(v.x,
            v.y);
        if (null !== h) {
            y = !0;
            z = h.iterator;
            for (z.reset(); z.next();)
                if (B = z.value, B instanceof T && (C = B.layer, (null === C || C.visible) && (null === C || q || !C.isTemporary) && B.isVisible() && (B = B.actualBounds, B.s())))
                    if (y) {
                        y = !1;
                        var K = B.copy()
                    } else K.Wc(B);
            y && (K = new N(0, 0, 0, 0));
            v.width = K.width;
            v.height = K.height;
            x.x = K.x;
            x.y = K.y
        }
        null !== g && g.s() && (x = g, e || (e = u));
        K = g = 0;
        null !== k && (g = k.left + k.right, K = k.top + k.bottom);
        y = z = 0;
        null !== d && (z = d.width, y = d.height, isFinite(z) && (z = Math.max(0, z - g)), isFinite(y) && (y = Math.max(0, y - K)));
        null !==
            d && null !== e ? ("NaN" === e && (e = u), d.s() ? (d = z, v = y) : isNaN(y) ? (d = z, v = v.height * e) : (d = v.width * e, v = y)) : null !== d ? d.s() ? (e = Math.min(z / v.width, y / v.height), d = z, v = y) : isNaN(y) ? (e = z / v.width, d = z, v = v.height * e) : (e = y / v.height, d = v.width * e, v = y) : null !== e ? "NaN" === e && f.s() ? (e = Math.min((f.width - g) / v.width, (f.height - K) / v.height), e > u ? (e = u, d = v.width, v = v.height) : (d = f.width, v = f.height)) : (d = v.width * e, v = v.height * e) : (e = u, d = v.width, v = v.height);
        null !== k ? (d += g, v += K) : k = new Ic(0);
        null !== f && (u = f.width, f = f.height, isNaN(u) && (u = 2E3), isNaN(f) &&
            (f = 2E3), isFinite(u) && (d = Math.min(d, u)), isFinite(f) && (v = Math.min(v, f)));
        m.width = Math.ceil(d);
        m.height = Math.ceil(v);
        if ("SVG" === c) {
            c = a.ql.J("SVG");
            if (null === c) return null;
            c.resize(m.width, m.height, m.width, m.height);
            c.ownerDocument = n;
            c.Op = p;
            qj(a, c.context, k, new L(Math.ceil(d), Math.ceil(v)), e, x, h, l, q, b);
            return c.context
        }
        a.vn = !1;
        qj(a, r, k, new L(Math.ceil(d), Math.ceil(v)), e, x, h, l, q, b);
        a.vn = !0;
        return m.context
    }
    pa.Object.defineProperties(P.prototype, {
        div: {
            get: function() {
                return this.Ia
            },
            set: function(a) {
                if (this.Ia !== a) {
                    Ya = [];
                    var b = this.Ia;
                    null !== b ? (b.F = void 0, b.innerHTML = "", null !== this.Da && (b = this.Da.Ga, b.removeEventListener("touchstart", this.Nv, !1), b.removeEventListener("touchmove", this.Mv, !1), b.removeEventListener("touchend", this.Lv, !1), this.Da.Zw()), b = this.toolManager, null !== b && (b.mouseDownTools.each(function(a) {
                            a.cancelWaitAfter()
                        }), b.mouseMoveTools.each(function(a) {
                            a.cancelWaitAfter()
                        }),
                        b.mouseUpTools.each(function(a) {
                            a.cancelWaitAfter()
                        })), b.cancelWaitAfter(), this.currentTool.doCancel(), this.$c = this.Da = null, w.removeEventListener("resize", this.Tv, !1), w.removeEventListener("mousemove", this.dk, !0), w.removeEventListener("mousedown", this.ck, !0), w.removeEventListener("mouseup", this.fk, !0), w.removeEventListener("wheel", this.gk, !0), w.removeEventListener("mouseout", this.ek, !0), lf === this && (lf = null)) : this.ge = !1;
                    this.Ia = null;
                    if (null !== a) {
                        if (b = a.F) b.div = null;
                        wi(this, a);
                        this.yh()
                    }
                }
            }
        },
        dv: {
            get: function() {
                return this.pb
            },
            set: function(a) {
                this.pb = a
            }
        },
        Ki: {
            get: function() {
                return this.ge
            }
        },
        draggedLink: {
            get: function() {
                return this.ar
            },
            set: function(a) {
                this.ar !== a && (this.ar = a, null !== a && (this.Wr = a.fromPort, this.Xr = a.toPort))
            }
        },
        qx: {
            get: function() {
                return this.Wr
            },
            set: function(a) {
                this.Wr = a
            }
        },
        sx: {
            get: function() {
                return this.Xr
            },
            set: function(a) {
                this.Xr = a
            }
        },
        animationManager: {
            get: function() {
                return this.Gq
            }
        },
        undoManager: {
            get: function() {
                return this.$b.undoManager
            }
        },
        skipsUndoManager: {
            get: function() {
                return this.ah
            },
            set: function(a) {
                this.ah = a;
                this.$b.skipsUndoManager = a
            }
        },
        delaysLayout: {
            get: function() {
                return this.Nt
            },
            set: function(a) {
                this.Nt = a
            }
        },
        validCycle: {
            get: function() {
                return this.Bs
            },
            set: function(a) {
                var b = this.Bs;
                b !== a && (this.Bs = a, this.g("validCycle",
                    b, a))
            }
        },
        layers: {
            get: function() {
                return this.Oa.iterator
            }
        },
        isModelReadOnly: {
            get: function() {
                var a = this.$b;
                return null === a ? !1 : a.isReadOnly
            },
            set: function(a) {
                var b = this.$b;
                null !== b && (b.isReadOnly = a)
            }
        },
        isReadOnly: {
            get: function() {
                return this.Jf
            },
            set: function(a) {
                var b = this.Jf;
                b !== a && (this.Jf = a, this.g("isReadOnly", b, a))
            }
        },
        isEnabled: {
            get: function() {
                return this.Fc
            },
            set: function(a) {
                var b = this.Fc;
                b !== a && (this.Fc = a, this.g("isEnabled", b, a))
            }
        },
        allowClipboard: {
            get: function() {
                return this.xq
            },
            set: function(a) {
                var b = this.xq;
                b !== a && (this.xq = a, this.g("allowClipboard", b, a))
            }
        },
        allowCopy: {
            get: function() {
                return this.Bh
            },
            set: function(a) {
                var b = this.Bh;
                b !== a && (this.Bh = a, this.g("allowCopy", b, a))
            }
        },
        allowDelete: {
            get: function() {
                return this.Ch
            },
            set: function(a) {
                var b = this.Ch;
                b !== a && (this.Ch = a, this.g("allowDelete", b, a))
            }
        },
        allowDragOut: {
            get: function() {
                return this.yq
            },
            set: function(a) {
                var b = this.yq;
                b !== a && (this.yq = a, this.g("allowDragOut", b, a))
            }
        },
        allowDrop: {
            get: function() {
                return this.zq
            },
            set: function(a) {
                var b = this.zq;
                b !== a && (this.zq = a, this.g("allowDrop", b, a))
            }
        },
        allowTextEdit: {
            get: function() {
                return this.Lh
            },
            set: function(a) {
                var b = this.Lh;
                b !== a && (this.Lh = a, this.g("allowTextEdit", b, a))
            }
        },
        allowGroup: {
            get: function() {
                return this.Dh
            },
            set: function(a) {
                var b =
                    this.Dh;
                b !== a && (this.Dh = a, this.g("allowGroup", b, a))
            }
        },
        allowUngroup: {
            get: function() {
                return this.Mh
            },
            set: function(a) {
                var b = this.Mh;
                b !== a && (this.Mh = a, this.g("allowUngroup", b, a))
            }
        },
        allowInsert: {
            get: function() {
                return this.Bq
            },
            set: function(a) {
                var b = this.Bq;
                b !== a && (this.Bq = a, this.g("allowInsert", b, a))
            }
        },
        allowLink: {
            get: function() {
                return this.Eh
            },
            set: function(a) {
                var b = this.Eh;
                b !== a && (this.Eh = a, this.g("allowLink", b, a))
            }
        },
        allowRelink: {
            get: function() {
                return this.Gh
            },
            set: function(a) {
                var b = this.Gh;
                b !== a && (this.Gh = a, this.g("allowRelink", b, a))
            }
        },
        allowMove: {
            get: function() {
                return this.Fh
            },
            set: function(a) {
                var b = this.Fh;
                b !== a && (this.Fh = a, this.g("allowMove", b, a))
            }
        },
        allowReshape: {
            get: function() {
                return this.Hh
            },
            set: function(a) {
                var b = this.Hh;
                b !== a && (this.Hh = a, this.g("allowReshape", b, a))
            }
        },
        allowResize: {
            get: function() {
                return this.Ih
            },
            set: function(a) {
                var b = this.Ih;
                b !== a && (this.Ih = a, this.g("allowResize", b, a))
            }
        },
        allowRotate: {
            get: function() {
                return this.Jh
            },
            set: function(a) {
                var b = this.Jh;
                b !== a && (this.Jh = a, this.g("allowRotate", b, a))
            }
        },
        allowSelect: {
            get: function() {
                return this.Kh
            },
            set: function(a) {
                var b = this.Kh;
                b !== a && (this.Kh = a, this.g("allowSelect", b, a))
            }
        },
        allowUndo: {
            get: function() {
                return this.Cq
            },
            set: function(a) {
                var b = this.Cq;
                b !== a && (this.Cq = a, this.g("allowUndo",
                    b, a))
            }
        },
        allowZoom: {
            get: function() {
                return this.Eq
            },
            set: function(a) {
                var b = this.Eq;
                b !== a && (this.Eq = a, this.g("allowZoom", b, a))
            }
        },
        hasVerticalScrollbar: {
            get: function() {
                return this.qr
            },
            set: function(a) {
                var b = this.qr;
                b !== a && (this.qr = a, dj(this), this.R(), this.g("hasVerticalScrollbar", b, a), Oi(this, !1))
            }
        },
        hasHorizontalScrollbar: {
            get: function() {
                return this.pr
            },
            set: function(a) {
                var b = this.pr;
                b !== a && (this.pr = a, dj(this), this.R(),
                    this.g("hasHorizontalScrollbar", b, a), Oi(this, !1))
            }
        },
        allowHorizontalScroll: {
            get: function() {
                return this.Aq
            },
            set: function(a) {
                var b = this.Aq;
                b !== a && (this.Aq = a, this.g("allowHorizontalScroll", b, a), Oi(this, !1))
            }
        },
        allowVerticalScroll: {
            get: function() {
                return this.Dq
            },
            set: function(a) {
                var b = this.Dq;
                b !== a && (this.Dq = a, this.g("allowVerticalScroll", b, a), Oi(this, !1))
            }
        },
        scrollHorizontalLineChange: {
            get: function() {
                return this.js
            },
            set: function(a) {
                var b = this.js;
                b !== a && (0 > a && xa(a, ">= 0", P, "scrollHorizontalLineChange"), this.js = a, this.g("scrollHorizontalLineChange", b, a))
            }
        },
        scrollVerticalLineChange: {
            get: function() {
                return this.ms
            },
            set: function(a) {
                var b = this.ms;
                b !== a && (0 > a && xa(a, ">= 0", P, "scrollVerticalLineChange"), this.ms = a, this.g("scrollVerticalLineChange", b, a))
            }
        },
        lastInput: {
            get: function() {
                return this.mj
            },
            set: function(a) {
                this.mj = a
            }
        },
        firstInput: {
            get: function() {
                return this.Uh
            },
            set: function(a) {
                this.Uh = a
            }
        },
        currentCursor: {
            get: function() {
                return this.Sq
            },
            set: function(a) {
                "" === a && (a = this.on);
                if (this.Sq !== a) {
                    var b = this.Da,
                        c = this.Ia;
                    if (null !== b) {
                        this.Sq = a;
                        var d = b.style.cursor;
                        b.style.cursor = a;
                        c.style.cursor = a;
                        b.style.cursor === d && (b.style.cursor = "-webkit-" + a, c.style.cursor = "-webkit-" + a, b.style.cursor === d && (b.style.cursor = "-moz-" + a, c.style.cursor = "-moz-" + a, b.style.cursor === d && (b.style.cursor = a, c.style.cursor = a)))
                    }
                }
            }
        },
        defaultCursor: {
            get: function() {
                return this.on
            },
            set: function(a) {
                "" === a && (a = "auto");
                var b = this.on;
                b !== a && (this.on = a, this.g("defaultCursor", b, a))
            }
        },
        click: {
            get: function() {
                return this.zf
            },
            set: function(a) {
                var b = this.zf;
                b !== a && (this.zf = a, this.g("click", b, a))
            }
        },
        doubleClick: {
            get: function() {
                return this.Ef
            },
            set: function(a) {
                var b = this.Ef;
                b !== a && (this.Ef = a, this.g("doubleClick", b, a))
            }
        },
        contextClick: {
            get: function() {
                return this.Af
            },
            set: function(a) {
                var b = this.Af;
                b !== a && (this.Af = a, this.g("contextClick", b, a))
            }
        },
        mouseOver: {
            get: function() {
                return this.Uf
            },
            set: function(a) {
                var b = this.Uf;
                b !== a && (this.Uf = a, this.g("mouseOver", b, a))
            }
        },
        mouseHover: {
            get: function() {
                return this.Sf
            },
            set: function(a) {
                var b = this.Sf;
                b !== a && (this.Sf = a, this.g("mouseHover", b, a))
            }
        },
        mouseHold: {
            get: function() {
                return this.Rf
            },
            set: function(a) {
                var b = this.Rf;
                b !== a && (this.Rf = a, this.g("mouseHold",
                    b, a))
            }
        },
        mouseDragOver: {
            get: function() {
                return this.Rr
            },
            set: function(a) {
                var b = this.Rr;
                b !== a && (this.Rr = a, this.g("mouseDragOver", b, a))
            }
        },
        mouseDrop: {
            get: function() {
                return this.Pf
            },
            set: function(a) {
                var b = this.Pf;
                b !== a && (this.Pf = a, this.g("mouseDrop", b, a))
            }
        },
        handlesDragDropForTopLevelParts: {
            get: function() {
                return this.nr
            },
            set: function(a) {
                var b = this.nr;
                b !== a && (this.nr = a, this.g("handlesDragDropForTopLevelParts", b, a))
            }
        },
        mouseEnter: {
            get: function() {
                return this.Qf
            },
            set: function(a) {
                var b = this.Qf;
                b !== a && (this.Qf = a, this.g("mouseEnter", b, a))
            }
        },
        mouseLeave: {
            get: function() {
                return this.Tf
            },
            set: function(a) {
                var b = this.Tf;
                b !== a && (this.Tf = a, this.g("mouseLeave", b, a))
            }
        },
        toolTip: {
            get: function() {
                return this.fg
            },
            set: function(a) {
                var b = this.fg;
                b !== a && (this.fg = a, this.g("toolTip", b, a))
            }
        },
        contextMenu: {
            get: function() {
                return this.Bf
            },
            set: function(a) {
                var b = this.Bf;
                b !== a && (this.Bf = a, this.g("contextMenu", b, a))
            }
        },
        commandHandler: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K !== a && (this.K = a, a.nb(this))
            }
        },
        toolManager: {
            get: function() {
                return this.Ub
            },
            set: function(a) {
                this.Ub !== a && (this.Ub = a, a.nb(this))
            }
        },
        defaultTool: {
            get: function() {
                return this.La
            },
            set: function(a) {
                var b = this.La;
                b !== a && (this.La = a, a.nb(this), this.currentTool === b && (this.currentTool =
                    a))
            }
        },
        currentTool: {
            get: function() {
                return this.da
            },
            set: function(a) {
                var b = this.da;
                null !== b && (b.isActive && b.doDeactivate(), b.cancelWaitAfter(), b.doStop());
                null === a && (a = this.defaultTool);
                null !== a && (this.da = a, a.nb(this), a.doStart())
            }
        },
        selection: {
            get: function() {
                return this.ps
            }
        },
        maxSelectionCount: {
            get: function() {
                return this.Nr
            },
            set: function(a) {
                var b = this.Nr;
                if (b !== a)
                    if (0 <= a && !isNaN(a)) {
                        if (this.Nr = a, this.g("maxSelectionCount",
                                b, a), !this.undoManager.isUndoingRedoing && (a = this.selection.count - a, 0 < a)) {
                            this.aa("ChangingSelection", this.selection);
                            b = this.selection.Ma();
                            for (var c = 0; c < a; c++) b[c].isSelected = !1;
                            this.aa("ChangedSelection", this.selection)
                        }
                    } else xa(a, ">= 0", P, "maxSelectionCount")
            }
        },
        nodeSelectionAdornmentTemplate: {
            get: function() {
                return this.Ur
            },
            set: function(a) {
                var b = this.Ur;
                b !== a && (this.Ur = a, this.g("nodeSelectionAdornmentTemplate", b, a))
            }
        },
        groupSelectionAdornmentTemplate: {
            get: function() {
                return this.lr
            },
            set: function(a) {
                var b = this.lr;
                b !== a && (this.lr = a, this.g("groupSelectionAdornmentTemplate", b, a))
            }
        },
        linkSelectionAdornmentTemplate: {
            get: function() {
                return this.Jr
            },
            set: function(a) {
                var b = this.Jr;
                b !== a && (this.Jr = a, this.g("linkSelectionAdornmentTemplate", b, a))
            }
        },
        highlighteds: {
            get: function() {
                return this.rr
            }
        },
        isModified: {
            get: function() {
                var a = this.undoManager;
                return a.isEnabled ?
                    null !== a.currentTransaction ? !0 : this.u && this.fe !== a.historyIndex : this.u
            },
            set: function(a) {
                if (this.u !== a) {
                    this.u = a;
                    var b = this.undoManager;
                    !a && b.isEnabled && (this.fe = b.historyIndex);
                    a || Pj(this)
                }
            }
        },
        model: {
            get: function() {
                return this.$b
            },
            set: function(a) {
                var b = this.$b;
                if (b !== a) {
                    this.currentTool.doCancel();
                    null !== b && b.undoManager !== a.undoManager && b.undoManager.isInTransaction && A("Do not replace a Diagram.model while a transaction is in progress.");
                    zi(this, !0);
                    this.ge = !1;
                    this.Pk = !0;
                    this.fe = -2;
                    this.sd = !1;
                    var c = this.Zb;
                    this.Zb = !0;
                    this.animationManager.Ni("Model");
                    null !== b && (null !== this.ne && this.ne.each(function(a) {
                        b.jk(a)
                    }), b.jk(this.zm));
                    this.$b = a;
                    this.partManager = Qj(this.$b.constructor.type);
                    a.lh(this.vg);
                    this.partManager.addAllModeledParts();
                    a.jk(this.vg);
                    a.lh(this.zm);
                    null !== this.ne && this.ne.each(function(b) {
                        a.lh(b)
                    });
                    this.Zb = c;
                    this.pb || this.R();
                    null !== b && (a.undoManager.isEnabled = b.undoManager.isEnabled)
                }
            }
        },
        ca: {
            get: function() {
                return this.Xc
            },
            set: function(a) {
                this.Xc = a
            }
        },
        dt: {
            get: function() {
                return this.vq
            }
        },
        skipsModelSourceBindings: {
            get: function() {
                return this.Am
            },
            set: function(a) {
                this.Am = a
            }
        },
        Qi: {
            get: function() {
                return this.su
            },
            set: function(a) {
                this.su = a
            }
        },
        nodeTemplate: {
            get: function() {
                return this.Vf.J("")
            },
            set: function(a) {
                var b = this.Vf.J("");
                b !== a && (this.Vf.add("", a), this.g("nodeTemplate", b, a), this.undoManager.isUndoingRedoing ||
                    this.wd())
            }
        },
        nodeTemplateMap: {
            get: function() {
                return this.Vf
            },
            set: function(a) {
                var b = this.Vf;
                b !== a && (this.Vf = a, this.g("nodeTemplateMap", b, a), this.undoManager.isUndoingRedoing || this.wd())
            }
        },
        groupTemplate: {
            get: function() {
                return this.Vh.J("")
            },
            set: function(a) {
                var b = this.Vh.J("");
                b !== a && (this.Vh.add("", a), this.g("groupTemplate", b, a), this.undoManager.isUndoingRedoing || this.wd())
            }
        },
        groupTemplateMap: {
            get: function() {
                return this.Vh
            },
            set: function(a) {
                var b = this.Vh;
                b !== a && (this.Vh = a, this.g("groupTemplateMap", b, a), this.undoManager.isUndoingRedoing || this.wd())
            }
        },
        linkTemplate: {
            get: function() {
                return this.Rg.J("")
            },
            set: function(a) {
                var b = this.Rg.J("");
                b !== a && (this.Rg.add("", a), this.g("linkTemplate", b, a), this.undoManager.isUndoingRedoing || this.wd())
            }
        },
        linkTemplateMap: {
            get: function() {
                return this.Rg
            },
            set: function(a) {
                var b = this.Rg;
                b !== a && (this.Rg = a, this.g("linkTemplateMap", b, a),
                    this.undoManager.isUndoingRedoing || this.wd())
            }
        },
        isMouseOverDiagram: {
            get: function() {
                return this.he
            },
            set: function(a) {
                this.he = a
            }
        },
        isMouseCaptured: {
            get: function() {
                return this.Lc
            },
            set: function(a) {
                var b = this.Da;
                null !== b && (b = b.Ga, b instanceof SVGElement || (a ? (this.lastInput.bubbles = !1, this.Fq ? (b.removeEventListener("pointermove", this.gm, !1), b.removeEventListener("pointerdown", this.fm, !1), b.removeEventListener("pointerup", this.im, !1), b.removeEventListener("pointerout",
                    this.hm, !1), w.addEventListener("pointermove", this.gm, !0), w.addEventListener("pointerdown", this.fm, !0), w.addEventListener("pointerup", this.im, !0), w.addEventListener("pointerout", this.hm, !0)) : (b.removeEventListener("mousemove", this.dk, !1), b.removeEventListener("mousedown", this.ck, !1), b.removeEventListener("mouseup", this.fk, !1), b.removeEventListener("mouseout", this.ek, !1), w.addEventListener("mousemove", this.dk, !0), w.addEventListener("mousedown", this.ck, !0), w.addEventListener("mouseup", this.fk, !0), w.addEventListener("mouseout",
                    this.ek, !0)), b.removeEventListener("wheel", this.gk, !1), w.addEventListener("wheel", this.gk, !0), w.addEventListener("selectstart", this.preventDefault, !1)) : (this.Fq ? (w.removeEventListener("pointermove", this.gm, !0), w.removeEventListener("pointerdown", this.fm, !0), w.removeEventListener("pointerup", this.im, !0), w.removeEventListener("pointerout", this.hm, !0), b.addEventListener("pointermove", this.gm, !1), b.addEventListener("pointerdown", this.fm, !1), b.addEventListener("pointerup", this.im, !1), b.addEventListener("pointerout",
                    this.hm, !1)) : (w.removeEventListener("mousemove", this.dk, !0), w.removeEventListener("mousedown", this.ck, !0), w.removeEventListener("mouseup", this.fk, !0), w.removeEventListener("mouseout", this.ek, !0), b.addEventListener("mousemove", this.dk, !1), b.addEventListener("mousedown", this.ck, !1), b.addEventListener("mouseup", this.fk, !1), b.addEventListener("mouseout", this.ek, !1)), w.removeEventListener("wheel", this.gk, !0), w.removeEventListener("selectstart", this.preventDefault, !1), b.addEventListener("wheel", this.gk,
                    !1)), this.Lc = a))
            }
        },
        position: {
            get: function() {
                return this.sa
            },
            set: function(a) {
                var b = G.alloc().assign(this.sa);
                if (!b.A(a)) {
                    var c = this.viewportBounds.copy();
                    this.sa.assign(a);
                    this.pb || null === this.Da && !this.Cp.s() || (this.pb = !0, a = this.scale, Qi(this, this.tn, this.xa / a, this.wa / a, this.Zi, !1), this.pb = !1);
                    $h(this.animationManager, b, this.sa);
                    this.pb || this.hq(c, this.viewportBounds, this.Ca, !1)
                }
                G.free(b)
            }
        },
        initialPosition: {
            get: function() {
                return this.tr
            },
            set: function(a) {
                this.tr.A(a) || (this.tr = a.I())
            }
        },
        initialScale: {
            get: function() {
                return this.ur
            },
            set: function(a) {
                this.ur !== a && (this.ur = a)
            }
        },
        grid: {
            get: function() {
                null === this.Fb && Hi(this);
                return this.Fb
            },
            set: function(a) {
                var b = this.Fb;
                if (b !== a) {
                    null === b && (Hi(this), b = this.Fb);
                    a.type !== W.Grid && A("Diagram.grid must be a Panel of type Panel.Grid");
                    var c = b.panel;
                    null !== c && c.remove(b);
                    this.Fb = a;
                    a.name = "GRID";
                    null !== c && c.add(a);
                    gj(this);
                    this.R();
                    this.g("grid",
                        b, a)
                }
            }
        },
        viewportBounds: {
            get: function() {
                var a = this.Iw,
                    b = this.sa,
                    c = this.Ca;
                if (null === this.Da) return this.Cp.s() && a.h(b.x, b.y, this.xa / c, this.wa / c), a;
                a.h(b.x, b.y, Math.max(this.xa, 0) / c, Math.max(this.wa, 0) / c);
                return a
            }
        },
        viewSize: {
            get: function() {
                return this.Cp
            },
            set: function(a) {
                var b = this.viewSize;
                b.A(a) || (this.Cp = a = a.I(), this.xa = a.width, this.wa = a.height, this.Xa(), this.g("viewSize", b, a))
            }
        },
        fixedBounds: {
            get: function() {
                return this.ir
            },
            set: function(a) {
                var b = this.ir;
                b.A(a) || (-Infinity !== a.width && Infinity !== a.height && -Infinity !== a.height || A("fixedBounds width/height must not be Infinity"), this.ir = a = a.I(), this.Xa(), this.g("fixedBounds", b, a))
            }
        },
        scrollMargin: {
            get: function() {
                return this.oi
            },
            set: function(a) {
                "number" === typeof a && (a = new Ic(a));
                var b = this.oi;
                b.A(a) || (this.oi = a = a.I(), this.g("scrollMargin", b, a), this.yh())
            }
        },
        scrollMode: {
            get: function() {
                return this.ks
            },
            set: function(a) {
                var b =
                    this.ks;
                b !== a && (this.ks = a, a === ki && Oi(this, !1), this.g("scrollMode", b, a), this.yh())
            }
        },
        scrollsPageOnFocus: {
            get: function() {
                return this.ns
            },
            set: function(a) {
                var b = this.ns;
                b !== a && (this.ns = a, this.g("scrollsPageOnFocus", b, a))
            }
        },
        positionComputation: {
            get: function() {
                return this.cs
            },
            set: function(a) {
                var b = this.cs;
                b !== a && (this.cs = a, Oi(this, !1), this.g("positionComputation", b, a))
            }
        },
        scaleComputation: {
            get: function() {
                return this.gs
            },
            set: function(a) {
                var b = this.gs;
                b !== a && (this.gs = a, Nj(this, this.scale, this.scale), this.g("scaleComputation", b, a))
            }
        },
        documentBounds: {
            get: function() {
                return this.tn
            }
        },
        isVirtualized: {
            get: function() {
                return this.Er
            },
            set: function(a) {
                var b = this.Er;
                b !== a && (this.Er = a, this.g("isVirtualized", b, a))
            }
        },
        scale: {
            get: function() {
                return this.Ca
            },
            set: function(a) {
                var b = this.Ca;
                b !== a && Nj(this, b, a)
            }
        },
        defaultScale: {
            get: function() {
                return this.Yq
            },
            set: function(a) {
                this.Yq = a
            }
        },
        autoScale: {
            get: function() {
                return this.Xi
            },
            set: function(a) {
                var b = this.Xi;
                b !== a && (this.Xi = a, this.g("autoScale", b, a), a !== li && Oi(this, !1))
            }
        },
        initialAutoScale: {
            get: function() {
                return this.Yh
            },
            set: function(a) {
                var b = this.Yh;
                b !== a && (this.Yh = a, this.g("initialAutoScale", b, a))
            }
        },
        initialViewportSpot: {
            get: function() {
                return this.vr
            },
            set: function(a) {
                var b = this.vr;
                b !==
                    a && (a.hb() || A("initialViewportSpot must be a specific Spot: " + a), this.vr = a, this.g("initialViewportSpot", b, a))
            }
        },
        initialDocumentSpot: {
            get: function() {
                return this.sr
            },
            set: function(a) {
                var b = this.sr;
                b !== a && (a.hb() || A("initialViewportSpot must be a specific Spot: " + a), this.sr = a, this.g("initialDocumentSpot", b, a))
            }
        },
        minScale: {
            get: function() {
                return this.Or
            },
            set: function(a) {
                var b = this.Or;
                b !== a && (0 < a ? (this.Or = a, this.g("minScale", b, a), a > this.scale &&
                    (this.scale = a)) : xa(a, "> 0", P, "minScale"))
            }
        },
        maxScale: {
            get: function() {
                return this.Mr
            },
            set: function(a) {
                var b = this.Mr;
                b !== a && (0 < a ? (this.Mr = a, this.g("maxScale", b, a), a < this.scale && (this.scale = a)) : xa(a, "> 0", P, "maxScale"))
            }
        },
        zoomPoint: {
            get: function() {
                return this.Es
            },
            set: function(a) {
                this.Es.A(a) || (this.Es = a = a.I())
            }
        },
        contentAlignment: {
            get: function() {
                return this.Zi
            },
            set: function(a) {
                var b = this.Zi;
                b.A(a) || (this.Zi = a = a.I(),
                    this.g("contentAlignment", b, a), Oi(this, !1))
            }
        },
        initialContentAlignment: {
            get: function() {
                return this.Mn
            },
            set: function(a) {
                var b = this.Mn;
                b.A(a) || (this.Mn = a = a.I(), this.g("initialContentAlignment", b, a))
            }
        },
        padding: {
            get: function() {
                return this.fb
            },
            set: function(a) {
                "number" === typeof a && (a = new Ic(a));
                var b = this.fb;
                b.A(a) || (this.fb = a = a.I(), this.Xa(), this.g("padding", b, a))
            }
        },
        partManager: {
            get: function() {
                return this.Wa
            },
            set: function(a) {
                var b =
                    this.Wa;
                b !== a && (null !== a.diagram && A("Cannot share PartManagers between Diagrams: " + a.toString()), null !== b && b.nb(null), this.Wa = a, a.nb(this))
            }
        },
        nodes: {
            get: function() {
                return this.partManager.nodes.iterator
            }
        },
        links: {
            get: function() {
                return this.partManager.links.iterator
            }
        },
        parts: {
            get: function() {
                return this.partManager.parts.iterator
            }
        },
        layout: {
            get: function() {
                return this.ic
            },
            set: function(a) {
                var b =
                    this.ic;
                b !== a && (this.ic = a, a.diagram = this, a.group = null, this.yg = !0, this.g("layout", b, a), this.ec())
            }
        },
        isTreePathToChildren: {
            get: function() {
                return this.Dr
            },
            set: function(a) {
                var b = this.Dr;
                if (b !== a && (this.Dr = a, this.g("isTreePathToChildren", b, a), !this.undoManager.isUndoingRedoing))
                    for (a = this.nodes; a.next();) rk(a.value)
            }
        },
        treeCollapsePolicy: {
            get: function() {
                return this.zs
            },
            set: function(a) {
                var b = this.zs;
                b !== a && (a !== ni && a !== sk && a !== tk && A("Unknown Diagram.treeCollapsePolicy: " +
                    a), this.zs = a, this.g("treeCollapsePolicy", b, a))
            }
        },
        Ee: {
            get: function() {
                return this.Vb
            },
            set: function(a) {
                this.Vb = a
            }
        },
        autoScrollInterval: {
            get: function() {
                return this.Rm
            },
            set: function(a) {
                var b = this.Rm;
                b !== a && (this.Rm = a, this.g("autoScrollInterval", b, a))
            }
        },
        autoScrollRegion: {
            get: function() {
                return this.Sm
            },
            set: function(a) {
                "number" === typeof a && (a = new Ic(a));
                var b = this.Sm;
                b.A(a) || (this.Sm = a = a.I(), this.Xa(), this.g("autoScrollRegion",
                    b, a))
            }
        }
    });
    pa.Object.defineProperties(P, {
        licenseKey: {
            get: function() {
                return uk.Sb()
            },
            set: function(a) {
                uk.add(a)
            }
        },
        version: {
            get: function() {
                return vk
            }
        }
    });
    P.prototype.makeImageData = P.prototype.nx;
    P.prototype.makeImage = P.prototype.sz;
    P.prototype.addRenderer = P.prototype.Pw;
    P.prototype.makeSVG = P.prototype.gv;
    P.prototype.makeSvg = P.prototype.ft;
    P.prototype.stopAutoScroll = P.prototype.uf;
    P.prototype.doAutoScroll = P.prototype.Ls;
    P.prototype.isUnoccupied = P.prototype.$j;
    P.prototype.raiseDiagramEvent = P.prototype.aa;
    P.prototype.removeDiagramListener = P.prototype.jm;
    P.prototype.addDiagramListener = P.prototype.Ij;
    P.prototype.findTreeRoots = P.prototype.Ty;
    P.prototype.layoutDiagram = P.prototype.qz;
    P.prototype.findTopLevelGroups = P.prototype.My;
    P.prototype.findTopLevelNodesAndLinks = P.prototype.Ny;
    P.prototype.findLinksByExample = P.prototype.Os;
    P.prototype.findNodesByExample = P.prototype.Ps;
    P.prototype.findLinkForData = P.prototype.wc;
    P.prototype.findNodeForData = P.prototype.Bi;
    P.prototype.findPartForData = P.prototype.xc;
    P.prototype.findNodeForKey = P.prototype.Ib;
    P.prototype.findPartForKey = P.prototype.findPartForKey;
    P.prototype.rebuildParts = P.prototype.wd;
    P.prototype.transformViewToDoc = P.prototype.wt;
    P.prototype.transformRectDocToView = P.prototype.Qz;
    P.prototype.transformDocToView = P.prototype.vt;
    P.prototype.centerRect = P.prototype.Fu;
    P.prototype.scrollToRect = P.prototype.zv;
    P.prototype.scroll = P.prototype.scroll;
    P.prototype.highlightCollection = P.prototype.gz;
    P.prototype.highlight = P.prototype.fz;
    P.prototype.clearHighlighteds = P.prototype.Rw;
    P.prototype.selectCollection = P.prototype.Av;
    P.prototype.select = P.prototype.select;
    P.prototype.clearSelection = P.prototype.Hs;
    P.prototype.updateAllRelationshipsFromData = P.prototype.sq;
    P.prototype.updateAllTargetBindings = P.prototype.updateAllTargetBindings;
    P.prototype.commit = P.prototype.commit;
    P.prototype.rollbackTransaction = P.prototype.tf;
    P.prototype.commitTransaction = P.prototype.$a;
    P.prototype.startTransaction = P.prototype.Aa;
    P.prototype.raiseChanged = P.prototype.g;
    P.prototype.raiseChangedEvent = P.prototype.bb;
    P.prototype.removeChangedListener = P.prototype.jk;
    P.prototype.addChangedListener = P.prototype.lh;
    P.prototype.removeModelChangedListener = P.prototype.Fz;
    P.prototype.addModelChangedListener = P.prototype.Ow;
    P.prototype.findLayer = P.prototype.Wl;
    P.prototype.removeLayer = P.prototype.Dz;
    P.prototype.addLayerAfter = P.prototype.Zx;
    P.prototype.addLayerBefore = P.prototype.Mw;
    P.prototype.addLayer = P.prototype.Ml;
    P.prototype.moveParts = P.prototype.moveParts;
    P.prototype.copyParts = P.prototype.Sj;
    P.prototype.removeParts = P.prototype.ot;
    P.prototype.remove = P.prototype.remove;
    P.prototype.add = P.prototype.add;
    P.prototype.clearDelayedGeometries = P.prototype.Gu;
    P.prototype.setProperties = P.prototype.Gv;
    P.prototype.resetInputOptions = P.prototype.wv;
    P.prototype.setInputOption = P.prototype.Jz;
    P.prototype.getInputOption = P.prototype.Zl;
    P.prototype.resetRenderingHints = P.prototype.xv;
    P.prototype.setRenderingHint = P.prototype.Cx;
    P.prototype.getRenderingHint = P.prototype.De;
    P.prototype.maybeUpdate = P.prototype.hd;
    P.prototype.requestUpdate = P.prototype.ec;
    P.prototype.delayInitialization = P.prototype.ty;
    P.prototype.isUpdateRequested = P.prototype.mz;
    P.prototype.redraw = P.prototype.yh;
    P.prototype.invalidateDocumentBounds = P.prototype.Xa;
    P.prototype.findObjectsNear = P.prototype.mg;
    P.prototype.findPartsNear = P.prototype.Jy;
    P.prototype.findObjectsIn = P.prototype.lg;
    P.prototype.findPartsIn = P.prototype.gx;
    P.prototype.findObjectsAt = P.prototype.Ci;
    P.prototype.findPartsAt = P.prototype.Iy;
    P.prototype.findObjectAt = P.prototype.Rb;
    P.prototype.findPartAt = P.prototype.Xl;
    P.prototype.alignDocument = P.prototype.ey;
    P.prototype.zoomToRect = P.prototype.Tz;
    P.prototype.zoomToFit = P.prototype.zoomToFit;
    P.prototype.diagramScroll = P.prototype.Yw;
    P.prototype.focus = P.prototype.focus;
    P.prototype.reset = P.prototype.reset;
    P.useDOM = function(a) {
        sh = a ? void 0 !== w.document : !1
    };
    P.isUsingDOM = function() {
        return sh
    };
    var lf = null,
        oi = new Lb,
        Ci = null,
        Bi = null,
        sh = void 0 !== w.document,
        xi = null,
        yi = "",
        li = new D(P, "None", 0),
        Si = new D(P, "Uniform", 1),
        Ti = new D(P, "UniformToFill", 2),
        sg = new D(P, "CycleAll", 10),
        wg = new D(P, "CycleNotDirected", 11),
        yg = new D(P, "CycleNotDirectedFast", 12),
        zg = new D(P, "CycleNotUndirected", 13),
        tg = new D(P, "CycleDestinationTree", 14),
        vg = new D(P, "CycleSourceTree", 15),
        ki = new D(P, "DocumentScroll", 1),
        tj = new D(P, "InfiniteScroll", 2),
        ni = new D(P, "TreeParentCollapsed", 21),
        sk = new D(P, "AllParentsCollapsed", 22),
        tk = new D(P,
            "AnyParentsCollapsed", 23),
        uk = new E,
        vk = "2.0.2",
        wk = null,
        ii = !1;

    function ji() {
        if (sh) {
            var a = w.document.createElement("canvas"),
                b = a.getContext("2d"),
                c = ab("7ca11abfd022028846");
            b[c] = ab("398c3597c01238");
            for (var d = ["5da73c80a36455d4038e4972187c3cae51fd22", sa.Dx + "4ae6247590da4bb21c324ba3a84e385776", Qc.xF + "fb236cdfda5de14c134ba1a95a2d4c7cc6f93c1387", H.za], e = 1; 5 > e; e++) b[ab("7ca11abfd7330390")](ab(d[e - 1]), 10, 15 * e);
            b[c] = ab("39f046ebb36e4b");
            for (c = 1; 5 > c; c++) b[ab("7ca11abfd7330390")](ab(d[c - 1]), 10, 15 * c);
            wk = a
        }
    }
    P.className = "Diagram";
    P.fromDiv = function(a) {
        var b = a;
        "string" === typeof a && (b = w.document.getElementById(a));
        return b instanceof HTMLDivElement && b.F instanceof P ? b.F : null
    };
    P.inherit = function(a, b) {
        function c() {}
        if (Object.getPrototypeOf(a).prototype) throw Error("Used go.Diagram.inherit defining already defined class \n" + a);
        c.prototype = b.prototype;
        a.prototype = new c;
        a.prototype.constructor = a
    };
    P.None = li;
    P.Uniform = Si;
    P.UniformToFill = Ti;
    P.CycleAll = sg;
    P.CycleNotDirected = wg;
    P.CycleNotDirectedFast = yg;
    P.CycleNotUndirected = zg;
    P.CycleDestinationTree = tg;
    P.CycleSourceTree = vg;
    P.DocumentScroll = ki;
    P.InfiniteScroll = tj;
    P.TreeParentCollapsed = ni;
    P.AllParentsCollapsed = sk;
    P.AnyParentsCollapsed = tk;

    function vi() {
        this.Ux = null;
        this.l = "zz@orderNum";
        "63ad05bbe23a1786468a4c741b6d2" === this._tk ? this.Ne = this.l = !0 : this.Ne = null
    }

    function pj(a, b) {
        b.$c.setTransform(b.ac, 0, 0, b.ac, 0, 0);
        if (null === a.Ne) {
            b = "f";
            var c = w[ab("76a715b2f73f148a")][ab("72ba13b5")];
            a.Ne = !0;
            if (sh) {
                var d = P[ab("76a115b6ed251eaf4692")];
                if (d)
                    for (var e = uk.iterator; e.next();) {
                        d = e.value;
                        d = ab(d).split(ab("39e9"));
                        if (6 > d.length) break;
                        var f = ab(d[1]).split(".");
                        if ("7da71ca0" !== d[4]) break;
                        var g = ab(sa[ab("6cae19")]).split(".");
                        if (f[0] > g[0] || f[0] === g[0] && f[1] >= g[1]) {
                            f = c[ab("76ad18b4f73e")];
                            for (g = c[ab("73a612b6fb191d")](ab("35e7")) + 2; g < f; g++) b += c[g];
                            f = b[ab("73a612b6fb191d")](ab(d[2]));
                            0 > f && ab(d[2]) !== ab("7da71ca0ad381e90") && (f = b[ab("73a612b6fb191d")](ab("76a715b2ef3e149757")));
                            0 > f && (f = b[ab("73a612b6fb191d")](ab("76a715b2ef3e149757")));
                            a.Ne = !(0 <= f && f < b[ab("73a612b6fb191d")](ab("35")));
                            if (!a.Ne) break;
                            f = ab(d[2]);
                            if ("#" !== f[0]) break;
                            g = w.document.createElement("div");
                            for (var h = d[0].replace(/[A-Za-z]/g, ""); 4 > h.length;) h += "9";
                            h = h.substr(h.length - 4);
                            d = "";
                            d += ["gsh", "gsf"][parseInt(h.substr(0, 1), 10) % 2];
                            d += ["Header", "Background", "Display", "Feedback"][parseInt(h.substr(0, 1), 10) % 4];
                            g[ab("79a417a0f0181a8946")] =
                                d;
                            if (w.document[ab("78a712aa")]) {
                                w.document[ab("78a712aa")][ab("7bb806b6ed32388c4a875b")](g);
                                h = w.getComputedStyle(g).getPropertyValue(ab("78a704b7e62456904c9b12701b6532a8"));
                                w.document[ab("78a712aa")][ab("68ad1bbcf533388c4a875b")](g);
                                if (!h) break;
                                if (-1 !== h.indexOf(parseInt(f[1] + f[2], 16)) && -1 !== h.indexOf(parseInt(f[3] + f[4], 16))) {
                                    a.Ne = !1;
                                    break
                                } else if (bb || cb || fb || gb)
                                    for (d = "." + d, f = 0; f < document.styleSheets.length; f++) {
                                        g = document.styleSheets[f].rules || document.styleSheets[f].cssRules;
                                        for (var k in g)
                                            if (d ===
                                                g[k].selectorText) {
                                                a.Ne = !1;
                                                break
                                            }
                                    }
                            } else a.Ne = null, a.Ne = !1
                        }
                    } else {
                        k = c[ab("76ad18b4f73e")];
                        for (e = c[ab("73a612b6fb191d")](ab("35e7")) + 2; e < k; e++) b += c[e];
                        c = b[ab("73a612b6fb191d")](ab("7da71ca0ad381e90"));
                        a.Ne = !(0 <= c && c < b[ab("73a612b6fb191d")](ab("35")))
                    }
            }
        }
        return 0 < a.Ne && a !== a.Ux ? !0 : !1
    }

    function wi(a, b) {
        if (sh) {
            void 0 !== b && null !== b || A("Diagram setup requires an argument DIV.");
            null !== a.Ia && A("Diagram has already completed setup.");
            "string" === typeof b ? a.Ia = w.document.getElementById(b) : b instanceof HTMLDivElement ? a.Ia = b : A("No DIV or DIV id supplied: " + b);
            null === a.Ia && A("Invalid DIV id; could not get element with id: " + b);
            void 0 !== a.Ia.F && A("Invalid div id; div already has a Diagram associated with it.");
            "static" === w.getComputedStyle(a.Ia, null).position && (a.Ia.style.position = "relative");
            a.Ia.style["-webkit-tap-highlight-color"] = "rgba(255, 255, 255, 0)";
            a.Ia.style["-ms-touch-action"] = "none";
            a.Ia.innerHTML = "";
            a.Ia.F = a;
            var c = a.ws ? new uj(a) : new qk(a);
            void 0 !== c.style && (c.style.position = "absolute", c.style.top = "0px", c.style.left = "0px", "rtl" === w.getComputedStyle(a.Ia, null).getPropertyValue("direction") && (a.Rn = !0), c.style.zIndex = "2", c.style.userSelect = "none", c.style.webkitUserSelect = "none", c.style.MozUserSelect = "none");
            a.Da = c;
            a.$c = c.context;
            b = a.$c;
            a.ac = a.computePixelRatio();
            a.xa = a.Ia.clientWidth ||
                1;
            a.wa = a.Ia.clientHeight || 1;
            wj(a, a.xa, a.wa);
            a.br = b.V[ab("7eba17a4ca3b1a8346")][ab("78a118b7")](b.V, wk, 4, 4);
            a.Ia.insertBefore(c.Ga, a.Ia.firstChild);
            c = new qk(null);
            c.width = 1;
            c.height = 1;
            a.Rt = c;
            a.pw = c.context;
            if (sh) {
                c = va("div");
                var d = va("div");
                c.style.position = "absolute";
                c.style.overflow = "auto";
                c.style.width = a.xa + "px";
                c.style.height = a.wa + "px";
                c.style.zIndex = "1";
                d.style.position = "absolute";
                d.style.width = "1px";
                d.style.height = "1px";
                a.Ia.appendChild(c);
                c.appendChild(d);
                c.onscroll = Ii;
                c.onmousedown = Ki;
                c.ontouchstart =
                    Ki;
                c.F = a;
                c.Sx = !0;
                c.Tx = !0;
                a.ls = c;
                a.cp = d
            }
            a.lt = ta(function() {
                a.ve = null;
                a.R()
            }, 300);
            a.Tv = ta(function() {
                Qh(a)
            }, 250);
            a.preventDefault = function(a) {
                a.preventDefault();
                return !1
            };
            a.dk = function(b) {
                if (a.isEnabled) {
                    a.he = !0;
                    var c = Xi(a, b, !0);
                    a.doMouseMove();
                    a.currentTool.isBeyondDragSize() && (a.Te = 0);
                    cj(c, b)
                }
            };
            a.ck = function(b) {
                if (a.isEnabled)
                    if (a.he = !0, a.Qe) b.preventDefault();
                    else {
                        var c = Xi(a, b, !0);
                        c.down = !0;
                        c.clickCount = b.detail;
                        if (cb || fb) b.timeStamp - a.cl < a.xu && !a.currentTool.isBeyondDragSize() ? a.Te++ : a.Te = 1, a.cl =
                            b.timeStamp, c.clickCount = a.Te;
                        c.clone(a.firstInput);
                        a.doMouseDown();
                        1 === b.button ? b.preventDefault() : cj(c, b)
                    }
            };
            a.fk = function(b) {
                if (a.isEnabled)
                    if (a.Qe && 2 === b.button) b.preventDefault();
                    else if (a.Qe && 0 === b.button && (a.Qe = !1), a.Il) b.preventDefault();
                else {
                    a.he = !0;
                    var c = Xi(a, b, !0);
                    c.up = !0;
                    c.clickCount = b.detail;
                    if (cb || fb) c.clickCount = a.Te;
                    c.bubbles = b.bubbles;
                    c.targetDiagram = Zi(b);
                    a.doMouseUp();
                    a.uf();
                    cj(c, b)
                }
            };
            a.gk = function(b) {
                if (a.isEnabled) {
                    var c = Xi(a, b, !0);
                    c.bubbles = !0;
                    if (void 0 !== b.deltaX) {
                        var d = 0 < b.deltaX ?
                            1 : -1;
                        var e = 0 < b.deltaY ? 1 : -1;
                        c.delta = Math.abs(b.deltaX) > Math.abs(b.deltaY) ? -d : -e
                    } else void 0 !== b.wheelDeltaX ? (d = 0 < b.wheelDeltaX ? -1 : 1, e = 0 < b.wheelDeltaY ? -1 : 1, c.delta = Math.abs(b.wheelDeltaX) > Math.abs(b.wheelDeltaY) ? -d : -e) : c.delta = void 0 !== b.wheelDelta ? 0 < b.wheelDelta ? 1 : -1 : 0;
                    a.doMouseWheel();
                    cj(c, b)
                }
            };
            a.ek = function(b) {
                a.isEnabled && (a.he = !1, Xi(a, b, !0), b = a.currentTool, b.cancelWaitAfter(), b.standardMouseOver())
            };
            a.Nv = function(b) {
                if (a.isEnabled) {
                    a.Il = !1;
                    a.Qe = !0;
                    var c = $i(a, b, b.targetTouches[0], 1 < b.touches.length);
                    a.doMouseDown();
                    cj(c, b)
                }
            };
            a.Mv = function(b) {
                if (a.isEnabled) {
                    var c = null;
                    0 < b.targetTouches.length ? c = b.targetTouches[0] : 0 < b.changedTouches.length && (c = b.changedTouches[0]);
                    c = bj(a, b, c, 1 < b.touches.length);
                    a.doMouseMove();
                    cj(c, b)
                }
            };
            a.Lv = function(b) {
                if (a.isEnabled)
                    if (a.Il) b.preventDefault();
                    else if (!(1 < b.touches.length)) {
                    var c = null,
                        d = null;
                    0 < b.targetTouches.length ? d = b.targetTouches[0] : 0 < b.changedTouches.length && (d = b.changedTouches[0]);
                    var e = aj(a, b, !1, !0, !1, !1);
                    if (null !== d) {
                        c = w.document.elementFromPoint(d.clientX,
                            d.clientY);
                        null !== c && c.F instanceof P && c.F !== a && Yi(c.F, d, e);
                        Yi(a, d, e);
                        var k = d.screenX;
                        d = d.screenY;
                        var l = a.Gr;
                        b.timeStamp - a.cl < a.xu && !(25 < Math.abs(l.x - k) || 25 < Math.abs(l.y - d)) ? a.Te++ : a.Te = 1;
                        e.clickCount = a.Te;
                        a.cl = b.timeStamp;
                        a.Gr.h(k, d)
                    }
                    null === c ? e.targetDiagram = Zi(b) : c.F ? e.targetDiagram = c.F : e.targetDiagram = null;
                    e.targetObject = null;
                    a.doMouseUp();
                    cj(e, b);
                    a.Qe = !1
                }
            };
            a.fm = function(b) {
                if (a.isEnabled) {
                    a.he = !0;
                    var c = a.ku;
                    void 0 === c[b.pointerId] && (c[b.pointerId] = b);
                    c = a.nl;
                    var d = !1;
                    if (null !== c[0] && c[0].pointerId ===
                        b.pointerId) c[0] = b;
                    else if (null !== c[1] && c[1].pointerId === b.pointerId) c[1] = b, d = !0;
                    else if (null === c[0]) c[0] = b;
                    else if (null === c[1]) c[1] = b, d = !0;
                    else {
                        b.preventDefault();
                        return
                    }
                    if ("touch" === b.pointerType || "pen" === b.pointerType) a.Il = !1, a.Qe = !0;
                    c = $i(a, b, b, d);
                    a.doMouseDown();
                    1 === b.button ? b.preventDefault() : cj(c, b)
                }
            };
            a.gm = function(b) {
                if (a.isEnabled) {
                    a.he = !0;
                    var c = a.nl;
                    if (null !== c[0] && c[0].pointerId === b.pointerId) c[0] = b;
                    else {
                        if (null !== c[1] && c[1].pointerId === b.pointerId) {
                            c[1] = b;
                            return
                        }
                        if (null === c[0]) c[0] = b;
                        else return
                    }
                    c[0].pointerId ===
                        b.pointerId && (c = bj(a, b, b, null !== c[1]), a.doMouseMove(), cj(c, b))
                }
            };
            a.im = function(b) {
                if (a.isEnabled) {
                    a.he = !0;
                    var c = "touch" === b.pointerType || "pen" === b.pointerType,
                        d = a.ku;
                    if (c && a.Il) delete d[b.pointerId], b.preventDefault();
                    else if (d = a.nl, null !== d[0] && d[0].pointerId === b.pointerId) {
                        d[0] = null;
                        d = aj(a, b, !1, !0, !0, !1);
                        var e = w.document.elementFromPoint(b.clientX, b.clientY);
                        null !== e && e.F instanceof P && e.F !== a && Yi(e.F, b, d);
                        Yi(a, b, d);
                        var k = a.Gr,
                            l = c ? 25 : 10;
                        b.timeStamp - a.cl < a.xu && !(Math.abs(k.x - b.screenX) > l || Math.abs(k.y -
                            b.screenY) > l) ? a.Te++ : a.Te = 1;
                        d.clickCount = a.Te;
                        a.cl = b.timeStamp;
                        a.Gr.sg(b.screenX, b.screenY);
                        null === e ? d.targetDiagram = Zi(b) : e.F ? d.targetDiagram = e.F : d.targetDiagram = null;
                        d.targetObject = null;
                        a.doMouseUp();
                        cj(d, b);
                        c && (a.Qe = !1)
                    } else null !== d[1] && d[1].pointerId === b.pointerId && (d[1] = null)
                }
            };
            a.hm = function(b) {
                if (a.isEnabled) {
                    a.he = !1;
                    var c = a.ku;
                    c[b.pointerId] && delete c[b.pointerId];
                    c = a.nl;
                    null !== c[0] && c[0].pointerId === b.pointerId && (c[0] = null);
                    null !== c[1] && c[1].pointerId === b.pointerId && (c[1] = null);
                    "touch" !==
                    b.pointerType && "pen" !== b.pointerType && (b = a.currentTool, b.cancelWaitAfter(), b.standardMouseOver())
                }
            };
            b.Sc(!0);
            Gi(a)
        }
    }
    vi.className = "DiagramHelper";

    function Nf(a) {
        this.l = void 0 === a ? new G : a;
        this.u = new G
    }
    pa.Object.defineProperties(Nf.prototype, {
        point: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        },
        shifted: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        }
    });
    Nf.className = "DraggingInfo";

    function Ij(a, b, c) {
        this.node = a;
        this.info = b;
        this.Zu = c
    }
    Ij.className = "DraggingNodeInfoPair";

    function yf() {
        this.reset()
    }
    yf.prototype.reset = function() {
        this.isGridSnapEnabled = !1;
        this.isGridSnapRealtime = !0;
        this.gridSnapCellSize = (new L(NaN, NaN)).freeze();
        this.gridSnapCellSpot = Tc;
        this.gridSnapOrigin = (new G(NaN, NaN)).freeze();
        this.dz = this.dragsTree = this.dragsLink = !1
    };

    function xk(a) {
        1 < arguments.length && A("Palette constructor can only take one optional argument, the DIV HTML element or its id.");
        P.call(this, a);
        this.allowDragOut = !0;
        this.allowMove = !1;
        this.isReadOnly = !0;
        this.contentAlignment = Uc;
        this.layout = new yk
    }
    oa(xk, P);
    xk.className = "Palette";

    function zk(a) {
        1 < arguments.length && A("Overview constructor can only take one optional argument, the DIV HTML element or its id.");
        P.call(this, a);
        this.animationManager.isEnabled = !1;
        this.pb = !0;
        this.Wf = null;
        this.cr = !0;
        this.Cx("drawShadows", !1);
        var b = new T,
            c = new V;
        c.stroke = "magenta";
        c.strokeWidth = 2;
        c.fill = "transparent";
        c.name = "BOXSHAPE";
        b.selectable = !0;
        b.selectionAdorned = !1;
        b.selectionObjectName = "BOXSHAPE";
        b.locationObjectName = "BOXSHAPE";
        b.resizeObjectName = "BOXSHAPE";
        b.cursor = "move";
        b.add(c);
        this.l = b;
        this.allowDelete = this.allowCopy = !1;
        this.allowSelect = !0;
        this.autoScrollRegion = new Ic(0, 0, 0, 0);
        this.uu = new qk(null);
        this.Vx = this.uu.context;
        vf(this.toolManager, "Dragging", new Ak, this.toolManager.mouseMoveTools);
        var d = this;
        this.click = function() {
            var a = d.Wf;
            if (null !== a) {
                var b = a.viewportBounds,
                    c = d.lastInput.documentPoint;
                a.position = new G(c.x - b.width / 2, c.y - b.height / 2)
            }
        };
        this.Em = function() {
            d.Xa();
            Bk(d)
        };
        this.Cm = function() {
            null !== d.Wf && (d.Xa(), d.R())
        };
        this.Dm = function() {
            d.R()
        };
        this.Bm = function() {
            null !== d.Wf &&
                Bk(d)
        };
        this.autoScale = Si;
        this.pb = !1
    }
    oa(zk, P);

    function Ck(a) {
        a.pb || a.Zb || !1 !== a.sd || (a.sd = !0, w.requestAnimationFrame(function() {
            if (a.sd && !a.Zb && (a.sd = !1, null !== a.Ia)) {
                a.Zb = !0;
                Mi(a);
                a.documentBounds.s() || Ri(a, a.computeBounds());
                null === a.Ia && A("No div specified");
                null === a.Da && A("No canvas specified");
                ci(a.box);
                if (a.qc) {
                    var b = a.Wf;
                    if (null !== b && !b.animationManager.isAnimating && !b.animationManager.sb) {
                        b = a.$c;
                        var c = a.uu;
                        b.setTransform(1, 0, 0, 1, 0, 0);
                        b.clearRect(0, 0, a.Da.width, a.Da.height);
                        b.drawImage(c.Ga, 0, 0);
                        c = a.ub;
                        c.reset();
                        1 !== a.scale && c.scale(a.scale);
                        0 === a.position.x && 0 === a.position.y || c.translate(-a.position.x, -a.position.y);
                        b.scale(a.ac, a.ac);
                        b.transform(c.m11, c.m12, c.m21, c.m22, c.dx, c.dy);
                        c = a.Oa.j;
                        for (var d = c.length, e = 0; e < d; e++) c[e].kc(b, a);
                        a.Zh = !1;
                        a.qc = !1
                    }
                }
                a.Zb = !1
            }
        }))
    }
    zk.prototype.computePixelRatio = function() {
        return 1
    };
    zk.prototype.kc = function() {
        null === this.Ia && A("No div specified");
        null === this.Da && A("No canvas specified");
        if (!(this.Da instanceof uj) && (ci(this.box), this.qc)) {
            var a = this.Wf;
            if (null !== a && !a.animationManager.isAnimating) {
                nj(this);
                var b = a.grid;
                null === b || !b.visible || isNaN(b.width) || isNaN(b.height) || (gj(a), Mi(a));
                var c = this.Da;
                b = this.$c;
                var d = this.uu,
                    e = this.Vx;
                d.width = c.width;
                d.height = c.height;
                b.Sc(!0);
                b.setTransform(1, 0, 0, 1, 0, 0);
                b.clearRect(0, 0, c.width, c.height);
                d = this.ub;
                d.reset();
                1 !== this.scale && d.scale(this.scale);
                0 === this.position.x && 0 === this.position.y || d.translate(-this.position.x, -this.position.y);
                b.scale(this.ac, this.ac);
                b.transform(d.m11, d.m12, d.m21, d.m22, d.dx, d.dy);
                d = this.cr;
                var f = this.viewportBounds;
                a = a.Oa.j;
                for (var g = a.length, h = 0; h < g; h++) {
                    var k = a[h],
                        l = d;
                    if (k.visible && 0 !== k.lb && (void 0 === l && (l = !0), l || !k.isTemporary)) {
                        1 !== k.lb && (b.globalAlpha = k.lb);
                        l = this.scale;
                        k = k.Fa.j;
                        for (var m = k.length, n = 0; n < m; n++) {
                            var p = k[n],
                                q = p.actualBounds;
                            q.Kc(f) && (1 < q.width * l || 1 < q.height * l ? p.kc(b, this) : ei(b, p))
                        }
                        b.globalAlpha =
                            1
                    }
                }
                e.drawImage(c.Ga, 0, 0);
                c = this.Oa.j;
                e = c.length;
                for (d = 0; d < e; d++) c[d].kc(b, this);
                this.qc = this.Zh = !1
            }
        }
    };

    function Bk(a) {
        var b = a.box;
        if (null !== b) {
            var c = a.Wf;
            if (null !== c) {
                a.qc = !0;
                c = c.viewportBounds;
                var d = b.selectionObject,
                    e = L.alloc();
                e.h(c.width, c.height);
                d.desiredSize = e;
                L.free(e);
                a = 2 / a.scale;
                d instanceof V && (d.strokeWidth = a);
                b.location = new G(c.x - a / 2, c.y - a / 2);
                b.isSelected = !0
            }
        }
    }
    zk.prototype.computeBounds = function() {
        var a = this.Wf;
        if (null === a) return Gc;
        var b = a.documentBounds.copy();
        b.Wc(a.viewportBounds);
        return b
    };
    zk.prototype.kx = function() {
        !0 !== this.qc && (this.qc = !0, Ck(this))
    };
    zk.prototype.hq = function(a, b, c, d) {
        this.pb || (Li(this), this.R(), dj(this), this.Xa(), Bk(this), this.xe.scale = c, this.xe.position.x = a.x, this.xe.position.y = a.y, this.xe.bounds.assign(a), this.xe.mx = d, this.aa("ViewportBoundsChanged", this.xe, a))
    };
    pa.Object.defineProperties(zk.prototype, {
        observed: {
            get: function() {
                return this.Wf
            },
            set: function(a) {
                var b = this.Wf;
                a instanceof zk && A("Overview.observed Diagram may not be an Overview itself: " + a);
                b !== a && (null !== b && (this.remove(this.box), b.jm("ViewportBoundsChanged", this.Em), b.jm("DocumentBoundsChanged", this.Cm), b.jm("InvalidateDraw", this.Dm), b.jm("AnimationFinished", this.Bm)), this.Wf = a, null !== a && (a.Ij("ViewportBoundsChanged", this.Em), a.Ij("DocumentBoundsChanged", this.Cm),
                    a.Ij("InvalidateDraw", this.Dm), a.Ij("AnimationFinished", this.Bm), this.add(this.box), Bk(this)), this.Xa(), this.g("observed", b, a))
            }
        },
        box: {
            get: function() {
                return this.l
            },
            set: function(a) {
                var b = this.l;
                b !== a && (this.l = a, this.remove(b), this.add(this.l), Bk(this), this.g("box", b, a))
            }
        },
        drawsTemporaryLayers: {
            get: function() {
                return this.cr
            },
            set: function(a) {
                this.cr !== a && (this.cr = a, this.yh())
            }
        }
    });
    zk.className = "Overview";

    function Ak() {
        xf.call(this);
        this.l = null
    }
    oa(Ak, xf);
    Ak.prototype.canStart = function() {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (null === a || !a.allowMove || !a.allowSelect) return !1;
        var b = a.observed;
        if (null === b) return !1;
        var c = a.lastInput;
        if (!c.left || a.currentTool !== this && (!this.isBeyondDragSize() || c.isTouchEvent && c.timestamp - a.firstInput.timestamp < this.delay)) return !1;
        null === this.findDraggablePart() && (c = b.viewportBounds, this.l = new G(c.width / 2, c.height / 2), a = a.firstInput.documentPoint, b.position = new G(a.x - this.l.x, a.y - this.l.y));
        return !0
    };
    Ak.prototype.doActivate = function() {
        this.l = null;
        xf.prototype.doActivate.call(this)
    };
    Ak.prototype.moveParts = function() {
        var a = this.diagram,
            b = a.observed;
        if (null !== b) {
            var c = a.box;
            if (null !== c) {
                if (null === this.l) {
                    var d = a.firstInput.documentPoint;
                    c = c.location;
                    this.l = new G(d.x - c.x, d.y - c.y)
                }
                a = a.lastInput.documentPoint;
                b.position = new G(a.x - this.l.x, a.y - this.l.y)
            }
        }
    };
    Ak.className = "OverviewDraggingTool";

    function Dk() {
        mb(this);
        this.F = lf;
        this.Ub = this.K = this.u = !0;
        this.da = this.La = this.Vb = this.Wa = !1;
        this.hi = this.l = null;
        this.Xc = 1.05;
        this.bu = NaN;
        this.vw = null;
        this.Au = NaN;
        this.zu = Gc;
        this.bg = null;
        this.Lc = 200
    }
    Dk.prototype.toString = function() {
        return "CommandHandler"
    };
    Dk.prototype.nb = function(a) {
        this.F = a
    };
    Dk.prototype.doKeyDown = function() {
        var a = this.diagram,
            b = a.lastInput,
            c = ib ? b.meta : b.control,
            d = b.shift,
            e = b.alt,
            f = b.key;
        !c || "C" !== f && "Insert" !== f ? c && "X" === f || d && "Del" === f ? this.canCutSelection() && this.cutSelection() : c && "V" === f || d && "Insert" === f ? this.canPasteSelection() && this.pasteSelection() : c && "Y" === f || e && d && "Backspace" === f ? this.canRedo() && this.redo() : c && "Z" === f || e && "Backspace" === f ? this.canUndo() && this.undo() : "Del" === f || "Backspace" === f ? this.canDeleteSelection() && this.deleteSelection() : c && "A" === f ? this.canSelectAll() &&
            this.selectAll() : "Esc" === f ? this.canStopCommand() && this.stopCommand() : "Up" === f ? a.allowVerticalScroll && (c ? a.scroll("pixel", "up") : a.scroll("line", "up")) : "Down" === f ? a.allowVerticalScroll && (c ? a.scroll("pixel", "down") : a.scroll("line", "down")) : "Left" === f ? a.allowHorizontalScroll && (c ? a.scroll("pixel", "left") : a.scroll("line", "left")) : "Right" === f ? a.allowHorizontalScroll && (c ? a.scroll("pixel", "right") : a.scroll("line", "right")) : "PageUp" === f ? d && a.allowHorizontalScroll ? a.scroll("page", "left") : a.allowVerticalScroll &&
            a.scroll("page", "up") : "PageDown" === f ? d && a.allowHorizontalScroll ? a.scroll("page", "right") : a.allowVerticalScroll && a.scroll("page", "down") : "Home" === f ? c && a.allowVerticalScroll ? a.scroll("document", "up") : !c && a.allowHorizontalScroll && a.scroll("document", "left") : "End" === f ? c && a.allowVerticalScroll ? a.scroll("document", "down") : !c && a.allowHorizontalScroll && a.scroll("document", "right") : " " === f ? this.canScrollToPart() && this.scrollToPart() : "Subtract" === f ? this.canDecreaseZoom() && this.decreaseZoom() : "Add" === f ? this.canIncreaseZoom() &&
            this.increaseZoom() : c && "0" === f ? this.canResetZoom() && this.resetZoom() : d && "Z" === f ? this.canZoomToFit() && this.zoomToFit() : c && !d && "G" === f ? this.canGroupSelection() && this.groupSelection() : c && d && "G" === f ? this.canUngroupSelection() && this.ungroupSelection() : b.event && 113 === b.event.which ? this.canEditTextBlock() && this.editTextBlock() : b.event && 93 === b.event.which ? this.canShowContextMenu() && this.showContextMenu() : b.bubbles = !0 : this.canCopySelection() && this.copySelection()
    };
    Dk.prototype.doKeyUp = function() {
        this.diagram.lastInput.bubbles = !0
    };
    Dk.prototype.stopCommand = function() {
        var a = this.diagram,
            b = a.currentTool;
        b instanceof Ua && a.allowSelect && a.Hs();
        null !== b && b.doCancel()
    };
    Dk.prototype.canStopCommand = function() {
        return !0
    };
    Dk.prototype.selectAll = function() {
        var a = this.diagram;
        a.R();
        try {
            a.currentCursor = "wait";
            a.aa("ChangingSelection", a.selection);
            for (var b = a.parts; b.next();) b.value.isSelected = !0;
            for (var c = a.nodes; c.next();) c.value.isSelected = !0;
            for (var d = a.links; d.next();) d.value.isSelected = !0
        } finally {
            a.aa("ChangedSelection", a.selection), a.currentCursor = ""
        }
    };
    Dk.prototype.canSelectAll = function() {
        return this.diagram.allowSelect
    };
    Dk.prototype.deleteSelection = function() {
        var a = this.diagram;
        try {
            a.currentCursor = "wait";
            a.Aa("Delete");
            a.aa("ChangingSelection", a.selection);
            a.aa("SelectionDeleting", a.selection);
            for (var b = new F, c = a.selection.iterator; c.next();) Ek(b, c.value, !0, this.deletesTree ? Infinity : 0, this.deletesConnectedLinks ? null : !1, function(a) {
                return a.canDelete()
            });
            a.ot(b, !0);
            a.aa("SelectionDeleted", b)
        } finally {
            a.aa("ChangedSelection", a.selection), a.$a("Delete"), a.currentCursor = ""
        }
    };
    Dk.prototype.canDeleteSelection = function() {
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly || !a.allowDelete || 0 === a.selection.count ? !1 : !0
    };
    Dk.prototype.copySelection = function() {
        var a = this.diagram,
            b = new F;
        for (a = a.selection.iterator; a.next();) Ek(b, a.value, !0, this.copiesTree ? Infinity : 0, this.copiesConnectedLinks, function(a) {
            return a.canCopy()
        });
        this.copyToClipboard(b)
    };
    Dk.prototype.canCopySelection = function() {
        var a = this.diagram;
        return a.allowCopy && a.allowClipboard && 0 !== a.selection.count ? !0 : !1
    };
    Dk.prototype.cutSelection = function() {
        this.copySelection();
        this.deleteSelection()
    };
    Dk.prototype.canCutSelection = function() {
        var a = this.diagram;
        return !a.isReadOnly && !a.isModelReadOnly && a.allowCopy && a.allowDelete && a.allowClipboard && 0 !== a.selection.count ? !0 : !1
    };
    Dk.prototype.copyToClipboard = function(a) {
        var b = this.diagram,
            c = null;
        if (null === a) xi = null, yi = "";
        else {
            c = b.model;
            var d = !1,
                e = !1,
                f = null;
            try {
                c.cm() && (d = c.Rj, c.Rj = this.copiesParentKey), c.Yj() && (e = c.Qj, c.Qj = this.copiesGroupKey), f = b.Sj(a, null, !0)
            } finally {
                c.cm() && (c.Rj = d), c.Yj() && (c.Qj = e), c = new E, c.addAll(f), xi = c, yi = b.model.dataFormat
            }
        }
        b.aa("ClipboardChanged", c)
    };
    Dk.prototype.pasteFromClipboard = function() {
        var a = new F,
            b = xi;
        if (null === b) return a;
        var c = this.diagram;
        if (yi !== c.model.dataFormat) return a;
        var d = c.model,
            e = !1,
            f = !1,
            g = null;
        try {
            d.cm() && (e = d.Rj, d.Rj = this.copiesParentKey), d.Yj() && (f = d.Qj, d.Qj = this.copiesGroupKey), g = c.Sj(b, c, !1)
        } finally {
            for (d.cm() && (d.Rj = e), d.Yj() && (d.Qj = f), b = g.iterator; b.next();) c = b.value, d = b.key, c.location.s() || (d.location.s() ? c.location = d.location : !c.position.s() && d.position.s() && (c.position = d.position)), a.add(c)
        }
        return a
    };
    Dk.prototype.pasteSelection = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.currentCursor = "wait";
            b.Aa("Paste");
            b.aa("ChangingSelection", b.selection);
            var c = this.pasteFromClipboard();
            0 < c.count && Hf(b);
            for (var d = c.iterator; d.next();) d.value.isSelected = !0;
            b.aa("ChangedSelection", b.selection);
            if (null !== a) {
                var e = b.computePartsBounds(b.selection);
                if (e.s()) {
                    var f = this.computeEffectiveCollection(b.selection, b.Ek);
                    ag(b, f, new G(a.x - e.centerX, a.y - e.centerY), b.Ek, !1)
                }
            }
            b.aa("ClipboardPasted", c)
        } finally {
            b.$a("Paste"),
                b.currentCursor = ""
        }
    };
    Dk.prototype.canPasteSelection = function() {
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.allowClipboard || null === xi || 0 === xi.count || yi !== a.model.dataFormat ? !1 : !0
    };
    Dk.prototype.undo = function() {
        this.diagram.undoManager.undo()
    };
    Dk.prototype.canUndo = function() {
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly ? !1 : a.allowUndo && a.undoManager.canUndo()
    };
    Dk.prototype.redo = function() {
        this.diagram.undoManager.redo()
    };
    Dk.prototype.canRedo = function() {
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly ? !1 : a.allowUndo && a.undoManager.canRedo()
    };
    Dk.prototype.decreaseZoom = function(a) {
        void 0 === a && (a = 1 / this.zoomFactor);
        var b = this.diagram;
        b.autoScale === li && (a = b.scale * a, a < b.minScale || a > b.maxScale || (b.scale = a))
    };
    Dk.prototype.canDecreaseZoom = function(a) {
        void 0 === a && (a = 1 / this.zoomFactor);
        var b = this.diagram;
        if (b.autoScale !== li) return !1;
        a = b.scale * a;
        return a < b.minScale || a > b.maxScale ? !1 : b.allowZoom
    };
    Dk.prototype.increaseZoom = function(a) {
        void 0 === a && (a = this.zoomFactor);
        var b = this.diagram;
        b.autoScale === li && (a = b.scale * a, a < b.minScale || a > b.maxScale || (b.scale = a))
    };
    Dk.prototype.canIncreaseZoom = function(a) {
        void 0 === a && (a = this.zoomFactor);
        var b = this.diagram;
        if (b.autoScale !== li) return !1;
        a = b.scale * a;
        return a < b.minScale || a > b.maxScale ? !1 : b.allowZoom
    };
    Dk.prototype.resetZoom = function(a) {
        void 0 === a && (a = this.defaultScale);
        var b = this.diagram;
        a < b.minScale || a > b.maxScale || (b.scale = a)
    };
    Dk.prototype.canResetZoom = function(a) {
        void 0 === a && (a = this.defaultScale);
        var b = this.diagram;
        return a < b.minScale || a > b.maxScale ? !1 : b.allowZoom
    };
    Dk.prototype.zoomToFit = function() {
        var a = this.diagram,
            b = a.scale,
            c = a.position;
        b === this.Au && !isNaN(this.bu) && a.documentBounds.A(this.zu) ? (a.scale = this.bu, a.position = this.vw, this.Au = NaN, this.zu = Gc) : (this.bu = b, this.vw = c.copy(), a.zoomToFit(), this.Au = a.scale, this.zu = a.documentBounds.copy())
    };
    Dk.prototype.canZoomToFit = function() {
        return this.diagram.allowZoom
    };
    Dk.prototype.scrollToPart = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (null === a) {
            try {
                null !== this.bg && (this.bg.next() ? a = this.bg.value : this.bg = null)
            } catch (k) {
                this.bg = null
            }
            null === a && (0 < b.highlighteds.count ? this.bg = b.highlighteds.iterator : 0 < b.selection.count && (this.bg = b.selection.iterator), null !== this.bg && this.bg.next() && (a = this.bg.value))
        }
        if (null !== a) {
            var c = b.animationManager;
            c.Ni("Scroll To Part");
            var d = this.scrollToPartPause;
            if (0 < d) {
                var e = Fk(this, a, [a]),
                    f = function() {
                        b.Aa();
                        for (var a = e.pop(); 0 <
                            e.length && a instanceof U && a.isTreeExpanded && (!(a instanceof hg) || a.isSubGraphExpanded);) a = e.pop();
                        0 < e.length ? (a instanceof T && b.zv(a.actualBounds), a instanceof U && !a.isTreeExpanded && (a.isTreeExpanded = !0), a instanceof hg && !a.isSubGraphExpanded && (a.isSubGraphExpanded = !0)) : (a instanceof T && b.Fu(a.actualBounds), b.jm("LayoutCompleted", g));
                        b.$a("Scroll To Part")
                    },
                    g = function() {
                        ua(f, (c.isEnabled ? c.duration : 0) + d)
                    };
                b.Ij("LayoutCompleted", g);
                f()
            } else {
                var h = b.position.copy();
                b.Fu(a.actualBounds);
                h.Pa(b.position) &&
                    c.xd()
            }
        }
    };

    function Fk(a, b, c) {
        if (b.isVisible()) return c;
        if (b instanceof pf) Fk(a, b.adornedPart, c);
        else if (b instanceof S) {
            var d = b.fromNode;
            null !== d && Fk(a, d, c);
            b = b.toNode;
            null !== b && Fk(a, b, c)
        } else b instanceof U && (d = b.labeledLink, null !== d && Fk(a, d, c), d = b.ng(), null !== d && (d.isTreeExpanded || d.wasTreeExpanded || c.push(d), Fk(a, d, c))), b = b.containingGroup, null !== b && (b.isSubGraphExpanded || b.wasSubGraphExpanded || c.push(b), Fk(a, b, c));
        return c
    }
    Dk.prototype.canScrollToPart = function(a) {
        void 0 === a && (a = null);
        if (null !== a && !(a instanceof T)) return !1;
        a = this.diagram;
        return 0 === a.selection.count && 0 === a.highlighteds.count ? !1 : a.allowHorizontalScroll && a.allowVerticalScroll
    };
    Dk.prototype.collapseTree = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.Aa("Collapse Tree");
            b.animationManager.Ni("Collapse Tree");
            var c = new E;
            if (null !== a && a.isTreeExpanded) a.collapseTree(), c.add(a);
            else if (null === a)
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    e instanceof U && e.isTreeExpanded && (e.collapseTree(), c.add(e))
                }
            b.aa("TreeCollapsed", c)
        } finally {
            b.$a("Collapse Tree")
        }
    };
    Dk.prototype.canCollapseTree = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly) return !1;
        if (null !== a) {
            if (!(a instanceof U && a.isTreeExpanded)) return !1;
            if (0 < a.Tp().count) return !0
        } else
            for (a = b.selection.iterator; a.next();)
                if (b = a.value, b instanceof U && b.isTreeExpanded && 0 < b.Tp().count) return !0;
        return !1
    };
    Dk.prototype.expandTree = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.Aa("Expand Tree");
            b.animationManager.Ni("Expand Tree");
            var c = new E;
            if (null !== a && !a.isTreeExpanded) a.expandTree(), c.add(a);
            else if (null === a)
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    e instanceof U && !e.isTreeExpanded && (e.expandTree(), c.add(e))
                }
            b.aa("TreeExpanded", c)
        } finally {
            b.$a("Expand Tree")
        }
    };
    Dk.prototype.canExpandTree = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly) return !1;
        if (null !== a) {
            if (!(a instanceof U) || a.isTreeExpanded) return !1;
            if (0 < a.Tp().count) return !0
        } else
            for (a = b.selection.iterator; a.next();)
                if (b = a.value, b instanceof U && !b.isTreeExpanded && 0 < b.Tp().count) return !0;
        return !1
    };
    Dk.prototype.groupSelection = function() {
        var a = this.diagram,
            b = a.model;
        if (b.Zj()) {
            var c = this.archetypeGroupData;
            if (null !== c) {
                var d = null;
                try {
                    a.currentCursor = "wait";
                    a.Aa("Group");
                    a.aa("ChangingSelection", a.selection);
                    for (var e = new E, f = a.selection.iterator; f.next();) {
                        var g = f.value;
                        g.dc() && g.canGroup() && e.add(g)
                    }
                    for (var h = new E, k = e.iterator; k.next();) {
                        var l = k.value;
                        f = !1;
                        for (var m = e.iterator; m.next();)
                            if (l.Wd(m.value)) {
                                f = !0;
                                break
                            } f || h.add(l)
                    }
                    if (0 < h.count) {
                        var n = h.first().containingGroup;
                        if (null !== n)
                            for (; null !==
                                n;) {
                                e = !1;
                                for (var p = h.iterator; p.next();)
                                    if (!p.value.Wd(n)) {
                                        e = !0;
                                        break
                                    } if (e) n = n.containingGroup;
                                else break
                            }
                        if (c instanceof hg) Xg(c), d = c.copy(), null !== d && a.add(d);
                        else if (b.ev(c)) {
                            var q = b.copyNodeData(c);
                            Ca(q) && (b.jf(q), d = a.Bi(q))
                        }
                        if (null !== d) {
                            null !== n && this.isValidMember(n, d) && (d.containingGroup = n);
                            for (var r = h.iterator; r.next();) {
                                var u = r.value;
                                this.isValidMember(d, u) && (u.containingGroup = d)
                            }
                            a.select(d)
                        }
                    }
                    a.aa("ChangedSelection", a.selection);
                    a.aa("SelectionGrouped", d)
                } finally {
                    a.$a("Group"), a.currentCursor =
                        ""
                }
            }
        }
    };
    Dk.prototype.canGroupSelection = function() {
        var a = this.diagram;
        if (a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.allowGroup || !a.model.Zj() || null === this.archetypeGroupData) return !1;
        for (a = a.selection.iterator; a.next();) {
            var b = a.value;
            if (b.dc() && b.canGroup()) return !0
        }
        return !1
    };

    function Gk(a) {
        var b = Ka();
        for (a = a.iterator; a.next();) {
            var c = a.value;
            c instanceof S || b.push(c)
        }
        a = new F;
        c = b.length;
        for (var d = 0; d < c; d++) {
            for (var e = b[d], f = !0, g = 0; g < c; g++)
                if (e.Wd(b[g])) {
                    f = !1;
                    break
                } f && a.add(e)
        }
        Oa(b);
        return a
    }
    Dk.prototype.isValidMember = function(a, b) {
        if (null === b || a === b || b instanceof S) return !1;
        if (null !== a) {
            if (a === b || a.Wd(b)) return !1;
            var c = a.memberValidation;
            if (null !== c && !c(a, b) || null === a.data && null !== b.data || null !== a.data && null === b.data) return !1
        }
        c = this.memberValidation;
        return null !== c ? c(a, b) : !0
    };
    Dk.prototype.ungroupSelection = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram,
            c = b.model;
        if (c.Zj()) try {
            b.currentCursor = "wait";
            b.Aa("Ungroup");
            b.aa("ChangingSelection", b.selection);
            var d = new E;
            if (null !== a) d.add(a);
            else
                for (var e = b.selection.iterator; e.next();) {
                    var f = e.value;
                    f instanceof hg && f.canUngroup() && d.add(f)
                }
            var g = new E;
            if (0 < d.count) {
                b.Hs();
                for (var h = d.iterator; h.next();) {
                    var k = h.value;
                    k.expandSubGraph();
                    var l = k.containingGroup,
                        m = null !== l && null !== l.data ? c.pa(l.data) : void 0;
                    g.addAll(k.memberParts);
                    for (var n = g.iterator; n.next();) {
                        var p = n.value;
                        p.isSelected = !0;
                        if (!(p instanceof S)) {
                            var q = p.data;
                            null !== q ? c.rt(q, m) : p.containingGroup = l
                        }
                    }
                    b.remove(k)
                }
            }
            b.aa("ChangedSelection", b.selection);
            b.aa("SelectionUngrouped", d, g)
        } finally {
            b.$a("Ungroup"), b.currentCursor = ""
        }
    };
    Dk.prototype.canUngroupSelection = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly || b.isModelReadOnly || !b.allowDelete || !b.allowUngroup || !b.model.Zj()) return !1;
        if (null !== a) {
            if (!(a instanceof hg)) return !1;
            if (a.canUngroup()) return !0
        } else
            for (a = b.selection.iterator; a.next();)
                if (b = a.value, b instanceof hg && b.canUngroup()) return !0;
        return !1
    };
    Dk.prototype.addTopLevelParts = function(a, b) {
        var c = !0;
        for (a = Gk(a).iterator; a.next();) {
            var d = a.value;
            null !== d.containingGroup && (!b || this.isValidMember(null, d) ? d.containingGroup = null : c = !1)
        }
        return c
    };
    Dk.prototype.collapseSubGraph = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.Aa("Collapse SubGraph");
            b.animationManager.Ni("Collapse SubGraph");
            var c = new E;
            if (null !== a && a.isSubGraphExpanded) a.collapseSubGraph(), c.add(a);
            else if (null === a)
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    e instanceof hg && e.isSubGraphExpanded && (e.collapseSubGraph(), c.add(e))
                }
            b.aa("SubGraphCollapsed", c)
        } finally {
            b.$a("Collapse SubGraph")
        }
    };
    Dk.prototype.canCollapseSubGraph = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly) return !1;
        if (null !== a) return a instanceof hg && a.isSubGraphExpanded ? !0 : !1;
        for (a = b.selection.iterator; a.next();)
            if (b = a.value, b instanceof hg && b.isSubGraphExpanded) return !0;
        return !1
    };
    Dk.prototype.expandSubGraph = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.Aa("Expand SubGraph");
            b.animationManager.Ni("Expand SubGraph");
            var c = new E;
            if (null !== a && !a.isSubGraphExpanded) a.expandSubGraph(), c.add(a);
            else if (null === a)
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    e instanceof hg && !e.isSubGraphExpanded && (e.expandSubGraph(), c.add(e))
                }
            b.aa("SubGraphExpanded", c)
        } finally {
            b.$a("Expand SubGraph")
        }
    };
    Dk.prototype.canExpandSubGraph = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly) return !1;
        if (null !== a) return a instanceof hg && !a.isSubGraphExpanded ? !0 : !1;
        for (a = b.selection.iterator; a.next();)
            if (b = a.value, b instanceof hg && !b.isSubGraphExpanded) return !0;
        return !1
    };
    Dk.prototype.editTextBlock = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram,
            c = b.toolManager.findTool("TextEditing");
        if (null !== c) {
            if (null === a) {
                a = null;
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    if (e.canEdit()) {
                        a = e;
                        break
                    }
                }
                if (null === a) return;
                a = a.Vl(function(a) {
                    return a instanceof uh && a.editable
                })
            }
            null !== a && (b.currentTool = null, c.textBlock = a, b.currentTool = c)
        }
    };
    Dk.prototype.canEditTextBlock = function(a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly || b.isModelReadOnly || !b.allowTextEdit || null === b.toolManager.findTool("TextEditing")) return !1;
        if (null !== a) {
            if (!(a instanceof uh)) return !1;
            a = a.part;
            if (null !== a && a.canEdit()) return !0
        } else
            for (b = b.selection.iterator; b.next();)
                if (a = b.value, a.canEdit() && (a = a.Vl(function(a) {
                        return a instanceof uh && a.editable
                    }), null !== a)) return !0;
        return !1
    };
    Dk.prototype.showContextMenu = function(a) {
        var b = this.diagram,
            c = b.toolManager.findTool("ContextMenu");
        if (null !== c && (void 0 === a && (a = 0 < b.selection.count ? b.selection.first() : b), a = c.findObjectWithContextMenu(a), null !== a)) {
            var d = b.lastInput,
                e = null;
            a instanceof Y ? e = a.ma(dd) : b.isMouseOverDiagram || (e = b.viewportBounds, e = new G(e.x + e.width / 2, e.y + e.height / 2));
            null !== e && (d.viewPoint = b.vt(e), d.documentPoint = e, d.left = !1, d.right = !0, d.up = !0);
            b.currentTool = c;
            qh(c, !1, a)
        }
    };
    Dk.prototype.canShowContextMenu = function(a) {
        var b = this.diagram,
            c = b.toolManager.findTool("ContextMenu");
        if (null === c) return !1;
        void 0 === a && (a = 0 < b.selection.count ? b.selection.first() : b);
        return null === c.findObjectWithContextMenu(a) ? !1 : !0
    };
    Dk.prototype.computeEffectiveCollection = function(a, b) {
        var c = this.diagram,
            d = c.toolManager.findTool("Dragging"),
            e = c.currentTool === d;
        void 0 === b && (b = e ? d.dragOptions : c.Ek);
        d = new Lb;
        if (null === a) return d;
        for (var f = a.iterator; f.next();) Gj(c, d, f.value, e, b);
        if (null !== c.draggedLink && b.dragsLink) return d;
        for (f = a.iterator; f.next();) a = f.value, a instanceof S && (b = a.fromNode, null === b || d.contains(b) ? (b = a.toNode, null === b || d.contains(b) || d.remove(a)) : d.remove(a));
        return d
    };
    pa.Object.defineProperties(Dk.prototype, {
        diagram: {
            get: function() {
                return this.F
            }
        },
        copiesClipboardData: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a
            }
        },
        copiesConnectedLinks: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K = a
            }
        },
        deletesConnectedLinks: {
            get: function() {
                return this.Ub
            },
            set: function(a) {
                this.Ub = a
            }
        },
        copiesTree: {
            get: function() {
                return this.Wa
            },
            set: function(a) {
                this.Wa = a
            }
        },
        deletesTree: {
            get: function() {
                return this.Vb
            },
            set: function(a) {
                this.Vb = a
            }
        },
        copiesParentKey: {
            get: function() {
                return this.La
            },
            set: function(a) {
                this.La = a
            }
        },
        copiesGroupKey: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da = a
            }
        },
        archetypeGroupData: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l = a
            }
        },
        memberValidation: {
            get: function() {
                return this.hi
            },
            set: function(a) {
                this.hi = a
            }
        },
        defaultScale: {
            get: function() {
                return this.diagram.defaultScale
            },
            set: function(a) {
                this.diagram.defaultScale = a
            }
        },
        zoomFactor: {
            get: function() {
                return this.Xc
            },
            set: function(a) {
                1 < a || A("zoomFactor must be larger than 1.0, not: " + a);
                this.Xc = a
            }
        },
        scrollToPartPause: {
            get: function() {
                return this.Lc
            },
            set: function(a) {
                this.Lc = a
            }
        }
    });
    Dk.className = "CommandHandler";
    si = function() {
        return new Dk
    };

    function Y() {
        mb(this);
        this.G = 4225027;
        this.lb = 1;
        this.Zf = null;
        this.Ta = "";
        this.fc = this.ib = null;
        this.sa = (new G(NaN, NaN)).freeze();
        this.Oc = mc;
        this.Of = fc;
        this.Nf = lc;
        this.ub = new Qc;
        this.Ah = new Qc;
        this.Lf = new Qc;
        this.Ca = this.Lk = 1;
        this.Bc = 0;
        this.ue = Hk;
        this.Sg = Oc;
        this.sc = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.wb = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.jc = (new N(0, 0, NaN, NaN)).freeze();
        this.P = this.Mo = this.No = null;
        this.rk = this.xb = Ed;
        this.Zo = 0;
        this.$o = 1;
        this.Bg = 0;
        this.Xm = 1;
        this.pp = null;
        this.ep = -Infinity;
        this.sl =
            0;
        this.tl = ac;
        this.ul = Ng;
        this.gn = "";
        this.cb = this.O = null;
        this.wk = -1;
        this.wl = this.md = this.Ph = this.zl = null;
        this.ds = Yg;
        this.wj = null
    }
    var be, Yg, $g, Hk, Ik, Jk, Kk, Lk, Mk, Nk;
    Y.prototype.cloneProtected = function(a) {
        a.G = this.G | 6144;
        a.lb = this.lb;
        a.Ta = this.Ta;
        a.ib = this.ib;
        a.fc = this.fc;
        a.sa.assign(this.sa);
        a.Oc = this.Oc.I();
        a.Of = this.Of.I();
        a.Nf = this.Nf.I();
        a.Lf = this.Lf.copy();
        a.Ca = this.Ca;
        a.Bc = this.Bc;
        a.ue = this.ue;
        a.Sg = this.Sg.I();
        a.sc.assign(this.sc);
        a.wb.assign(this.wb);
        a.jc.assign(this.jc);
        a.Mo = this.Mo;
        null !== this.P && (a.P = this.P.copy());
        a.xb = this.xb.I();
        a.rk = this.rk.I();
        a.Zo = this.Zo;
        a.$o = this.$o;
        a.Bg = this.Bg;
        a.Xm = this.Xm;
        a.pp = this.pp;
        a.ep = this.ep;
        a.sl = this.sl;
        a.tl = this.tl.I();
        a.ul = this.ul;
        a.gn = this.gn;
        null !== this.O && (a.O = this.O.copy());
        a.cb = this.cb;
        a.wk = this.wk;
        null !== this.Ph && (a.Ph = Ga(this.Ph));
        null !== this.md && (a.md = this.md.copy());
        a.wl = this.wl
    };
    Y.prototype.Lw = function(a) {
        var b = this.Ph;
        if (Ea(b))
            for (var c = 0; c < b.length; c++) {
                if (b[c] === a) return
            } else this.Ph = b = [];
        b.push(a)
    };
    Y.prototype.nf = function(a) {
        a.No = null;
        a.wj = null;
        a.o()
    };
    Y.prototype.clone = function() {
        var a = new this.constructor;
        this.cloneProtected(a);
        if (null !== this.Ph)
            for (var b = 0; b < this.Ph.length; b++) {
                var c = this.Ph[b];
                a[c] = this[c]
            }
        return a
    };
    Y.prototype.copy = function() {
        return this.clone()
    };
    t = Y.prototype;
    t.gb = function(a) {
        a.classType === S ? 0 === a.name.indexOf("Orient") ? this.segmentOrientation = a : A("Unknown Link enum value for GraphObject.segmentOrientation property: " + a) : a.classType === Y && (this.stretch = a)
    };
    t.toString = function() {
        return Pa(this.constructor) + "#" + Bb(this)
    };

    function Ok(a) {
        null === a.O && (a.O = new Pk)
    }
    t.Jc = function() {
        if (null === this.P) {
            var a = new Qk;
            a.Kg = Sc;
            a.hh = Sc;
            a.Ig = 10;
            a.fh = 10;
            a.Jg = 0;
            a.gh = 0;
            this.P = a
        }
    };
    t.bb = function(a, b, c, d, e, f, g) {
        var h = this.part;
        if (null !== h && (h.ik(a, b, c, d, e, f, g), Rk(this) && c === this && a === af && Sk(this, h, b), this instanceof W && c === h && 0 !== (h.G & 16777216) && null !== h.data))
            for (a = this.W.j, c = a.length, d = 0; d < c; d++) e = a[d], e instanceof W && xj(e, function(a) {
                null !== a.data && 0 !== (a.G & 16777216) && a.Ea(b)
            })
    };

    function Sk(a, b, c) {
        var d = a.sh();
        if (null !== d)
            for (var e = a.cb.iterator; e.next();) {
                var f = e.value,
                    g = null;
                if (null !== f.sourceName) {
                    g = Tk(f, d, a);
                    if (null === g) continue;
                    f.tq(a, g, c, null)
                } else if (f.isToModel) {
                    var h = b.diagram;
                    null === h || h.skipsModelSourceBindings || f.tq(a, h.model.modelData, c, d)
                } else {
                    h = d.data;
                    if (null === h) continue;
                    var k = b.diagram;
                    null === k || k.skipsModelSourceBindings || f.tq(a, h, c, d)
                }
                g === a && (h = d.Ns(f.Ti), null !== h && f.Rv(h, g, c))
            }
    }
    t.Ns = function(a) {
        return this.wk === a ? this : null
    };
    t.g = function(a, b, c) {
        this.bb(af, a, this, b, c)
    };

    function Uk(a, b, c, d, e) {
        var f = a.sc,
            g = a.Lf;
        g.reset();
        Vk(a, g, b, c, d, e);
        a.Lf = g;
        f.h(b, c, d, e);
        g.$s() || g.Ov(f)
    }

    function Wk(a, b, c, d) {
        if (!1 === a.pickable) return !1;
        d.multiply(a.transform);
        return c ? a.Kc(b, d) : a.ph(b, d)
    }
    t.ex = function(a, b, c) {
        if (!1 === this.pickable) return !1;
        var d = this.naturalBounds;
        b = a.Be(b);
        return c ? Rb(a.x, a.y, 0, 0, 0, d.height) <= b || Rb(a.x, a.y, 0, d.height, d.width, d.height) <= b || Rb(a.x, a.y, d.width, d.height, d.width, 0) <= b || Rb(a.x, a.y, d.width, 0, 0, 0) <= b : a.ed(0, 0) <= b && a.ed(0, d.height) <= b && a.ed(d.width, 0) <= b && a.ed(d.width, d.height) <= b
    };
    t.$d = function() {
        return !0
    };
    t.ea = function(a) {
        var b = G.alloc();
        b.assign(a);
        this.transform.ta(b);
        var c = this.actualBounds;
        if (!c.s()) return G.free(b), !1;
        var d = this.diagram;
        if (null !== d && d.Qe) {
            var e = d.Zl("extraTouchThreshold"),
                f = d.Zl("extraTouchArea"),
                g = f / 2,
                h = this.naturalBounds;
            d = this.Ce() * d.scale;
            var k = 1 / d;
            if (h.width * d < e && h.height * d < e) return a = Cc(c.x - g * k, c.y - g * k, c.width + f * k, c.height + f * k, b.x, b.y), G.free(b), a
        }
        e = !1;
        if (this instanceof pf || this instanceof V ? Cc(c.x - 5, c.y - 5, c.width + 10, c.height + 10, b.x, b.y) : c.ea(b)) this.md && !this.md.ea(b) ?
            e = !1 : null !== this.fc && c.ea(b) ? e = !0 : null !== this.ib && this.jc.ea(a) ? e = !0 : e = this.qh(a);
        G.free(b);
        return e
    };
    t.qh = function(a) {
        var b = this.naturalBounds;
        return Cc(0, 0, b.width, b.height, a.x, a.y)
    };
    t.mf = function(a) {
        if (0 === this.angle) return this.actualBounds.mf(a);
        var b = this.naturalBounds;
        b = N.allocAt(0, 0, b.width, b.height);
        var c = this.transform,
            d = !1,
            e = G.allocAt(a.x, a.y);
        b.ea(c.Vd(e)) && (e.h(a.x, a.bottom), b.ea(c.Vd(e)) && (e.h(a.right, a.bottom), b.ea(c.Vd(e)) && (e.h(a.right, a.y), b.ea(c.Vd(e)) && (d = !0))));
        G.free(e);
        N.free(b);
        return d
    };
    t.ph = function(a, b) {
        if (void 0 === b) return a.mf(this.actualBounds);
        var c = this.naturalBounds,
            d = !1,
            e = G.allocAt(0, 0);
        a.ea(b.ta(e)) && (e.h(0, c.height), a.ea(b.ta(e)) && (e.h(c.width, c.height), a.ea(b.ta(e)) && (e.h(c.width, 0), a.ea(b.ta(e)) && (d = !0))));
        G.free(e);
        return d
    };
    t.Kc = function(a, b) {
        if (void 0 === b && (b = this.transform, 0 === this.angle)) return a.Kc(this.actualBounds);
        var c = this.naturalBounds,
            d = G.allocAt(0, 0),
            e = G.allocAt(0, c.height),
            f = G.allocAt(c.width, c.height),
            g = G.allocAt(c.width, 0),
            h = !1;
        if (a.ea(b.ta(d)) || a.ea(b.ta(e)) || a.ea(b.ta(f)) || a.ea(b.ta(g))) h = !0;
        else {
            c = N.allocAt(0, 0, c.width, c.height);
            var k = G.allocAt(a.x, a.y);
            c.ea(b.Vd(k)) ? h = !0 : (k.h(a.x, a.bottom), c.ea(b.Vd(k)) ? h = !0 : (k.h(a.right, a.bottom), c.ea(b.Vd(k)) ? h = !0 : (k.h(a.right, a.y), c.ea(b.Vd(k)) && (h = !0))));
            G.free(k);
            N.free(c);
            !h && (H.Xs(a, d, e) || H.Xs(a, e, f) || H.Xs(a, f, g) || H.Xs(a, g, d)) && (h = !0)
        }
        G.free(d);
        G.free(e);
        G.free(f);
        G.free(g);
        return h
    };
    t.ma = function(a, b) {
        void 0 === b && (b = new G);
        if (a instanceof O) {
            var c = this.naturalBounds;
            b.h(a.x * c.width + a.offsetX, a.y * c.height + a.offsetY)
        } else b.set(a);
        this.td.ta(b);
        return b
    };
    t.Up = function(a) {
        void 0 === a && (a = new N);
        var b = this.naturalBounds,
            c = this.td,
            d = G.allocAt(0, 0).transform(c);
        a.h(d.x, d.y, 0, 0);
        d.h(b.width, 0).transform(c);
        Bc(a, d.x, d.y, 0, 0);
        d.h(b.width, b.height).transform(c);
        Bc(a, d.x, d.y, 0, 0);
        d.h(0, b.height).transform(c);
        Bc(a, d.x, d.y, 0, 0);
        G.free(d);
        return a
    };
    t.Fi = function() {
        var a = this.td;
        1 === a.m11 && 0 === a.m12 ? a = 0 : (a = 180 * Math.atan2(a.m12, a.m11) / Math.PI, 0 > a && (a += 360));
        return a
    };
    t.Ce = function() {
        if (0 !== (this.G & 4096) === !1) return this.Lk;
        var a = this.Ca;
        return null !== this.panel ? a * this.panel.Ce() : a
    };
    t.Ts = function(a, b) {
        void 0 === b && (b = new G);
        b.assign(a);
        this.td.Vd(b);
        return b
    };
    t.Uc = function(a, b, c) {
        return this.Xj(a.x, a.y, b.x, b.y, c)
    };
    t.Xj = function(a, b, c, d, e) {
        var f = this.transform,
            g = 1 / (f.m11 * f.m22 - f.m12 * f.m21),
            h = f.m22 * g,
            k = -f.m12 * g,
            l = -f.m21 * g,
            m = f.m11 * g,
            n = g * (f.m21 * f.dy - f.m22 * f.dx),
            p = g * (f.m12 * f.dx - f.m11 * f.dy);
        if (null !== this.areaBackground) return f = this.actualBounds, H.Uc(f.left, f.top, f.right, f.bottom, a, b, c, d, e);
        g = a * h + b * l + n;
        a = a * k + b * m + p;
        b = c * h + d * l + n;
        c = c * k + d * m + p;
        e.h(0, 0);
        d = this.naturalBounds;
        c = H.Uc(0, 0, d.width, d.height, g, a, b, c, e);
        e.transform(f);
        return c
    };
    Y.prototype.measure = function(a, b, c, d) {
        if (!1 !== kj(this)) {
            var e = this.Sg,
                f = e.right + e.left;
            e = e.top + e.bottom;
            a = Math.max(a - f, 0);
            b = Math.max(b - e, 0);
            c = Math.max((c || 0) - f, 0);
            d = Math.max((d || 0) - e, 0);
            f = this.angle;
            e = this.desiredSize;
            var g = 0;
            this instanceof V && (g = this.strokeWidth);
            90 === f || 270 === f ? (a = isFinite(e.height) ? e.height + g : a, b = isFinite(e.width) ? e.width + g : b) : (a = isFinite(e.width) ? e.width + g : a, b = isFinite(e.height) ? e.height + g : b);
            e = c || 0;
            g = d || 0;
            var h = this instanceof W;
            switch (Xk(this, !0)) {
                case Yg:
                    g = e = 0;
                    h && (b = a = Infinity);
                    break;
                case be:
                    isFinite(a) && a > c && (e = a);
                    isFinite(b) && b > d && (g = b);
                    break;
                case Ik:
                    isFinite(a) && a > c && (e = a);
                    g = 0;
                    h && (b = Infinity);
                    break;
                case Jk:
                    isFinite(b) && b > d && (g = b), e = 0, h && (a = Infinity)
            }
            h = this.maxSize;
            var k = this.minSize;
            e > h.width && k.width < h.width && (e = h.width);
            g > h.height && k.height < h.height && (g = h.height);
            c = Math.max(e / this.scale, k.width);
            d = Math.max(g / this.scale, k.height);
            h.width < c && (c = Math.min(k.width, c));
            h.height < d && (d = Math.min(k.height, d));
            a = Math.min(h.width, a);
            b = Math.min(h.height, b);
            a = Math.max(c, a);
            b = Math.max(d,
                b);
            if (90 === f || 270 === f) f = a, a = b, b = f, f = c, c = d, d = f;
            this.sc.ha();
            this.em(a, b, c, d);
            this.sc.freeze();
            this.sc.s() || A("Non-real measuredBounds has been set. Object " + this + ", measuredBounds: " + this.sc.toString());
            fj(this, !1)
        }
    };
    Y.prototype.em = function() {};
    Y.prototype.rg = function() {
        return !1
    };
    Y.prototype.arrange = function(a, b, c, d, e) {
        this.Yk();
        var f = N.alloc();
        f.assign(this.wb);
        this.wb.ha();
        !1 === lj(this) ? this.wb.h(a, b, c, d) : this.oh(a, b, c, d);
        this.wb.freeze();
        void 0 === e ? this.md = null : this.md = e;
        c = !1;
        if (void 0 !== e) c = !0;
        else if (e = this.panel, null === e || e.type !== W.TableRow && e.type !== W.TableColumn || (e = e.panel), null !== e && (e = e.jc, d = this.measuredBounds, null !== this.areaBackground && (d = this.wb), c = b + d.height, d = a + d.width, c = !(0 <= a + .05 && d <= e.width + .05 && 0 <= b + .05 && c <= e.height + .05), this instanceof uh && (a = this.naturalBounds,
                this.Lr > a.height || this.metrics.maxLineWidth > a.width))) c = !0;
        this.G = c ? this.G | 256 : this.G & -257;
        this.wb.s() || A("Non-real actualBounds has been set. Object " + this + ", actualBounds: " + this.wb.toString());
        this.it(f, this.wb);
        Yk(this, !1);
        N.free(f)
    };
    t = Y.prototype;
    t.oh = function() {};

    function Zk(a, b, c, d, e) {
        a.wb.h(b, c, d, e);
        if (!a.desiredSize.s()) {
            var f = a.sc;
            c = a.Sg;
            b = c.right + c.left;
            var g = c.top + c.bottom;
            c = f.width + b;
            f = f.height + g;
            d += b;
            e += g;
            b = Xk(a, !0);
            c === d && f === e && (b = Yg);
            switch (b) {
                case Yg:
                    if (c > d || f > e) fj(a, !0), a.measure(c > d ? d : c, f > e ? e : f, 0, 0);
                    break;
                case be:
                    fj(a, !0);
                    a.measure(d, e, 0, 0);
                    break;
                case Ik:
                    fj(a, !0);
                    a.measure(d, f, 0, 0);
                    break;
                case Jk:
                    fj(a, !0), a.measure(c, e, 0, 0)
            }
        }
    }
    t.it = function(a, b) {
        var c = this.part;
        null !== c && null !== c.diagram && (c.selectionObject !== this && c.resizeObject !== this && c.rotateObject !== this || $k(c, !0), this.R(), xc(a, b) || (c.vh(), this.Bo(c)))
    };
    t.Bo = function(a) {
        null !== this.portId && ($k(a, !0), a instanceof U && al(a, this))
    };
    t.kc = function(a, b) {
        if (this.visible) {
            var c = this instanceof W && (this.type === W.TableRow || this.type === W.TableColumn),
                d = this.wb;
            if (c || 0 !== d.width && 0 !== d.height && !isNaN(d.x) && !isNaN(d.y)) {
                var e = this.opacity;
                if (0 !== e) {
                    var f = 1;
                    1 !== e && (f = a.globalAlpha, a.globalAlpha = f * e);
                    if (!this.$w(a, b))
                        if (c) bl(this, a, b);
                        else {
                            this instanceof S && this.bk(!1);
                            c = this.transform;
                            var g = this.panel;
                            0 !== (this.G & 4096) === !0 && cl(this);
                            var h = this.part,
                                k = !1,
                                l = 0;
                            if (h && b.De("drawShadows") && (k = h.isShadowed)) {
                                var m = h.pi;
                                l = Math.max(m.y, m.x) *
                                    b.scale * b.ac
                            }
                            if (!(m = b.ij)) {
                                var n = this.jc;
                                m = this.Ah;
                                var p = m.m11,
                                    q = m.m21,
                                    r = m.dx,
                                    u = m.m12,
                                    v = m.m22,
                                    x = m.dy,
                                    y, z = y = 0;
                                m = y * p + z * q + r;
                                var B = y * u + z * v + x;
                                y = n.width + l;
                                z = 0;
                                var C = y * p + z * q + r;
                                y = y * u + z * v + x;
                                m = Math.min(m, C);
                                B = Math.min(B, y);
                                var I = Math.max(m, C) - m;
                                var J = Math.max(B, y) - B;
                                y = n.width + l;
                                z = n.height + l;
                                C = y * p + z * q + r;
                                y = y * u + z * v + x;
                                m = Math.min(m, C);
                                B = Math.min(B, y);
                                I = Math.max(m + I, C) - m;
                                J = Math.max(B + J, y) - B;
                                y = 0;
                                z = n.height + l;
                                C = y * p + z * q + r;
                                y = y * u + z * v + x;
                                m = Math.min(m, C);
                                B = Math.min(B, y);
                                I = Math.max(m + I, C) - m;
                                J = Math.max(B + J, y) - B;
                                l = b.viewportBounds;
                                n = l.C;
                                p = l.D;
                                m = !(m > l.$ + n || n > I + m || B > l.Y + p || p > J + B)
                            }
                            if (m) {
                                m = 0 !== (this.G & 256);
                                a.clipInsteadOfFill && (m = !1);
                                this instanceof uh && (a.font = this.font);
                                if (m) {
                                    B = g.$d() ? g.naturalBounds : g.actualBounds;
                                    null !== this.md ? (n = this.md, I = n.x, J = n.y, l = n.width, n = n.height) : (I = Math.max(d.x, B.x), J = Math.max(d.y, B.y), l = Math.min(d.right, B.right) - I, n = Math.min(d.bottom, B.bottom) - J);
                                    if (I > d.width + d.x || d.x > B.width + B.x) {
                                        1 !== e && (a.globalAlpha = f);
                                        return
                                    }
                                    a.save();
                                    a.beginPath();
                                    a.rect(I, J, l, n);
                                    a.clip()
                                }
                                if (this.rg()) {
                                    if (!h.isVisible()) {
                                        1 !==
                                            e && (a.globalAlpha = f);
                                        return
                                    }
                                    k && (B = h.pi, a.Hv(B.x * b.scale * b.ac, B.y * b.scale * b.ac, h.Pd), dl(a), a.shadowColor = h.Dj)
                                }!0 === this.shadowVisible ? dl(a) : !1 === this.shadowVisible && el(a);
                                h = this.naturalBounds;
                                null !== this.fc && (fi(this, a, this.fc, !0, !0, h, d), this.fc instanceof fl && this.fc.type === gl ? (a.beginPath(), a.rect(d.x, d.y, d.width, d.height), a.Ud(this.fc)) : a.fillRect(d.x, d.y, d.width, d.height));
                                a.transform(c.m11, c.m12, c.m21, c.m22, c.dx, c.dy);
                                k && (null !== g && 0 !== (g.G & 512) || null !== g && (g.type === W.Auto || g.type === W.Spot) &&
                                    g.Ab() !== this) && null === this.shadowVisible && el(a);
                                null !== this.ib && (l = this.naturalBounds, I = B = 0, J = l.width, l = l.height, n = 0, this instanceof V && (l = this.qa.bounds, B = l.x, I = l.y, J = l.width, l = l.height, n = this.strokeWidth), fi(this, a, this.ib, !0, !1, h, d), this.ib instanceof fl && this.ib.type === gl ? (a.beginPath(), a.rect(B - n / 2, I - n / 2, J + n, l + n), a.Ud(this.ib)) : a.fillRect(B - n / 2, I - n / 2, J + n, l + n));
                                k && (null !== this.ib || null !== this.fc || null !== g && 0 !== (g.G & 512) || null !== g && (g.type === W.Auto || g.type === W.Spot) && g.Ab() !== this) ? (hl(this, !0),
                                    null === this.shadowVisible && el(a)) : hl(this, !1);
                                this.zi(a, b);
                                k && 0 !== (this.G & 512) === !0 && dl(a);
                                this.rg() && k && el(a);
                                m ? (a.restore(), this instanceof W ? a.Sc(!0) : a.Sc(!1)) : c.$s() || (b = 1 / (c.m11 * c.m22 - c.m12 * c.m21), a.transform(c.m22 * b, -c.m12 * b, -c.m21 * b, c.m11 * b, b * (c.m21 * c.dy - c.m22 * c.dx), b * (c.m12 * c.dx - c.m11 * c.dy)))
                            }
                        } 1 !== e && (a.globalAlpha = f)
                }
            }
        }
    };
    t.$w = function() {
        return !1
    };

    function bl(a, b, c) {
        var d = a.wb,
            e = a.jc;
        null !== a.fc && (fi(a, b, a.fc, !0, !0, e, d), a.fc instanceof fl && a.fc.type === gl ? (b.beginPath(), b.rect(d.x, d.y, d.width, d.height), b.Ud(a.fc)) : b.fillRect(d.x, d.y, d.width, d.height));
        null !== a.ib && (fi(a, b, a.ib, !0, !1, e, d), a.ib instanceof fl && a.ib.type === gl ? (b.beginPath(), b.rect(d.x, d.y, d.width, d.height), b.Ud(a.ib)) : b.fillRect(d.x, d.y, d.width, d.height));
        a.zi(b, c)
    }
    t.zi = function() {};

    function fi(a, b, c, d, e, f, g) {
        if (null !== c) {
            var h = 1,
                k = 1;
            if ("string" === typeof c) d ? b.fillStyle = c : b.strokeStyle = c;
            else if (c.type === il) d ? b.fillStyle = c.color : b.strokeStyle = c.color;
            else {
                h = f.width;
                k = f.height;
                e && (h = g.width, k = g.height);
                if ((f = b instanceof jl) && c.ce && (c.type === kl || c.zk === h && c.It === k)) var l = c.ce;
                else {
                    var m = 0,
                        n = 0,
                        p = 0,
                        q = 0,
                        r = 0,
                        u = 0;
                    u = r = 0;
                    e && (r = g.x, u = g.y);
                    m = c.start.x * h + c.start.offsetX;
                    n = c.start.y * k + c.start.offsetY;
                    p = c.end.x * h + c.end.offsetX;
                    q = c.end.y * k + c.end.offsetY;
                    m += r;
                    p += r;
                    n += u;
                    q += u;
                    if (c.type === ll) l =
                        b.createLinearGradient(m, n, p, q);
                    else if (c.type === gl) u = isNaN(c.endRadius) ? Math.max(h, k) / 2 : c.endRadius, isNaN(c.startRadius) ? (r = 0, u = Math.max(h, k) / 2) : r = c.startRadius, l = b.createRadialGradient(m, n, r, p, q, u);
                    else if (c.type === kl) try {
                        l = b.createPattern(c.pattern, "repeat")
                    } catch (x) {
                        l = null
                    }
                    if (c.type !== kl && (e = c.colorStops, null !== e))
                        for (e = e.iterator; e.next();) l.addColorStop(e.key, e.value);
                    if (f && (c.ce = l, null !== l && (c.zk = h, c.It = k), null === l && c.type === kl && -1 !== c.zk)) {
                        c.zk = -1;
                        var v = a.diagram;
                        null !== v && -1 === c.zk && ua(function() {
                                v.yh()
                            },
                            600)
                    }
                }
                d ? b.fillStyle = l : b.strokeStyle = l
            }
        }
    }
    t.pg = function(a) {
        if (a instanceof W) a: {
            if (this !== a && null !== a)
                for (var b = this.panel; null !== b;) {
                    if (b === a) {
                        a = !0;
                        break a
                    }
                    b = b.panel
                }
            a = !1
        }
        else a = !1;
        return a
    };
    t.rf = function() {
        if (!this.visible) return !1;
        var a = this.panel;
        return null !== a ? a.rf() : !0
    };
    t.qg = function() {
        for (var a = this instanceof W ? this : this.panel; null !== a && a.isEnabled;) a = a.panel;
        return null === a
    };

    function cl(a) {
        if (0 !== (a.G & 2048) === !0) {
            var b = a.ub;
            b.reset();
            if (!a.wb.s() || !a.sc.s()) {
                ml(a, !1);
                return
            }
            b.translate(a.wb.x - a.sc.x, a.wb.y - a.sc.y);
            if (1 !== a.scale || 0 !== a.angle) {
                var c = a.naturalBounds;
                Vk(a, b, c.x, c.y, c.width, c.height)
            }
            ml(a, !1);
            nl(a, !0)
        }
        0 !== (a.G & 4096) === !0 && (b = a.panel, null === b ? (a.Ah.set(a.ub), a.Lk = a.scale, nl(a, !1)) : null !== b.td && (c = a.Ah, c.reset(), b.$d() ? c.multiply(b.Ah) : null !== b.panel && c.multiply(b.panel.Ah), c.multiply(a.ub), a.Lk = a.scale * b.Lk, nl(a, !1)))
    }

    function Vk(a, b, c, d, e, f) {
        1 !== a.scale && b.scale(a.scale);
        if (0 !== a.angle) {
            var g = dd;
            a.rg() && a.locationSpot.hb() && (g = a.locationSpot);
            var h = G.alloc();
            if (a instanceof T && a.locationObject !== a)
                for (c = a.locationObject, d = c.naturalBounds, h.kk(d.x, d.y, d.width, d.height, g), c.Lf.ta(h), h.offset(-c.measuredBounds.x, -c.measuredBounds.y), g = c.panel; null !== g && g !== a;) g.Lf.ta(h), h.offset(-g.measuredBounds.x, -g.measuredBounds.y), g = g.panel;
            else h.kk(c, d, e, f, g);
            b.rotate(a.angle, h.x, h.y);
            G.free(h)
        }
    }
    t.o = function(a) {
        void 0 === a && (a = !1);
        if (!0 !== kj(this)) {
            fj(this, !0);
            Yk(this, !0);
            var b = this.panel;
            null === b || a || b.o()
        }
    };
    t.am = function() {
        !0 !== kj(this) && (fj(this, !0), Yk(this, !0))
    };

    function ol(a) {
        if (!1 === lj(a)) {
            var b = a.panel;
            null !== b ? b.o() : a.rg() && (b = a.diagram, null !== b && (b.Fd.add(a), a instanceof U && a.gd(), b.ec()));
            Yk(a, !0)
        }
    }
    t.Yk = function() {
        0 !== (this.G & 2048) === !1 && (ml(this, !0), nl(this, !0))
    };
    t.cv = function() {
        nl(this, !0)
    };
    t.R = function() {
        var a = this.part;
        null !== a && a.R()
    };

    function Xk(a, b) {
        var c = a.stretch,
            d = a.panel;
        if (null !== d && d.type === W.Table) return pl(a, d.getRowDefinition(a.row), d.getColumnDefinition(a.column), b);
        if (null !== d && d.type === W.Auto && d.Ab() === a) return ql(a, be, b);
        if (c === Hk) {
            if (null !== d) {
                if (d.type === W.Spot && d.Ab() === a) return ql(a, be, b);
                c = d.defaultStretch;
                return c === Hk ? ql(a, Yg, b) : ql(a, c, b)
            }
            return ql(a, Yg, b)
        }
        return ql(a, c, b)
    }

    function pl(a, b, c, d) {
        var e = a.stretch;
        if (e !== Hk) return ql(a, e, d);
        var f = e = null;
        switch (b.stretch) {
            case Jk:
                f = !0;
                break;
            case be:
                f = !0
        }
        switch (c.stretch) {
            case Ik:
                e = !0;
                break;
            case be:
                e = !0
        }
        b = a.panel.defaultStretch;
        null === e && (e = b === Ik || b === be);
        null === f && (f = b === Jk || b === be);
        return !0 === e && !0 === f ? ql(a, be, d) : !0 === e ? ql(a, Ik, d) : !0 === f ? ql(a, Jk, d) : ql(a, Yg, d)
    }

    function ql(a, b, c) {
        if (c) return b;
        if (b === Yg) return Yg;
        c = a.desiredSize;
        if (c.s()) return Yg;
        a = a.angle;
        if (!isNaN(c.width))
            if (90 !== a && 270 !== a) {
                if (b === Ik) return Yg;
                if (b === be) return Jk
            } else {
                if (b === Jk) return Yg;
                if (b === be) return Ik
            } if (!isNaN(c.height))
            if (90 !== a && 270 !== a) {
                if (b === Jk) return Yg;
                if (b === be) return Ik
            } else {
                if (b === Ik) return Yg;
                if (b === be) return Jk
            } return b
    }

    function hl(a, b) {
        a.G = b ? a.G | 512 : a.G & -513
    }

    function Rk(a) {
        return 0 !== (a.G & 1024)
    }

    function rl(a, b) {
        a.G = b ? a.G | 1024 : a.G & -1025
    }

    function ml(a, b) {
        a.G = b ? a.G | 2048 : a.G & -2049
    }

    function nl(a, b) {
        a.G = b ? a.G | 4096 : a.G & -4097
    }

    function kj(a) {
        return 0 !== (a.G & 8192)
    }

    function fj(a, b) {
        a.G = b ? a.G | 8192 : a.G & -8193
    }

    function lj(a) {
        return 0 !== (a.G & 16384)
    }

    function Yk(a, b) {
        a.G = b ? a.G | 16384 : a.G & -16385
    }
    t.Oi = function(a) {
        this.Zf = a
    };
    t.Fv = function() {};
    t.Ev = function(a) {
        this.sa = a;
        ol(this);
        return !0
    };
    t.ut = function(a, b) {
        this.sa.h(a, b);
        this.Yk()
    };

    function sl(a) {
        var b = a.part;
        if (b instanceof U && (null !== a.portId || a === b.port)) {
            var c = b.diagram;
            null === c || c.undoManager.isUndoingRedoing || al(b, a)
        }
    }

    function tl(a) {
        var b = a.diagram;
        null === b || b.undoManager.isUndoingRedoing || (a instanceof W ? a instanceof U ? a.gd() : a.vm(a, function(a) {
            sl(a)
        }) : sl(a))
    }
    t.bind = function(a) {
        a.Rd = this;
        var b = this.sh();
        null !== b && ul(b) && A("Cannot add a Binding to a template that has already been copied: " + a);
        null === this.cb && (this.cb = new E);
        this.cb.add(a)
    };
    t.sh = function() {
        for (var a = this instanceof W ? this : this.panel; null !== a;) {
            if (null !== a.Nh) return a;
            a = a.panel
        }
        return null
    };
    t.Gv = function(a) {
        rj(this, a)
    };

    function vl(a, b) {
        for (var c = 1; c < arguments.length; ++c);
        c = arguments;
        var d = null,
            e = null;
        if ("function" === typeof a) e = a;
        else if ("string" === typeof a) {
            var f = wl.J(a);
            "function" === typeof f ? (c = Ga(arguments), d = f(c), Ca(d) || A('GraphObject.make invoked object builder "' + a + '", but it did not return an Object')) : e = w.go[a]
        }
        null === d && (void 0 !== e && null !== e && e.constructor || A("GraphObject.make requires a class function or GoJS class name or name of an object builder, not: " + a), d = new e);
        e = 1;
        if (d instanceof P && 1 < c.length) {
            f =
                d;
            var g = c[1];
            if ("string" === typeof g || g instanceof HTMLDivElement) wi(f, g), e++
        }
        for (; e < c.length; e++) f = c[e], void 0 === f ? A("Undefined value at argument " + e + " for object being constructed by GraphObject.make: " + d) : xl(d, f);
        return d
    }

    function xl(a, b) {
        if ("string" === typeof b)
            if (a instanceof uh) a.text = b;
            else if (a instanceof V) a.figure = b;
        else if (a instanceof Sj) a.source = b;
        else if (a instanceof W) b = yl.J(b), null !== b && (a.type = b);
        else if (a instanceof fl) {
            var c = qb(fl, b);
            null !== c ? a.type = c : A("Unknown Brush type as an argument to GraphObject.make: " + b)
        } else a instanceof $d ? (b = qb($d, b), null !== b && (a.type = b)) : a instanceof Ve && (b = qb(Ve, b), null !== b && (a.type = b));
        else if (b instanceof Y) a instanceof W || A("A GraphObject can only be added to a Panel, not to: " +
            a), a.add(b);
        else if (b instanceof Mj) {
            var d;
            b.isRow && "function" === typeof a.getRowDefinition ? d = a.getRowDefinition(b.index) : b.isRow || "function" !== typeof a.getColumnDefinition || (d = a.getColumnDefinition(b.index));
            d instanceof Mj ? d.Sl(b) : A("A RowColumnDefinition can only be added to an object that implements getRowDefinition/getColumnDefinition, not to: " + a)
        } else if (b instanceof D) "function" === typeof a.gb && a.gb(b);
        else if (b instanceof zl) a.type = b;
        else if (b instanceof Ai) a instanceof Y ? a.bind(b) : a instanceof
        Mj ? a.bind(b) : A("A Binding can only be applied to a GraphObject or RowColumnDefinition, not to: " + a);
        else if (b instanceof Ue) a instanceof $d ? a.figures.add(b) : A("A PathFigure can only be added to a Geometry, not to: " + a);
        else if (b instanceof Ve) a instanceof Ue ? a.segments.add(b) : A("A PathSegment can only be added to a PathFigure, not to: " + a);
        else if (b instanceof ui) a instanceof P ? a.layout = b : a instanceof hg ? a.layout = b : A("A Layout can only be assigned to a Diagram or a Group, not to: " + a);
        else if (Array.isArray(b))
            for (c =
                0; c < b.length; c++) xl(a, b[c]);
        else if ("object" === typeof b && null !== b)
            if (a instanceof fl) {
                c = new tb;
                for (var e in b) d = parseFloat(e), isNaN(d) ? c[e] = b[e] : a.addColorStop(d, b[e]);
                rj(a, c)
            } else if (a instanceof Mj) {
            void 0 !== b.row ? (e = b.row, (void 0 === e || null === e || Infinity === e || isNaN(e) || 0 > e) && A("Must specify non-negative integer row for RowColumnDefinition " + b + ", not: " + e), a.isRow = !0, a.index = e) : void 0 !== b.column && (e = b.column, (void 0 === e || null === e || Infinity === e || isNaN(e) || 0 > e) && A("Must specify non-negative integer column for RowColumnDefinition " +
                b + ", not: " + e), a.isRow = !1, a.index = e);
            e = new tb;
            for (c in b) "row" !== c && "column" !== c && (e[c] = b[c]);
            rj(a, e)
        } else rj(a, b);
        else A('Unknown initializer "' + b + '" for object being constructed by GraphObject.make: ' + a)
    }

    function Al(a, b) {
        wl.add(a, b)
    }

    function Bl(a, b, c) {
        void 0 === c && (c = null);
        var d = a[1];
        if ("function" === typeof c ? c(d) : "string" === typeof d) return a.splice(1, 1), d;
        if (void 0 === b) throw Error("no " + ("function" === typeof c ? "satisfactory" : "string") + " argument for GraphObject builder " + a[0]);
        return b
    }
    pa.Object.defineProperties(Y.prototype, {
        shadowVisible: {
            get: function() {
                return this.wl
            },
            set: function(a) {
                var b = this.wl;
                b !== a && (this.wl = a, this.R(), this.g("shadowVisible", b, a))
            }
        },
        enabledChanged: {
            get: function() {
                return null !== this.O ? this.O.zn : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.zn;
                b !== a && (this.O.zn = a, this.g("enabledChanged", b, a))
            }
        },
        segmentOrientation: {
            get: function() {
                return this.ul
            },
            set: function(a) {
                var b = this.ul;
                b !== a && (this.ul = a, this.o(), this.g("segmentOrientation", b, a), a === Ng && (this.angle = 0))
            }
        },
        segmentIndex: {
            get: function() {
                return this.ep
            },
            set: function(a) {
                a = Math.round(a);
                var b = this.ep;
                b !== a && (this.ep = a, this.o(), this.g("segmentIndex", b, a))
            }
        },
        segmentFraction: {
            get: function() {
                return this.sl
            },
            set: function(a) {
                isNaN(a) ? a = 0 : 0 > a ? a = 0 : 1 < a && (a = 1);
                var b = this.sl;
                b !== a && (this.sl = a, this.o(), this.g("segmentFraction", b, a))
            }
        },
        segmentOffset: {
            get: function() {
                return this.tl
            },
            set: function(a) {
                var b = this.tl;
                b.A(a) || (this.tl = a = a.I(), this.o(), this.g("segmentOffset", b, a))
            }
        },
        stretch: {
            get: function() {
                return this.ue
            },
            set: function(a) {
                var b = this.ue;
                b !== a && (this.ue = a, this.o(), this.g("stretch", b, a))
            }
        },
        name: {
            get: function() {
                return this.Ta
            },
            set: function(a) {
                var b = this.Ta;
                b !== a && (this.Ta = a, null !== this.part && (this.part.rj = null), this.g("name", b, a))
            }
        },
        opacity: {
            get: function() {
                return this.lb
            },
            set: function(a) {
                var b = this.lb;
                b !== a && ((0 > a || 1 < a) && xa(a, "0 <= value <= 1", Y, "opacity"), this.lb = a, this.g("opacity", b, a), a = this.diagram, b = this.part, null !== a && null !== b && a.R(vj(b, b.actualBounds)))
            }
        },
        visible: {
            get: function() {
                return 0 !== (this.G & 1)
            },
            set: function(a) {
                var b = 0 !== (this.G & 1);
                b !== a && (this.G ^= 1, this.g("visible", b, a), b = this.panel, null !== b ? b.o() : this.rg() && this.Mb(a), this.R(), tl(this))
            }
        },
        pickable: {
            get: function() {
                return 0 !== (this.G & 2)
            },
            set: function(a) {
                var b =
                    0 !== (this.G & 2);
                b !== a && (this.G ^= 2, this.g("pickable", b, a))
            }
        },
        fromLinkableDuplicates: {
            get: function() {
                return 0 !== (this.G & 4)
            },
            set: function(a) {
                var b = 0 !== (this.G & 4);
                b !== a && (this.G ^= 4, this.g("fromLinkableDuplicates", b, a))
            }
        },
        fromLinkableSelfNode: {
            get: function() {
                return 0 !== (this.G & 8)
            },
            set: function(a) {
                var b = 0 !== (this.G & 8);
                b !== a && (this.G ^= 8, this.g("fromLinkableSelfNode", b, a))
            }
        },
        toLinkableDuplicates: {
            get: function() {
                return 0 !==
                    (this.G & 16)
            },
            set: function(a) {
                var b = 0 !== (this.G & 16);
                b !== a && (this.G ^= 16, this.g("toLinkableDuplicates", b, a))
            }
        },
        toLinkableSelfNode: {
            get: function() {
                return 0 !== (this.G & 32)
            },
            set: function(a) {
                var b = 0 !== (this.G & 32);
                b !== a && (this.G ^= 32, this.g("toLinkableSelfNode", b, a))
            }
        },
        isPanelMain: {
            get: function() {
                return 0 !== (this.G & 64)
            },
            set: function(a) {
                var b = 0 !== (this.G & 64);
                b !== a && (this.G ^= 64, this.o(), this.g("isPanelMain", b, a))
            }
        },
        isActionable: {
            get: function() {
                return 0 !== (this.G & 128)
            },
            set: function(a) {
                var b = 0 !== (this.G & 128);
                b !== a && (this.G ^= 128, this.g("isActionable", b, a))
            }
        },
        areaBackground: {
            get: function() {
                return this.fc
            },
            set: function(a) {
                var b = this.fc;
                b !== a && (a instanceof fl && a.freeze(), this.fc = a, this.R(), this.g("areaBackground", b, a))
            }
        },
        background: {
            get: function() {
                return this.ib
            },
            set: function(a) {
                var b = this.ib;
                b !== a && (a instanceof fl && a.freeze(), this.ib = a, this.R(), this.g("background",
                    b, a))
            }
        },
        part: {
            get: function() {
                if (this.rg()) return this;
                if (null !== this.wj) return this.wj;
                var a;
                for (a = this.panel; a;) {
                    if (a instanceof T) return this.wj = a;
                    a = a.panel
                }
                return null
            }
        },
        svg: {
            get: function() {
                return this.ws
            },
            set: function(a) {
                this.ws = a
            }
        },
        panel: {
            get: function() {
                return this.Zf
            }
        },
        layer: {
            get: function() {
                var a = this.part;
                return null !== a ? a.layer : null
            }
        },
        diagram: {
            get: function() {
                var a = this.part;
                return null !== a ? a.diagram : null
            }
        },
        position: {
            get: function() {
                return this.sa
            },
            set: function(a) {
                var b = a.x,
                    c = a.y,
                    d = this.sa,
                    e = d.x,
                    f = d.y;
                (e === b || isNaN(e) && isNaN(b)) && (f === c || isNaN(f) && isNaN(c)) ? this.Fv(): (a = a.I(), this.Ev(a, d) && this.g("position", d, a))
            }
        },
        actualBounds: {
            get: function() {
                return this.wb
            }
        },
        scale: {
            get: function() {
                return this.Ca
            },
            set: function(a) {
                var b = this.Ca;
                b !== a && (0 >= a && A("GraphObject.scale for " +
                    this + " must be greater than zero, not: " + a), this.Ca = a, this.o(), this.g("scale", b, a))
            }
        },
        angle: {
            get: function() {
                return this.Bc
            },
            set: function(a) {
                var b = this.Bc;
                b !== a && (a %= 360, 0 > a && (a += 360), b !== a && (this.Bc = a, tl(this), this.o(), this.g("angle", b, a)))
            }
        },
        desiredSize: {
            get: function() {
                return this.Oc
            },
            set: function(a) {
                var b = a.width,
                    c = a.height,
                    d = this.Oc,
                    e = d.width,
                    f = d.height;
                (e === b || isNaN(e) && isNaN(b)) && (f === c || isNaN(f) && isNaN(c)) || (this.Oc = a = a.I(), this.o(),
                    this instanceof V && this.cc(), this.g("desiredSize", d, a), Rk(this) && (a = this.part, null !== a && (Sk(this, a, "width"), Sk(this, a, "height"))))
            }
        },
        width: {
            get: function() {
                return this.Oc.width
            },
            set: function(a) {
                var b = this.Oc.width;
                b === a || isNaN(b) && isNaN(a) || (b = this.Oc, this.Oc = a = (new L(a, this.Oc.height)).freeze(), this.o(), this instanceof V && this.cc(), this.g("desiredSize", b, a), Rk(this) && (a = this.part, null !== a && Sk(this, a, "width")))
            }
        },
        height: {
            get: function() {
                return this.Oc.height
            },
            set: function(a) {
                var b = this.Oc.height;
                b === a || isNaN(b) && isNaN(a) || (b = this.Oc, this.Oc = a = (new L(this.Oc.width, a)).freeze(), this.o(), this instanceof V && this.cc(), this.g("desiredSize", b, a), Rk(this) && (a = this.part, null !== a && Sk(this, a, "height")))
            }
        },
        minSize: {
            get: function() {
                return this.Of
            },
            set: function(a) {
                var b = this.Of;
                b.A(a) || (a = a.copy(), isNaN(a.width) && (a.width = 0), isNaN(a.height) && (a.height = 0), a.freeze(), this.Of = a, this.o(), this.g("minSize", b, a))
            }
        },
        maxSize: {
            get: function() {
                return this.Nf
            },
            set: function(a) {
                var b = this.Nf;
                b.A(a) || (a = a.copy(), isNaN(a.width) && (a.width = Infinity), isNaN(a.height) && (a.height = Infinity), a.freeze(), this.Nf = a, this.o(), this.g("maxSize", b, a))
            }
        },
        measuredBounds: {
            get: function() {
                return this.sc
            }
        },
        naturalBounds: {
            get: function() {
                return this.jc
            }
        },
        margin: {
            get: function() {
                return this.Sg
            },
            set: function(a) {
                "number" === typeof a && (a = new Ic(a));
                var b = this.Sg;
                b.A(a) ||
                    (this.Sg = a = a.I(), this.o(), this.g("margin", b, a))
            }
        },
        transform: {
            get: function() {
                0 !== (this.G & 2048) === !0 && cl(this);
                return this.ub
            }
        },
        td: {
            get: function() {
                0 !== (this.G & 4096) === !0 && cl(this);
                return this.Ah
            }
        },
        alignment: {
            get: function() {
                return this.xb
            },
            set: function(a) {
                var b = this.xb;
                b.A(a) || (a.mc() && !a.Lb() && A("GraphObject.alignment for " + this + " must be a real Spot or Spot.Default, not: " + a), this.xb = a = a.I(), ol(this), this.g("alignment",
                    b, a))
            }
        },
        column: {
            get: function() {
                return this.Bg
            },
            set: function(a) {
                a = Math.round(a);
                var b = this.Bg;
                b !== a && (0 > a && xa(a, ">= 0", Y, "column"), this.Bg = a, this.o(), this.g("column", b, a))
            }
        },
        columnSpan: {
            get: function() {
                return this.Xm
            },
            set: function(a) {
                a = Math.round(a);
                var b = this.Xm;
                b !== a && (1 > a && xa(a, ">= 1", Y, "columnSpan"), this.Xm = a, this.o(), this.g("columnSpan", b, a))
            }
        },
        row: {
            get: function() {
                return this.Zo
            },
            set: function(a) {
                a = Math.round(a);
                var b = this.Zo;
                b !== a && (0 > a && xa(a, ">= 0", Y, "row"), this.Zo = a, this.o(), this.g("row", b, a))
            }
        },
        rowSpan: {
            get: function() {
                return this.$o
            },
            set: function(a) {
                a = Math.round(a);
                var b = this.$o;
                b !== a && (1 > a && xa(a, ">= 1", Y, "rowSpan"), this.$o = a, this.o(), this.g("rowSpan", b, a))
            }
        },
        spanAllocation: {
            get: function() {
                return this.pp
            },
            set: function(a) {
                var b = this.pp;
                b !== a && (this.pp = a, this.o(), this.g("spanAllocation", b, a))
            }
        },
        alignmentFocus: {
            get: function() {
                return this.rk
            },
            set: function(a) {
                var b = this.rk;
                b.A(a) || (this.rk = a = a.I(), this.o(), this.g("alignmentFocus", b, a))
            }
        },
        portId: {
            get: function() {
                return this.Mo
            },
            set: function(a) {
                var b = this.Mo;
                if (b !== a) {
                    var c = this.part;
                    null === c || c instanceof U || (A("Cannot set portID on a Link: " + a), c = null);
                    null !== b && null !== c && Cl(c, this);
                    this.Mo = a;
                    null !== a && null !== c && (c.uh = !0, Dl(c, this));
                    this.g("portId", b, a)
                }
            }
        },
        toSpot: {
            get: function() {
                return null !== this.P ? this.P.hh : Sc
            },
            set: function(a) {
                this.Jc();
                var b = this.P.hh;
                b.A(a) || (a = a.I(), this.P.hh = a, this.g("toSpot", b, a), sl(this))
            }
        },
        toEndSegmentLength: {
            get: function() {
                return null !== this.P ? this.P.fh : 10
            },
            set: function(a) {
                this.Jc();
                var b = this.P.fh;
                b !== a && (0 > a && xa(a, ">= 0", Y, "toEndSegmentLength"), this.P.fh = a, this.g("toEndSegmentLength", b, a), sl(this))
            }
        },
        toShortLength: {
            get: function() {
                return null !== this.P ? this.P.gh : 0
            },
            set: function(a) {
                this.Jc();
                var b = this.P.gh;
                b !== a && (this.P.gh = a, this.g("toShortLength",
                    b, a), sl(this))
            }
        },
        toLinkable: {
            get: function() {
                return null !== this.P ? this.P.xp : null
            },
            set: function(a) {
                this.Jc();
                var b = this.P.xp;
                b !== a && (this.P.xp = a, this.g("toLinkable", b, a))
            }
        },
        toMaxLinks: {
            get: function() {
                return null !== this.P ? this.P.yp : Infinity
            },
            set: function(a) {
                this.Jc();
                var b = this.P.yp;
                b !== a && (0 > a && xa(a, ">= 0", Y, "toMaxLinks"), this.P.yp = a, this.g("toMaxLinks", b, a))
            }
        },
        fromSpot: {
            get: function() {
                return null !== this.P ? this.P.Kg :
                    Sc
            },
            set: function(a) {
                this.Jc();
                var b = this.P.Kg;
                b.A(a) || (a = a.I(), this.P.Kg = a, this.g("fromSpot", b, a), sl(this))
            }
        },
        fromEndSegmentLength: {
            get: function() {
                return null !== this.P ? this.P.Ig : 10
            },
            set: function(a) {
                this.Jc();
                var b = this.P.Ig;
                b !== a && (0 > a && xa(a, ">= 0", Y, "fromEndSegmentLength"), this.P.Ig = a, this.g("fromEndSegmentLength", b, a), sl(this))
            }
        },
        fromShortLength: {
            get: function() {
                return null !== this.P ? this.P.Jg : 0
            },
            set: function(a) {
                this.Jc();
                var b = this.P.Jg;
                b !== a && (this.P.Jg = a, this.g("fromShortLength", b, a), sl(this))
            }
        },
        fromLinkable: {
            get: function() {
                return null !== this.P ? this.P.Bn : null
            },
            set: function(a) {
                this.Jc();
                var b = this.P.Bn;
                b !== a && (this.P.Bn = a, this.g("fromLinkable", b, a))
            }
        },
        fromMaxLinks: {
            get: function() {
                return null !== this.P ? this.P.Cn : Infinity
            },
            set: function(a) {
                this.Jc();
                var b = this.P.Cn;
                b !== a && (0 > a && xa(a, ">= 0", Y, "fromMaxLinks"), this.P.Cn = a, this.g("fromMaxLinks", b, a))
            }
        },
        cursor: {
            get: function() {
                return this.gn
            },
            set: function(a) {
                var b = this.gn;
                b !== a && (this.gn = a, this.g("cursor", b, a))
            }
        },
        click: {
            get: function() {
                return null !== this.O ? this.O.zf : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.zf;
                b !== a && (this.O.zf = a, this.g("click", b, a))
            }
        },
        doubleClick: {
            get: function() {
                return null !== this.O ? this.O.Ef : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Ef;
                b !== a && (this.O.Ef = a, this.g("doubleClick", b, a))
            }
        },
        contextClick: {
            get: function() {
                return null !== this.O ? this.O.Af : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Af;
                b !== a && (this.O.Af = a, this.g("contextClick", b, a))
            }
        },
        mouseEnter: {
            get: function() {
                return null !== this.O ? this.O.Qf : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Qf;
                b !== a && (this.O.Qf = a, this.g("mouseEnter", b, a))
            }
        },
        mouseLeave: {
            get: function() {
                return null !== this.O ? this.O.Tf : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Tf;
                b !== a && (this.O.Tf = a, this.g("mouseLeave",
                    b, a))
            }
        },
        mouseOver: {
            get: function() {
                return null !== this.O ? this.O.Uf : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Uf;
                b !== a && (this.O.Uf = a, this.g("mouseOver", b, a))
            }
        },
        mouseHover: {
            get: function() {
                return null !== this.O ? this.O.Sf : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Sf;
                b !== a && (this.O.Sf = a, this.g("mouseHover", b, a))
            }
        },
        mouseHold: {
            get: function() {
                return null !== this.O ? this.O.Rf : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Rf;
                b !== a && (this.O.Rf = a, this.g("mouseHold", b, a))
            }
        },
        mouseDragEnter: {
            get: function() {
                return null !== this.O ? this.O.ro : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.ro;
                b !== a && (this.O.ro = a, this.g("mouseDragEnter", b, a))
            }
        },
        mouseDragLeave: {
            get: function() {
                return null !== this.O ? this.O.so : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.so;
                b !== a && (this.O.so = a, this.g("mouseDragLeave", b, a))
            }
        },
        mouseDrop: {
            get: function() {
                return null !== this.O ?
                    this.O.Pf : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Pf;
                b !== a && (this.O.Pf = a, this.g("mouseDrop", b, a))
            }
        },
        actionDown: {
            get: function() {
                return null !== this.O ? this.O.Gm : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Gm;
                b !== a && (this.O.Gm = a, this.g("actionDown", b, a))
            }
        },
        actionMove: {
            get: function() {
                return null !== this.O ? this.O.Hm : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Hm;
                b !== a && (this.O.Hm = a, this.g("actionMove", b, a))
            }
        },
        actionUp: {
            get: function() {
                return null !== this.O ? this.O.Im : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Im;
                b !== a && (this.O.Im = a, this.g("actionUp", b, a))
            }
        },
        actionCancel: {
            get: function() {
                return null !== this.O ? this.O.Fm : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Fm;
                b !== a && (this.O.Fm = a, this.g("actionCancel", b, a))
            }
        },
        toolTip: {
            get: function() {
                return null !== this.O ? this.O.fg : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.fg;
                b !== a && (this.O.fg = a, this.g("toolTip", b, a))
            }
        },
        contextMenu: {
            get: function() {
                return null !== this.O ? this.O.Bf : null
            },
            set: function(a) {
                Ok(this);
                var b = this.O.Bf;
                b !== a && (this.O.Bf = a, this.g("contextMenu", b, a))
            }
        }
    });
    Y.prototype.setProperties = Y.prototype.Gv;
    Y.prototype.findTemplateBinder = Y.prototype.sh;
    Y.prototype.bind = Y.prototype.bind;
    Y.prototype.isEnabledObject = Y.prototype.qg;
    Y.prototype.isVisibleObject = Y.prototype.rf;
    Y.prototype.isContainedBy = Y.prototype.pg;
    Y.prototype.getNearestIntersectionPoint = Y.prototype.Uc;
    Y.prototype.getLocalPoint = Y.prototype.Ts;
    Y.prototype.getDocumentScale = Y.prototype.Ce;
    Y.prototype.getDocumentAngle = Y.prototype.Fi;
    Y.prototype.getDocumentBounds = Y.prototype.Up;
    Y.prototype.getDocumentPoint = Y.prototype.ma;
    Y.prototype.intersectsRect = Y.prototype.Kc;
    Y.prototype.containedInRect = Y.prototype.ph;
    Y.prototype.containsRect = Y.prototype.mf;
    Y.prototype.containsPoint = Y.prototype.ea;
    Y.prototype.raiseChanged = Y.prototype.g;
    Y.prototype.raiseChangedEvent = Y.prototype.bb;
    Y.prototype.addCopyProperty = Y.prototype.Lw;
    var wl = null;
    Y.className = "GraphObject";
    wl = new Lb;
    Al("Button", function() {
        function a(a, b) {
            return null !== a.diagram.Rb(a.documentPoint, function(a) {
                for (; null !== a.panel && !a.isActionable;) a = a.panel;
                return a
            }, function(a) {
                return a === b
            })
        }
        var b = vl(W, W.Auto, {
            isActionable: !0,
            enabledChanged: function(a, b) {
                if (a instanceof W) {
                    var c = a.ab("ButtonBorder");
                    null !== c && (c.fill = b ? a._buttonFillNormal : a._buttonFillDisabled)
                }
            },
            cursor: "pointer",
            _buttonFillNormal: "#F5F5F5",
            _buttonStrokeNormal: "#BDBDBD",
            _buttonFillOver: "#E0E0E0",
            _buttonStrokeOver: "#9E9E9E",
            _buttonFillPressed: "#BDBDBD",
            _buttonStrokePressed: "#9E9E9E",
            _buttonFillDisabled: "#E5E5E5"
        }, vl(V, {
            name: "ButtonBorder",
            figure: "RoundedRectangle",
            spot1: new O(0, 0, 2.76142374915397, 2.761423749153969),
            spot2: new O(1, 1, -2.76142374915397, -2.761423749153969),
            parameter1: 2,
            parameter2: 2,
            fill: "#F5F5F5",
            stroke: "#BDBDBD"
        }));
        b.mouseEnter = function(a, b) {
            if (b.qg() && b instanceof W && (a = b.ab("ButtonBorder"), a instanceof V)) {
                var c = b._buttonFillOver;
                b._buttonFillNormal = a.fill;
                a.fill = c;
                c = b._buttonStrokeOver;
                b._buttonStrokeNormal = a.stroke;
                a.stroke = c
            }
        };
        b.mouseLeave = function(a, b) {
            b.qg() && b instanceof W && (a = b.ab("ButtonBorder"), a instanceof V && (a.fill = b._buttonFillNormal, a.stroke = b._buttonStrokeNormal))
        };
        b.actionDown = function(a, b) {
            if (b.qg() && b instanceof W && null !== b._buttonFillPressed && 0 === a.button) {
                var c = b.ab("ButtonBorder");
                if (c instanceof V) {
                    a = a.diagram;
                    var d = a.skipsUndoManager;
                    a.skipsUndoManager = !0;
                    var g = b._buttonFillPressed;
                    b._buttonFillOver = c.fill;
                    c.fill = g;
                    g = b._buttonStrokePressed;
                    b._buttonStrokeOver = c.stroke;
                    c.stroke = g;
                    a.skipsUndoManager = d
                }
            }
        };
        b.actionUp = function(b, d) {
            if (d.qg() && d instanceof W && null !== d._buttonFillPressed && 0 === b.button) {
                var c = d.ab("ButtonBorder");
                if (c instanceof V) {
                    var f = b.diagram,
                        g = f.skipsUndoManager;
                    f.skipsUndoManager = !0;
                    a(b, d) ? (c.fill = d._buttonFillOver, c.stroke = d._buttonStrokeOver) : (c.fill = d._buttonFillNormal, c.stroke = d._buttonStrokeNormal);
                    f.skipsUndoManager = g
                }
            }
        };
        b.actionCancel = function(b, d) {
            if (d.qg() && d instanceof W && null !== d._buttonFillPressed) {
                var c = d.ab("ButtonBorder");
                if (c instanceof V) {
                    var f = b.diagram,
                        g = f.skipsUndoManager;
                    f.skipsUndoManager = !0;
                    a(b, d) ? (c.fill = d._buttonFillOver, c.stroke = d._buttonStrokeOver) : (c.fill = d._buttonFillNormal, c.stroke = d._buttonStrokeNormal);
                    f.skipsUndoManager = g
                }
            }
        };
        b.actionMove = function(b, d) {
            if (d.qg() && d instanceof W && null !== d._buttonFillPressed) {
                var c = b.diagram;
                if (0 === c.firstInput.button && (c.currentTool.standardMouseOver(), a(b, d) && (b = d.ab("ButtonBorder"), b instanceof V))) {
                    var f = c.skipsUndoManager;
                    c.skipsUndoManager = !0;
                    var g = d._buttonFillPressed;
                    b.fill !== g && (b.fill = g);
                    g = d._buttonStrokePressed;
                    b.stroke !== g && (b.stroke = g);
                    c.skipsUndoManager = f
                }
            }
        };
        return b
    });
    Al("TreeExpanderButton", function() {
        var a = vl("Button", {
            _treeExpandedFigure: "MinusLine",
            _treeCollapsedFigure: "PlusLine"
        }, vl(V, {
            name: "ButtonIcon",
            figure: "MinusLine",
            stroke: "#424242",
            strokeWidth: 2,
            desiredSize: ic
        }, (new Ai("figure", "isTreeExpanded", function(a, c) {
            c = c.panel;
            return a ? c._treeExpandedFigure : c._treeCollapsedFigure
        })).gq()), {
            visible: !1
        }, (new Ai("visible", "isTreeLeaf", function(a) {
            return !a
        })).gq());
        a.click = function(a, c) {
            c = c.part;
            c instanceof pf && (c = c.adornedPart);
            if (c instanceof U) {
                var b = c.diagram;
                if (null !== b) {
                    b = b.commandHandler;
                    if (c.isTreeExpanded) {
                        if (!b.canCollapseTree(c)) return
                    } else if (!b.canExpandTree(c)) return;
                    a.handled = !0;
                    c.isTreeExpanded ? b.collapseTree(c) : b.expandTree(c)
                }
            }
        };
        return a
    });
    Al("SubGraphExpanderButton", function() {
        var a = vl("Button", {
            _subGraphExpandedFigure: "MinusLine",
            _subGraphCollapsedFigure: "PlusLine"
        }, vl(V, {
            name: "ButtonIcon",
            figure: "MinusLine",
            stroke: "#424242",
            strokeWidth: 2,
            desiredSize: ic
        }, (new Ai("figure", "isSubGraphExpanded", function(a, c) {
            c = c.panel;
            return a ? c._subGraphExpandedFigure : c._subGraphCollapsedFigure
        })).gq()));
        a.click = function(a, c) {
            c = c.part;
            c instanceof pf && (c = c.adornedPart);
            if (c instanceof hg) {
                var b = c.diagram;
                if (null !== b) {
                    b = b.commandHandler;
                    if (c.isSubGraphExpanded) {
                        if (!b.canCollapseSubGraph(c)) return
                    } else if (!b.canExpandSubGraph(c)) return;
                    a.handled = !0;
                    c.isSubGraphExpanded ? b.collapseSubGraph(c) : b.expandSubGraph(c)
                }
            }
        };
        return a
    });
    Al("ToolTip", function() {
        return vl(pf, W.Auto, {
            isShadowed: !0,
            shadowColor: "rgba(0, 0, 0, .4)",
            shadowOffset: new G(0, 3),
            shadowBlur: 5
        }, vl(V, {
            name: "Border",
            figure: "RoundedRectangle",
            parameter1: 1,
            parameter2: 1,
            fill: "#F5F5F5",
            stroke: "#F0F0F0",
            spot1: new O(0, 0, 4, 6),
            spot2: new O(1, 1, -4, -4)
        }))
    });
    Al("ContextMenu", function() {
        return vl(pf, W.Vertical, {
            background: "#F5F5F5",
            isShadowed: !0,
            shadowColor: "rgba(0, 0, 0, .4)",
            shadowOffset: new G(0, 3),
            shadowBlur: 5
        }, new Ai("background", "", function(a) {
            return null !== a.adornedPart && null !== a.placeholder ? null : "#F5F5F5"
        }))
    });
    Al("ContextMenuButton", function() {
        var a = vl("Button");
        a.stretch = Ik;
        var b = a.ab("ButtonBorder");
        b instanceof V && (b.figure = "Rectangle", b.strokeWidth = 0, b.spot1 = new O(0, 0, 2, 3), b.spot2 = new O(1, 1, -2, -2));
        return a
    });
    Al("PanelExpanderButton", function(a) {
        var b = Bl(a, "COLLAPSIBLE"),
            c = vl("Button", {
                _buttonExpandedFigure: "M0 0 M0 6 L4 2 8 6 M8 8",
                _buttonCollapsedFigure: "M0 0 M0 2 L4 6 8 2 M8 8",
                _buttonFillNormal: "rgba(0, 0, 0, 0)",
                _buttonStrokeNormal: null,
                _buttonFillOver: "rgba(0, 0, 0, .2)",
                _buttonStrokeOver: null,
                _buttonFillPressed: "rgba(0, 0, 0, .4)",
                _buttonStrokePressed: null
            }, vl(V, {
                name: "ButtonIcon",
                strokeWidth: 2
            }, (new Ai("geometryString", "visible", function(a) {
                return a ? c._buttonExpandedFigure : c._buttonCollapsedFigure
            })).gq(b)));
        a = c.ab("ButtonBorder");
        a instanceof V && (a.stroke = null, a.fill = "rgba(0, 0, 0, 0)");
        c.click = function(a, c) {
            a = c.diagram;
            if (null !== a && !a.isReadOnly) {
                var d = c.sh();
                null === d && (d = c.part);
                null !== d && (c = d.ab(b), null !== c && (a.Aa("Collapse/Expand Panel"), c.visible = !c.visible, a.$a("Collapse/Expand Panel")))
            }
        };
        return c
    });
    Al("CheckBoxButton", function(a) {
        var b = Bl(a);
        a = vl("Button", {
            desiredSize: new L(14, 14)
        }, vl(V, {
            name: "ButtonIcon",
            geometryString: "M0 0 M0 8.85 L4.9 13.75 16.2 2.45 M16.2 16.2",
            strokeWidth: 2,
            stretch: be,
            geometryStretch: $g,
            visible: !1
        }, "" !== b ? (new Ai("visible", b)).ox() : []));
        a.click = function(a, d) {
            if (d instanceof W) {
                var c = a.diagram;
                if (!(null === c || c.isReadOnly || "" !== b && c.model.isReadOnly)) {
                    a.handled = !0;
                    var f = d.ab("ButtonIcon");
                    c.Aa("checkbox");
                    f.visible = !f.visible;
                    "function" === typeof d._doClick && d._doClick(a,
                        d);
                    c.$a("checkbox")
                }
            }
        };
        return a
    });
    Al("CheckBox", function(a) {
        a = Bl(a);
        a = vl("CheckBoxButton", a, {
            name: "Button",
            isActionable: !1,
            margin: new Ic(0, 1, 0, 0)
        });
        var b = vl(W, "Horizontal", a, {
            isActionable: !0,
            cursor: a.cursor,
            margin: 1,
            _buttonFillNormal: a._buttonFillNormal,
            _buttonStrokeNormal: a._buttonStrokeNormal,
            _buttonFillOver: a._buttonFillOver,
            _buttonStrokeOver: a._buttonStrokeOver,
            _buttonFillPressed: a._buttonFillPressed,
            _buttonStrokePressed: a._buttonStrokePressed,
            _buttonFillDisabled: a._buttonFillDisabled,
            mouseEnter: a.mouseEnter,
            mouseLeave: a.mouseLeave,
            actionDown: a.actionDown,
            actionUp: a.actionUp,
            actionCancel: a.actionCancel,
            actionMove: a.actionMove,
            click: a.click,
            _buttonClick: a.click
        });
        a.mouseEnter = null;
        a.mouseLeave = null;
        a.actionDown = null;
        a.actionUp = null;
        a.actionCancel = null;
        a.actionMove = null;
        a.click = null;
        return b
    });
    Y.None = Yg = new D(Y, "None", 0);
    Y.Default = Hk = new D(Y, "Default", 0);
    Y.Vertical = Jk = new D(Y, "Vertical", 4);
    Y.Horizontal = Ik = new D(Y, "Horizontal", 5);
    Y.Fill = be = new D(Y, "Fill", 3);
    Y.Uniform = $g = new D(Y, "Uniform", 1);
    Y.UniformToFill = Kk = new D(Y, "UniformToFill", 2);
    Y.FlipVertical = Lk = new D(Y, "FlipVertical", 1);
    Y.FlipHorizontal = Mk = new D(Y, "FlipHorizontal", 2);
    Y.FlipBoth = Nk = new D(Y, "FlipBoth", 3);
    Y.make = vl;
    Y.getBuilders = function() {
        var a = new Lb,
            b;
        for (b in wl)
            if (b !== b.toLowerCase()) {
                var c = wl.J(b);
                "function" === typeof c && a.add(b, c)
            } a.freeze();
        return a
    };
    Y.defineBuilder = Al;
    Y.takeBuilderArgument = Bl;

    function Pk() {
        this.zn = this.Bf = this.fg = this.Fm = this.Im = this.Hm = this.Gm = this.Pf = this.so = this.ro = this.Rf = this.Sf = this.Uf = this.Tf = this.Qf = this.Af = this.Ef = this.zf = null
    }
    Pk.prototype.copy = function() {
        var a = new Pk;
        a.zf = this.zf;
        a.Ef = this.Ef;
        a.Af = this.Af;
        a.Qf = this.Qf;
        a.Tf = this.Tf;
        a.Uf = this.Uf;
        a.Sf = this.Sf;
        a.Rf = this.Rf;
        a.ro = this.ro;
        a.so = this.so;
        a.Pf = this.Pf;
        a.Gm = this.Gm;
        a.Hm = this.Hm;
        a.Im = this.Im;
        a.Fm = this.Fm;
        a.fg = this.fg;
        a.Bf = this.Bf;
        a.zn = this.zn;
        return a
    };
    Pk.className = "GraphObjectEventHandlers";

    function El() {
        this.Na = [1, 0, 0, 1, 0, 0]
    }
    El.prototype.copy = function() {
        var a = new El;
        a.Na[0] = this.Na[0];
        a.Na[1] = this.Na[1];
        a.Na[2] = this.Na[2];
        a.Na[3] = this.Na[3];
        a.Na[4] = this.Na[4];
        a.Na[5] = this.Na[5];
        return a
    };
    El.prototype.translate = function(a, b) {
        this.Na[4] += this.Na[0] * a + this.Na[2] * b;
        this.Na[5] += this.Na[1] * a + this.Na[3] * b
    };
    El.prototype.scale = function(a, b) {
        this.Na[0] *= a;
        this.Na[1] *= a;
        this.Na[2] *= b;
        this.Na[3] *= b
    };
    El.className = "STransform";

    function Fl(a) {
        this.type = a;
        this.r2 = this.y2 = this.x2 = this.r1 = this.y1 = this.x1 = 0;
        this.Tw = [];
        this.pattern = null
    }
    Fl.prototype.addColorStop = function(a, b) {
        this.Tw.push({
            offset: a,
            color: b
        })
    };
    Fl.className = "SGradient";

    function uj(a, b) {
        this.ownerDocument = a = void 0 === b ? w.document : b;
        this.xz = "http://www.w3.org/2000/svg";
        void 0 !== a && (this.Ga = this.vb("svg", {
            width: "1px",
            height: "1px",
            viewBox: "0 0 1 1"
        }), this.Ga.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns", "http://www.w3.org/2000/svg"), this.Ga.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:xlink", "http://www.w3.org/1999/xlink"));
        this.Op = null;
        this.context = new Gl(this)
    }
    uj.prototype.resize = function(a, b, c, d) {
        return this.width !== a || this.height !== b ? (this.style.width = c + "px", this.style.height = d + "px", this.Ga.setAttributeNS(null, "width", c + "px"), this.Ga.setAttributeNS(null, "height", d + "px"), this.Ga.setAttributeNS(null, "viewBox", "0 0 " + c + " " + d), this.context.du.firstElementChild.setAttributeNS(null, "width", c + "px"), this.context.du.firstElementChild.setAttributeNS(null, "height", d + "px"), !0) : !1
    };
    uj.prototype.vb = function(a, b, c) {
        a = this.ownerDocument.createElementNS(this.xz, a);
        if (Ca(b))
            for (var d in b) a.setAttributeNS("href" === d ? "http://www.w3.org/1999/xlink" : "", d, b[d]);
        void 0 !== c && (a.textContent = c);
        return a
    };
    uj.prototype.getBoundingClientRect = function() {
        return this.Ga.getBoundingClientRect()
    };
    uj.prototype.focus = function() {
        this.Ga.focus()
    };
    uj.prototype.Zw = function() {
        this.ownerDocument = null
    };
    pa.Object.defineProperties(uj.prototype, {
        width: {
            get: function() {
                return this.Ga.width.baseVal.value
            },
            set: function(a) {
                this.Ga.width = a
            }
        },
        height: {
            get: function() {
                return this.Ga.height.baseVal.value
            },
            set: function(a) {
                this.Ga.height = a
            }
        },
        style: {
            get: function() {
                return this.Ga.style
            }
        }
    });
    uj.className = "SVGSurface";

    function Gl(a) {
        this.lk = a;
        this.svg = a.Ga;
        this.stack = [];
        this.yc = [];
        this.fillStyle = "#000000";
        this.font = "10px sans-serif";
        this.globalAlpha = 1;
        this.lineCap = "butt";
        this.lineDashOffset = 0;
        this.lineJoin = "miter";
        this.lineWidth = 1;
        this.miterLimit = 10;
        this.shadowBlur = 0;
        this.shadowColor = "rgba(0, 0, 0, 0)";
        this.shadowOffsetY = this.shadowOffsetX = 0;
        this.strokeStyle = "#000000";
        this.textAlign = "start";
        this.clipInsteadOfFill = !1;
        this.Pd = this.lp = this.kp = 0;
        this.$p = null;
        this.path = [];
        this.Td = new El;
        Hl(this, 1, 0, 0, 1, 0, 0);
        var b = Gb++,
            c = this.vb("clipPath", {
                id: "mainClip" + b
            });
        c.appendChild(this.vb("rect", {
            x: 0,
            y: 0,
            width: a.width,
            height: a.height
        }));
        this.du = c;
        this.lk.Ga.appendChild(c);
        this.yc[0].setAttributeNS(null, "clip-path", "url(#mainClip" + b + ")");
        this.zz = {}
    }
    t = Gl.prototype;
    t.reset = function() {
        this.stack = [];
        this.yc = [];
        this.fillStyle = "#000000";
        this.font = "10px sans-serif";
        this.globalAlpha = 1;
        this.lineCap = "butt";
        this.lineDashOffset = 0;
        this.lineJoin = "miter";
        this.lineWidth = 1;
        this.miterLimit = 10;
        this.shadowBlur = 0;
        this.shadowColor = "rgba(0, 0, 0, 0)";
        this.shadowOffsetY = this.shadowOffsetX = 0;
        this.strokeStyle = "#000000";
        this.textAlign = "start";
        this.clipInsteadOfFill = !1;
        this.Pd = this.lp = this.kp = 0;
        this.$p = null;
        this.path = [];
        this.Td = new El;
        Hl(this, 1, 0, 0, 1, 0, 0);
        var a = Gb++,
            b = this.vb("clipPath", {
                id: "mainClip" + a
            });
        b.appendChild(this.vb("rect", {
            x: 0,
            y: 0,
            width: this.lk.width,
            height: this.lk.height
        }));
        this.du = b;
        this.lk.Ga.appendChild(b);
        this.yc[0].setAttributeNS(null, "clip-path", "url(#mainClip" + a + ")")
    };
    t.arc = function(a, b, c, d, e, f, g, h) {
        var k = 2 * Math.PI,
            l = k - 1E-6,
            m = c * Math.cos(d),
            n = c * Math.sin(d),
            p = a + m,
            q = b + n,
            r = f ? 0 : 1;
        d = f ? d - e : e - d;
        (1E-6 < Math.abs(g - p) || 1E-6 < Math.abs(h - q)) && this.path.push(["L", p, +q]);
        0 > d && (d = d % k + k);
        d > l ? (this.path.push(["A", c, c, 0, 1, r, a - m, b - n]), this.path.push(["A", c, c, 0, 1, r, p, q])) : 1E-6 < d && this.path.push(["A", c, c, 0, +(d >= Math.PI), r, a + c * Math.cos(e), b + c * Math.sin(e)])
    };
    t.beginPath = function() {
        this.path = []
    };
    t.bezierCurveTo = function(a, b, c, d, e, f) {
        this.path.push(["C", a, b, c, d, e, f])
    };
    t.clearRect = function() {};
    t.clip = function() {
        this.addPath("clipPath", this.path, this.Td);
        this.addPath("clipPath", this.path, new El)
    };
    t.closePath = function() {
        this.path.push(["z"])
    };
    t.createLinearGradient = function(a, b, c, d) {
        var e = new Fl("linear");
        e.x1 = a;
        e.y1 = b;
        e.x2 = c;
        e.y2 = d;
        return e
    };
    t.createPattern = function(a) {
        var b = "";
        a instanceof HTMLCanvasElement && (b = a.toDataURL());
        a instanceof HTMLImageElement && (b = a.src);
        var c = this.zz;
        if (c[b]) return "url(#" + c[b] + ")";
        var d = "PATTERN" + Gb++,
            e = {
                x: 0,
                y: 0,
                width: a.width,
                height: a.height,
                href: b
            };
        a = this.vb("pattern", {
            width: a.width,
            height: a.height,
            id: d,
            patternUnits: "userSpaceOnUse"
        });
        a.appendChild(this.vb("image", e));
        this.svg.appendChild(a);
        c[b] = d;
        return "url(#" + d + ")"
    };
    t.createRadialGradient = function(a, b, c, d, e, f) {
        var g = new Fl("radial");
        g.x1 = a;
        g.y1 = b;
        g.r1 = c;
        g.x2 = d;
        g.y2 = e;
        g.r2 = f;
        return g
    };
    t.drawImage = function(a, b, c, d, e, f, g, h, k) {
        var l = "";
        a instanceof HTMLCanvasElement && (l = a.toDataURL());
        a instanceof HTMLImageElement && (l = a.src);
        var m = a instanceof HTMLImageElement ? a.naturalWidth : a.width,
            n = a instanceof HTMLImageElement ? a.naturalHeight : a.height;
        void 0 === d && (f = b, g = c, h = d = m, k = e = n);
        d = d || 0;
        e = e || 0;
        f = f || 0;
        g = g || 0;
        h = h || 0;
        k = k || 0;
        l = {
            x: 0,
            y: 0,
            width: m,
            height: n,
            href: l,
            preserveAspectRatio: "xMidYMid slice"
        };
        H.ba(d, h) && H.ba(e, k) || (l.preserveAspectRatio = "none");
        a = "";
        h /= d;
        k /= e;
        if (0 !== f || 0 !== g) a += " translate(" +
            f + ", " + g + ")";
        if (1 !== h || 1 !== k) a += " scale(" + h + ", " + k + ")";
        if (0 !== b || 0 !== c) a += " translate(" + -b + ", " + -c + ")";
        if (0 !== b || 0 !== c || d !== m || e !== n) f = "CLIP" + Gb++, g = this.vb("clipPath", {
            id: f
        }), g.appendChild(this.vb("rect", {
            x: b,
            y: c,
            width: d,
            height: e
        })), this.svg.appendChild(g), l["clip-path"] = "url(#" + f + ")";
        Il(this, "image", l, this.Td, a);
        this.addElement("image", l)
    };
    t.fill = function() {
        this.addPath("fill", this.path, this.Td)
    };
    t.Ud = function() {
        this.clipInsteadOfFill ? this.clip() : this.fill()
    };
    t.fillRect = function(a, b, c, d) {
        a = [a, b, c, d];
        a = {
            x: a[0],
            y: a[1],
            width: a[2],
            height: a[3]
        };
        Il(this, "fill", a, this.Td);
        this.addElement("rect", a)
    };
    t.fillText = function(a, b, c) {
        a = [a, b, c];
        b = this.textAlign;
        "left" === b ? b = "start" : "right" === b ? b = "end" : "center" === b && (b = "middle");
        b = {
            x: a[1],
            y: a[2],
            style: "font: " + this.font,
            "text-anchor": b
        };
        Il(this, "fill", b, this.Td);
        this.addElement("text", b, a[0])
    };
    t.lineTo = function(a, b) {
        this.path.push(["L", a, b])
    };
    t.moveTo = function(a, b) {
        this.path.push(["M", a, b])
    };
    t.quadraticCurveTo = function(a, b, c, d) {
        this.path.push(["Q", a, b, c, d])
    };
    t.rect = function(a, b, c, d) {
        this.path.push(["M", a, b], ["L", a + c, b], ["L", a + c, b + d], ["L", a, b + d], ["z"])
    };
    t.restore = function() {
        this.Td = this.stack.pop();
        this.path = this.stack.pop();
        var a = this.stack.pop();
        this.fillStyle = a.fillStyle;
        this.font = a.font;
        this.globalAlpha = a.globalAlpha;
        this.lineCap = a.lineCap;
        this.lineDashOffset = a.lineDashOffset;
        this.lineJoin = a.lineJoin;
        this.lineWidth = a.lineWidth;
        this.miterLimit = a.miterLimit;
        this.shadowBlur = a.shadowBlur;
        this.shadowColor = a.shadowColor;
        this.shadowOffsetX = a.shadowOffsetX;
        this.shadowOffsetY = a.shadowOffsetY;
        this.strokeStyle = a.strokeStyle;
        this.textAlign = a.textAlign
    };
    t.save = function() {
        this.stack.push({
            fillStyle: this.fillStyle,
            font: this.font,
            globalAlpha: this.globalAlpha,
            lineCap: this.lineCap,
            lineDashOffset: this.lineDashOffset,
            lineJoin: this.lineJoin,
            lineWidth: this.lineWidth,
            miterLimit: this.miterLimit,
            shadowBlur: this.shadowBlur,
            shadowColor: this.shadowColor,
            shadowOffsetX: this.shadowOffsetX,
            shadowOffsetY: this.shadowOffsetY,
            strokeStyle: this.strokeStyle,
            textAlign: this.textAlign
        });
        for (var a = [], b = 0; b < this.path.length; b++) a.push(this.path[b]);
        this.stack.push(a);
        this.stack.push(this.Td.copy())
    };
    t.setTransform = function(a, b, c, d, e, f) {
        1 === a && 0 === b && 0 === c && 1 === d && 0 === e && 0 === f || Hl(this, a, b, c, d, e, f)
    };
    t.scale = function(a, b) {
        this.Td.scale(a, b)
    };
    t.translate = function(a, b) {
        this.Td.translate(a, b)
    };
    t.transform = function() {};
    t.stroke = function() {
        this.addPath("stroke", this.path, this.Td)
    };
    t.Si = function() {
        this.clipInsteadOfFill || this.stroke()
    };
    t.vb = function(a, b, c) {
        return this.lk.vb(a, b, c)
    };
    t.addElement = function(a, b, c) {
        a = this.vb(a, b, c);
        0 < this.yc.length ? this.yc[this.yc.length - 1].appendChild(a) : this.svg.appendChild(a);
        return this.$p = a
    };

    function Il(a, b, c, d, e) {
        1 !== a.globalAlpha && (c.opacity = a.globalAlpha);
        "fill" === b ? (a.fillStyle instanceof Fl ? c.fill = Jl(a, a.fillStyle) : (/^rgba\(/.test(a.fillStyle) && (b = /^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(a.fillStyle), c.fill = "rgb(" + b[1] + "," + b[2] + "," + b[3] + ")", c["fill-opacity"] = b[4]), c.fill = a.fillStyle), c.stroke = "none") : "stroke" === b && (c.fill = "none", a.strokeStyle instanceof Fl ? c.stroke = Jl(a, a.strokeStyle) : (/^rgba\(/.test(a.strokeStyle) && (b = /^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(a.strokeStyle),
            c.stroke = "rgb(" + b[1] + "," + b[2] + "," + b[3] + ")", c["stroke-opacity"] = b[4]), c.stroke = a.strokeStyle), c["stroke-width"] = a.lineWidth, c["stroke-linecap"] = a.lineCap, c["stroke-linejoin"] = a.lineJoin, c["stroke-miterlimit"] = a.miterLimit);
        a = d.Na;
        a = "matrix(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ")";
        void 0 !== e && (a += e);
        c.transform = a
    }

    function Jl(a, b) {
        var c = "GRAD" + Gb++;
        if ("linear" === b.type) var d = a.vb("linearGradient", {
            x1: b.x1,
            x2: b.x2,
            y1: b.y1,
            y2: b.y2,
            id: c,
            gradientUnits: "userSpaceOnUse"
        });
        else if ("radial" === b.type) d = a.vb("radialGradient", {
            x1: b.x1,
            x2: b.x2,
            y1: b.y1,
            y2: b.y2,
            r1: b.r1,
            r2: b.r2,
            id: c
        });
        else throw Error("invalid gradient");
        var e = b.Tw;
        b = e.length;
        for (var f = [], g = 0; g < b; g++) {
            var h = e[g],
                k = h.color;
            h = {
                offset: h.offset,
                "stop-color": k
            };
            /^rgba\(/.test(k) && (k = /^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(k),
                h["stop-color"] = "rgb(" + k[1] + "," + k[2] + "," + k[3] + ")", h["stop-opacity"] = k[4]);
            f.push(h)
        }
        f.sort(function(a, b) {
            return a.offset > b.offset ? 1 : -1
        });
        for (e = 0; e < b; e++) d.appendChild(a.vb("stop", f[e]));
        a.svg.appendChild(d);
        return "url(#" + c + ")"
    }
    t.addPath = function(a, b, c) {
        for (var d = [], e = 0; e < b.length; e++) {
            var f = Ga(b[e]),
                g = [f.shift()];
            if ("A" === g[0]) g.push(f.shift() + "," + f.shift(), f.shift(), f.shift() + "," + f.shift(), f.shift() + "," + f.shift());
            else
                for (; f.length;) g.push(f.shift() + "," + f.shift());
            d.push(g.join(" "))
        }
        b = {
            d: d.join(" ")
        };
        Il(this, a, b, c);
        "clipPath" === a ? (a = "CLIP" + Gb++, c = this.vb("clipPath", {
                id: a
            }), c.appendChild(this.vb("path", b)), this.svg.appendChild(c), 0 < this.yc.length && this.yc[this.yc.length - 1].setAttributeNS(null, "clip-path", "url(#" + a + ")")) :
            this.addElement("path", b)
    };

    function Hl(a, b, c, d, e, f, g) {
        var h = new El;
        h.Na = [b, c, d, e, f, g];
        b = {};
        Il(a, "g", b, h);
        h = a.addElement("g", b);
        a.yc.push(h)
    }
    t.pq = function() {
        if (0 !== this.shadowOffsetX || 0 !== this.shadowOffsetY || 0 !== this.shadowBlur) {
            var a = "SHADOW" + Gb++,
                b = this.addElement("filter", {
                    id: a,
                    x: "-100%",
                    y: "-100%",
                    width: "300%",
                    height: "300%"
                }, null);
            var c = this.vb("feGaussianBlur", {
                "in": "SourceAlpha",
                result: "blur",
                cA: this.shadowBlur / 2
            });
            var d = this.vb("feFlood", {
                "in": "blur",
                result: "flood",
                "flood-color": this.shadowColor
            });
            var e = this.vb("feComposite", {
                "in": "flood",
                in2: "blur",
                operator: "in",
                result: "comp"
            });
            var f = this.vb("feOffset", {
                "in": "comp",
                result: "offsetBlur",
                dx: this.shadowOffsetX,
                dy: this.shadowOffsetY
            });
            var g = this.vb("feMerge", {});
            g.appendChild(this.vb("feMergeNode", {
                "in": "offsetBlur"
            }));
            g.appendChild(this.vb("feMergeNode", {
                "in": "SourceGraphic"
            }));
            b.appendChild(c);
            b.appendChild(d);
            b.appendChild(e);
            b.appendChild(f);
            b.appendChild(g);
            0 < this.yc.length && this.yc[this.yc.length - 1].setAttributeNS(null, "filter", "url(#" + a + ")")
        }
    };
    t.Hv = function(a, b, c) {
        this.kp = a;
        this.lp = b;
        this.Pd = c
    };

    function el(a) {
        a.shadowOffsetX = 0;
        a.shadowOffsetY = 0;
        a.shadowBlur = 0
    }

    function dl(a) {
        a.shadowOffsetX = a.kp;
        a.shadowOffsetY = a.lp;
        a.shadowBlur = a.Pd
    }
    t.Ms = function() {};
    t.Ks = function() {};
    t.Sc = function() {};
    t.st = function() {};
    Gl.prototype.rotate = function() {};
    Gl.prototype.getImageData = function() {
        return null
    };
    Gl.prototype.measureText = function() {
        return null
    };
    Gl.className = "SVGContext";
    P.prototype.ft = function(a) {
        this.ql.contains("SVG") || this.Pw("SVG", new uj(this, w.document));
        void 0 === a && (a = new tb);
        a = pk(this, a, "SVG");
        return null !== a ? a.svg : null
    };
    P.prototype.makeSvg = P.prototype.ft;
    P.prototype.gv = function(a) {
        return this.ft(a)
    };
    P.prototype.makeSVG = P.prototype.gv;
    Y.prototype.$w = function(a, b) {
        if (!(a instanceof Gl)) return !1;
        if (!this.visible) return !0;
        var c = null,
            d = a.$p;
        if (this instanceof W && (this.type === W.TableRow || this.type === W.TableColumn)) return bl(this, a, b), !0;
        var e = this.wb;
        if (0 === e.width || 0 === e.height || isNaN(e.x) || isNaN(e.y)) return !0;
        var f = this.transform,
            g = this.panel;
        0 !== (this.G & 4096) === !0 && cl(this);
        var h = 0 !== (this.G & 256),
            k = !1;
        this instanceof uh && (a.font = this.font);
        if (h) {
            k = g.$d() ? g.naturalBounds : g.actualBounds;
            if (null !== this.md) {
                var l = this.md;
                var m = l.x;
                var n =
                    l.y;
                var p = l.width;
                l = l.height
            } else m = Math.max(e.x, k.x), n = Math.max(e.y, k.y), p = Math.min(e.right, k.right) - m, l = Math.min(e.bottom, k.bottom) - n;
            if (m > e.width + e.x || e.x > k.width + k.x || n > e.height + e.y || e.y > k.height + k.y) return !0;
            k = !0;
            Hl(a, 1, 0, 0, 1, 0, 0);
            a.save();
            a.beginPath();
            a.rect(m, n, p, l);
            a.clip()
        }
        if (this.rg() && !this.isVisible()) return !0;
        a.Td.Na = [1, 0, 0, 1, 0, 0];
        this instanceof uh && 1 < this.lineCount && Hl(a, 1, 0, 0, 1, 0, 0);
        m = !1;
        this.rg() && this.isShadowed && b.De("drawShadows") && (n = this.pi, a.Hv(n.x * b.scale * b.ac, n.y * b.scale *
            b.ac, this.Pd), dl(a), a.shadowColor = this.Dj);
        n = !1;
        this.part && b.De("drawShadows") && (n = this.part.isShadowed);
        !0 === this.shadowVisible ? (dl(a), !1 === m && n && (Hl(a, 1, 0, 0, 1, 0, 0), a.pq(), m = !0)) : !1 === this.shadowVisible && el(a);
        p = this.naturalBounds;
        null !== this.areaBackground && (fi(this, a, this.areaBackground, !0, !0, p, e), !1 === m && n && (Hl(a, 1, 0, 0, 1, 0, 0), a.pq(), m = !0), this.areaBackground instanceof fl && this.areaBackground.type === gl ? (a.beginPath(), a.rect(e.x, e.y, e.width, e.height), a.Ud(this.areaBackground)) : a.fillRect(e.x, e.y,
            e.width, e.height));
        this instanceof W ? Hl(a, f.m11, f.m12, f.m21, f.m22, f.dx, f.dy) : a.Td.Na = [f.m11, f.m12, f.m21, f.m22, f.dx, f.dy];
        if (null !== this.background) {
            !1 === m && n && (Hl(a, 1, 0, 0, 1, 0, 0), a.pq(), m = !0);
            var q = this.naturalBounds;
            l = f = 0;
            var r = q.width;
            q = q.height;
            var u = 0;
            this instanceof V && (q = this.geometry.bounds, f = q.x, l = q.y, r = q.width, q = q.height, u = this.strokeWidth);
            fi(this, a, this.background, !0, !1, p, e);
            this.background instanceof fl && this.background.type === gl ? (a.beginPath(), a.rect(f - u / 2, l - u / 2, r + u, q + u), a.Ud(this.background)) :
                a.fillRect(f - u / 2, l - u / 2, r + u, q + u)
        }
        n && (null !== this.background || null !== this.areaBackground || null !== g && 0 !== (g.G & 512) || null !== g && (g.type === W.Auto || g.type === W.Spot) && g.Ab() !== this) ? (hl(this, !0), null === this.shadowVisible && el(a)) : hl(this, !1);
        this.zi(a, b);
        n && 0 !== (this.G & 512) === !0 && dl(a);
        this.rg() && n && el(a);
        h && (a.restore(), k && a.yc.pop());
        this instanceof W && (c = a.yc.pop());
        !0 === m && a.yc.pop();
        this instanceof uh && 1 < this.lineCount && (c = a.yc.pop());
        null !== a.lk.Op && (null === c && (d === a.$p ? (Hl(a, 1, 0, 0, 1, 0, 0), c = a.yc.pop()) :
            c = a.$p), a.lk.Op(this, c));
        this.svg = c;
        return !0
    };

    function qk(a, b) {
        this.ownerDocument = b = void 0 === b ? w.document : b;
        this.Op = null;
        b = b.createElement("canvas");
        b.tabIndex = 0;
        this.Ga = b;
        this.Ga.innerHTML = "This text is displayed if your browser does not support the Canvas HTML element.";
        this.context = new jl(b);
        b.F = a
    }
    qk.prototype.resize = function(a, b, c, d) {
        return this.width !== a || this.height !== b ? (this.width = a, this.height = b, this.style.width = c + "px", this.style.height = d + "px", !0) : !1
    };
    qk.prototype.toDataURL = function(a, b) {
        return this.Ga.toDataURL(a, b)
    };
    qk.prototype.getBoundingClientRect = function() {
        return this.Ga.getBoundingClientRect()
    };
    qk.prototype.focus = function() {
        this.Ga.focus()
    };
    qk.prototype.Zw = function() {
        this.ownerDocument = this.Ga.F = null
    };
    pa.Object.defineProperties(qk.prototype, {
        width: {
            get: function() {
                return this.Ga.width
            },
            set: function(a) {
                this.Ga.width = a
            }
        },
        height: {
            get: function() {
                return this.Ga.height
            },
            set: function(a) {
                this.Ga.height = a
            }
        },
        style: {
            get: function() {
                return this.Ga.style
            }
        }
    });
    qk.className = "CanvasSurface";

    function jl(a) {
        a.getContext && a.getContext("2d") || A("Browser does not support HTML Canvas Element");
        this.V = a.getContext("2d");
        this.Ft = this.Ht = this.Gt = "";
        this.Wm = !1;
        this.Pd = this.lp = this.kp = 0
    }
    t = jl.prototype;
    t.st = function(a) {
        this.V.imageSmoothingEnabled = a
    };
    t.arc = function(a, b, c, d, e, f) {
        this.V.arc(a, b, c, d, e, f)
    };
    t.beginPath = function() {
        this.V.beginPath()
    };
    t.bezierCurveTo = function(a, b, c, d, e, f) {
        this.V.bezierCurveTo(a, b, c, d, e, f)
    };
    t.clearRect = function(a, b, c, d) {
        this.V.clearRect(a, b, c, d)
    };
    t.clip = function() {
        this.V.clip()
    };
    t.closePath = function() {
        this.V.closePath()
    };
    t.createLinearGradient = function(a, b, c, d) {
        return this.V.createLinearGradient(a, b, c, d)
    };
    t.createPattern = function(a, b) {
        return this.V.createPattern(a, b)
    };
    t.createRadialGradient = function(a, b, c, d, e, f) {
        return this.V.createRadialGradient(a, b, c, d, e, f)
    };
    t.drawImage = function(a, b, c, d, e, f, g, h, k) {
        void 0 === d ? this.V.drawImage(a, b, c) : this.V.drawImage(a, b, c, d, e, f, g, h, k)
    };
    t.fill = function() {
        this.V.fill()
    };
    t.fillRect = function(a, b, c, d) {
        this.V.fillRect(a, b, c, d)
    };
    t.fillText = function(a, b, c) {
        this.V.fillText(a, b, c)
    };
    t.getImageData = function(a, b, c, d) {
        return this.V.getImageData(a, b, c, d)
    };
    t.lineTo = function(a, b) {
        this.V.lineTo(a, b)
    };
    t.measureText = function(a) {
        return this.V.measureText(a)
    };
    t.moveTo = function(a, b) {
        this.V.moveTo(a, b)
    };
    t.quadraticCurveTo = function(a, b, c, d) {
        this.V.quadraticCurveTo(a, b, c, d)
    };
    t.rect = function(a, b, c, d) {
        this.V.rect(a, b, c, d)
    };
    t.restore = function() {
        this.V.restore()
    };
    jl.prototype.rotate = function(a) {
        this.V.rotate(a)
    };
    t = jl.prototype;
    t.save = function() {
        this.V.save()
    };
    t.setTransform = function(a, b, c, d, e, f) {
        this.V.setTransform(a, b, c, d, e, f)
    };
    t.scale = function(a, b) {
        this.V.scale(a, b)
    };
    t.stroke = function() {
        this.V.stroke()
    };
    t.transform = function(a, b, c, d, e, f) {
        1 === a && 0 === b && 0 === c && 1 === d && 0 === e && 0 === f || this.V.transform(a, b, c, d, e, f)
    };
    t.translate = function(a, b) {
        this.V.translate(a, b)
    };
    t.Ud = function(a) {
        if (a instanceof fl && a.type === gl) {
            var b = a.zk;
            a = a.It;
            a > b ? (this.scale(b / a, 1), this.translate((a - b) / 2, 0)) : b > a && (this.scale(1, a / b), this.translate(0, (b - a) / 2));
            this.Wm ? this.clip() : this.fill();
            a > b ? (this.translate(-(a - b) / 2, 0), this.scale(1 / (b / a), 1)) : b > a && (this.translate(0, -(b - a) / 2), this.scale(1, 1 / (a / b)))
        } else this.Wm ? this.clip() : this.fill()
    };
    t.Si = function() {
        this.Wm || this.stroke()
    };
    t.Hv = function(a, b, c) {
        this.kp = a;
        this.lp = b;
        this.Pd = c
    };
    t.Ms = function(a, b) {
        var c = this.V;
        void 0 !== c.setLineDash && (c.setLineDash(a), c.lineDashOffset = b)
    };
    t.Ks = function() {
        var a = this.V;
        void 0 !== a.setLineDash && (a.setLineDash(Kl), a.lineDashOffset = 0)
    };
    t.Sc = function(a) {
        a && (this.Gt = "");
        this.Ft = this.Ht = ""
    };
    pa.Object.defineProperties(jl.prototype, {
        fillStyle: {
            get: function() {
                return this.V.fillStyle
            },
            set: function(a) {
                this.Ft !== a && (this.Ft = this.V.fillStyle = a)
            }
        },
        font: {
            get: function() {
                return this.V.font
            },
            set: function(a) {
                this.Gt !== a && (this.Gt = this.V.font = a)
            }
        },
        globalAlpha: {
            get: function() {
                return this.V.globalAlpha
            },
            set: function(a) {
                this.V.globalAlpha = a
            }
        },
        lineCap: {
            get: function() {
                return this.V.lineCap
            },
            set: function(a) {
                this.V.lineCap = a
            }
        },
        lineDashOffset: {
            get: function() {
                return this.V.lineDashOffset
            },
            set: function(a) {
                this.V.lineDashOffset = a
            }
        },
        lineJoin: {
            get: function() {
                return this.V.lineJoin
            },
            set: function(a) {
                this.V.lineJoin = a
            }
        },
        lineWidth: {
            get: function() {
                return this.V.lineWidth
            },
            set: function(a) {
                this.V.lineWidth = a
            }
        },
        miterLimit: {
            get: function() {
                return this.V.miterLimit
            },
            set: function(a) {
                this.V.miterLimit =
                    a
            }
        },
        shadowBlur: {
            get: function() {
                return this.V.shadowBlur
            },
            set: function(a) {
                this.V.shadowBlur = a
            }
        },
        shadowColor: {
            get: function() {
                return this.V.shadowColor
            },
            set: function(a) {
                this.V.shadowColor = a
            }
        },
        shadowOffsetX: {
            get: function() {
                return this.V.shadowOffsetX
            },
            set: function(a) {
                this.V.shadowOffsetX = a
            }
        },
        shadowOffsetY: {
            get: function() {
                return this.V.shadowOffsetY
            },
            set: function(a) {
                this.V.shadowOffsetY =
                    a
            }
        },
        strokeStyle: {
            get: function() {
                return this.V.strokeStyle
            },
            set: function(a) {
                this.Ht !== a && (this.Ht = this.V.strokeStyle = a)
            }
        },
        textAlign: {
            get: function() {
                return this.V.textAlign
            },
            set: function(a) {
                this.V.textAlign = a
            }
        },
        imageSmoothingEnabled: {
            get: function() {
                return this.V.imageSmoothingEnabled
            },
            set: function(a) {
                this.V.imageSmoothingEnabled = a
            }
        },
        clipInsteadOfFill: {
            get: function() {
                return this.Wm
            },
            set: function(a) {
                this.Wm = a
            }
        }
    });
    var Kl = Object.freeze([]);
    jl.className = "CanvasSurfaceContext";

    function Ll() {
        this.da = this.u = this.K = this.l = 0
    }
    Ll.className = "ColorNumbers";

    function fl(a) {
        Ml || (Nl(), Ml = !0);
        mb(this);
        this.v = !1;
        void 0 === a ? (this.va = il, this.yk = "black") : "string" === typeof a ? (this.va = il, this.yk = a) : (this.va = a, this.yk = "black");
        a = this.va;
        a === ll ? (this.Al = Uc, this.Mk = gd) : this.Mk = a === gl ? this.Al = dd : this.Al = Sc;
        this.us = 0;
        this.er = NaN;
        this.ce = this.$r = this.be = null;
        this.It = this.zk = 0
    }
    fl.prototype.copy = function() {
        var a = new fl;
        a.va = this.va;
        a.yk = this.yk;
        a.Al = this.Al.I();
        a.Mk = this.Mk.I();
        a.us = this.us;
        a.er = this.er;
        null !== this.be && (a.be = this.be.copy());
        a.$r = this.$r;
        return a
    };
    t = fl.prototype;
    t.freeze = function() {
        this.v = !0;
        null !== this.be && this.be.freeze();
        return this
    };
    t.ha = function() {
        Object.isFrozen(this) && A("cannot thaw constant: " + this);
        this.v = !1;
        null !== this.be && this.be.ha();
        return this
    };
    t.gb = function(a) {
        a.classType === fl && (this.type = a)
    };
    t.toString = function() {
        var a = "Brush(";
        if (this.type === il) a += this.color;
        else if (a = this.type === ll ? a + "Linear " : this.type === gl ? a + "Radial " : this.type === kl ? a + "Pattern " : a + "(unknown) ", a += this.start + " " + this.end, null !== this.colorStops)
            for (var b = this.colorStops.iterator; b.next();) a += " " + b.key + ":" + b.value;
        return a + ")"
    };
    t.addColorStop = function(a, b) {
        this.v && wa(this);
        ("number" !== typeof a || !isFinite(a) || 1 < a || 0 > a) && xa(a, "0 <= loc <= 1", fl, "addColorStop:loc");
        null === this.be && (this.be = new Lb);
        this.be.add(a, b);
        this.va === il && (this.type = ll);
        this.ce = null;
        return this
    };
    t.rz = function(a, b) {
        this.v && wa(this);
        a = void 0 === a || "number" !== typeof a ? .2 : a;
        b = void 0 === b ? Ol : b;
        if (this.type === il) Pl(this.color), this.color = Ql(a, b);
        else if ((this.type === ll || this.type === gl) && null !== this.colorStops)
            for (var c = this.colorStops.iterator; c.next();) Pl(c.value), this.addColorStop(c.key, Ql(a, b));
        return this
    };

    function Rl(a, b, c) {
        b = void 0 === b || "number" !== typeof b ? .2 : b;
        c = void 0 === c ? Ol : c;
        Pl(a);
        return Ql(b, c)
    }
    t.sy = function(a, b) {
        this.v && wa(this);
        a = void 0 === a || "number" !== typeof a ? .2 : a;
        b = void 0 === b ? Ol : b;
        if (this.type === il) Pl(this.color), this.color = Ql(-a, b);
        else if ((this.type === ll || this.type === gl) && null !== this.colorStops)
            for (var c = this.colorStops.iterator; c.next();) Pl(c.value), this.addColorStop(c.key, Ql(-a, b));
        return this
    };

    function Sl(a, b, c) {
        b = void 0 === b || "number" !== typeof b ? .2 : b;
        c = void 0 === c ? Ol : c;
        Pl(a);
        return Ql(-b, c)
    }

    function Tl(a, b, c) {
        Pl(a);
        a = Ul.l;
        var d = Ul.K,
            e = Ul.u,
            f = Ul.da;
        Pl(b);
        void 0 === c && (c = .5);
        return "rgba(" + Math.round((Ul.l - a) * c + a) + ", " + Math.round((Ul.K - d) * c + d) + ", " + Math.round((Ul.u - e) * c + e) + ", " + Math.round((Ul.da - f) * c + f) + ")"
    }
    t.lx = function() {
        if (this.type === il) return Vl(this.color);
        if ((this.type === ll || this.type === gl) && null !== this.colorStops) {
            var a = this.colorStops;
            if (this.type === gl) return Vl(a.first().value);
            if (null !== a.get(.5)) return Vl(a.get(.5));
            if (2 === a.count) return a = a.Ma(), Vl(Tl(a[0].value, a[1].value));
            for (var b = a.iterator, c = -1, d = -1, e = 1, f = 1; b.next();) {
                var g = b.key,
                    h = Math.abs(.5 - b.key);
                e > f && h < e ? (c = g, e = h) : f >= e && h < f && (d = g, f = h)
            }
            c > d && (c = [d, d = c][0]);
            b = d - c;
            return Vl(Tl(a.get(c), a.get(d), 1 - e / b))
        }
        return !1
    };

    function Vl(a) {
        if (null === a) return null;
        if (a instanceof fl) return a.lx();
        Pl(a);
        return 128 > (299 * Ul.l + 587 * Ul.K + 114 * Ul.u) / 1E3
    }

    function Ql(a, b) {
        switch (b) {
            case Ol:
                var c = 100 * Wl(Ul.l);
                b = 100 * Wl(Ul.K);
                var d = 100 * Wl(Ul.u);
                Xl.l = .4124564 * c + .3575761 * b + .1804375 * d;
                Xl.K = .2126729 * c + .7151522 * b + .072175 * d;
                Xl.u = .0193339 * c + .119192 * b + .9503041 * d;
                Xl.da = Ul.da;
                c = Yl(Xl.l / Zl[0]);
                b = Yl(Xl.K / Zl[1]);
                d = Yl(Xl.u / Zl[2]);
                $l.l = 116 * b - 16;
                $l.K = 500 * (c - b);
                $l.u = 200 * (b - d);
                $l.da = Xl.da;
                $l.l = Math.min(100, Math.max(0, $l.l + 100 * a));
                a = ($l.l + 16) / 116;
                c = a - $l.u / 200;
                Xl.l = Zl[0] * am($l.K / 500 + a);
                Xl.K = Zl[1] * ($l.l > bm * cm ? Math.pow(a, 3) : $l.l / bm);
                Xl.u = Zl[2] * am(c);
                Xl.da = $l.da;
                a = -.969266 *
                    Xl.l + 1.8760108 * Xl.K + .041556 * Xl.u;
                c = .0556434 * Xl.l + -.2040259 * Xl.K + 1.0572252 * Xl.u;
                Ul.l = 255 * dm((3.2404542 * Xl.l + -1.5371385 * Xl.K + -.4985314 * Xl.u) / 100);
                Ul.K = 255 * dm(a / 100);
                Ul.u = 255 * dm(c / 100);
                Ul.da = Xl.da;
                Ul.l = Math.round(Ul.l);
                255 < Ul.l ? Ul.l = 255 : 0 > Ul.l && (Ul.l = 0);
                Ul.K = Math.round(Ul.K);
                255 < Ul.K ? Ul.K = 255 : 0 > Ul.K && (Ul.K = 0);
                Ul.u = Math.round(Ul.u);
                255 < Ul.u ? Ul.u = 255 : 0 > Ul.u && (Ul.u = 0);
                return "rgba(" + Ul.l + ", " + Ul.K + ", " + Ul.u + ", " + Ul.da + ")";
            case em:
                b = Ul.l / 255;
                d = Ul.K / 255;
                var e = Ul.u / 255,
                    f = Math.max(b, d, e),
                    g = Math.min(b, d, e),
                    h =
                    f - g;
                g = (f + g) / 2;
                if (0 === h) c = b = 0;
                else {
                    switch (f) {
                        case b:
                            c = (d - e) / h % 6;
                            break;
                        case d:
                            c = (e - b) / h + 2;
                            break;
                        case e:
                            c = (b - d) / h + 4
                    }
                    c *= 60;
                    0 > c && (c += 360);
                    b = h / (1 - Math.abs(2 * g - 1))
                }
                fm.l = Math.round(c);
                fm.K = Math.round(100 * b);
                fm.u = Math.round(100 * g);
                fm.da = Ul.da;
                fm.u = Math.min(100, Math.max(0, fm.u + 100 * a));
                return "hsla(" + fm.l + ", " + fm.K + "%, " + fm.u + "%, " + fm.da + ")";
            default:
                return A("Unknown color space: " + b), "rgba(0, 0, 0, 1)"
        }
    }

    function Pl(a) {
        Ml || (Nl(), Ml = !0);
        var b = gm;
        if (null !== b) {
            b.clearRect(0, 0, 1, 1);
            b.fillStyle = "#000000";
            var c = b.fillStyle;
            b.fillStyle = a;
            b.fillStyle !== c ? (b.fillRect(0, 0, 1, 1), a = b.getImageData(0, 0, 1, 1).data, Ul.l = a[0], Ul.K = a[1], Ul.u = a[2], Ul.da = a[3] / 255) : (b.fillStyle = "#FFFFFF", b.fillStyle = a, Ul.l = 0, Ul.K = 0, Ul.u = 0, Ul.da = 1)
        }
    }

    function Wl(a) {
        a /= 255;
        return .04045 >= a ? a / 12.92 : Math.pow((a + .055) / 1.055, 2.4)
    }

    function dm(a) {
        return .0031308 >= a ? 12.92 * a : 1.055 * Math.pow(a, 1 / 2.4) - .055
    }

    function Yl(a) {
        return a > cm ? Math.pow(a, 1 / 3) : (bm * a + 16) / 116
    }

    function am(a) {
        var b = a * a * a;
        return b > cm ? b : (116 * a - 16) / bm
    }

    function Nl() {
        gm = sh ? (new qk(null)).context : null
    }
    pa.Object.defineProperties(fl.prototype, {
        type: {
            get: function() {
                return this.va
            },
            set: function(a) {
                this.v && wa(this, a);
                this.va = a;
                this.start.mc() && (a === ll ? this.start = Uc : a === gl && (this.start = dd));
                this.end.mc() && (a === ll ? this.end = gd : a === gl && (this.end = dd));
                this.ce = null
            }
        },
        color: {
            get: function() {
                return this.yk
            },
            set: function(a) {
                this.v && wa(this, a);
                this.yk = a;
                this.ce = null
            }
        },
        start: {
            get: function() {
                return this.Al
            },
            set: function(a) {
                this.v &&
                    wa(this, a);
                this.Al = a.I();
                this.ce = null
            }
        },
        end: {
            get: function() {
                return this.Mk
            },
            set: function(a) {
                this.v && wa(this, a);
                this.Mk = a.I();
                this.ce = null
            }
        },
        startRadius: {
            get: function() {
                return this.us
            },
            set: function(a) {
                this.v && wa(this, a);
                0 > a && xa(a, ">= zero", fl, "startRadius");
                this.us = a;
                this.ce = null
            }
        },
        endRadius: {
            get: function() {
                return this.er
            },
            set: function(a) {
                this.v && wa(this, a);
                0 > a && xa(a, ">= zero", fl, "endRadius");
                this.er = a;
                this.ce =
                    null
            }
        },
        colorStops: {
            get: function() {
                return this.be
            },
            set: function(a) {
                this.v && wa(this, a);
                this.be = a;
                this.ce = null
            }
        },
        pattern: {
            get: function() {
                return this.$r
            },
            set: function(a) {
                this.v && wa(this, a);
                this.$r = a;
                this.ce = null
            }
        }
    });
    fl.prototype.isDark = fl.prototype.lx;
    fl.prototype.darkenBy = fl.prototype.sy;
    fl.prototype.lightenBy = fl.prototype.rz;
    fl.prototype.addColorStop = fl.prototype.addColorStop;
    var cm = 216 / 24389,
        bm = 24389 / 27,
        Zl = [95.047, 100, 108.883],
        gm = null,
        Ul = new Ll,
        fm = new Ll,
        Xl = new Ll,
        $l = new Ll,
        Ml = !1;
    fl.className = "Brush";
    var il;
    fl.Solid = il = new D(fl, "Solid", 0);
    var ll;
    fl.Linear = ll = new D(fl, "Linear", 1);
    var gl;
    fl.Radial = gl = new D(fl, "Radial", 2);
    var kl;
    fl.Pattern = kl = new D(fl, "Pattern", 4);
    var Ol;
    fl.Lab = Ol = new D(fl, "Lab", 5);
    var em;
    fl.HSL = em = new D(fl, "HSL", 6);
    fl.randomColor = function(a, b) {
        void 0 === a && (a = 128);
        void 0 === b && (b = Math.max(a, 255));
        var c = Math.abs(b - a);
        b = Math.floor(a + Math.random() * c).toString(16);
        var d = Math.floor(a + Math.random() * c).toString(16);
        a = Math.floor(a + Math.random() * c).toString(16);
        2 > b.length && (b = "0" + b);
        2 > d.length && (d = "0" + d);
        2 > a.length && (a = "0" + a);
        return "#" + b + d + a
    };
    fl.isValidColor = function(a) {
        if ("black" === a) return !0;
        if ("" === a) return !1;
        Ml || (Nl(), Ml = !0);
        var b = gm;
        if (null === b) return !0;
        b.fillStyle = "#000000";
        var c = b.fillStyle;
        b.fillStyle = a;
        if (b.fillStyle !== c) return !0;
        b.fillStyle = "#FFFFFF";
        c = b.fillStyle;
        b.fillStyle = a;
        return b.fillStyle !== c
    };
    fl.lighten = function(a) {
        return Rl(a)
    };
    fl.lightenBy = Rl;
    fl.darken = function(a) {
        return Sl(a)
    };
    fl.darkenBy = Sl;
    fl.mix = Tl;
    fl.isDark = Vl;

    function zl() {
        this.name = "Base"
    }
    zl.prototype.measure = function() {};
    zl.prototype.uz = function(a, b, c, d, e) {
        a.measure(b, c, d, e)
    };
    zl.prototype.arrange = function() {};
    zl.prototype.hy = function(a, b, c, d, e, f) {
        a.arrange(b, c, d, e, f)
    };
    pa.Object.defineProperties(zl.prototype, {
        classType: {
            get: function() {
                return W
            }
        }
    });
    zl.prototype.arrangeElement = zl.prototype.hy;
    zl.prototype.measureElement = zl.prototype.uz;
    zl.className = "PanelLayout";

    function hm() {
        this.name = "Base";
        this.name = "Position"
    }
    oa(hm, zl);
    hm.prototype.measure = function(a, b, c, d, e, f, g) {
        var h = d.length;
        a = im(a);
        for (var k = 0; k < h; k++) {
            var l = d[k];
            if (l.visible || l === a) {
                var m = l.margin,
                    n = m.right + m.left;
                m = m.top + m.bottom;
                l.measure(b, c, f, g);
                var p = l.measuredBounds;
                n = Math.max(p.width + n, 0);
                m = Math.max(p.height + m, 0);
                p = l.position.x;
                var q = l.position.y;
                isFinite(p) || (p = 0);
                isFinite(q) || (q = 0);
                l instanceof V && l.isGeometryPositioned && (l = l.strokeWidth / 2, p -= l, q -= l);
                Bc(e, p, q, n, m)
            }
        }
    };
    hm.prototype.arrange = function(a, b, c) {
        var d = b.length,
            e = a.padding;
        a = c.x - e.left;
        c = c.y - e.top;
        for (e = 0; e < d; e++) {
            var f = b[e],
                g = f.measuredBounds,
                h = f.margin,
                k = f.position.x,
                l = f.position.y;
            k = isNaN(k) ? -a : k - a;
            l = isNaN(l) ? -c : l - c;
            if (f instanceof V && f.isGeometryPositioned) {
                var m = f.strokeWidth / 2;
                k -= m;
                l -= m
            }
            f.visible && f.arrange(k + h.left, l + h.top, g.width, g.height)
        }
    };

    function jm() {
        this.name = "Base";
        this.name = "Horizontal"
    }
    oa(jm, zl);
    jm.prototype.measure = function(a, b, c, d, e, f, g) {
        var h = d.length;
        b = Ka();
        f = im(a);
        for (var k = 0; k < h; k++) {
            var l = d[k];
            if (l.visible || l === f) {
                var m = Xk(l, !1);
                if (m !== Yg && m !== Ik) b.push(l);
                else {
                    l.measure(Infinity, c, 0, g);
                    m = l.margin;
                    l = l.measuredBounds;
                    var n = Math.max(l.height + m.top + m.bottom, 0);
                    e.width += Math.max(l.width + m.right + m.left, 0);
                    e.height = Math.max(e.height, n)
                }
            }
        }
        d = b.length;
        a.desiredSize.height ? c = Math.min(a.desiredSize.height, a.maxSize.height) : 0 !== e.height && (c = Math.min(e.height, a.maxSize.height));
        for (a = 0; a < d; a++)
            if (k =
                b[a], k.visible || k === f) m = k.margin, h = m.right + m.left, m = m.top + m.bottom, k.measure(Infinity, c, 0, g), k = k.measuredBounds, m = Math.max(k.height + m, 0), e.width += Math.max(k.width + h, 0), e.height = Math.max(e.height, m);
        Oa(b)
    };
    jm.prototype.arrange = function(a, b, c) {
        for (var d = b.length, e = a.padding, f = e.top, g = a.isOpposite, h = g ? c.width : e.left, k = 0; k < d; k++) {
            var l = f,
                m = b[k];
            if (m.visible) {
                var n = m.measuredBounds,
                    p = m.margin,
                    q = p.top + p.bottom,
                    r = f + e.bottom,
                    u = n.height,
                    v = Xk(m, !1);
                if (isNaN(m.desiredSize.height) && v === be || v === Jk) u = Math.max(c.height - q - r, 0);
                q = u + q + r;
                r = m.alignment;
                r.Lb() && (r = a.defaultAlignment);
                r.hb() || (r = dd);
                g && (h -= n.width + p.left + p.right);
                m.arrange(h + r.offsetX + p.left, l + r.offsetY + p.top + (c.height * r.y - q * r.y), n.width, u);
                g || (h += n.width +
                    p.left + p.right)
            }
        }
    };

    function km() {
        this.name = "Base";
        this.name = "Vertical"
    }
    oa(km, zl);
    km.prototype.measure = function(a, b, c, d, e, f) {
        var g = d.length;
        c = Ka();
        for (var h = im(a), k = 0; k < g; k++) {
            var l = d[k];
            if (l.visible || l === h) {
                var m = Xk(l, !1);
                if (m !== Yg && m !== Jk) c.push(l);
                else {
                    var n = l.margin;
                    m = n.right + n.left;
                    n = n.top + n.bottom;
                    l.measure(b, Infinity, f, 0);
                    l = l.measuredBounds;
                    sc(e, Math.max(e.width, Math.max(l.width + m, 0)), e.height + Math.max(l.height + n, 0))
                }
            }
        }
        d = c.length;
        if (0 !== d) {
            a.desiredSize.width ? b = Math.min(a.desiredSize.width, a.maxSize.width) : 0 !== e.width && (b = Math.min(e.width, a.maxSize.width));
            for (a = 0; a < d; a++)
                if (k =
                    c[a], k.visible || k === h) l = k.margin, g = l.right + l.left, l = l.top + l.bottom, k.measure(b, Infinity, f, 0), k = k.measuredBounds, l = Math.max(k.height + l, 0), e.width = Math.max(e.width, Math.max(k.width + g, 0)), e.height += l;
            Oa(c)
        }
    };
    km.prototype.arrange = function(a, b, c) {
        for (var d = b.length, e = a.padding, f = e.left, g = a.isOpposite, h = g ? c.height : e.top, k = 0; k < d; k++) {
            var l = f,
                m = b[k];
            if (m.visible) {
                var n = m.measuredBounds,
                    p = m.margin,
                    q = p.left + p.right,
                    r = f + e.right,
                    u = n.width,
                    v = Xk(m, !1);
                if (isNaN(m.desiredSize.width) && v === be || v === Ik) u = Math.max(c.width - q - r, 0);
                q = u + q + r;
                r = m.alignment;
                r.Lb() && (r = a.defaultAlignment);
                r.hb() || (r = dd);
                g && (h -= n.height + p.bottom + p.top);
                m.arrange(l + r.offsetX + p.left + (c.width * r.x - q * r.x), h + r.offsetY + p.top, u, n.height);
                g || (h += n.height +
                    p.bottom + p.top)
            }
        }
    };

    function lm() {
        this.name = "Base";
        this.name = "Spot"
    }
    oa(lm, zl);
    lm.prototype.measure = function(a, b, c, d, e, f, g) {
        var h = d.length,
            k = a.Ab(),
            l = k.margin,
            m = l.right + l.left,
            n = l.top + l.bottom;
        k.measure(b, c, f, g);
        var p = k.measuredBounds;
        f = p.width;
        g = p.height;
        var q = Math.max(f + m, 0);
        var r = Math.max(g + n, 0);
        for (var u = a.isClipping, v = N.allocAt(-l.left, -l.top, q, r), x = !0, y = im(a), z = 0; z < h; z++) {
            var B = d[z];
            if (B !== k && (B.visible || B === y)) {
                l = B.margin;
                q = l.right + l.left;
                r = l.top + l.bottom;
                p = Xk(B, !1);
                switch (p) {
                    case be:
                        b = f;
                        c = g;
                        break;
                    case Ik:
                        b = f;
                        break;
                    case Jk:
                        c = g
                }
                B.measure(b, c, 0, 0);
                p = B.measuredBounds;
                q =
                    Math.max(p.width + q, 0);
                r = Math.max(p.height + r, 0);
                var C = B.alignment;
                C.Lb() && (C = a.defaultAlignment);
                C.hb() || (C = dd);
                var I = B.alignmentFocus;
                I.Lb() && (I = dd);
                var J = null;
                B instanceof W && "" !== B.xg && (B.arrange(0, 0, p.width, p.height), J = B.ab(B.xg), J === B && (J = null));
                if (null !== J) {
                    l = J.naturalBounds;
                    p = J.margin;
                    for (l = G.allocAt(I.x * l.width - I.offsetX - p.left, I.y * l.height - I.offsetY - p.top); J !== B;) J.transform.ta(l), J = J.panel;
                    B = C.x * f + C.offsetX - l.x;
                    p = C.y * g + C.offsetY - l.y;
                    G.free(l)
                } else B = C.x * f + C.offsetX - (I.x * p.width + I.offsetX) -
                    l.left, p = C.y * g + C.offsetY - (I.y * p.height + I.offsetY) - l.top;
                x ? (x = !1, e.h(B, p, q, r)) : Bc(e, B, p, q, r)
            }
        }
        x ? e.assign(v) : u ? e.av(v.x, v.y, v.width, v.height) : Bc(e, v.x, v.y, v.width, v.height);
        N.free(v);
        p = k.stretch;
        p === Hk && (p = Xk(k, !1));
        switch (p) {
            case Yg:
                return;
            case be:
                if (!isFinite(b) && !isFinite(c)) return;
                break;
            case Ik:
                if (!isFinite(b)) return;
                break;
            case Jk:
                if (!isFinite(c)) return
        }
        p = k.measuredBounds;
        f = p.width;
        g = p.height;
        q = Math.max(f + m, 0);
        r = Math.max(g + n, 0);
        l = k.margin;
        v = N.allocAt(-l.left, -l.top, q, r);
        for (b = 0; b < h; b++) c = d[b], c ===
            k || !c.visible && c !== y || (l = c.margin, q = l.right + l.left, r = l.top + l.bottom, p = c.measuredBounds, q = Math.max(p.width + q, 0), r = Math.max(p.height + r, 0), m = c.alignment, m.Lb() && (m = a.defaultAlignment), m.hb() || (m = dd), c = c.alignmentFocus, c.Lb() && (c = dd), x ? (x = !1, e.h(m.x * f + m.offsetX - (c.x * p.width + c.offsetX) - l.left, m.y * g + m.offsetY - (c.y * p.height + c.offsetY) - l.top, q, r)) : Bc(e, m.x * f + m.offsetX - (c.x * p.width + c.offsetX) - l.left, m.y * g + m.offsetY - (c.y * p.height + c.offsetY) - l.top, q, r));
        x ? e.assign(v) : u ? e.av(v.x, v.y, v.width, v.height) : Bc(e, v.x,
            v.y, v.width, v.height);
        N.free(v)
    };
    lm.prototype.arrange = function(a, b, c) {
        var d = b.length,
            e = a.Ab(),
            f = e.measuredBounds,
            g = f.width;
        f = f.height;
        var h = a.padding,
            k = h.left;
        h = h.top;
        var l = k - c.x,
            m = h - c.y;
        e.arrange(l, m, g, f);
        for (var n = 0; n < d; n++) {
            var p = b[n];
            if (p !== e) {
                var q = p.measuredBounds,
                    r = q.width;
                q = q.height;
                m = p.alignment;
                m.Lb() && (m = a.defaultAlignment);
                m.hb() || (m = dd);
                var u = p.alignmentFocus;
                u.Lb() && (u = dd);
                l = null;
                p instanceof W && "" !== p.xg && (l = p.ab(p.xg), l === p && (l = null));
                if (null !== l) {
                    var v = l.naturalBounds;
                    for (u = G.allocAt(u.x * v.width - u.offsetX, u.y * v.height -
                            u.offsetY); l !== p;) l.transform.ta(u), l = l.panel;
                    l = m.x * g + m.offsetX - u.x;
                    m = m.y * f + m.offsetY - u.y;
                    G.free(u)
                } else l = m.x * g + m.offsetX - (u.x * r + u.offsetX), m = m.y * f + m.offsetY - (u.y * q + u.offsetY);
                l -= c.x;
                m -= c.y;
                p.visible && p.arrange(k + l, h + m, r, q)
            }
        }
    };

    function mm() {
        this.name = "Base";
        this.name = "Auto"
    }
    oa(mm, zl);
    mm.prototype.measure = function(a, b, c, d, e, f, g) {
        var h = d.length,
            k = a.Ab(),
            l = k.margin,
            m = b,
            n = c,
            p = l.right + l.left,
            q = l.top + l.bottom;
        k.measure(b, c, f, g);
        l = k.measuredBounds;
        var r = 0,
            u = null;
        k instanceof V && (u = k, r = u.strokeWidth * u.scale);
        var v = Math.max(l.width + p, 0);
        l = Math.max(l.height + q, 0);
        var x = nm(k),
            y = x.x * v + x.offsetX;
        x = x.y * l + x.offsetY;
        var z = om(k),
            B = z.x * v + z.offsetX;
        z = z.y * l + z.offsetY;
        isFinite(b) && (m = Math.max(Math.abs(y - B) - r, 0));
        isFinite(c) && (n = Math.max(Math.abs(x - z) - r, 0));
        r = L.alloc();
        r.h(0, 0);
        a = im(a);
        for (z = 0; z < h; z++) x =
            d[z], x === k || !x.visible && x !== a || (l = x.margin, v = l.right + l.left, y = l.top + l.bottom, x.measure(m, n, 0, 0), l = x.measuredBounds, v = Math.max(l.width + v, 0), l = Math.max(l.height + y, 0), r.h(Math.max(v, r.width), Math.max(l, r.height)));
        if (1 === h) e.width = v, e.height = l, L.free(r);
        else {
            x = nm(k);
            z = om(k);
            h = d = 0;
            z.x !== x.x && z.y !== x.y && (d = r.width / Math.abs(z.x - x.x), h = r.height / Math.abs(z.y - x.y));
            L.free(r);
            r = 0;
            null !== u && (r = u.strokeWidth * u.scale, Zg(u) === $g && (d = h = Math.max(d, h)));
            d += Math.abs(x.offsetX) + Math.abs(z.offsetX) + r;
            h += Math.abs(x.offsetY) +
                Math.abs(z.offsetY) + r;
            u = k.stretch;
            u === Hk && (u = Xk(k, !1));
            switch (u) {
                case Yg:
                    g = f = 0;
                    break;
                case be:
                    isFinite(b) && (d = b);
                    isFinite(c) && (h = c);
                    break;
                case Ik:
                    isFinite(b) && (d = b);
                    g = 0;
                    break;
                case Jk:
                    f = 0, isFinite(c) && (h = c)
            }
            k.am();
            k.measure(d, h, f, g);
            e.width = k.measuredBounds.width + p;
            e.height = k.measuredBounds.height + q
        }
    };
    mm.prototype.arrange = function(a, b) {
        var c = b.length,
            d = a.Ab(),
            e = d.measuredBounds,
            f = N.alloc();
        f.h(0, 0, 1, 1);
        var g = d.margin,
            h = g.left;
        g = g.top;
        var k = a.padding,
            l = k.left;
        k = k.top;
        d.arrange(l + h, k + g, e.width, e.height);
        var m = nm(d),
            n = om(d),
            p = m.y * e.height + m.offsetY,
            q = n.x * e.width + n.offsetX;
        n = n.y * e.height + n.offsetY;
        f.x = m.x * e.width + m.offsetX;
        f.y = p;
        Bc(f, q, n, 0, 0);
        f.x += h + l;
        f.y += g + k;
        for (e = 0; e < c; e++) h = b[e], h !== d && (l = h.measuredBounds, g = h.margin, k = Math.max(l.width + g.right + g.left, 0), m = Math.max(l.height + g.top + g.bottom, 0), p = h.alignment,
            p.Lb() && (p = a.defaultAlignment), p.hb() || (p = dd), k = f.width * p.x + p.offsetX - k * p.x + g.left + f.x, g = f.height * p.y + p.offsetY - m * p.y + g.top + f.y, h.visible && (Cc(f.x, f.y, f.width, f.height, k, g, l.width, l.height) ? h.arrange(k, g, l.width, l.height) : h.arrange(k, g, l.width, l.height, new N(f.x, f.y, f.width, f.height))));
        N.free(f)
    };

    function pm() {
        this.name = "Base";
        this.name = "Table"
    }
    oa(pm, zl);
    pm.prototype.measure = function(a, b, c, d, e, f, g) {
        for (var h = d.length, k = Ka(), l = Ka(), m = 0; m < h; m++) {
            var n = d[m],
                p = n instanceof W ? n : null;
            if (null === p || p.type !== W.TableRow && p.type !== W.TableColumn || !n.visible) k.push(n);
            else {
                l.push(p);
                for (var q = p.W.j, r = q.length, u = 0; u < r; u++) {
                    var v = q[u];
                    p.type === W.TableRow ? v.row = n.row : p.type === W.TableColumn && (v.column = n.column);
                    k.push(v)
                }
            }
        }
        h = k.length;
        0 === h && (a.getRowDefinition(0), a.getColumnDefinition(0));
        for (var x = [], y = 0; y < h; y++) {
            var z = k[y];
            fj(z, !0);
            Yk(z, !0);
            x[z.row] || (x[z.row] = []);
            x[z.row][z.column] || (x[z.row][z.column] = []);
            x[z.row][z.column].push(z)
        }
        Oa(k);
        var B = Ka(),
            C = Ka(),
            I = Ka(),
            J = {
                count: 0
            },
            K = {
                count: 0
            },
            X = b,
            Q = c,
            ia = a.tb;
        h = ia.length;
        for (var ja = 0; ja < h; ja++) {
            var M = ia[ja];
            void 0 !== M && (M.actual = 0)
        }
        ia = a.ob;
        h = ia.length;
        for (var R = 0; R < h; R++) M = ia[R], void 0 !== M && (M.actual = 0);
        for (var Aa = x.length, ob = 0, Ha = 0; Ha < Aa; Ha++) x[Ha] && (ob = Math.max(ob, x[Ha].length));
        var Da = Math.min(a.topIndex, Aa - 1),
            Fa = Math.min(a.leftIndex, ob - 1),
            Ra = 0;
        Aa = x.length;
        for (var Ub = im(a), Za = 0; Za < Aa; Za++)
            if (x[Za]) {
                ob = x[Za].length;
                for (var Wa = a.getRowDefinition(Za), Ma = Wa.actual = 0; Ma < ob; Ma++)
                    if (x[Za][Ma]) {
                        var fa = a.getColumnDefinition(Ma);
                        void 0 === B[Ma] && (fa.actual = 0, B[Ma] = !0);
                        for (var ea = x[Za][Ma], hb = ea.length, jb = 0; jb < hb; jb++) {
                            var Na = ea[jb];
                            if (Na.visible || Na === Ub) {
                                var ce = 1 < Na.rowSpan || 1 < Na.columnSpan;
                                ce && (Za < Da || Ma < Fa || C.push(Na));
                                var Kd = Na.margin,
                                    vb = Kd.right + Kd.left,
                                    zf = Kd.top + Kd.bottom;
                                var Eb = pl(Na, Wa, fa, !1);
                                var pe = Na.desiredSize,
                                    Vc = !isNaN(pe.height),
                                    Vb = !isNaN(pe.width) && Vc;
                                ce || Eb === Yg || Vb || Za < Da || Ma < Fa || (void 0 !== J[Ma] || Eb !==
                                    be && Eb !== Ik || (J[Ma] = -1, J.count++), void 0 !== K[Za] || Eb !== be && Eb !== Jk || (K[Za] = -1, K.count++), I.push(Na));
                                Na.measure(Infinity, Infinity, 0, 0);
                                if (!(Za < Da || Ma < Fa)) {
                                    var Ld = Na.measuredBounds,
                                        Ec = Math.max(Ld.width + vb, 0),
                                        He = Math.max(Ld.height + zf, 0);
                                    if (1 === Na.rowSpan && (Eb === Yg || Eb === Ik)) {
                                        M = a.getRowDefinition(Za);
                                        var Ie = M.vc();
                                        Ra = Math.max(He - M.actual, 0);
                                        Ra + Ie > Q && (Ra = Math.max(Q - Ie, 0));
                                        var Af = 0 === M.actual;
                                        M.actual = M.actual + Ra;
                                        Q = Math.max(Q - (Ra + (Af ? Ie : 0)), 0)
                                    }
                                    if (1 === Na.columnSpan && (Eb === Yg || Eb === Jk)) {
                                        M = a.getColumnDefinition(Ma);
                                        var gf = M.vc();
                                        Ra = Math.max(Ec - M.actual, 0);
                                        Ra + gf > X && (Ra = Math.max(X - gf, 0));
                                        var Bf = 0 === M.actual;
                                        M.actual = M.actual + Ra;
                                        X = Math.max(X - (Ra + (Bf ? gf : 0)), 0)
                                    }
                                    ce && Na.am()
                                }
                            }
                        }
                    }
            } Oa(B);
        var Wb = 0,
            Xa = 0;
        h = a.columnCount;
        for (var $a = 0; $a < h; $a++) {
            var Lc = a.ob[$a];
            void 0 !== Lc && (Wb += Lc.ka, 0 !== Lc.ka && (Wb += Lc.vc()))
        }
        h = a.rowCount;
        for (var Cf = 0; Cf < h; Cf++) {
            var jc = a.tb[Cf];
            void 0 !== jc && (Xa += jc.ka, 0 !== jc.ka && (Xa += jc.vc()))
        }
        X = Math.max(b - Wb, 0);
        var Md = Q = Math.max(c - Xa, 0),
            qc = X;
        h = I.length;
        for (var Nd = 0; Nd < h; Nd++) {
            var Xb = I[Nd],
                Dh = a.getRowDefinition(Xb.row),
                Eh = a.getColumnDefinition(Xb.column),
                Je = Xb.measuredBounds,
                pb = Xb.margin,
                Df = pb.right + pb.left,
                Ke = pb.top + pb.bottom;
            J[Xb.column] = 0 === Eh.actual && void 0 !== J[Xb.column] ? Math.max(Je.width + Df, J[Xb.column]) : null;
            K[Xb.row] = 0 === Dh.actual && void 0 !== K[Xb.row] ? Math.max(Je.height + Ke, K[Xb.row]) : null
        }
        var Yb = 0,
            Le = 0,
            Mc;
        for (Mc in K) "count" !== Mc && (Yb += K[Mc]);
        for (Mc in J) "count" !== Mc && (Le += J[Mc]);
        for (var db = L.alloc(), Me = 0; Me < h; Me++) {
            var rb = I[Me];
            if (rb.visible || rb === Ub) {
                var rc = a.getRowDefinition(rb.row),
                    kb = a.getColumnDefinition(rb.column),
                    Wc = 0;
                isFinite(kb.width) ? Wc = kb.width : (isFinite(X) && null !== J[rb.column] ? 0 === Le ? Wc = kb.actual + X : Wc = J[rb.column] / Le * qc : null !== J[rb.column] ? Wc = X : Wc = kb.actual || X, Wc = Math.max(0, Wc - kb.vc()));
                var Xc = 0;
                isFinite(rc.height) ? Xc = rc.height : (isFinite(Q) && null !== K[rb.row] ? 0 === Yb ? Xc = rc.actual + Q : Xc = K[rb.row] / Yb * Md : null !== K[rb.row] ? Xc = Q : Xc = rc.actual || Q, Xc = Math.max(0, Xc - rc.vc()));
                db.h(Math.max(kb.minimum, Math.min(Wc, kb.maximum)), Math.max(rc.minimum, Math.min(Xc, rc.maximum)));
                Eb = pl(rb, rc, kb, !1);
                switch (Eb) {
                    case Ik:
                        db.height =
                            Math.max(db.height, rc.actual + Q);
                        break;
                    case Jk:
                        db.width = Math.max(db.width, kb.actual + X)
                }
                var xd = rb.margin,
                    Bg = xd.right + xd.left,
                    Ef = xd.top + xd.bottom;
                rb.am();
                rb.measure(db.width, db.height, kb.minimum, rc.minimum);
                var Ff = rb.measuredBounds,
                    hf = Math.max(Ff.width + Bg, 0),
                    kd = Math.max(Ff.height + Ef, 0);
                isFinite(X) && (hf = Math.min(hf, db.width));
                isFinite(Q) && (kd = Math.min(kd, db.height));
                var Od = 0;
                Od = rc.actual;
                rc.actual = Math.max(rc.actual, kd);
                Ra = rc.actual - Od;
                Q = Math.max(Q - Ra, 0);
                Od = kb.actual;
                kb.actual = Math.max(kb.actual, hf);
                Ra = kb.actual - Od;
                X = Math.max(X - Ra, 0)
            }
        }
        Oa(I);
        var ld = L.alloc(),
            md = Ka(),
            nb = Ka();
        h = C.length;
        if (0 !== h)
            for (var eb = 0; eb < Aa; eb++)
                if (x[eb]) {
                    ob = x[eb].length;
                    var nd = a.getRowDefinition(eb);
                    md[eb] = nd.actual;
                    for (var Yc = 0; Yc < ob; Yc++)
                        if (x[eb][Yc]) {
                            var od = a.getColumnDefinition(Yc);
                            nb[Yc] = od.actual
                        }
                } for (var vc = 0; vc < h; vc++) {
            var Ba = C[vc];
            if (Ba.visible || Ba === Ub) {
                var Zc = a.getRowDefinition(Ba.row),
                    Zb = a.getColumnDefinition(Ba.column);
                db.h(Math.max(Zb.minimum, Math.min(b, Zb.maximum)), Math.max(Zc.minimum, Math.min(c, Zc.maximum)));
                Eb = pl(Ba, Zc, Zb, !1);
                switch (Eb) {
                    case be:
                        0 !== nb[Zb.index] && (db.width = Math.min(db.width, nb[Zb.index]));
                        0 !== md[Zc.index] && (db.height = Math.min(db.height, md[Zc.index]));
                        break;
                    case Ik:
                        0 !== nb[Zb.index] && (db.width = Math.min(db.width, nb[Zb.index]));
                        break;
                    case Jk:
                        0 !== md[Zc.index] && (db.height = Math.min(db.height, md[Zc.index]))
                }
                isFinite(Zb.width) && (db.width = Zb.width);
                isFinite(Zc.height) && (db.height = Zc.height);
                ld.h(0, 0);
                for (var de = 1; de < Ba.rowSpan && !(Ba.row + de >= a.rowCount); de++) M = a.getRowDefinition(Ba.row + de), Ra = 0,
                    Ra = Eb === be || Eb === Jk ? Math.max(M.minimum, 0 === md[Ba.row + de] ? M.maximum : Math.min(md[Ba.row + de], M.maximum)) : Math.max(M.minimum, isNaN(M.Qc) ? M.maximum : Math.min(M.Qc, M.maximum)), ld.height += Ra;
                for (var Ne = 1; Ne < Ba.columnSpan && !(Ba.column + Ne >= a.columnCount); Ne++) M = a.getColumnDefinition(Ba.column + Ne), Ra = 0, Ra = Eb === be || Eb === Ik ? Math.max(M.minimum, 0 === nb[Ba.column + Ne] ? M.maximum : Math.min(nb[Ba.column + Ne], M.maximum)) : Math.max(M.minimum, isNaN(M.Qc) ? M.maximum : Math.min(M.Qc, M.maximum)), ld.width += Ra;
                db.width += ld.width;
                db.height +=
                    ld.height;
                var ee = Ba.margin,
                    wc = ee.right + ee.left,
                    qe = ee.top + ee.bottom;
                Ba.measure(db.width, db.height, f, g);
                for (var $c = Ba.measuredBounds, wb = Math.max($c.width + wc, 0), Pd = Math.max($c.height + qe, 0), Mb = 0, re = 0; re < Ba.rowSpan && !(Ba.row + re >= a.rowCount); re++) M = a.getRowDefinition(Ba.row + re), Mb += M.total || 0;
                if (Mb < Pd) {
                    var yd = Pd - Mb,
                        fe = Pd - Mb;
                    if (null !== Ba.spanAllocation)
                        for (var Cg = Ba.spanAllocation, ad = 0; ad < Ba.rowSpan && !(0 >= yd) && !(Ba.row + ad >= a.rowCount); ad++) {
                            M = a.getRowDefinition(Ba.row + ad);
                            var Oe = M.ka || 0,
                                Dg = Cg(Ba, M, fe);
                            M.actual =
                                Math.min(M.maximum, Oe + Dg);
                            M.ka !== Oe && (yd -= M.ka - Oe)
                        }
                    for (; 0 < yd;) {
                        var Gf = M.ka || 0;
                        isNaN(M.height) && M.maximum > Gf && (M.actual = Math.min(M.maximum, Gf + yd), M.ka !== Gf && (yd -= M.ka - Gf));
                        if (0 === M.index) break;
                        M = a.getRowDefinition(M.index - 1)
                    }
                }
                for (var Pe = 0, Eg = 0; Eg < Ba.columnSpan && !(Ba.column + Eg >= a.columnCount); Eg++) M = a.getColumnDefinition(Ba.column + Eg), Pe += M.total || 0;
                if (Pe < wb) {
                    var bg = wb - Pe,
                        Di = wb - Pe;
                    if (null !== Ba.spanAllocation)
                        for (var Qe = Ba.spanAllocation, Re = 0; Re < Ba.columnSpan && !(0 >= bg) && !(Ba.column + Re >= a.columnCount); Re++) {
                            M =
                                a.getColumnDefinition(Ba.column + Re);
                            var Fh = M.ka || 0,
                                it = Qe(Ba, M, Di);
                            M.actual = Math.min(M.maximum, Fh + it);
                            M.ka !== Fh && (bg -= M.ka - Fh)
                        }
                    for (; 0 < bg;) {
                        var Uj = M.ka || 0;
                        isNaN(M.width) && M.maximum > Uj && (M.actual = Math.min(M.maximum, Uj + bg), M.ka !== Uj && (bg -= M.ka - Uj));
                        if (0 === M.index) break;
                        M = a.getColumnDefinition(M.index - 1)
                    }
                }
            }
        }
        Oa(C);
        L.free(ld);
        L.free(db);
        void 0 !== md && Oa(md);
        void 0 !== nb && Oa(nb);
        var Fg = 0,
            Gg = 0,
            Vj = a.desiredSize,
            Mq = a.maxSize;
        Eb = Xk(a, !0);
        var Ei = Xa = Wb = 0,
            Fi = 0;
        h = a.columnCount;
        for (var Wj = 0; Wj < h; Wj++) void 0 !== a.ob[Wj] &&
            (M = a.getColumnDefinition(Wj), isFinite(M.width) ? (Ei += M.width, Ei += M.vc()) : qm(M) === rm ? (Ei += M.ka, Ei += M.vc()) : 0 !== M.ka && (Wb += M.ka, Wb += M.vc()));
        isFinite(Vj.width) ? Fg = Math.min(Vj.width, Mq.width) : Fg = Eb !== Yg && isFinite(b) ? b : Wb;
        Fg = Math.max(Fg, a.minSize.width);
        Fg = Math.max(Fg - Ei, 0);
        for (var jt = 0 === Wb ? 1 : Math.max(Fg / Wb, 1), Yj = 0; Yj < h; Yj++) void 0 !== a.ob[Yj] && (M = a.getColumnDefinition(Yj), isFinite(M.width) || qm(M) === rm || (M.actual = M.ka * jt), M.position = e.width, 0 !== M.ka && (e.width += M.ka, e.width += M.vc()));
        h = a.rowCount;
        for (var Zj =
                0; Zj < h; Zj++) void 0 !== a.tb[Zj] && (M = a.getRowDefinition(Zj), isFinite(M.height) ? (Fi += M.height, Fi += M.vc()) : qm(M) === rm ? (Fi += M.ka, Fi += M.vc()) : 0 !== M.ka && (Xa += M.ka, 0 !== M.ka && (Xa += M.vc())));
        isFinite(Vj.height) ? Gg = Math.min(Vj.height, Mq.height) : Gg = Eb !== Yg && isFinite(c) ? c : Xa;
        Gg = Math.max(Gg, a.minSize.height);
        Gg = Math.max(Gg - Fi, 0);
        for (var kt = 0 === Xa ? 1 : Math.max(Gg / Xa, 1), ak = 0; ak < h; ak++) void 0 !== a.tb[ak] && (M = a.getRowDefinition(ak), isFinite(M.height) || qm(M) === rm || (M.actual = M.ka * kt), M.position = e.height, 0 !== M.ka && (e.height +=
            M.ka, 0 !== M.ka && (e.height += M.vc())));
        h = l.length;
        for (var hn = 0; hn < h; hn++) {
            var Qd = l[hn],
                jn = 0,
                kn = 0;
            Qd.type === W.TableRow ? (jn = e.width, M = a.getRowDefinition(Qd.row), kn = M.actual) : (M = a.getColumnDefinition(Qd.column), jn = M.actual, kn = e.height);
            Qd.measuredBounds.h(0, 0, jn, kn);
            fj(Qd, !1);
            x[Qd.row] || (x[Qd.row] = []);
            x[Qd.row][Qd.column] || (x[Qd.row][Qd.column] = []);
            x[Qd.row][Qd.column].push(Qd)
        }
        Oa(l);
        a.ap = x
    };
    pm.prototype.arrange = function(a, b, c) {
        var d = b.length,
            e = a.padding,
            f = e.left;
        e = e.top;
        for (var g = a.ap, h, k, l = g.length, m = 0, n = 0; n < l; n++) g[n] && (m = Math.max(m, g[n].length));
        for (n = Math.min(a.topIndex, l - 1); n !== l && (void 0 === a.tb[n] || 0 === a.tb[n].ka);) n++;
        n = Math.min(n, l - 1);
        n = -a.tb[n].position;
        for (h = Math.min(a.leftIndex, m - 1); h !== m && (void 0 === a.ob[h] || 0 === a.ob[h].ka);) h++;
        h = Math.min(h, m - 1);
        for (var p = -a.ob[h].position, q = L.alloc(), r = 0; r < l; r++)
            if (g[r]) {
                m = g[r].length;
                var u = a.getRowDefinition(r);
                k = u.position + n + e;
                0 !== u.ka &&
                    (k += u.Ju());
                for (var v = 0; v < m; v++)
                    if (g[r][v]) {
                        var x = a.getColumnDefinition(v);
                        h = x.position + p + f;
                        0 !== x.ka && (h += x.Ju());
                        for (var y = g[r][v], z = y.length, B = 0; B < z; B++) {
                            var C = y[B],
                                I = C.measuredBounds,
                                J = C instanceof W ? C : null;
                            if (null === J || J.type !== W.TableRow && J.type !== W.TableColumn) {
                                q.h(0, 0);
                                for (var K = 1; K < C.rowSpan && !(r + K >= a.rowCount); K++) J = a.getRowDefinition(r + K), q.height += J.total;
                                for (K = 1; K < C.columnSpan && !(v + K >= a.columnCount); K++) J = a.getColumnDefinition(v + K), q.width += J.total;
                                var X = x.ka + q.width,
                                    Q = u.ka + q.height;
                                K =
                                    h;
                                J = k;
                                var ia = X,
                                    ja = Q,
                                    M = h,
                                    R = k,
                                    Aa = X,
                                    ob = Q;
                                h + X > c.width && (Aa = Math.max(c.width - h, 0));
                                k + Q > c.height && (ob = Math.max(c.height - k, 0));
                                var Ha = C.alignment;
                                if (Ha.Lb()) {
                                    Ha = a.defaultAlignment;
                                    Ha.hb() || (Ha = dd);
                                    var Da = Ha.x;
                                    var Fa = Ha.y;
                                    var Ra = Ha.offsetX;
                                    Ha = Ha.offsetY;
                                    var Ub = x.alignment,
                                        Za = u.alignment;
                                    Ub.hb() && (Da = Ub.x, Ra = Ub.offsetX);
                                    Za.hb() && (Fa = Za.y, Ha = Za.offsetY)
                                } else Da = Ha.x, Fa = Ha.y, Ra = Ha.offsetX, Ha = Ha.offsetY;
                                if (isNaN(Da) || isNaN(Fa)) Fa = Da = .5, Ha = Ra = 0;
                                Ub = I.width;
                                Za = I.height;
                                var Wa = C.margin,
                                    Ma = Wa.left + Wa.right,
                                    fa = Wa.top +
                                    Wa.bottom,
                                    ea = pl(C, u, x, !1);
                                !isNaN(C.desiredSize.width) || ea !== be && ea !== Ik || (Ub = Math.max(X - Ma, 0));
                                !isNaN(C.desiredSize.height) || ea !== be && ea !== Jk || (Za = Math.max(Q - fa, 0));
                                X = C.maxSize;
                                Q = C.minSize;
                                Ub = Math.min(X.width, Ub);
                                Za = Math.min(X.height, Za);
                                Ub = Math.max(Q.width, Ub);
                                Za = Math.max(Q.height, Za);
                                X = Za + fa;
                                K += ia * Da - (Ub + Ma) * Da + Ra + Wa.left;
                                J += ja * Fa - X * Fa + Ha + Wa.top;
                                C.visible && (Cc(M, R, Aa, ob, K, J, I.width, I.height) ? C.arrange(K, J, Ub, Za) : C.arrange(K, J, Ub, Za, new N(M, R, Aa, ob)))
                            } else C.Yk(), C.actualBounds.ha(), ia = C.actualBounds,
                                K = N.allocAt(ia.x, ia.y, ia.width, ia.height), ia.x = J.type === W.TableRow ? f : h, ia.y = J.type === W.TableColumn ? e : k, ia.width = I.width, ia.height = I.height, C.actualBounds.freeze(), Yk(C, !1), xc(K, ia) || (I = C.part, null !== I && (I.vh(), C.Bo(I))), N.free(K)
                        }
                    }
            } L.free(q);
        for (a = 0; a < d; a++) c = b[a], f = c instanceof W ? c : null, null === f || f.type !== W.TableRow && f.type !== W.TableColumn || (f = c.actualBounds, c.naturalBounds.ha(), c.naturalBounds.h(0, 0, f.width, f.height), c.naturalBounds.freeze())
    };

    function sm() {
        this.name = "Base";
        this.name = "TableRow"
    }
    oa(sm, zl);
    sm.prototype.measure = function() {};
    sm.prototype.arrange = function() {};

    function tm() {
        this.name = "Base";
        this.name = "TableColumn"
    }
    oa(tm, zl);
    tm.prototype.measure = function() {};
    tm.prototype.arrange = function() {};

    function um() {
        this.name = "Base";
        this.name = "Viewbox"
    }
    oa(um, zl);
    um.prototype.measure = function(a, b, c, d, e, f, g) {
        1 < d.length && A("Viewbox Panel cannot contain more than one GraphObject.");
        d = d[0];
        d.Ca = 1;
        d.am();
        d.measure(Infinity, Infinity, f, g);
        var h = d.measuredBounds,
            k = d.margin,
            l = k.right + k.left;
        k = k.top + k.bottom;
        if (isFinite(b) || isFinite(c)) {
            var m = d.scale,
                n = h.width;
            h = h.height;
            var p = Math.max(b - l, 0),
                q = Math.max(c - k, 0),
                r = 1;
            a.viewboxStretch === $g ? 0 !== n && 0 !== h && (r = Math.min(p / n, q / h)) : 0 !== n && 0 !== h && (r = Math.max(p / n, q / h));
            0 === r && (r = 1E-4);
            d.Ca *= r;
            m !== d.scale && (fj(d, !0), d.measure(Infinity,
                Infinity, f, g))
        }
        h = d.measuredBounds;
        e.width = isFinite(b) ? b : Math.max(h.width + l, 0);
        e.height = isFinite(c) ? c : Math.max(h.height + k, 0)
    };
    um.prototype.arrange = function(a, b, c) {
        b = b[0];
        var d = b.measuredBounds,
            e = b.margin,
            f = Math.max(d.width + (e.right + e.left), 0);
        e = Math.max(d.height + (e.top + e.bottom), 0);
        var g = b.alignment;
        g.Lb() && (g = a.defaultAlignment);
        g.hb() || (g = dd);
        b.arrange(c.width * g.x - f * g.x + g.offsetX, c.height * g.y - e * g.y + g.offsetY, d.width, d.height)
    };

    function vm() {
        this.name = "Base";
        this.name = "Grid"
    }
    oa(vm, zl);
    vm.prototype.measure = function() {};
    vm.prototype.arrange = function() {};

    function wm() {
        this.name = "Base";
        this.name = "Link"
    }
    oa(wm, zl);
    wm.prototype.measure = function(a, b, c, d, e) {
        c = d.length;
        if (a instanceof pf || a instanceof S) {
            var f = null,
                g = null,
                h = null;
            a instanceof S && (g = f = a);
            a instanceof pf && (h = a, f = h.adornedPart);
            if (f instanceof S) {
                var k = f;
                if (0 === c) sc(a.naturalBounds, 0, 0), a.measuredBounds.h(0, 0, 0, 0);
                else {
                    var l = a instanceof pf ? null : f.path,
                        m = f.routeBounds;
                    b = a.gg;
                    b.h(0, 0, m.width, m.height);
                    var n = k.points;
                    f = f.pointsCount;
                    null !== h ? h.bk(!1) : null !== g && g.bk(!1);
                    var p = m.width,
                        q = m.height;
                    a.location.h(m.x, m.y);
                    a.l.length = 0;
                    null !== l && (xm(a, p, q, l),
                        h = l.measuredBounds, b.Wc(h), a.l.push(h));
                    h = Qc.alloc();
                    for (var r = G.alloc(), u = G.alloc(), v = 0; v < c; v++) {
                        var x = d[v];
                        if (x !== l)
                            if (x.isPanelMain && x instanceof V) {
                                xm(a, p, q, x);
                                var y = x.measuredBounds;
                                b.Wc(y);
                                a.l.push(y)
                            } else if (2 > f) x.measure(Infinity, Infinity, 0, 0), y = x.measuredBounds, b.Wc(y), a.l.push(y);
                        else {
                            var z = x.segmentIndex;
                            y = x.segmentFraction;
                            var B = x.alignmentFocus;
                            B.mc() && (B = dd);
                            var C = x.segmentOrientation,
                                I = x.segmentOffset;
                            if (z < -f || z >= f) {
                                y = k.midPoint;
                                var J = k.midAngle;
                                if (C !== Ng) {
                                    var K = k.computeAngle(x, C,
                                        J);
                                    x.Bc = K
                                }
                                K = y.x - m.x;
                                var X = y.y - m.y
                            } else {
                                K = 0;
                                if (0 <= z) {
                                    X = n.N(z);
                                    var Q = z < f - 1 ? n.N(z + 1) : X
                                } else K = f + z, X = n.N(K), Q = 0 < K ? n.N(K - 1) : X;
                                if (X.Pa(Q)) {
                                    0 <= z ? (J = 0 < z ? n.N(z - 1) : X, K = z < f - 2 ? n.N(z + 2) : Q) : (J = K < f - 1 ? n.N(K + 1) : X, K = 1 < K ? n.N(K - 2) : Q);
                                    var ia = J.Be(X),
                                        ja = Q.Be(K);
                                    J = ia > ja + 10 ? 0 <= z ? J.Va(X) : X.Va(J) : ja > ia + 10 ? 0 <= z ? Q.Va(K) : K.Va(Q) : 0 <= z ? J.Va(K) : K.Va(J)
                                } else J = 0 <= z ? X.Va(Q) : Q.Va(X);
                                C !== Ng && (K = k.computeAngle(x, C, J), x.Bc = K);
                                K = X.x + (Q.x - X.x) * y - m.x;
                                X = X.y + (Q.y - X.y) * y - m.y
                            }
                            x.measure(Infinity, Infinity, 0, 0);
                            y = x.measuredBounds;
                            ja = x.naturalBounds;
                            ia = 0;
                            x instanceof V && (ia = x.strokeWidth);
                            Q = ja.width + ia;
                            ja = ja.height + ia;
                            h.reset();
                            h.translate(-y.x, -y.y);
                            h.scale(x.scale, x.scale);
                            h.rotate(C === Ng ? x.angle : J, Q / 2, ja / 2);
                            C !== ym && C !== zm || h.rotate(90, Q / 2, ja / 2);
                            C !== Am && C !== Bm || h.rotate(-90, Q / 2, ja / 2);
                            C === Cm && (45 < J && 135 > J || 225 < J && 315 > J) && h.rotate(-J, Q / 2, ja / 2);
                            C = new N(0, 0, Q, ja);
                            r.Pi(C, B);
                            h.ta(r);
                            B = -r.x + ia / 2 * x.scale;
                            x = -r.y + ia / 2 * x.scale;
                            u.assign(I);
                            isNaN(u.x) && (u.x = 0 <= z ? Q / 2 + 3 : -(Q / 2 + 3));
                            isNaN(u.y) && (u.y = -(ja / 2 + 3));
                            u.rotate(J);
                            K += u.x;
                            X += u.y;
                            C.set(y);
                            C.h(K + B, X + x,
                                y.width, y.height);
                            a.l.push(C);
                            b.Wc(C)
                        }
                    }
                    if (null !== g)
                        for (d = g.labelNodes; d.next();) d.value.measure(Infinity, Infinity);
                    a.gg = b;
                    a = a.location;
                    a.h(a.x + b.x, a.y + b.y);
                    sc(e, b.width || 0, b.height || 0);
                    Qc.free(h);
                    G.free(r);
                    G.free(u)
                }
            }
        }
    };
    wm.prototype.arrange = function(a, b) {
        var c = b.length;
        if (a instanceof pf || a instanceof S) {
            var d = null,
                e = null,
                f = null;
            a instanceof S && (e = d = a);
            a instanceof pf && (f = a, d = f.adornedPart);
            var g = a instanceof pf ? null : d.path;
            if (0 !== a.l.length) {
                var h = a.l,
                    k = 0;
                if (null !== g && k < a.l.length) {
                    var l = h[k];
                    k++;
                    g.arrange(l.x - a.gg.x, l.y - a.gg.y, l.width, l.height)
                }
                for (l = 0; l < c; l++) {
                    var m = b[l];
                    if (m !== g && k < a.l.length) {
                        var n = h[k];
                        k++;
                        m.arrange(n.x - a.gg.x, n.y - a.gg.y, n.width, n.height)
                    }
                }
            }
            b = d.points;
            c = b.count;
            if (2 <= c && a instanceof S)
                for (d =
                    a.labelNodes; d.next();) {
                    n = a;
                    g = d.value;
                    h = g.segmentIndex;
                    var p = g.segmentFraction;
                    l = g.alignmentFocus;
                    var q = g.segmentOrientation;
                    k = g.segmentOffset;
                    if (h < -c || h >= c) {
                        var r = n.midPoint;
                        m = n.midAngle;
                        q !== Ng && (n = n.computeAngle(g, q, m), g.angle = n);
                        n = r.x;
                        var u = r.y
                    } else {
                        var v = 0;
                        0 <= h ? (u = b.j[h], r = h < c - 1 ? b.j[h + 1] : u) : (v = c + h, u = b.j[v], r = 0 < v ? b.j[v - 1] : u);
                        if (u.Pa(r)) {
                            0 <= h ? (m = 0 < h ? b.j[h - 1] : u, v = h < c - 2 ? b.j[h + 2] : r) : (m = v < c - 1 ? b.j[v + 1] : u, v = 1 < v ? b.j[v - 2] : r);
                            var x = m.Be(u),
                                y = r.Be(v);
                            m = x > y + 10 ? 0 <= h ? m.Va(u) : u.Va(m) : y > x + 10 ? 0 <= h ? r.Va(v) : v.Va(r) :
                                0 <= h ? m.Va(v) : v.Va(m)
                        } else m = 0 <= h ? u.Va(r) : r.Va(u);
                        q !== Ng && (n = n.computeAngle(g, q, m), g.angle = n);
                        n = u.x + (r.x - u.x) * p;
                        u = u.y + (r.y - u.y) * p
                    }
                    l.bt() ? g.location = new G(n, u) : (l.mc() && (l = dd), r = Qc.alloc(), r.reset(), r.scale(g.scale, g.scale), r.rotate(g.angle, 0, 0), p = g.naturalBounds, p = N.allocAt(0, 0, p.width, p.height), q = G.alloc(), q.Pi(p, l), r.ta(q), l = -q.x, v = -q.y, k = k.copy(), isNaN(k.x) && (0 <= h ? k.x = q.x + 3 : k.x = -(q.x + 3)), isNaN(k.y) && (k.y = -(q.y + 3)), k.rotate(m), n += k.x, u += k.y, r.Ov(p), l += p.x, v += p.y, h = G.allocAt(n + l, u + v), g.move(h), G.free(h),
                        G.free(q), N.free(p), Qc.free(r))
                }
            null !== f ? f.bk(!1) : null !== e && e.bk(!1)
        }
    };

    function xm(a, b, c, d) {
        if (!1 !== kj(d)) {
            var e = d.strokeWidth;
            0 === e && a instanceof pf && a.type === W.Link && a.adornedObject instanceof V && (e = a.adornedObject.strokeWidth);
            e *= d.Ca;
            a instanceof S && null !== a.qa ? (a = a.qa.bounds, Uk(d, a.x - e / 2, a.y - e / 2, a.width + e, a.height + e)) : a instanceof pf && null !== a.adornedPart.qa ? (a = a.adornedPart.qa.bounds, Uk(d, a.x - e / 2, a.y - e / 2, a.width + e, a.height + e)) : Uk(d, -(e / 2), -(e / 2), b + e, c + e);
            fj(d, !1)
        }
    }

    function Dm() {
        this.name = "Base";
        this.name = "Graduated"
    }
    oa(Dm, zl);
    Dm.prototype.measure = function(a, b, c, d, e, f, g) {
        var h = a.Ab();
        a.dj = [];
        var k = h.margin,
            l = k.right + k.left,
            m = k.top + k.bottom;
        h.measure(b, c, f, g);
        var n = h.measuredBounds,
            p = new N(-k.left, -k.top, Math.max(n.width + l, 0), Math.max(n.height + m, 0));
        a.dj.push(p);
        e.assign(p);
        for (var q = h.geometry, r = h.strokeWidth, u = q.flattenedSegments, v = q.flattenedLengths, x = q.flattenedTotalLength, y = u.length, z = 0, B = 0, C = Ka(), I = 0; I < y; I++) {
            var J = u[I],
                K = [];
            B = z = 0;
            for (var X = J.length, Q = 0; Q < X; Q += 2) {
                var ia = J[Q],
                    ja = J[Q + 1];
                if (0 !== Q) {
                    var M = 180 * Math.atan2(ja -
                        B, ia - z) / Math.PI;
                    0 > M && (M += 360);
                    K.push(M)
                }
                z = ia;
                B = ja
            }
            C.push(K)
        }
        if (null === a.Lg) {
            for (var R = [], Aa = a.W.j, ob = Aa.length, Ha = 0; Ha < ob; Ha++) {
                var Da = Aa[Ha],
                    Fa = [];
                R.push(Fa);
                if (Da.visible)
                    for (var Ra = Da.interval, Ub = 0; Ub < ob; Ub++) {
                        var Za = Aa[Ub];
                        if (Za.visible && Da !== Za && !(Da instanceof V && !(Za instanceof V) || Da instanceof uh && !(Za instanceof uh))) {
                            var Wa = Za.interval;
                            Wa > Ra && Fa.push(Wa)
                        }
                    }
            }
            a.Lg = R
        }
        var Ma = a.Lg;
        var fa = a.W.j,
            ea = fa.length,
            hb = 0,
            jb = 0,
            Na = x;
        a.fj = [];
        for (var ce, Kd = 0; Kd < ea; Kd++) {
            var vb = fa[Kd];
            ce = [];
            if (vb.visible &&
                vb !== h) {
                var zf = vb.interval,
                    Eb = a.graduatedTickUnit;
                if (!(2 > Eb * zf * x / a.graduatedRange)) {
                    var pe = v[0][0],
                        Vc = 0,
                        Vb = 0;
                    jb = x * vb.graduatedStart - 1E-4;
                    Na = x * vb.graduatedEnd + 1E-4;
                    var Ld = Eb * zf,
                        Ec = a.graduatedTickBase;
                    if (Ec < a.graduatedMin) {
                        var He = (a.graduatedMin - Ec) / Ld;
                        He = 0 === He % 1 ? He : Math.floor(He + 1);
                        Ec += He * Ld
                    } else Ec > a.graduatedMin + Ld && (Ec -= Math.floor((Ec - a.graduatedMin) / Ld) * Ld);
                    for (var Ie = Ma[Kd]; Ec <= a.graduatedMax;) {
                        a: {
                            for (var Af = Ie.length, gf = 0; gf < Af; gf++)
                                if (H.ba((Ec - a.graduatedTickBase) % (Ie[gf] * a.graduatedTickUnit),
                                        0)) {
                                    var Bf = !1;
                                    break a
                                } Bf = !0
                        }
                        if (Bf && (null === vb.graduatedSkip || !vb.graduatedSkip(Ec)) && (hb = (Ec - a.graduatedMin) * x / a.graduatedRange, hb > x && (hb = x), jb <= hb && hb <= Na)) {
                            for (var Wb = C[Vc][Vb], Xa = v[Vc][Vb]; Vc < v.length;) {
                                for (; hb > pe && Vb < v[Vc].length - 1;) Vb++, Wb = C[Vc][Vb], Xa = v[Vc][Vb], pe += Xa;
                                if (hb <= pe) break;
                                Vc++;
                                Vb = 0;
                                Wb = C[Vc][Vb];
                                Xa = v[Vc][Vb];
                                pe += Xa
                            }
                            var $a = u[Vc],
                                Lc = $a[2 * Vb],
                                Cf = $a[2 * Vb + 1],
                                jc = (hb - (pe - Xa)) / Xa,
                                Md = new G(Lc + ($a[2 * Vb + 2] - Lc) * jc + r / 2 - q.bounds.x, Cf + ($a[2 * Vb + 3] - Cf) * jc + r / 2 - q.bounds.y);
                            Md.scale(h.scale, h.scale);
                            var qc = Wb,
                                Nd = C[Vc];
                            1E-4 > jc ? 0 < Vb ? qc = Nd[Vb - 1] : H.ba($a[0], $a[$a.length - 2]) && H.ba($a[1], $a[$a.length - 1]) && (qc = Nd[Nd.length - 1]) : .9999 < jc && (Vb + 1 < Nd.length ? qc = Nd[Vb + 1] : H.ba($a[0], $a[$a.length - 2]) && H.ba($a[1], $a[$a.length - 1]) && (qc = Nd[0]));
                            Wb !== qc && (180 < Math.abs(Wb - qc) && (Wb < qc ? Wb += 360 : qc += 360), Wb = (Wb + qc) / 2 % 360);
                            if (vb instanceof uh) {
                                var Xb = "";
                                null !== vb.graduatedFunction ? (Xb = vb.graduatedFunction(Ec), Xb = null !== Xb && void 0 !== Xb ? Xb.toString() : "") : Xb = (+Ec.toFixed(2)).toString();
                                "" !== Xb && ce.push([Md, Wb, Xb])
                            } else ce.push([Md,
                                Wb
                            ])
                        }
                        Ec += Ld
                    }
                }
            }
            a.fj.push(ce)
        }
        Oa(C);
        for (var Dh = a.fj, Eh = d.length, Je = 0; Je < Eh; Je++) {
            var pb = d[Je],
                Df = Dh[Je];
            if (pb.visible && pb !== h && 0 !== Df.length) {
                if (pb instanceof V) {
                    var Ke = a,
                        Yb = e,
                        Le = pb.alignmentFocus;
                    Le.mc() && (Le = Uc);
                    var Mc = pb.angle;
                    pb.Bc = 0;
                    pb.measure(Infinity, Infinity, 0, 0);
                    pb.Bc = Mc;
                    var db = pb.measuredBounds,
                        Me = db.width,
                        rb = db.height,
                        rc = N.allocAt(0, 0, Me, rb),
                        kb = G.alloc();
                    kb.Pi(rc, Le);
                    N.free(rc);
                    for (var Wc = -kb.x, Xc = -kb.y, xd = new N, Bg = Df.length, Ef = 0; Ef < Bg; Ef++)
                        for (var Ff = Df[Ef], hf = Ff[0].x, kd = Ff[0].y, Od = Ff[1],
                                ld = 0; 4 > ld; ld++) {
                            switch (ld) {
                                case 0:
                                    kb.h(Wc, Xc);
                                    break;
                                case 1:
                                    kb.h(Wc + Me, Xc);
                                    break;
                                case 2:
                                    kb.h(Wc, Xc + rb);
                                    break;
                                case 3:
                                    kb.h(Wc + Me, Xc + rb)
                            }
                            kb.rotate(Od + pb.angle);
                            kb.offset(hf, kd);
                            0 === Ef && 0 === ld ? xd.h(kb.x, kb.y, 0, 0) : xd.Ie(kb);
                            kb.offset(-hf, -kd);
                            kb.rotate(-Od - pb.angle)
                        }
                    G.free(kb);
                    Ke.dj.push(xd);
                    Bc(Yb, xd.x, xd.y, xd.width, xd.height)
                } else if (pb instanceof uh) {
                    var md = a,
                        nb = e;
                    null === md.eh && (md.eh = new uh);
                    var eb = md.eh;
                    Em(eb, pb);
                    var nd = pb.alignmentFocus;
                    nd.mc() && (nd = Uc);
                    for (var Yc = pb.segmentOrientation, od = pb.segmentOffset,
                            vc = null, Ba = 0, Zc = 0, Zb = 0, de = 0, Ne = Df.length, ee = 0; ee < Ne; ee++) {
                        var wc = Df[ee];
                        Ba = wc[0].x;
                        Zc = wc[0].y;
                        Zb = wc[1];
                        Yc !== Ng && (de = S.computeAngle(Yc, Zb), eb.Bc = de);
                        eb.text = wc[2];
                        eb.measure(Infinity, Infinity, 0, 0);
                        var qe = eb.measuredBounds,
                            $c = eb.naturalBounds,
                            wb = $c.width,
                            Pd = $c.height,
                            Mb = Qc.alloc();
                        Mb.reset();
                        Mb.translate(-qe.x, -qe.y);
                        Mb.scale(eb.scale, eb.scale);
                        Mb.rotate(Yc === Ng ? eb.angle : Zb, wb / 2, Pd / 2);
                        Yc !== ym && Yc !== zm || Mb.rotate(90, wb / 2, Pd / 2);
                        Yc !== Am && Yc !== Bm || Mb.rotate(-90, wb / 2, Pd / 2);
                        Yc === Cm && (45 < Zb && 135 > Zb || 225 < Zb &&
                            315 > Zb) && Mb.rotate(-Zb, wb / 2, Pd / 2);
                        var re = N.allocAt(0, 0, wb, Pd),
                            yd = G.alloc();
                        yd.Pi(re, nd);
                        Mb.ta(yd);
                        var fe = -yd.x,
                            Cg = -yd.y,
                            ad = G.alloc();
                        ad.assign(od);
                        isNaN(ad.x) && (ad.x = wb / 2 + 3);
                        isNaN(ad.y) && (ad.y = -(Pd / 2 + 3));
                        ad.rotate(Zb);
                        Ba += ad.x + fe;
                        Zc += ad.y + Cg;
                        var Oe = new N(Ba, Zc, qe.width, qe.height),
                            Dg = new N(qe.x, qe.y, qe.width, qe.height),
                            Gf = new N($c.x, $c.y, $c.width, $c.height),
                            Pe = new Fm;
                        Pe.Sl(eb.metrics);
                        wc.push(de);
                        wc.push(eb.lineCount);
                        wc.push(Pe);
                        wc.push(Oe);
                        wc.push(Dg);
                        wc.push(Gf);
                        0 === ee ? vc = Oe.copy() : vc.Wc(Oe);
                        G.free(ad);
                        G.free(yd);
                        N.free(re);
                        Qc.free(Mb)
                    }
                    md.dj.push(vc);
                    Bc(nb, vc.x, vc.y, vc.width, vc.height)
                }
                fj(pb, !1)
            }
        }
    };
    Dm.prototype.arrange = function(a, b, c) {
        if (null !== a.dj) {
            var d = a.Ab(),
                e = a.fj,
                f = a.dj,
                g = 0,
                h = f[g];
            g++;
            d.arrange(h.x - c.x, h.y - c.y, h.width, h.height);
            for (var k = b.length, l = 0; l < k; l++) {
                var m = b[l];
                h = e[l];
                m.visible && m !== d && 0 !== h.length && (h = f[g], g++, m.arrange(h.x - c.x, h.y - c.y, h.width, h.height))
            }
            a.dj = null
        }
    };

    function W(a) {
        Y.call(this);
        this.va = void 0 === a ? W.Position : a;
        null === this.va && A("Panel type not specified or PanelLayout not loaded: " + a);
        this.W = new E;
        this.fb = Oc;
        this.va === W.Grid && (this.isAtomic = !0);
        this.ln = Ed;
        this.Cf = Hk;
        this.va === W.Table && Gm(this);
        this.Dp = $g;
        this.Jn = kc;
        this.Kn = ac;
        this.Gn = 0;
        this.Fn = 100;
        this.In = 10;
        this.Hn = 0;
        this.Nh = this.jb = this.Lg = this.dj = this.fj = null;
        this.Xn = NaN;
        this.je = this.ci = null;
        this.Zk = "category";
        this.Gd = null;
        this.gg = new N(NaN, NaN, NaN, NaN);
        this.eh = this.ap = this.ri = null;
        this.xg = ""
    }
    oa(W, Y);

    function Gm(a) {
        a.$i = Oc;
        a.Fg = 1;
        a.Sh = null;
        a.Rh = null;
        a.Eg = 1;
        a.Dg = null;
        a.Qh = null;
        a.tb = [];
        a.ob = [];
        a.Bj = Hm;
        a.Yi = Hm;
        a.ui = 0;
        a.ei = 0
    }
    W.prototype.cloneProtected = function(a) {
        Y.prototype.cloneProtected.call(this, a);
        a.va = this.va;
        a.fb = this.fb.I();
        a.ln = this.ln.I();
        a.Cf = this.Cf;
        if (a.va === W.Table) {
            a.$i = this.$i.I();
            a.Fg = this.Fg;
            a.Sh = this.Sh;
            a.Rh = this.Rh;
            a.Eg = this.Eg;
            a.Dg = this.Dg;
            a.Qh = this.Qh;
            var b = [];
            if (0 < this.tb.length)
                for (var c = this.tb, d = c.length, e = 0; e < d; e++)
                    if (void 0 !== c[e]) {
                        var f = c[e].copy();
                        f.Oi(a);
                        b[e] = f
                    } a.tb = b;
            b = [];
            if (0 < this.ob.length)
                for (c = this.ob, d = c.length, e = 0; e < d; e++) void 0 !== c[e] && (f = c[e].copy(), f.Oi(a), b[e] = f);
            a.ob = b;
            a.Bj =
                this.Bj;
            a.Yi = this.Yi;
            a.ui = this.ui;
            a.ei = this.ei
        }
        a.Dp = this.Dp;
        a.Jn = this.Jn.I();
        a.Kn = this.Kn.I();
        a.Gn = this.Gn;
        a.Fn = this.Fn;
        a.In = this.In;
        a.Hn = this.Hn;
        a.fj = this.fj;
        a.Lg = this.Lg;
        a.jb = this.jb;
        a.Nh = this.Nh;
        a.Xn = this.Xn;
        a.ci = this.ci;
        a.je = this.je;
        a.Zk = this.Zk;
        a.gg.assign(this.gg);
        a.xg = this.xg;
        null !== this.ap && (a.ap = this.ap)
    };
    W.prototype.nf = function(a) {
        Y.prototype.nf.call(this, a);
        a.W = this.W;
        for (var b = a.W.j, c = b.length, d = 0; d < c; d++) b[d].Zf = a;
        a.ri = null
    };
    W.prototype.copy = function() {
        var a = Y.prototype.copy.call(this);
        if (null !== a) {
            for (var b = this.W.j, c = b.length, d = 0; d < c; d++) {
                var e = b[d].copy();
                e.Oi(a);
                e.wj = null;
                var f = a.W,
                    g = f.count;
                f.Jb(g, e);
                f = a.part;
                if (null !== f) {
                    f.rj = null;
                    null !== e.portId && f instanceof U && (f.uh = !0);
                    var h = a.diagram;
                    null !== h && h.undoManager.isUndoingRedoing || f.bb(cf, "elements", a, null, e, null, g)
                }
            }
            return a
        }
        return null
    };
    t = W.prototype;
    t.toString = function() {
        return "Panel(" + this.type + ")#" + Bb(this)
    };
    t.Bo = function(a) {
        Y.prototype.Bo.call(this, a);
        for (var b = this.W.j, c = b.length, d = 0; d < c; d++) b[d].Bo(a)
    };
    t.zi = function(a, b) {
        if (this.va === W.Grid) {
            b = this.Ce() * b.scale;
            0 >= b && (b = 1);
            var c = this.gridCellSize,
                d = c.width;
            c = c.height;
            var e = this.naturalBounds,
                f = this.actualBounds,
                g = e.width,
                h = e.height,
                k = Math.ceil(g / d),
                l = Math.ceil(h / c),
                m = this.gridOrigin;
            a.save();
            a.beginPath();
            a.rect(0, 0, g, h);
            a.clip();
            for (var n = [], p = this.W.j, q = p.length, r = 0; r < q; r++) {
                var u = p[r],
                    v = [];
                n.push(v);
                if (u.visible) {
                    u = Oj(u.figure);
                    for (var x = r + 1; x < q; x++) {
                        var y = p[x];
                        y.visible && Oj(y.figure) === u && (y = y.interval, 2 <= y && v.push(y))
                    }
                }
            }
            p = this.W.j;
            q = p.length;
            for (r = 0; r < q; r++) {
                var z = p[r];
                if (z.visible && (v = z.interval, !(2 > d * v * b))) {
                    u = z.opacity;
                    x = 1;
                    if (1 !== u) {
                        if (0 === u) continue;
                        x = a.globalAlpha;
                        a.globalAlpha = x * u
                    }
                    y = n[r];
                    var B = !1,
                        C = z.strokeDashArray;
                    null !== C && (B = !0, a.Ms(C, z.strokeDashOffset));
                    if ("LineV" === z.figure && null !== z.stroke) {
                        a.lineWidth = z.strokeWidth;
                        fi(this, a, z.stroke, !1, !1, e, f);
                        a.beginPath();
                        for (C = z = Math.floor(-m.x / d); C <= z + k; C++) {
                            var I = C * d + m.x;
                            0 <= I && I <= g && Im(C, v, y) && (a.moveTo(I, 0), a.lineTo(I, h))
                        }
                        a.stroke()
                    } else if ("LineH" === z.figure && null !== z.stroke) {
                        a.lineWidth =
                            z.strokeWidth;
                        fi(this, a, z.stroke, !1, !1, e, f);
                        a.beginPath();
                        for (C = z = Math.floor(-m.y / c); C <= z + l; C++) I = C * c + m.y, 0 <= I && I <= h && Im(C, v, y) && (a.moveTo(0, I), a.lineTo(g, I));
                        a.stroke()
                    } else if ("BarV" === z.figure && null !== z.fill)
                        for (fi(this, a, z.fill, !0, !1, e, f), z = z.width, isNaN(z) && (z = d), I = C = Math.floor(-m.x / d); I <= C + k; I++) {
                            var J = I * d + m.x;
                            0 <= J && J <= g && Im(I, v, y) && a.fillRect(J, 0, z, h)
                        } else if ("BarH" === z.figure && null !== z.fill)
                            for (fi(this, a, z.fill, !0, !1, e, f), z = z.height, isNaN(z) && (z = c), I = C = Math.floor(-m.y / c); I <= C + l; I++) J = I * c +
                                m.y, 0 <= J && J <= h && Im(I, v, y) && a.fillRect(0, J, g, z);
                    B && a.Ks();
                    1 !== u && (a.globalAlpha = x)
                }
            }
            a.restore();
            a.Sc(!1)
        } else if (this.va === W.Graduated) {
            d = b.ij;
            b.ij = !0;
            e = this.naturalBounds;
            c = e.width;
            e = e.height;
            a.save();
            a.beginPath();
            a.rect(-1, -1, c + 1, e + 1);
            a.clip();
            c = this.Ab();
            c.kc(a, b);
            e = this.Ce() * b.scale;
            0 >= e && (e = 1);
            f = c.actualBounds;
            g = this.W.j;
            h = this.fj;
            k = g.length;
            for (l = 0; l < k; l++)
                if (p = g[l], m = h[l], n = m.length, p.visible && p !== c && 0 !== m.length)
                    if (p instanceof V) {
                        if (!(2 > this.graduatedTickUnit * p.interval * e))
                            for (q = p.measuredBounds,
                                r = p.strokeWidth * p.scale, v = p.alignmentFocus, v.mc() && (v = Uc), u = 0; u < n; u++) x = m[u][0], y = m[u][1], B = v, z = p.ub, z.reset(), z.translate(x.x + f.x, x.y + f.y), z.rotate(y + p.angle, 0, 0), z.translate(-q.width * B.x + B.offsetX + r / 2, -q.height * B.y + B.offsetY + r / 2), z.scale(p.scale, p.scale), ml(p, !1), p.Ah.set(p.ub), p.Lk = p.scale, nl(p, !1), p.kc(a, b), p.ub.reset()
                    } else if (p instanceof uh)
                for (null === this.eh && (this.eh = new uh), q = this.eh, Em(q, p), p = 0; p < n; p++) u = m[p], 3 < u.length && (r = u[6], q.Ob = u[2], q.Bc = u[3], q.rc = u[4], q.pd = u[5], q.jc = u[8], q.arrange(r.x,
                    r.y, r.width, r.height), r = u[6], q.arrange(r.x, r.y, r.width, r.height), v = u[7], u = u[8], x = q.ub, x.reset(), x.translate(r.x + f.x, r.y + f.y), x.translate(-v.x, -v.y), Vk(q, x, u.x, u.y, u.width, u.height), ml(q, !1), q.Ah.set(q.ub), q.Lk = q.scale, nl(q, !1), q.kc(a, b));
            b.ij = d;
            a.restore();
            a.Sc(!0)
        } else {
            this.va === W.Table && (a.lineCap = "butt", Jm(this, a, !0, this.tb, !0), Jm(this, a, !1, this.ob, !0), Km(this, a, !0, this.tb), Km(this, a, !1, this.ob), Jm(this, a, !0, this.tb, !1), Jm(this, a, !1, this.ob, !1));
            (d = this.isClipping) && a.save();
            c = this.Ab();
            e = this.W.j;
            f = e.length;
            for (g = 0; g < f; g++) h = e[g], d && h === c && (a.clipInsteadOfFill = !0), h.kc(a, b), d && h === c && (a.clipInsteadOfFill = !1);
            d && (a.restore(), a.Sc(!0))
        }
    };

    function Km(a, b, c, d) {
        for (var e = d.length, f = a.actualBounds, g = a.naturalBounds, h = !0, k = 0; k < e; k++) {
            var l = d[k];
            if (void 0 !== l)
                if (h) h = !1;
                else if (0 !== l.actual) {
                if (c) {
                    if (l.position > f.height) continue
                } else if (l.position > f.width) continue;
                var m = l.separatorStrokeWidth;
                isNaN(m) && (m = c ? a.Fg : a.Eg);
                var n = l.separatorStroke;
                null === n && (n = c ? a.Sh : a.Dg);
                if (0 !== m && null !== n) {
                    fi(a, b, n, !1, !1, g, f);
                    n = !1;
                    var p = l.separatorDashArray;
                    null === p && (p = c ? a.Rh : a.Qh);
                    null !== p && (n = !0, b.Ms(p, 0));
                    b.beginPath();
                    p = l.position + m;
                    c ? p > f.height && (m -=
                        p - f.height) : p > f.width && (m -= p - f.width);
                    l = l.position + m / 2;
                    b.lineWidth = m;
                    m = a.fb;
                    c ? (l += m.top, p = f.width - m.right, b.moveTo(m.left, l), b.lineTo(p, l)) : (l += m.left, p = f.height - m.bottom, b.moveTo(l, m.top), b.lineTo(l, p));
                    b.stroke();
                    n && b.Ks()
                }
            }
        }
    }

    function Jm(a, b, c, d, e) {
        for (var f = d.length, g = a.actualBounds, h = a.naturalBounds, k = 0; k < f; k++) {
            var l = d[k];
            if (void 0 !== l && null !== l.background && l.coversSeparators !== e && 0 !== l.actual) {
                var m = c ? g.height : g.width;
                if (!(l.position > m)) {
                    var n = l.vc(),
                        p = l.separatorStrokeWidth;
                    isNaN(p) && (p = c ? a.Fg : a.Eg);
                    var q = l.separatorStroke;
                    null === q && (q = c ? a.Sh : a.Dg);
                    null === q && (p = 0);
                    n -= p;
                    p = l.position + p;
                    n += l.actual;
                    p + n > m && (n = m - p);
                    0 >= n || (m = a.fb, fi(a, b, l.background, !0, !1, h, g), c ? b.fillRect(m.left, p + m.top, g.width - (m.left + m.right), n) : b.fillRect(p +
                        m.left, m.top, n, g.height - (m.top + m.bottom)))
                }
            }
        }
    }

    function Im(a, b, c) {
        if (0 !== a % b) return !1;
        b = c.length;
        for (var d = 0; d < b; d++)
            if (0 === a % c[d]) return !1;
        return !0
    }

    function Oj(a) {
        return "LineV" === a || "BarV" === a
    }
    t.Xj = function(a, b, c, d, e) {
        var f = this.$d(),
            g = this.transform,
            h = 1 / (g.m11 * g.m22 - g.m12 * g.m21),
            k = g.m22 * h,
            l = -g.m12 * h,
            m = -g.m21 * h,
            n = g.m11 * h,
            p = h * (g.m21 * g.dy - g.m22 * g.dx),
            q = h * (g.m12 * g.dx - g.m11 * g.dy);
        if (null !== this.areaBackground) return g = this.actualBounds, H.Uc(g.left, g.top, g.right, g.bottom, a, b, c, d, e);
        if (null !== this.background) return f = a * k + b * m + p, h = a * l + b * n + q, a = c * k + d * m + p, k = c * l + d * n + q, e.h(0, 0), c = this.naturalBounds, f = H.Uc(0, 0, c.width, c.height, f, h, a, k, e), e.transform(g), f;
        f || (k = 1, m = l = 0, n = 1, q = p = 0);
        h = a * k + b * m + p;
        a = a * l + b *
            n + q;
        k = c * k + d * m + p;
        c = c * l + d * n + q;
        e.h(k, c);
        d = (k - h) * (k - h) + (c - a) * (c - a);
        l = !1;
        n = this.W.j;
        q = n.length;
        m = G.alloc();
        p = null;
        b = Infinity;
        var r = null;
        this.isClipping && (r = G.alloc(), p = this.Ab(), (l = p.Xj(h, a, k, c, r)) && (b = (h - r.x) * (h - r.x) + (a - r.y) * (a - r.y)));
        for (var u = 0; u < q; u++) {
            var v = n[u];
            v.visible && v !== p && v.Xj(h, a, k, c, m) && (l = !0, v = (h - m.x) * (h - m.x) + (a - m.y) * (a - m.y), v < d && (d = v, e.set(m)))
        }
        this.isClipping && (b > d && e.set(r), G.free(r));
        G.free(m);
        f && e.transform(g);
        return l
    };
    t.o = function(a) {
        Y.prototype.o.call(this, a);
        a = null;
        if (this.va === W.Auto || this.va === W.Link) a = this.Ab();
        for (var b = this.W.j, c = b.length, d = 0; d < c; d++) {
            var e = b[d];
            (e === a || e.isPanelMain) && e.o(!0);
            if (!e.desiredSize.s()) {
                var f = Xk(e, !1);
                (e instanceof Wg || e instanceof W || e instanceof uh || f !== Yg) && e.o(!0)
            }
        }
    };
    t.am = function() {
        if (!1 === kj(this)) {
            fj(this, !0);
            Yk(this, !0);
            for (var a = this.W.j, b = a.length, c = 0; c < b; c++) a[c].am()
        }
    };
    t.Yk = function() {
        if (0 !== (this.G & 2048) === !1) {
            ml(this, !0);
            nl(this, !0);
            for (var a = this.W.j, b = a.length, c = 0; c < b; c++) a[c].cv()
        }
    };
    t.cv = function() {
        nl(this, !0);
        for (var a = this.W.j, b = a.length, c = 0; c < b; c++) a[c].cv()
    };
    t.em = function(a, b, c, d) {
        var e = this.gg;
        e.h(0, 0, 0, 0);
        var f = this.desiredSize,
            g = this.minSize;
        void 0 === c && (c = g.width, d = g.height);
        c = Math.max(c, g.width);
        d = Math.max(d, g.height);
        var h = this.maxSize;
        isNaN(f.width) || (a = Math.min(f.width, h.width));
        isNaN(f.height) || (b = Math.min(f.height, h.height));
        a = Math.max(c, a);
        b = Math.max(d, b);
        var k = this.fb;
        a = Math.max(a - k.left - k.right, 0);
        b = Math.max(b - k.top - k.bottom, 0);
        var l = this.W.j;
        0 !== l.length && this.va.measure(this, a, b, l, e, c, d);
        a = e.width + k.left + k.right;
        k = e.height + k.top + k.bottom;
        isFinite(f.width) && (a = f.width);
        isFinite(f.height) && (k = f.height);
        a = Math.min(h.width, a);
        k = Math.min(h.height, k);
        a = Math.max(g.width, a);
        k = Math.max(g.height, k);
        a = Math.max(c, a);
        k = Math.max(d, k);
        sc(e, a, k);
        sc(this.naturalBounds, a, k);
        Uk(this, 0, 0, a, k)
    };
    t.Ab = function() {
        if (null === this.ri) {
            var a = this.W.j,
                b = a.length;
            if (0 === b) return null;
            for (var c = 0; c < b; c++) {
                var d = a[c];
                if (!0 === d.isPanelMain) return this.ri = d
            }
            this.ri = a[0]
        }
        return this.ri
    };

    function im(a) {
        return null !== a.part ? a.part.locationObject : null
    }
    t.oh = function(a, b, c, d) {
        var e = this.W.j;
        this.actualBounds.h(a, b, c, d);
        if (0 !== e.length) {
            if (!this.desiredSize.s()) {
                a = Xk(this, !0);
                var f = this.measuredBounds;
                b = f.width;
                f = f.height;
                var g = this.Sg,
                    h = g.left + g.right;
                g = g.top + g.bottom;
                b === c && f === d && (a = Yg);
                switch (a) {
                    case Yg:
                        if (b > c || f > d) this.o(), this.measure(b > c ? c : b, f > d ? d : f, 0, 0);
                        break;
                    case be:
                        this.o(!0);
                        this.measure(c + h, d + g, 0, 0);
                        break;
                    case Ik:
                        this.o(!0);
                        this.measure(c + h, f + g, 0, 0);
                        break;
                    case Jk:
                        this.o(!0), this.measure(b + h, d + g, 0, 0)
                }
            }
            this.va.arrange(this, e, this.gg)
        }
    };
    t.qh = function(a) {
        var b = this.naturalBounds,
            c = im(this);
        if (Cc(0, 0, b.width, b.height, a.x, a.y)) {
            b = this.W.j;
            for (var d = b.length, e = G.allocAt(0, 0); d--;) {
                var f = b[d];
                if (f.visible || f === c)
                    if (Qb(e.set(a), f.transform), f.ea(e)) return G.free(e), !0
            }
            G.free(e);
            return null === this.ib && null === this.fc ? !1 : !0
        }
        return !1
    };
    t.Ns = function(a) {
        if (this.wk === a) return this;
        for (var b = this.W.j, c = b.length, d = 0; d < c; d++) {
            var e = b[d].Ns(a);
            if (null !== e) return e
        }
        return null
    };
    t.vm = function(a, b) {
        b(this, a);
        if (a instanceof W) {
            a = a.W.j;
            for (var c = a.length, d = 0; d < c; d++) this.vm(a[d], b)
        }
    };

    function xj(a, b) {
        Lm(a, a, b)
    }

    function Lm(a, b, c) {
        c(b);
        b = b.W.j;
        for (var d = b.length, e = 0; e < d; e++) {
            var f = b[e];
            f instanceof W && Lm(a, f, c)
        }
    }

    function Mm(a, b) {
        Nm(a, a, b)
    }

    function Nm(a, b, c) {
        c(b);
        if (b instanceof W) {
            b = b.W.j;
            for (var d = b.length, e = 0; e < d; e++) Nm(a, b[e], c)
        }
    }
    t.Vl = function(a) {
        return Om(this, this, a)
    };

    function Om(a, b, c) {
        if (c(b)) return b;
        if (b instanceof W) {
            b = b.W.j;
            for (var d = b.length, e = 0; e < d; e++) {
                var f = Om(a, b[e], c);
                if (null !== f) return f
            }
        }
        return null
    }
    t.ab = function(a) {
        if (this.name === a) return this;
        var b = this.W.j,
            c = b.length;
        null === this.ci && null === this.je || (c = Pm(this));
        for (var d = 0; d < c; d++) {
            var e = b[d];
            if (e instanceof W) {
                var f = e.ab(a);
                if (null !== f) return f
            }
            if (e.name === a) return e
        }
        return null
    };

    function Qm(a) {
        a = a.W.j;
        for (var b = a.length, c = 0, d = 0; d < b; d++) {
            var e = a[d];
            if (e instanceof W) c = Math.max(c, Qm(e));
            else if (e instanceof V) {
                a: {
                    switch (e.Nk) {
                        case "None":
                        case "Square":
                        case "Ellipse":
                        case "Circle":
                        case "LineH":
                        case "LineV":
                        case "FramedRectangle":
                        case "RoundedRectangle":
                        case "Line1":
                        case "Line2":
                        case "Border":
                        case "Cube1":
                        case "Cube2":
                        case "Junction":
                        case "Cylinder1":
                        case "Cylinder2":
                        case "Cylinder3":
                        case "Cylinder4":
                        case "PlusLine":
                        case "XLine":
                        case "ThinCross":
                        case "ThickCross":
                            e = 0;
                            break a
                    }
                    e =
                    e.dh / 2 * e.Ej * e.Ce()
                }
                c = Math.max(c, e)
            }
        }
        return c
    }
    t.$d = function() {
        return !(this.type === W.TableRow || this.type === W.TableColumn)
    };
    t.Rb = function(a, b, c) {
        if (!1 === this.pickable) return null;
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        if (lj(this)) return null;
        var d = this.naturalBounds,
            e = 1 / this.Ce(),
            f = this.$d(),
            g = f ? a : Qb(G.allocAt(a.x, a.y), this.transform),
            h = this.diagram,
            k = 10,
            l = 5;
        null !== h && (k = h.Zl("extraTouchArea"), l = k / 2);
        if (Cc(-(l * e), -(l * e), d.width + k * e, d.height + k * e, g.x, g.y)) {
            if (!this.isAtomic) {
                e = this.W.j;
                var m = e.length;
                h = G.alloc();
                l = (k = this.isClipping) ? this.Ab() : null;
                if (k && (l.$d() ? Qb(h.set(a), l.transform) : h.set(a), !l.ea(h))) return G.free(h),
                    f || G.free(g), null;
                for (var n = im(this); m--;) {
                    var p = e[m];
                    if (p.visible || p === n)
                        if (p.$d() ? Qb(h.set(a), p.transform) : h.set(a), !k || p !== l) {
                            var q = null;
                            p instanceof W ? q = p.Rb(h, b, c) : !0 === p.pickable && p.ea(h) && (q = p);
                            if (null !== q && (null !== b && (q = b(q)), null !== q && (null === c || c(q)))) return G.free(h), f || G.free(g), q
                        }
                }
                G.free(h)
            }
            if (null === this.background && null === this.areaBackground) return f || G.free(g), null;
            a = Cc(0, 0, d.width, d.height, g.x, g.y) ? this : null;
            f || G.free(g);
            return a
        }
        f || G.free(g);
        return null
    };
    t.Ci = function(a, b, c, d) {
        if (!1 === this.pickable) return !1;
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        d instanceof E || d instanceof F || (d = new E);
        var e = this.naturalBounds,
            f = this.$d(),
            g = f ? a : Qb(G.allocAt(a.x, a.y), this.transform);
        e = Cc(0, 0, e.width, e.height, g.x, g.y);
        if (this.type === W.TableRow || this.type === W.TableColumn || e) {
            if (!this.isAtomic) {
                for (var h = this.W.j, k = h.length, l = G.alloc(), m = im(this); k--;) {
                    var n = h[k];
                    if (n.visible || n === m) {
                        n.$d() ? Qb(l.set(a), n.transform) : l.set(a);
                        var p = n;
                        n = n instanceof W ? n : null;
                        (null !==
                            n ? n.Ci(l, b, c, d) : p.ea(l)) && !1 !== p.pickable && (null !== b && (p = b(p)), null === p || null !== c && !c(p) || d.add(p))
                    }
                }
                G.free(l)
            }
            f || G.free(g);
            return e && (null !== this.background || null !== this.areaBackground)
        }
        f || G.free(g);
        return !1
    };
    t.lg = function(a, b, c, d, e, f) {
        if (!1 === this.pickable) return !1;
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        var g = f;
        void 0 === f && (g = Qc.alloc(), g.reset());
        g.multiply(this.transform);
        if (this.ph(a, g)) return Rm(this, b, c, e), void 0 === f && Qc.free(g), !0;
        if (this.Kc(a, g)) {
            if (!this.isAtomic)
                for (var h = im(this), k = this.W.j, l = k.length; l--;) {
                    var m = k[l];
                    if (m.visible || m === h) {
                        var n = m.actualBounds,
                            p = this.naturalBounds;
                        if (!(n.x > p.width || n.y > p.height || 0 > n.x + n.width || 0 > n.y + n.height)) {
                            n = m;
                            m = m instanceof W ? m : null;
                            p = Qc.alloc();
                            p.set(g);
                            if (null !== m ? m.lg(a, b, c, d, e, p) : Wk(n, a, d, p)) null !== b && (n = b(n)), null === n || null !== c && !c(n) || e.add(n);
                            Qc.free(p)
                        }
                    }
                }
            void 0 === f && Qc.free(g);
            return d
        }
        void 0 === f && Qc.free(g);
        return !1
    };

    function Rm(a, b, c, d) {
        for (var e = a.W.j, f = e.length; f--;) {
            var g = e[f];
            if (g.visible) {
                var h = g.actualBounds,
                    k = a.naturalBounds;
                h.x > k.width || h.y > k.height || 0 > h.x + h.width || 0 > h.y + h.height || (g instanceof W && Rm(g, b, c, d), null !== b && (g = b(g)), null === g || null !== c && !c(g) || d.add(g))
            }
        }
    }
    t.mg = function(a, b, c, d, e, f) {
        if (!1 === this.pickable) return !1;
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        var g = this.naturalBounds,
            h = this.$d(),
            k = h ? a : Qb(G.allocAt(a.x, a.y), this.transform),
            l = h ? b : Qb(G.allocAt(b.x, b.y), this.transform),
            m = k.Be(l),
            n = 0 < k.x && k.x < g.width && 0 < k.y && k.y < g.height || Rb(k.x, k.y, 0, 0, 0, g.height) <= m || Rb(k.x, k.y, 0, g.height, g.width, g.height) <= m || Rb(k.x, k.y, g.width, g.height, g.width, 0) <= m || Rb(k.x, k.y, g.width, 0, 0, 0) <= m;
        g = k.ed(0, 0) <= m && k.ed(0, g.height) <= m && k.ed(g.width, 0) <= m && k.ed(g.width, g.height) <=
            m;
        h || (G.free(k), G.free(l));
        if (n) {
            if (!this.isAtomic) {
                k = G.alloc();
                l = G.alloc();
                m = im(this);
                for (var p = this.W.j, q = p.length; q--;) {
                    var r = p[q];
                    if (r.visible || r === m) {
                        var u = r.actualBounds,
                            v = this.naturalBounds;
                        if (!h || !(u.x > v.width || u.y > v.height || 0 > u.x + u.width || 0 > u.y + u.height))
                            if (r.$d() ? (u = r.transform, Qb(k.set(a), u), Qb(l.set(b), u)) : (k.set(a), l.set(b)), u = r, r = r instanceof W ? r : null, null !== r ? r.mg(k, l, c, d, e, f) : u.ex(k, l, e)) null !== c && (u = c(u)), null === u || null !== d && !d(u) || f.add(u)
                    }
                }
                G.free(k);
                G.free(l)
            }
            return e ? n : g
        }
        return !1
    };

    function nm(a) {
        var b = null;
        a instanceof V && (b = a.spot1, b === Ed && (b = null), a = a.geometry, null !== a && null === b && (b = a.spot1));
        null === b && (b = Tc);
        return b
    }

    function om(a) {
        var b = null;
        a instanceof V && (b = a.spot2, b === Ed && (b = null), a = a.geometry, null !== a && null === b && (b = a.spot2));
        null === b && (b = hd);
        return b
    }
    t.add = function(a) {
        this.Jb(this.W.count, a)
    };
    t.N = function(a) {
        return this.W.N(a)
    };
    t.Jb = function(a, b) {
        b instanceof T && A("Cannot add a Part to a Panel: " + b + "; use a Panel instead");
        if (this === b || this.pg(b)) this === b && A("Cannot make a Panel contain itself: " + this.toString()), A("Cannot make a Panel indirectly contain itself: " + this.toString() + " already contains " + b.toString());
        var c = b.panel;
        null !== c && c !== this && A("Cannot add a GraphObject that already belongs to another Panel to this Panel: " + b.toString() + ", already contained by " + c.toString() + ", cannot be shared by this Panel: " + this.toString());
        this.va !== W.Grid || b instanceof V || A("Can only add Shapes to a Grid Panel, not: " + b);
        this.va !== W.Graduated || b instanceof V || b instanceof uh || A("Can only add Shapes or TextBlocks to a Graduated Panel, not: " + b);
        b.Oi(this);
        b.wj = null;
        if (null !== this.itemArray) {
            var d = b.data;
            null !== d && "object" === typeof d && (null === this.Gd && (this.Gd = new Lb), this.Gd.add(d, b))
        }
        var e = this.W;
        d = -1;
        if (c === this) {
            for (var f = -1, g = this.W.j, h = g.length, k = 0; k < h; k++)
                if (g[k] === b) {
                    f = k;
                    break
                } if (-1 !== f) {
                if (f === a || f + 1 >= e.count && a >= e.count) return;
                e.mb(f);
                d = f
            } else A("element " + b.toString() + " has panel " + c.toString() + " but is not contained by it.")
        }
        if (0 > a || a > e.count) a = e.count;
        e.Jb(a, b);
        if (0 === a || b.isPanelMain) this.ri = null;
        kj(this) || this.o();
        b.o(!1);
        null !== b.portId ? this.uh = !0 : b instanceof W && !0 === b.uh && (this.uh = !0);
        this.Lg = null;
        c = this.part;
        null !== c && (c.rj = null, c.Tg = NaN, this.uh && c instanceof U && (c.uh = !0), c.uh && c instanceof U && (c.tc = null), e = this.diagram, null !== e && e.undoManager.isUndoingRedoing || (-1 !== d && c.bb(df, "elements", this, b, null, d, null), c.bb(cf,
            "elements", this, null, b, null, a), this.qg() || Sm(this, b, !1)))
    };

    function Tm(a, b) {
        a.G = b ? a.G | 16777216 : a.G & -16777217
    }
    t.remove = function(a) {
        for (var b = this.W.j, c = b.length, d = -1, e = 0; e < c; e++)
            if (b[e] === a) {
                d = e;
                break
            } - 1 !== d && this.zc(d, !0)
    };
    t.mb = function(a) {
        0 <= a && this.zc(a, !0)
    };
    t.zc = function(a, b) {
        var c = this.W,
            d = c.N(a);
        d.wj = null;
        d.Oi(null);
        if (null !== this.Gd) {
            var e = d.data;
            "object" === typeof e && this.Gd.remove(e)
        }
        c.mb(a);
        fj(this, !1);
        this.o();
        this.ri === d && (this.ri = null);
        this.Lg = null;
        var f = this.part;
        null !== f && (f.rj = null, f.Tg = NaN, f.Kb(), f instanceof U && (d instanceof W ? d.vm(d, function(a, c) {
            Cl(f, c, b)
        }) : Cl(f, d, b)), c = this.diagram, null !== c && c.undoManager.isUndoingRedoing || f.bb(df, "elements", this, d, null, a, null))
    };
    W.prototype.getRowDefinition = function(a) {
        0 > a && xa(a, ">= 0", W, "getRowDefinition:idx");
        a = Math.round(a);
        var b = this.tb;
        if (void 0 === b) return null;
        if (void 0 === b[a]) {
            var c = new Mj;
            c.Oi(this);
            c.isRow = !0;
            c.index = a;
            b[a] = c
        }
        return b[a]
    };
    W.prototype.uv = function(a) {
        0 > a && xa(a, ">= 0", W, "removeRowDefinition:idx");
        a = Math.round(a);
        var b = this.tb;
        void 0 !== b && (this.bb(df, "coldefs", this, b[a], null, a, null), b[a] && delete b[a], this.o())
    };
    W.prototype.getColumnDefinition = function(a) {
        0 > a && xa(a, ">= 0", W, "getColumnDefinition:idx");
        a = Math.round(a);
        var b = this.ob;
        if (void 0 === b) return null;
        if (void 0 === b[a]) {
            var c = new Mj;
            c.Oi(this);
            c.isRow = !1;
            c.index = a;
            b[a] = c
        }
        return b[a]
    };
    t = W.prototype;
    t.sv = function(a) {
        0 > a && xa(a, ">= 0", W, "removeColumnDefinition:idx");
        a = Math.round(a);
        var b = this.ob;
        void 0 !== b && (this.bb(df, "coldefs", this, b[a], null, a, null), b[a] && delete b[a], this.o())
    };
    t.Ky = function(a) {
        if (0 > a || this.type !== W.Table) return -1;
        for (var b = 0, c = this.tb, d = c.length, e = this.ui; e < d; e++) {
            var f = c[e];
            if (void 0 !== f && (b += f.total, a < b)) break
        }
        return e
    };
    t.Cy = function(a) {
        if (0 > a || this.type !== W.Table) return -1;
        for (var b = 0, c = this.ob, d = c.length, e = this.ei; e < d; e++) {
            var f = c[e];
            if (void 0 !== f && (b += f.total, a < b)) break
        }
        return e
    };
    t.bz = function(a, b) {
        void 0 === b && (b = new G(NaN, NaN));
        if (this.type !== W.Graduated) return b.h(NaN, NaN), b;
        a = Math.min(Math.max(a, this.graduatedMin), this.graduatedMax);
        var c = this.Ab();
        c.geometry.Xu((a - this.graduatedMin) / this.graduatedRange, b);
        return c.transform.ta(b)
    };
    t.cz = function(a) {
        if (this.type !== W.Graduated) return NaN;
        var b = this.Ab();
        b.transform.Vd(a);
        return b.geometry.ix(a) * this.graduatedRange + this.graduatedMin
    };

    function ul(a) {
        a = a.Nh;
        return null !== a && a.v
    }

    function Xg(a) {
        var b = a.Nh;
        if (null === b) null !== a.data && A("Template cannot have .data be non-null: " + a), a.Nh = b = new E;
        else if (b.v) return;
        var c = new E;
        Tm(a, !1);
        a.vm(a, function(a, d) {
            var e = d.cb;
            if (null !== e)
                for (rl(d, !1), e = e.iterator; e.next();) {
                    var f = e.value;
                    f.mode === Um && rl(d, !0);
                    var g = f.sourceName;
                    null !== g && ("/" === g && Tm(a, !0), g = Tk(f, a, d), null !== g && (c.add(g), null === g.zl && (g.zl = new E), g.zl.add(f)));
                    b.add(f)
                }
            if (d instanceof W && d.type === W.Table) {
                if (0 < d.tb.length)
                    for (a = d.tb, e = a.length, f = 0; f < e; f++)
                        if (g = a[f], void 0 !==
                            g && null !== g.cb)
                            for (var h = g.cb.iterator; h.next();) {
                                var k = h.value;
                                k.Rd = g;
                                k.tp = 2;
                                k.Jl = g.index;
                                b.add(k)
                            }
                if (0 < d.ob.length)
                    for (d = d.ob, a = d.length, e = 0; e < a; e++)
                        if (f = d[e], void 0 !== f && null !== f.cb)
                            for (g = f.cb.iterator; g.next();) h = g.value, h.Rd = f, h.tp = 1, h.Jl = f.index, b.add(h)
            }
        });
        for (var d = c.iterator; d.next();) {
            var e = d.value;
            if (null !== e.zl) {
                rl(e, !0);
                for (var f = e.zl.iterator; f.next();) {
                    var g = f.value;
                    null === e.cb && (e.cb = new E);
                    e.cb.add(g)
                }
            }
            e.zl = null
        }
        for (d = b.iterator; d.next();)
            if (e = d.value, f = e.Rd, null !== f) {
                e.Rd = null;
                var h =
                    e.targetProperty,
                    k = h.indexOf(".");
                0 < k && f instanceof W && (g = h.substring(0, k), h = h.substr(k + 1), k = f.ab(g), null !== k ? (f = k, e.targetProperty = h) : ya('Warning: unable to find GraphObject named "' + g + '" for Binding: ' + e.toString()));
                f instanceof Mj ? (g = Bb(f.panel), e.Ti = void 0 === g ? -1 : g, f.panel.wk = e.Ti) : f instanceof Y ? (g = Bb(f), e.Ti = void 0 === g ? -1 : g, f.wk = e.Ti) : A("Unknown type of binding target: " + f)
            } b.freeze();
        a instanceof T && a.dc() && a.bc()
    }
    t.py = function() {
        var a = this.copy();
        Mm(a, function(a) {
            a instanceof W && (a.Nh = null, a.jb = null);
            var b = a.cb;
            null !== b && (a.cb = null, b.each(function(b) {
                a.bind(b.copy())
            }))
        });
        return a
    };
    t.Ea = function(a) {
        var b = this.Nh;
        if (null !== b)
            for (void 0 === a && (a = ""), b = b.iterator; b.next();) {
                var c = b.value,
                    d = c.sourceProperty;
                if ("" === a || "" === d || d === a)
                    if (d = c.targetProperty, null !== c.converter || "" !== d) {
                        d = this.data;
                        var e = c.sourceName;
                        if (null !== e) d = "" === e ? this : "/" === e ? this : "." === e ? this : ".." === e ? this : this.ab(e);
                        else {
                            var f = this.diagram;
                            null !== f && c.isToModel && (d = f.model.modelData)
                        }
                        if (null !== d) {
                            f = this;
                            var g = c.Ti;
                            if (-1 !== g) {
                                if (f = this.Ns(g), null === f) continue
                            } else null !== c.Rd && (f = c.Rd);
                            "/" === e ? d = f.part : "." ===
                                e ? d = f : ".." === e && (d = f.panel);
                            e = c.tp;
                            if (0 !== e) {
                                if (!(f instanceof W)) continue;
                                1 === e ? f = f.getColumnDefinition(c.Jl) : 2 === e && (f = f.getRowDefinition(c.Jl))
                            }
                            void 0 !== f && c.Rv(f, d)
                        }
                    }
            }
    };

    function Vm(a, b) {
        a = a.W.j;
        for (var c = a.length, d = b.length, e = 0, f = null; e < c && !(f = a[e], f instanceof W && null !== f.data);) e++, f = a[e];
        if (c - e !== d) return !0;
        if (null === f) return 0 < d;
        for (var g = 0; e < c && g < d;) {
            f = a[e];
            if (!(f instanceof W) || f.data !== b[g]) return !0;
            e++;
            g++
        }
        return !1
    }

    function Pm(a) {
        if (a.type === W.Spot || a.type === W.Auto) return Math.min(a.W.length, 1);
        if (a.type === W.Link) {
            a = a.W;
            for (var b = a.length, c = 0; c < b; c++) {
                var d = a.N(c);
                if (!(d instanceof V && d.isPanelMain)) break
            }
            return c
        }
        return a.type === W.Table && 0 < a.W.length && (a = a.W.N(0), a.isPanelMain && a instanceof W && (a.type === W.TableRow || a.type === W.TableColumn)) ? 1 : 0
    }
    t.kt = function() {
        for (var a = Pm(this); this.W.length > a;) this.zc(this.W.length - 1, !1);
        a = this.itemArray;
        if (null !== a)
            for (var b = a.length, c = 0; c < b; c++) Wm(this, a[c], c)
    };
    t.bx = function(a) {
        return void 0 === a || null === a || null === this.Gd ? null : this.Gd.J(a)
    };

    function Wm(a, b, c) {
        if (!(void 0 === b || null === b || 0 > c)) {
            var d = Xm(a, b),
                e = a.itemTemplateMap,
                f = null;
            null !== e && (f = e.J(d));
            null === f && (Ym || (Ym = !0, ya('No item template Panel found for category "' + d + '" on ' + a), ya("  Using default item template."), d = new W, e = new uh, e.bind(new Ai("text", "", Qa)), d.add(e), Zm = d), f = Zm);
            d = f;
            null !== d && (Xg(d), d = d.copy(), 0 !== (d.G & 16777216) && (e = a.sh(), null !== e && Tm(e, !0)), "object" === typeof b && (null === a.Gd && (a.Gd = new Lb), a.Gd.add(b, d)), e = c + Pm(a), a.Jb(e, d), d.jb = b, $m(a, e, c), d.jb = null, d.data =
                b)
        }
    }

    function $m(a, b, c) {
        for (a = a.W; b < a.length;) {
            var d = a.N(b);
            if (d instanceof W) {
                var e = b,
                    f = c;
                d.type === W.TableRow ? d.row = e : d.type === W.TableColumn && (d.column = e);
                d.itemIndex = f
            }
            b++;
            c++
        }
    }

    function Xm(a, b) {
        if (null === b) return "";
        a = a.Zk;
        if ("function" === typeof a) a = a(b);
        else if ("string" === typeof a && "object" === typeof b) {
            if ("" === a) return "";
            a = an(b, a)
        } else return "";
        if (void 0 === a) return "";
        if ("string" === typeof a) return a;
        A("Panel.getCategoryForItemData found a non-string category for " + b + ": " + a);
        return ""
    }

    function Sm(a, b, c) {
        var d = b.enabledChanged;
        null !== d && d(b, c);
        if (b instanceof W) {
            b = b.W.j;
            d = b.length;
            for (var e = 0; e < d; e++) {
                var f = b[e];
                c && f instanceof W && !f.isEnabled || Sm(a, f, c)
            }
        }
    }

    function bn(a, b) {
        yl.add(a, b)
    }
    pa.Object.defineProperties(W.prototype, {
        type: {
            get: function() {
                return this.va
            },
            set: function(a) {
                var b = this.va;
                b !== a && (this.va = a, this.va === W.Grid ? this.isAtomic = !0 : this.va === W.Table && Gm(this), this.o(), this.g("type", b, a))
            }
        },
        elements: {
            get: function() {
                return this.W.iterator
            }
        },
        naturalBounds: {
            get: function() {
                return this.jc
            }
        },
        padding: {
            get: function() {
                return this.fb
            },
            set: function(a) {
                "number" ===
                typeof a ? (0 > a && xa(a, ">= 0", W, "padding"), a = new Ic(a)) : (0 > a.left && xa(a.left, ">= 0", W, "padding:value.left"), 0 > a.right && xa(a.right, ">= 0", W, "padding:value.right"), 0 > a.top && xa(a.top, ">= 0", W, "padding:value.top"), 0 > a.bottom && xa(a.bottom, ">= 0", W, "padding:value.bottom"));
                var b = this.fb;
                b.A(a) || (this.fb = a = a.I(), this.o(), this.g("padding", b, a))
            }
        },
        defaultAlignment: {
            get: function() {
                return this.ln
            },
            set: function(a) {
                var b = this.ln;
                b.A(a) || (this.ln = a = a.I(), this.o(), this.g("defaultAlignment",
                    b, a))
            }
        },
        defaultStretch: {
            get: function() {
                return this.Cf
            },
            set: function(a) {
                var b = this.Cf;
                b !== a && (this.Cf = a, this.o(), this.g("defaultStretch", b, a))
            }
        },
        defaultSeparatorPadding: {
            get: function() {
                return void 0 === this.$i ? Oc : this.$i
            },
            set: function(a) {
                if (void 0 !== this.$i) {
                    "number" === typeof a && (a = new Ic(a));
                    var b = this.$i;
                    b.A(a) || (this.$i = a = a.I(), this.o(), this.g("defaultSeparatorPadding", b, a))
                }
            }
        },
        defaultRowSeparatorStroke: {
            get: function() {
                return void 0 ===
                    this.Sh ? null : this.Sh
            },
            set: function(a) {
                var b = this.Sh;
                b !== a && (null === a || "string" === typeof a || a instanceof fl) && (a instanceof fl && a.freeze(), this.Sh = a, this.R(), this.g("defaultRowSeparatorStroke", b, a))
            }
        },
        defaultRowSeparatorStrokeWidth: {
            get: function() {
                return void 0 === this.Fg ? 1 : this.Fg
            },
            set: function(a) {
                if (void 0 !== this.Fg) {
                    var b = this.Fg;
                    b !== a && isFinite(a) && 0 <= a && (this.Fg = a, this.o(), this.g("defaultRowSeparatorStrokeWidth", b, a))
                }
            }
        },
        defaultRowSeparatorDashArray: {
            get: function() {
                return void 0 === this.Rh ? null : this.Rh
            },
            set: function(a) {
                if (void 0 !== this.Rh) {
                    var b = this.Rh;
                    if (b !== a) {
                        if (null !== a) {
                            for (var c = a.length, d = 0, e = 0; e < c; e++) {
                                var f = a[e];
                                "number" === typeof f && 0 <= f && isFinite(f) || A("defaultRowSeparatorDashArray value " + f + " at index " + e + " must be a positive number or zero.");
                                d += f
                            }
                            if (0 === d) {
                                if (null === b) return;
                                a = null
                            }
                        }
                        this.Rh = a;
                        this.R();
                        this.g("defaultRowSeparatorDashArray", b, a)
                    }
                }
            }
        },
        defaultColumnSeparatorStroke: {
            get: function() {
                return void 0 ===
                    this.Dg ? null : this.Dg
            },
            set: function(a) {
                if (void 0 !== this.Dg) {
                    var b = this.Dg;
                    b !== a && (null === a || "string" === typeof a || a instanceof fl) && (a instanceof fl && a.freeze(), this.Dg = a, this.R(), this.g("defaultColumnSeparatorStroke", b, a))
                }
            }
        },
        defaultColumnSeparatorStrokeWidth: {
            get: function() {
                return void 0 === this.Eg ? 1 : this.Eg
            },
            set: function(a) {
                if (void 0 !== this.Eg) {
                    var b = this.Eg;
                    b !== a && isFinite(a) && 0 <= a && (this.Eg = a, this.o(), this.g("defaultColumnSeparatorStrokeWidth", b, a))
                }
            }
        },
        defaultColumnSeparatorDashArray: {
            get: function() {
                return void 0 === this.Qh ? null : this.Qh
            },
            set: function(a) {
                if (void 0 !== this.Qh) {
                    var b = this.Qh;
                    if (b !== a) {
                        if (null !== a) {
                            for (var c = a.length, d = 0, e = 0; e < c; e++) {
                                var f = a[e];
                                "number" === typeof f && 0 <= f && isFinite(f) || A("defaultColumnSeparatorDashArray value " + f + " at index " + e + " must be a positive number or zero.");
                                d += f
                            }
                            if (0 === d) {
                                if (null === b) return;
                                a = null
                            }
                        }
                        this.Qh = a;
                        this.R();
                        this.g("defaultColumnSeparatorDashArray", b, a)
                    }
                }
            }
        },
        viewboxStretch: {
            get: function() {
                return this.Dp
            },
            set: function(a) {
                var b = this.Dp;
                b !== a && (this.Dp = a, this.o(), this.g("viewboxStretch", b, a))
            }
        },
        gridCellSize: {
            get: function() {
                return this.Jn
            },
            set: function(a) {
                var b = this.Jn;
                if (!b.A(a)) {
                    a.s() && 0 !== a.width && 0 !== a.height || A("Invalid Panel.gridCellSize: " + a);
                    this.Jn = a.I();
                    var c = this.diagram;
                    null !== c && this === c.grid && gj(c);
                    this.R();
                    this.g("gridCellSize", b, a)
                }
            }
        },
        gridOrigin: {
            get: function() {
                return this.Kn
            },
            set: function(a) {
                var b = this.Kn;
                if (!b.A(a)) {
                    a.s() ||
                        A("Invalid Panel.gridOrigin: " + a);
                    this.Kn = a.I();
                    var c = this.diagram;
                    null !== c && this === c.grid && gj(c);
                    this.R();
                    this.g("gridOrigin", b, a)
                }
            }
        },
        graduatedMin: {
            get: function() {
                return this.Gn
            },
            set: function(a) {
                var b = this.Gn;
                b !== a && (this.Gn = a, this.o(), this.g("graduatedMin", b, a), Rk(this) && (a = this.part, null !== a && Sk(this, a, "graduatedRange")))
            }
        },
        graduatedMax: {
            get: function() {
                return this.Fn
            },
            set: function(a) {
                var b = this.Fn;
                b !== a && (this.Fn = a, this.o(), this.g("graduatedMax",
                    b, a), Rk(this) && (a = this.part, null !== a && Sk(this, a, "graduatedRange")))
            }
        },
        graduatedRange: {
            get: function() {
                return this.graduatedMax - this.graduatedMin
            }
        },
        graduatedTickUnit: {
            get: function() {
                return this.In
            },
            set: function(a) {
                var b = this.In;
                b !== a && 0 < a && (this.In = a, this.o(), this.g("graduatedTickUnit", b, a))
            }
        },
        graduatedTickBase: {
            get: function() {
                return this.Hn
            },
            set: function(a) {
                var b = this.Hn;
                b !== a && (this.Hn = a, this.o(), this.g("graduatedTickBase",
                    b, a))
            }
        },
        uh: {
            get: function() {
                return 0 !== (this.G & 8388608)
            },
            set: function(a) {
                0 !== (this.G & 8388608) !== a && (this.G ^= 8388608)
            }
        },
        rowCount: {
            get: function() {
                return void 0 === this.tb ? 0 : this.tb.length
            }
        },
        columnCount: {
            get: function() {
                return void 0 === this.ob ? 0 : this.ob.length
            }
        },
        rowSizing: {
            get: function() {
                return void 0 === this.Bj ? Hm : this.Bj
            },
            set: function(a) {
                if (void 0 !== this.Bj) {
                    var b = this.Bj;
                    b !== a && (this.Bj =
                        a, this.o(), this.g("rowSizing", b, a))
                }
            }
        },
        columnSizing: {
            get: function() {
                return void 0 === this.Yi ? Hm : this.Yi
            },
            set: function(a) {
                if (void 0 !== this.Yi) {
                    var b = this.Yi;
                    b !== a && (this.Yi = a, this.o(), this.g("columnSizing", b, a))
                }
            }
        },
        topIndex: {
            get: function() {
                return void 0 === this.ui ? 0 : this.ui
            },
            set: function(a) {
                if (void 0 !== this.ui) {
                    var b = this.ui;
                    b !== a && ((!isFinite(a) || 0 > a) && A("Panel.topIndex must be greater than zero and a real number, not: " + a), this.ui = a, this.o(),
                        this.g("topIndex", b, a))
                }
            }
        },
        leftIndex: {
            get: function() {
                return void 0 === this.ei ? 0 : this.ei
            },
            set: function(a) {
                if (void 0 !== this.ei) {
                    var b = this.ei;
                    b !== a && ((!isFinite(a) || 0 > a) && A("Panel.leftIndex must be greater than zero and a real number, not: " + a), this.ei = a, this.o(), this.g("leftIndex", b, a))
                }
            }
        },
        data: {
            get: function() {
                return this.jb
            },
            set: function(a) {
                var b = this.jb;
                if (b !== a) {
                    var c = this instanceof T && !(this instanceof pf);
                    Xg(this);
                    this.jb = a;
                    var d = this.diagram;
                    null !== d && (c ? (c = d.partManager, this instanceof S ? (null !== b && c.Cg.remove(b), null !== a && c.Cg.add(a, this)) : this instanceof T && (null !== b && c.Me.remove(b), null !== a && c.Me.add(a, this))) : (c = this.panel, null !== c && null !== c.Gd && (null !== b && c.Gd.remove(b), null !== a && c.Gd.add(a, this))));
                    this.g("data", b, a);
                    null !== d && d.undoManager.isUndoingRedoing || null !== a && this.Ea()
                }
            }
        },
        itemIndex: {
            get: function() {
                return this.Xn
            },
            set: function(a) {
                var b = this.Xn;
                b !== a && (this.Xn = a, this.g("itemIndex", b, a))
            }
        },
        itemArray: {
            get: function() {
                return this.ci
            },
            set: function(a) {
                var b = this.ci;
                if (b !== a || null !== a && Vm(this, a)) {
                    var c = this.diagram;
                    b !== a && (null !== c && null !== b && Dj(c.partManager, this), this.ci = a, null !== c && null !== a && zj(c.partManager, this));
                    this.g("itemArray", b, a);
                    null !== c && c.undoManager.isUndoingRedoing || this.kt()
                }
            }
        },
        itemTemplate: {
            get: function() {
                return null === this.je ? null : this.je.J("")
            },
            set: function(a) {
                if (null === this.je) {
                    if (null === a) return;
                    this.je = new Lb
                }
                var b = this.je.J("");
                b !==
                    a && ((a instanceof T || a.isPanelMain) && A("Panel.itemTemplate must not be a Part or be Panel.isPanelMain: " + a), this.je.add("", a), this.g("itemTemplate", b, a), a = this.diagram, null !== a && a.undoManager.isUndoingRedoing || this.kt())
            }
        },
        itemTemplateMap: {
            get: function() {
                return this.je
            },
            set: function(a) {
                var b = this.je;
                if (b !== a) {
                    for (var c = a.iterator; c.next(););
                    this.je = a;
                    this.g("itemTemplateMap", b, a);
                    a = this.diagram;
                    null !== a && a.undoManager.isUndoingRedoing || this.kt()
                }
            }
        },
        itemCategoryProperty: {
            get: function() {
                return this.Zk
            },
            set: function(a) {
                var b = this.Zk;
                b !== a && (this.Zk = a, this.g("itemCategoryProperty", b, a))
            }
        },
        isAtomic: {
            get: function() {
                return 0 !== (this.G & 1048576)
            },
            set: function(a) {
                var b = 0 !== (this.G & 1048576);
                b !== a && (this.G ^= 1048576, this.g("isAtomic", b, a))
            }
        },
        isClipping: {
            get: function() {
                return 0 !== (this.G & 2097152)
            },
            set: function(a) {
                var b = 0 !== (this.G & 2097152);
                b !== a && (this.G ^= 2097152, this.o(), this.g("isClipping", b, a))
            }
        },
        isOpposite: {
            get: function() {
                return 0 !== (this.G & 33554432)
            },
            set: function(a) {
                var b = 0 !== (this.G & 33554432);
                b !== a && (this.G ^= 33554432, this.o(), this.g("isOpposite", b, a))
            }
        },
        isEnabled: {
            get: function() {
                return 0 !== (this.G & 4194304)
            },
            set: function(a) {
                var b = 0 !== (this.G & 4194304);
                if (b !== a) {
                    var c = null === this.panel || this.panel.qg();
                    this.G ^= 4194304;
                    this.g("isEnabled", b, a);
                    b = this.diagram;
                    null !== b && b.undoManager.isUndoingRedoing || c && Sm(this, this, a)
                }
            }
        },
        alignmentFocusName: {
            get: function() {
                return this.xg
            },
            set: function(a) {
                var b = this.xg;
                b !== a && (this.xg = a, this.o(), this.g("alignmentFocusName", b, a))
            }
        }
    });
    pa.Object.defineProperties(W, {
        Position: {
            get: function() {
                return yl.J("Position")
            }
        },
        Horizontal: {
            get: function() {
                return yl.J("Horizontal")
            }
        },
        Vertical: {
            get: function() {
                return yl.J("Vertical")
            }
        },
        Spot: {
            get: function() {
                return yl.J("Spot")
            }
        },
        Auto: {
            get: function() {
                return yl.J("Auto")
            }
        },
        Table: {
            get: function() {
                return yl.J("Table")
            }
        },
        Viewbox: {
            get: function() {
                return yl.J("Viewbox")
            }
        },
        TableRow: {
            get: function() {
                return yl.J("TableRow")
            }
        },
        TableColumn: {
            get: function() {
                return yl.J("TableColumn")
            }
        },
        Link: {
            get: function() {
                return yl.J("Link")
            }
        },
        Grid: {
            get: function() {
                return yl.J("Grid")
            }
        },
        Graduated: {
            get: function() {
                return yl.J("Graduated")
            }
        }
    });
    W.prototype.findItemPanelForData = W.prototype.bx;
    W.prototype.rebuildItemElements = W.prototype.kt;
    W.prototype.updateTargetBindings = W.prototype.Ea;
    W.prototype.copyTemplate = W.prototype.py;
    W.prototype.graduatedValueForPoint = W.prototype.cz;
    W.prototype.graduatedPointForValue = W.prototype.bz;
    W.prototype.findColumnForLocalX = W.prototype.Cy;
    W.prototype.findRowForLocalY = W.prototype.Ky;
    W.prototype.removeColumnDefinition = W.prototype.sv;
    W.prototype.removeRowDefinition = W.prototype.uv;
    W.prototype.removeAt = W.prototype.mb;
    W.prototype.remove = W.prototype.remove;
    W.prototype.insertAt = W.prototype.Jb;
    W.prototype.elt = W.prototype.N;
    W.prototype.add = W.prototype.add;
    W.prototype.findObject = W.prototype.ab;
    W.prototype.findInVisualTree = W.prototype.Vl;
    W.prototype.walkVisualTreeFrom = W.prototype.vm;
    W.prototype.findMainElement = W.prototype.Ab;
    var Ym = !1,
        Zm = null,
        yl = new Lb;
    W.className = "Panel";
    W.definePanelLayout = bn;
    bn("Position", new hm);
    bn("Vertical", new km);
    bn("Auto", new mm);
    bn("Link", new wm);
    bn("Grid", new vm);

    function Mj() {
        mb(this);
        this.Zf = null;
        this.Ar = !0;
        this.Ra = 0;
        this.Qc = NaN;
        this.Vg = 0;
        this.Ug = Infinity;
        this.xb = Ed;
        this.sa = this.ka = 0;
        this.cb = null;
        this.mp = cn;
        this.ue = Hk;
        this.ip = this.cg = null;
        this.jp = NaN;
        this.ib = this.Cj = null;
        this.fn = !1
    }
    Mj.prototype.copy = function() {
        var a = new Mj;
        a.Ar = this.Ar;
        a.Ra = this.Ra;
        a.Qc = this.Qc;
        a.Vg = this.Vg;
        a.Ug = this.Ug;
        a.xb = this.xb;
        a.ka = this.ka;
        a.sa = this.sa;
        a.ue = this.ue;
        a.mp = this.mp;
        null === this.cg ? a.cg = null : a.cg = this.cg.I();
        a.ip = this.ip;
        a.jp = this.jp;
        a.Cj = null;
        null !== this.Cj && (a.separatorDashArray = Ga(this.separatorDashArray));
        a.ib = this.ib;
        a.fn = this.fn;
        a.cb = this.cb;
        return a
    };
    t = Mj.prototype;
    t.Sl = function(a) {
        a.isRow ? this.height = a.height : this.width = a.width;
        this.minimum = a.minimum;
        this.maximum = a.maximum;
        this.alignment = a.alignment;
        this.stretch = a.stretch;
        this.sizing = a.sizing;
        this.cg = null === a.separatorPadding ? null : a.separatorPadding.I();
        this.separatorStroke = a.separatorStroke;
        this.separatorStrokeWidth = a.separatorStrokeWidth;
        this.Cj = null;
        a.separatorDashArray && (this.Cj = Ga(a.separatorDashArray));
        this.background = a.background;
        this.coversSeparators = a.coversSeparators;
        this.cb = a.cb
    };
    t.gb = function(a) {
        a.classType === Mj && (this.sizing = a)
    };
    t.toString = function() {
        return "RowColumnDefinition " + (this.isRow ? "(Row " : "(Column ") + this.index + ") #" + Bb(this)
    };
    t.Oi = function(a) {
        this.Zf = a
    };
    t.Ju = function() {
        var a = 0,
            b = 0,
            c = this.Zf,
            d = this.isRow;
        if (null !== c && c.type === W.Table)
            for (var e = d ? c.tb.length : c.ob.length, f = 0; f < e; f++) {
                var g = d ? c.tb[f] : c.ob[f];
                if (void 0 !== g) {
                    b = g.index;
                    break
                }
            }
        this.index !== b && (b = this.separatorStroke, null === b && null !== c && (b = this.isRow ? c.defaultRowSeparatorStroke : c.defaultColumnSeparatorStroke), null !== b && (a = this.separatorStrokeWidth, isNaN(a) && (null !== c ? a = this.isRow ? c.defaultRowSeparatorStrokeWidth : c.defaultColumnSeparatorStrokeWidth : a = 0)));
        b = this.cg;
        if (null === b)
            if (null !== c) b =
                c.defaultSeparatorPadding;
            else return a;
        return a + (this.isRow ? b.top : b.left)
    };
    t.vc = function() {
        var a = 0,
            b = this.Zf,
            c = 0,
            d = this.isRow;
        if (null !== b && b.type === W.Table)
            for (var e = d ? b.tb.length : b.ob.length, f = 0; f < e; f++) {
                var g = d ? b.tb[f] : b.ob[f];
                if (void 0 !== g) {
                    c = g.index;
                    break
                }
            }
        this.index !== c && (c = this.separatorStroke, null === c && null !== b && (c = d ? b.defaultRowSeparatorStroke : b.defaultColumnSeparatorStroke), null !== c && (a = this.separatorStrokeWidth, isNaN(a) && (null !== b ? a = d ? b.defaultRowSeparatorStrokeWidth : b.defaultColumnSeparatorStrokeWidth : a = 0)));
        d = this.cg;
        if (null === d)
            if (null !== b) d = b.defaultSeparatorPadding;
            else return a;
        return a + (this.isRow ? d.top + d.bottom : d.left + d.right)
    };
    t.zb = function(a, b, c) {
        var d = this.Zf;
        if (null !== d && (d.bb(af, a, this, b, c, void 0, void 0), null !== this.cb && (b = d.diagram, null !== b && !b.skipsModelSourceBindings && (d = d.sh(), null !== d && (b = d.data, null !== b)))))
            for (c = this.cb.iterator; c.next();) c.value.tq(this, b, a, d)
    };

    function qm(a) {
        if (a.sizing === cn) {
            var b = a.Zf;
            return a.isRow ? b.rowSizing : b.columnSizing
        }
        return a.sizing
    }
    t.bind = function(a) {
        a.Rd = this;
        var b = this.panel;
        if (null !== b) {
            var c = b.sh();
            null !== c && ul(c) && A("Cannot add a Binding to a RowColumnDefinition that is already frozen: " + a + " on " + b)
        }
        null === this.cb && (this.cb = new E);
        this.cb.add(a)
    };
    pa.Object.defineProperties(Mj.prototype, {
        panel: {
            get: function() {
                return this.Zf
            }
        },
        isRow: {
            get: function() {
                return this.Ar
            },
            set: function(a) {
                this.Ar = a
            }
        },
        index: {
            get: function() {
                return this.Ra
            },
            set: function(a) {
                this.Ra = a
            }
        },
        height: {
            get: function() {
                return this.Qc
            },
            set: function(a) {
                var b = this.Qc;
                b !== a && (0 > a && xa(a, ">= 0", Mj, "height"), this.Qc = a, this.actual = this.ka, null !== this.panel && this.panel.o(),
                    this.zb("height", b, a))
            }
        },
        width: {
            get: function() {
                return this.Qc
            },
            set: function(a) {
                var b = this.Qc;
                b !== a && (0 > a && xa(a, ">= 0", Mj, "width"), this.Qc = a, this.actual = this.ka, null !== this.panel && this.panel.o(), this.zb("width", b, a))
            }
        },
        minimum: {
            get: function() {
                return this.Vg
            },
            set: function(a) {
                var b = this.Vg;
                b !== a && ((0 > a || !isFinite(a)) && xa(a, ">= 0", Mj, "minimum"), this.Vg = a, this.actual = this.ka, null !== this.panel && this.panel.o(), this.zb("minimum", b, a))
            }
        },
        maximum: {
            get: function() {
                return this.Ug
            },
            set: function(a) {
                var b = this.Ug;
                b !== a && (0 > a && xa(a, ">= 0", Mj, "maximum"), this.Ug = a, this.actual = this.ka, null !== this.panel && this.panel.o(), this.zb("maximum", b, a))
            }
        },
        alignment: {
            get: function() {
                return this.xb
            },
            set: function(a) {
                var b = this.xb;
                b.A(a) || (this.xb = a.I(), null !== this.panel && this.panel.o(), this.zb("alignment", b, a))
            }
        },
        stretch: {
            get: function() {
                return this.ue
            },
            set: function(a) {
                var b = this.ue;
                b !== a && (this.ue =
                    a, null !== this.panel && this.panel.o(), this.zb("stretch", b, a))
            }
        },
        separatorPadding: {
            get: function() {
                return this.cg
            },
            set: function(a) {
                "number" === typeof a && (a = new Ic(a));
                var b = this.cg;
                null !== a && null !== b && b.A(a) || (null !== a && (a = a.I()), this.cg = a, null !== this.panel && this.panel.o(), this.zb("separatorPadding", b, a))
            }
        },
        separatorStroke: {
            get: function() {
                return this.ip
            },
            set: function(a) {
                var b = this.ip;
                b !== a && (null === a || "string" === typeof a || a instanceof fl) && (a instanceof fl && a.freeze(), this.ip = a, null !== this.panel && this.panel.o(), this.zb("separatorStroke", b, a))
            }
        },
        separatorStrokeWidth: {
            get: function() {
                return this.jp
            },
            set: function(a) {
                var b = this.jp;
                b !== a && (this.jp = a, null !== this.panel && this.panel.o(), this.zb("separatorStrokeWidth", b, a))
            }
        },
        separatorDashArray: {
            get: function() {
                return this.Cj
            },
            set: function(a) {
                var b = this.Cj;
                if (b !== a) {
                    if (null !== a) {
                        for (var c = a.length, d = 0, e = 0; e < c; e++) {
                            var f = a[e];
                            "number" === typeof f && 0 <=
                                f && isFinite(f) || A("separatorDashArray value " + f + " at index " + e + " must be a positive number or zero.");
                            d += f
                        }
                        if (0 === d) {
                            if (null === b) return;
                            a = null
                        }
                    }
                    this.Cj = a;
                    null !== this.panel && this.panel.R();
                    this.zb("separatorDashArray", b, a)
                }
            }
        },
        background: {
            get: function() {
                return this.ib
            },
            set: function(a) {
                var b = this.ib;
                b !== a && (null === a || "string" === typeof a || a instanceof fl) && (a instanceof fl && a.freeze(), this.ib = a, null !== this.panel && this.panel.R(), this.zb("background", b, a))
            }
        },
        coversSeparators: {
            get: function() {
                return this.fn
            },
            set: function(a) {
                var b = this.fn;
                b !== a && (this.fn = a, null !== this.panel && this.panel.R(), this.zb("coversSeparators", b, a))
            }
        },
        sizing: {
            get: function() {
                return this.mp
            },
            set: function(a) {
                var b = this.mp;
                b !== a && (this.mp = a, null !== this.panel && this.panel.o(), this.zb("sizing", b, a))
            }
        },
        actual: {
            get: function() {
                return this.ka
            },
            set: function(a) {
                this.ka = isNaN(this.Qc) ? Math.max(Math.min(this.Ug, a), this.Vg) : Math.max(Math.min(this.Ug,
                    this.Qc), this.Vg)
            }
        },
        total: {
            get: function() {
                return this.ka + this.vc()
            },
            set: function(a) {
                this.ka = isNaN(this.Qc) ? Math.max(Math.min(this.Ug, a), this.Vg) : Math.max(Math.min(this.Ug, this.Qc), this.Vg);
                this.ka = Math.max(0, this.ka - this.vc())
            }
        },
        position: {
            get: function() {
                return this.sa
            },
            set: function(a) {
                this.sa = a
            }
        }
    });
    Mj.prototype.bind = Mj.prototype.bind;
    Mj.prototype.computeEffectiveSpacing = Mj.prototype.vc;
    Mj.prototype.computeEffectiveSpacingTop = Mj.prototype.Ju;
    var cn = new D(Mj, "Default", 0),
        rm = new D(Mj, "None", 1),
        Hm = new D(Mj, "ProportionalExtra", 2);
    Mj.className = "RowColumnDefinition";
    Mj.Default = cn;
    Mj.None = rm;
    Mj.ProportionalExtra = Hm;

    function V() {
        Y.call(this);
        this.Qd = this.qa = null;
        this.Nk = "None";
        this.En = Hk;
        this.Ic = this.Ok = "black";
        this.dh = 1;
        this.Cl = "butt";
        this.Fl = "miter";
        this.Ej = 10;
        this.Dl = null;
        this.El = 0;
        this.df = this.cf = Ed;
        this.Jo = this.Io = NaN;
        this.On = !1;
        this.Lo = null;
        this.Qk = this.Ll = "None";
        this.Ed = 1;
        this.Dd = 0;
        this.Bd = 1;
        this.Cd = null
    }
    oa(V, Y);
    V.prototype.cloneProtected = function(a) {
        Y.prototype.cloneProtected.call(this, a);
        a.qa = this.qa;
        a.Nk = this.Nk;
        a.En = this.En;
        a.Qd = this.Qd;
        a.Ok = this.Ok;
        a.Ic = this.Ic;
        a.dh = this.dh;
        a.Cl = this.Cl;
        a.Fl = this.Fl;
        a.Ej = this.Ej;
        null !== this.Dl && (a.Dl = Ga(this.Dl));
        a.El = this.El;
        a.cf = this.cf.I();
        a.df = this.df.I();
        a.Io = this.Io;
        a.Jo = this.Jo;
        a.On = this.On;
        a.Lo = this.Lo;
        a.Ll = this.Ll;
        a.Qk = this.Qk;
        a.Ed = this.Ed;
        a.Dd = this.Dd;
        a.Bd = this.Bd;
        a.Cd = this.Cd
    };
    t = V.prototype;
    t.gb = function(a) {
        a === Yg || a === $g || a === Kk || a === Hk ? this.geometryStretch = a : Y.prototype.gb.call(this, a)
    };
    t.toString = function() {
        return "Shape(" + ("None" !== this.figure ? this.figure : "None" !== this.toArrow ? this.toArrow : this.fromArrow) + ")#" + Bb(this)
    };

    function dn(a, b, c, d) {
        var e = c.length;
        if (!(4 > e)) {
            var f = d.measuredBounds,
                g = Math.max(1, f.width);
            f = f.height;
            for (var h = c[0], k = c[1], l, m, n, p, q, r, u = 0, v = Ka(), x = 2; x < e; x += 2) l = c[x], m = c[x + 1], n = l - h, h = m - k, 0 === n && (n = .001), p = h / n, q = Math.atan2(h, n), r = Math.sqrt(n * n + h * h), v.push([n, q, p, r]), u += r, h = l, k = m;
            h = c[0];
            k = c[1];
            n = d.measuredBounds.width;
            d instanceof V && (n -= d.strokeWidth);
            1 > n && (n = 1);
            e = c = n;
            l = g / 2;
            m = 0 === l ? !1 : !0;
            x = 0;
            r = v[x];
            n = r[0];
            q = r[1];
            p = r[2];
            r = r[3];
            for (var y = 0; .1 <= u;) {
                0 === y && (m ? (e = c, e -= l, u -= l, m = !1) : e = c, 0 === e && (e = 1));
                if (e >
                    u) {
                    Oa(v);
                    return
                }
                e > r ? (y = e - r, e = r) : y = 0;
                var z = Math.sqrt(e * e / (1 + p * p));
                0 > n && (z = -z);
                h += z;
                k += p * z;
                a.translate(h, k);
                a.rotate(q);
                a.translate(-(g / 2), -(f / 2));
                0 === y && d.zi(a, b);
                a.translate(g / 2, f / 2);
                a.rotate(-q);
                a.translate(-h, -k);
                u -= e;
                r -= e;
                if (0 !== y) {
                    x++;
                    if (x === v.length) {
                        Oa(v);
                        return
                    }
                    r = v[x];
                    n = r[0];
                    q = r[1];
                    p = r[2];
                    r = r[3];
                    e = y
                }
            }
            Oa(v)
        }
    }
    t.zi = function(a, b) {
        var c = this.Ic,
            d = this.Ok;
        if (null !== c || null !== d) {
            var e = this.actualBounds,
                f = this.naturalBounds;
            null !== d && fi(this, a, d, !0, !1, f, e);
            null !== c && fi(this, a, c, !1, !1, f, e);
            e = this.part;
            f = this.dh;
            0 === f && null !== e && (f = e instanceof pf && e.type === W.Link && "Selection" === e.category && e.adornedObject instanceof V && e.adornedPart.Ab() === e.adornedObject ? e.adornedObject.strokeWidth : 0);
            a.lineWidth = f;
            a.lineJoin = this.Fl;
            a.lineCap = this.Cl;
            a.miterLimit = this.Ej;
            var g = !1;
            e && b.De("drawShadows") && (g = e.isShadowed);
            var h = !0;
            null !== c && null === d && (h = !1);
            e = !1;
            var k = this.strokeDashArray;
            null !== k && (e = !0, a.Ms(k, this.El));
            var l = this.qa;
            if (null !== l) {
                if (l.type === ge) a.beginPath(), a.moveTo(l.startX, l.startY), a.lineTo(l.endX, l.endY), null !== d && a.Ud(d), 0 !== f && null !== c && a.Si();
                else if (l.type === ke) {
                    var m = l.startX,
                        n = l.startY,
                        p = l.endX,
                        q = l.endY;
                    k = Math.min(m, p);
                    l = Math.min(n, q);
                    m = Math.abs(p - m);
                    n = Math.abs(q - n);
                    null !== d && (a.beginPath(), a.rect(k, l, m, n), a.Ud(d));
                    null !== c && (p = d = c = 0, h && g && (c = a.shadowOffsetX, d = a.shadowOffsetY, p = a.shadowBlur,
                        a.shadowOffsetX = 0, a.shadowOffsetY = 0, a.shadowBlur = 0), 0 !== f && (a.beginPath(), a.rect(k, l, m, n), a.Si()), h && g && (a.shadowOffsetX = c, a.shadowOffsetY = d, a.shadowBlur = p))
                } else if (l.type === le) n = l.startX, k = l.startY, p = l.endX, q = l.endY, l = Math.abs(p - n) / 2, m = Math.abs(q - k) / 2, n = Math.min(n, p) + l, k = Math.min(k, q) + m, a.beginPath(), a.moveTo(n, k - m), a.bezierCurveTo(n + H.wg * l, k - m, n + l, k - H.wg * m, n + l, k), a.bezierCurveTo(n + l, k + H.wg * m, n + H.wg * l, k + m, n, k + m), a.bezierCurveTo(n - H.wg * l, k + m, n - l, k + H.wg * m, n - l, k), a.bezierCurveTo(n - l, k - H.wg * m, n - H.wg *
                    l, k - m, n, k - m), a.closePath(), null !== d && a.Ud(d), 0 !== f && null !== c && (h && g ? (f = a.shadowOffsetX, g = a.shadowOffsetY, c = a.shadowBlur, a.shadowOffsetX = 0, a.shadowOffsetY = 0, a.shadowBlur = 0, a.Si(), a.shadowOffsetX = f, a.shadowOffsetY = g, a.shadowBlur = c) : a.Si());
                else if (l.type === ae)
                    for (k = l.figures, l = k.length, m = 0; m < l; m++) {
                        n = k.j[m];
                        a.beginPath();
                        a.moveTo(n.startX, n.startY);
                        p = n.segments.j;
                        q = p.length;
                        for (var r = null, u = 0; u < q; u++) {
                            var v = p[u];
                            switch (v.type) {
                                case ze:
                                    a.moveTo(v.endX, v.endY);
                                    break;
                                case ie:
                                    a.lineTo(v.endX, v.endY);
                                    break;
                                case Ae:
                                    a.bezierCurveTo(v.point1X, v.point1Y, v.point2X, v.point2Y, v.endX, v.endY);
                                    break;
                                case Be:
                                    a.quadraticCurveTo(v.point1X, v.point1Y, v.endX, v.endY);
                                    break;
                                case Ce:
                                    if (v.radiusX === v.radiusY) {
                                        var x = Math.PI / 180;
                                        a.arc(v.point1X, v.point1Y, v.radiusX, v.startAngle * x, (v.startAngle + v.sweepAngle) * x, 0 > v.sweepAngle, null !== r ? r.endX : n.startX, null !== r ? r.endY : n.startY)
                                    } else if (r = Ee(v, n), x = r.length, 0 === x) a.lineTo(v.centerX, v.centerY);
                                    else
                                        for (var y = 0; y < x; y++) {
                                            var z = r[y];
                                            0 === y && a.lineTo(z[0], z[1]);
                                            a.bezierCurveTo(z[2],
                                                z[3], z[4], z[5], z[6], z[7])
                                        }
                                    break;
                                case De:
                                    y = x = 0;
                                    if (null !== r && r.type === Ce) {
                                        r = Ee(r, n);
                                        z = r.length;
                                        if (0 === z) {
                                            a.lineTo(v.centerX, v.centerY);
                                            break
                                        }
                                        r = r[z - 1] || null;
                                        null !== r && (x = r[6], y = r[7])
                                    } else x = null !== r ? r.endX : n.startX, y = null !== r ? r.endY : n.startY;
                                    r = Fe(v, n, x, y);
                                    x = r.length;
                                    if (0 === x) {
                                        a.lineTo(v.centerX, v.centerY);
                                        break
                                    }
                                    for (y = 0; y < x; y++) z = r[y], a.bezierCurveTo(z[2], z[3], z[4], z[5], z[6], z[7]);
                                    break;
                                default:
                                    A("Segment not of valid type: " + v.type)
                            }
                            v.isClosed && a.closePath();
                            r = v
                        }
                        g ? (u = q = p = 0, n.isShadowed ? (!0 === n.isFilled &&
                            null !== d ? (a.Ud(d), h = !0) : h = !1, 0 !== f && null !== c && (h && (p = a.shadowOffsetX, q = a.shadowOffsetY, u = a.shadowBlur, a.shadowOffsetX = 0, a.shadowOffsetY = 0, a.shadowBlur = 0), a.Si(), h && (a.shadowOffsetX = p, a.shadowOffsetY = q, a.shadowBlur = u))) : (h && (p = a.shadowOffsetX, q = a.shadowOffsetY, u = a.shadowBlur, a.shadowOffsetX = 0, a.shadowOffsetY = 0, a.shadowBlur = 0), !0 === n.isFilled && null !== d && a.Ud(d), 0 !== f && null !== c && a.Si(), h && (a.shadowOffsetX = p, a.shadowOffsetY = q, a.shadowBlur = u))) : (!0 === n.isFilled && null !== d && a.Ud(d), 0 !== f && null !== c && a.Si())
                    }
                e &&
                    a.Ks();
                if (null !== this.pathPattern) {
                    e = this.pathPattern;
                    e.measure(Infinity, Infinity);
                    f = e.measuredBounds;
                    e.arrange(0, 0, f.width, f.height);
                    g = this.geometry;
                    a.save();
                    a.beginPath();
                    f = Ka();
                    if (g.type === ge) f.push(g.startX), f.push(g.startY), f.push(g.endX), f.push(g.endY), dn(a, b, f, e);
                    else if (g.type === ae)
                        for (g = g.figures.iterator; g.next();) {
                            c = g.value;
                            f.length = 0;
                            f.push(c.startX);
                            f.push(c.startY);
                            d = c.startX;
                            h = c.startY;
                            k = d;
                            l = h;
                            m = c.segments.j;
                            n = m.length;
                            for (p = 0; p < n; p++) {
                                q = m[p];
                                switch (q.type) {
                                    case ze:
                                        dn(a, b, f, e);
                                        f.length =
                                            0;
                                        f.push(q.endX);
                                        f.push(q.endY);
                                        d = q.endX;
                                        h = q.endY;
                                        k = d;
                                        l = h;
                                        break;
                                    case ie:
                                        f.push(q.endX);
                                        f.push(q.endY);
                                        d = q.endX;
                                        h = q.endY;
                                        break;
                                    case Ae:
                                        H.ze(d, h, q.point1X, q.point1Y, q.point2X, q.point2Y, q.endX, q.endY, .5, f);
                                        d = q.endX;
                                        h = q.endY;
                                        break;
                                    case Be:
                                        H.iq(d, h, q.point1X, q.point1Y, q.endX, q.endY, .5, f);
                                        d = q.endX;
                                        h = q.endY;
                                        break;
                                    case Ce:
                                        u = Ee(q, c);
                                        v = u.length;
                                        if (0 === v) {
                                            f.push(q.centerX);
                                            f.push(q.centerY);
                                            d = q.centerX;
                                            h = q.centerY;
                                            break
                                        }
                                        for (r = 0; r < v; r++) x = u[r], H.ze(d, h, x[2], x[3], x[4], x[5], x[6], x[7], .5, f), d = x[6], h = x[7];
                                        break;
                                    case De:
                                        u = Fe(q, c, d, h);
                                        v = u.length;
                                        if (0 === v) {
                                            f.push(q.centerX);
                                            f.push(q.centerY);
                                            d = q.centerX;
                                            h = q.centerY;
                                            break
                                        }
                                        for (r = 0; r < v; r++) x = u[r], H.ze(d, h, x[2], x[3], x[4], x[5], x[6], x[7], .5, f), d = x[6], h = x[7];
                                        break;
                                    default:
                                        A("Segment not of valid type: " + q.type)
                                }
                                q.isClosed && (f.push(k), f.push(l), dn(a, b, f, e))
                            }
                            dn(a, b, f, e)
                        } else if (g.type === ke) f.push(g.startX), f.push(g.startY), f.push(g.endX), f.push(g.startY), f.push(g.endX), f.push(g.endY), f.push(g.startX), f.push(g.endY), f.push(g.startX), f.push(g.startY), dn(a, b, f, e);
                        else if (g.type ===
                        le) {
                        h = new Ue;
                        h.startX = g.endX;
                        h.startY = (g.startY + g.endY) / 2;
                        d = new Ve(Ce);
                        d.startAngle = 0;
                        d.sweepAngle = 360;
                        d.centerX = (g.startX + g.endX) / 2;
                        d.centerY = (g.startY + g.endY) / 2;
                        d.radiusX = Math.abs(g.startX - g.endX) / 2;
                        d.radiusY = Math.abs(g.startY - g.endY) / 2;
                        h.add(d);
                        g = Ee(d, h);
                        c = g.length;
                        if (0 === c) f.push(d.centerX), f.push(d.centerY);
                        else
                            for (d = h.startX, h = h.startY, k = 0; k < c; k++) l = g[k], H.ze(d, h, l[2], l[3], l[4], l[5], l[6], l[7], .5, f), d = l[6], h = l[7];
                        dn(a, b, f, e)
                    }
                    Oa(f);
                    a.restore();
                    a.Sc(!1)
                }
            }
        }
    };
    t.ma = function(a, b) {
        void 0 === b && (b = new G);
        if (a instanceof O) {
            a.mc() && A("getDocumentPoint Spot must be a real, specific Spot, not: " + a.toString());
            var c = this.naturalBounds,
                d = this.strokeWidth;
            b.h(a.x * (c.width + d) - d / 2 + c.x + a.offsetX, a.y * (c.height + d) - d / 2 + c.y + a.offsetY)
        } else b.set(a);
        this.td.ta(b);
        return b
    };
    t.Up = function(a) {
        void 0 === a && (a = new N);
        var b = this.naturalBounds,
            c = this.td;
        b = N.allocAt(b.x, b.y, b.width, b.height);
        var d = this.strokeWidth;
        b.Vc(d / 2, d / 2);
        d = G.allocAt(b.x, b.y).transform(c);
        a.h(d.x, d.y, 0, 0);
        d.h(b.right, b.y).transform(c);
        Bc(a, d.x, d.y, 0, 0);
        d.h(b.right, b.bottom).transform(c);
        Bc(a, d.x, d.y, 0, 0);
        d.h(b.x, b.bottom).transform(c);
        Bc(a, d.x, d.y, 0, 0);
        N.free(b);
        G.free(d);
        return a
    };
    t.qh = function(a, b) {
        var c = this.geometry;
        if (null === c || null === this.fill && null === this.stroke) return !1;
        var d = c.bounds,
            e = this.strokeWidth / 2;
        c.type !== ge || b || (e += 2);
        var f = N.alloc();
        f.assign(d);
        f.Vc(e + 2, e + 2);
        if (!f.ea(a)) return N.free(f), !1;
        d = e + 1E-4;
        if (c.type === ge) {
            if (null === this.stroke) return !1;
            d = (c.endX - c.startX) * (a.x - c.startX) + (c.endY - c.startY) * (a.y - c.startY);
            if (0 > (c.startX - c.endX) * (a.x - c.endX) + (c.startY - c.endY) * (a.y - c.endY) || 0 > d) return !1;
            N.free(f);
            return H.Tb(c.startX, c.startY, c.endX, c.endY, e, a.x, a.y)
        }
        if (c.type ===
            ke) {
            b = c.startX;
            var g = c.startY,
                h = c.endX;
            c = c.endY;
            f.x = Math.min(b, h);
            f.y = Math.min(g, c);
            f.width = Math.abs(h - b);
            f.height = Math.abs(c - g);
            if (null === this.fill) {
                f.Vc(-d, -d);
                if (f.ea(a)) return N.free(f), !1;
                f.Vc(d, d)
            }
            null !== this.stroke && f.Vc(e, e);
            a = f.ea(a);
            N.free(f);
            return a
        }
        if (c.type === le) {
            g = c.startX;
            e = c.startY;
            h = c.endX;
            var k = c.endY;
            c = Math.min(g, h);
            b = Math.min(e, k);
            g = Math.abs(h - g) / 2;
            e = Math.abs(k - e) / 2;
            c = a.x - (c + g);
            b = a.y - (b + e);
            if (null === this.fill) {
                g -= d;
                e -= d;
                if (0 >= g || 0 >= e || 1 >= c * c / (g * g) + b * b / (e * e)) return N.free(f), !1;
                g += d;
                e += d
            }
            null !== this.stroke && (g += d, e += d);
            N.free(f);
            return 0 >= g || 0 >= e ? !1 : 1 >= c * c / (g * g) + b * b / (e * e)
        }
        if (c.type === ae) return N.free(f), null === this.fill ? Se(c, a.x, a.y, e) : c.ea(a, e, 1 < this.strokeWidth, b);
        A("Unknown Geometry type: " + c.type);
        return !1
    };
    t.em = function(a, b, c, d) {
        var e = this.desiredSize,
            f = this.dh;
        a = Math.max(a, 0);
        b = Math.max(b, 0);
        if (null !== this.Qd) var g = this.geometry.bounds;
        else {
            var h = this.figure,
                k = en[h];
            if (void 0 === k) {
                var l = H.Je[h];
                "string" === typeof l && (l = H.Je[l]);
                "function" === typeof l ? (k = l(null, 100, 100), en[h] = k) : A("Unsupported Figure: " + h)
            }
            g = k.bounds
        }
        h = g.width;
        k = g.height;
        l = g.width;
        var m = g.height;
        switch (Xk(this, !0)) {
            case Yg:
                d = c = 0;
                break;
            case be:
                l = Math.max(a - f, 0);
                m = Math.max(b - f, 0);
                break;
            case Ik:
                l = Math.max(a - f, 0);
                d = 0;
                break;
            case Jk:
                c = 0, m =
                    Math.max(b - f, 0)
        }
        isFinite(e.width) && (l = e.width);
        isFinite(e.height) && (m = e.height);
        e = this.maxSize;
        g = this.minSize;
        c = Math.max(c - f, g.width);
        d = Math.max(d - f, g.height);
        l = Math.min(e.width, l);
        m = Math.min(e.height, m);
        l = isFinite(l) ? Math.max(c, l) : Math.max(h, c);
        m = isFinite(m) ? Math.max(d, m) : Math.max(k, d);
        c = Zg(this);
        switch (c) {
            case Yg:
                break;
            case be:
                h = l;
                k = m;
                break;
            case $g:
                c = Math.min(l / h, m / k);
                isFinite(c) || (c = 1);
                h *= c;
                k *= c;
                break;
            default:
                A(c + " is not a valid geometryStretch.")
        }
        null !== this.Qd ? (h = Math.max(h, .01), k = Math.max(k,
            .01), g = null !== this.Qd ? this.Qd : this.qa, e = h, d = k, c = g.copy(), g = g.bounds, e /= g.width, d /= g.height, isFinite(e) || (e = 1), isFinite(d) || (d = 1), 1 === e && 1 === d || c.scale(e, d), this.qa = c) : null !== this.qa && H.ba(this.qa.Xk, a - f) && H.ba(this.qa.Vk, b - f) || (this.qa = V.makeGeometry(this, h, k));
        g = this.qa.bounds;
        Infinity === a || Infinity === b ? Uk(this, g.x - f / 2, g.y - f / 2, 0 === a && 0 === h ? 0 : g.width + f, 0 === b && 0 === k ? 0 : g.height + f) : Uk(this, -(f / 2), -(f / 2), l + f, m + f)
    };

    function Zg(a) {
        var b = a.geometryStretch;
        return null !== a.Qd ? b === Hk ? be : b : b === Hk ? en[a.figure].defaultStretch : b
    }
    t.oh = function(a, b, c, d) {
        Zk(this, a, b, c, d)
    };
    t.Uc = function(a, b, c) {
        return this.Xj(a.x, a.y, b.x, b.y, c)
    };
    t.Xj = function(a, b, c, d, e) {
        var f = this.transform,
            g = 1 / (f.m11 * f.m22 - f.m12 * f.m21),
            h = f.m22 * g,
            k = -f.m12 * g,
            l = -f.m21 * g,
            m = f.m11 * g,
            n = g * (f.m21 * f.dy - f.m22 * f.dx),
            p = g * (f.m12 * f.dx - f.m11 * f.dy);
        f = a * h + b * l + n;
        g = a * k + b * m + p;
        h = c * h + d * l + n;
        k = c * k + d * m + p;
        n = this.dh / 2;
        l = this.qa;
        null === l && (this.measure(Infinity, Infinity), l = this.qa);
        p = l.bounds;
        m = !1;
        if (l.type === ge)
            if (1.5 >= this.strokeWidth) m = H.Fe(l.startX, l.startY, l.endX, l.endY, f, g, h, k, e);
            else {
                l.startX === l.endX ? (d = n, m = 0) : (b = (l.endY - l.startY) / (l.endX - l.startX), m = n / Math.sqrt(1 + b * b), d = m *
                    b);
                b = Ka();
                a = new G;
                H.Fe(l.startX + d, l.startY + m, l.endX + d, l.endY + m, f, g, h, k, a) && b.push(a);
                a = new G;
                H.Fe(l.startX - d, l.startY - m, l.endX - d, l.endY - m, f, g, h, k, a) && b.push(a);
                a = new G;
                H.Fe(l.startX + d, l.startY + m, l.startX - d, l.startY - m, f, g, h, k, a) && b.push(a);
                a = new G;
                H.Fe(l.endX + d, l.endY + m, l.endX - d, l.endY - m, f, g, h, k, a) && b.push(a);
                h = b.length;
                if (0 === h) return Oa(b), !1;
                m = !0;
                k = Infinity;
                for (d = 0; d < h; d++) a = b[d], c = (a.x - f) * (a.x - f) + (a.y - g) * (a.y - g), c < k && (k = c, e.x = a.x, e.y = a.y);
                Oa(b)
            }
        else if (l.type === ke) m = H.Uc(p.x - n, p.y - n, p.x + p.width +
            n, p.y + p.height + n, f, g, h, k, e);
        else if (l.type === le) {
            b = N.allocAt(p.x, p.y, p.width, p.height).Vc(n, n);
            a: if (0 === b.width) m = H.Fe(b.x, b.y, b.x, b.y + b.height, f, g, h, k, e);
                else if (0 === b.height) m = H.Fe(b.x, b.y, b.x + b.width, b.y, f, g, h, k, e);
            else {
                a = b.width / 2;
                l = b.height / 2;
                d = b.x + a;
                m = b.y + l;
                c = 9999;
                f !== h && (c = (g - k) / (f - h));
                if (9999 > Math.abs(c)) {
                    k = g - m - c * (f - d);
                    if (0 > a * a * c * c + l * l - k * k) {
                        e.x = NaN;
                        e.y = NaN;
                        m = !1;
                        break a
                    }
                    n = Math.sqrt(a * a * c * c + l * l - k * k);
                    h = (-(a * a * c * k) + a * l * n) / (l * l + a * a * c * c) + d;
                    a = (-(a * a * c * k) - a * l * n) / (l * l + a * a * c * c) + d;
                    l = c * (h - d) + k + m;
                    k = c *
                        (a - d) + k + m;
                    Math.abs((f - h) * (f - h)) + Math.abs((g - l) * (g - l)) < Math.abs((f - a) * (f - a)) + Math.abs((g - k) * (g - k)) ? (e.x = h, e.y = l) : (e.x = a, e.y = k)
                } else {
                    h = l * l;
                    k = f - d;
                    h -= h / (a * a) * k * k;
                    if (0 > h) {
                        e.x = NaN;
                        e.y = NaN;
                        m = !1;
                        break a
                    }
                    k = Math.sqrt(h);
                    h = m + k;
                    k = m - k;
                    Math.abs(h - g) < Math.abs(k - g) ? (e.x = f, e.y = h) : (e.x = f, e.y = k)
                }
                m = !0
            }
            N.free(b)
        } else if (l.type === ae) {
            p = G.alloc();
            var q = h - f;
            var r = k - g;
            var u = q * q + r * r;
            e.x = h;
            e.y = k;
            for (var v = 0; v < l.figures.count; v++) {
                var x = l.figures.j[v],
                    y = x.segments;
                q = x.startX;
                r = x.startY;
                for (var z = q, B = r, C = 0; C < y.count; C++) {
                    var I =
                        y.j[C],
                        J = I.type;
                    var K = I.endX;
                    var X = I.endY;
                    var Q = !1;
                    switch (J) {
                        case ze:
                            z = K;
                            B = X;
                            break;
                        case ie:
                            Q = fn(q, r, K, X, f, g, h, k, p);
                            break;
                        case Ae:
                            Q = H.Kp(q, r, I.point1X, I.point1Y, I.point2X, I.point2Y, K, X, f, g, h, k, .6, p);
                            break;
                        case Be:
                            Q = H.Kp(q, r, (q + 2 * I.point1X) / 3, (r + 2 * I.point1Y) / 3, (2 * I.point1X + K) / 3, (2 * I.point1X + K) / 3, K, X, f, g, h, k, .6, p);
                            break;
                        case Ce:
                        case De:
                            J = I.type === Ce ? Ee(I, x) : Fe(I, x, q, r);
                            var ia = J.length;
                            if (0 === ia) {
                                Q = fn(q, r, I.centerX, I.centerY, f, g, h, k, p);
                                break
                            }
                            X = null;
                            for (K = 0; K < ia; K++) {
                                X = J[K];
                                if (0 === K && fn(q, r, X[0], X[1],
                                        f, g, h, k, p)) {
                                    var ja = gn(f, g, p, u, e);
                                    ja < u && (u = ja, m = !0)
                                }
                                H.Kp(X[0], X[1], X[2], X[3], X[4], X[5], X[6], X[7], f, g, h, k, .6, p) && (ja = gn(f, g, p, u, e), ja < u && (u = ja, m = !0))
                            }
                            K = X[6];
                            X = X[7];
                            break;
                        default:
                            A("Unknown Segment type: " + J)
                    }
                    q = K;
                    r = X;
                    Q && (Q = gn(f, g, p, u, e), Q < u && (u = Q, m = !0));
                    I.isClosed && (K = z, X = B, fn(q, r, K, X, f, g, h, k, p) && (I = gn(f, g, p, u, e), I < u && (u = I, m = !0)))
                }
            }
            f = c - a;
            g = d - b;
            h = Math.sqrt(f * f + g * g);
            0 !== h && (f /= h, g /= h);
            e.x -= f * n;
            e.y -= g * n;
            G.free(p)
        } else A("Unknown Geometry type: " + l.type);
        if (!m) return !1;
        this.transform.ta(e);
        return !0
    };

    function gn(a, b, c, d, e) {
        a = c.x - a;
        b = c.y - b;
        b = a * a + b * b;
        return b < d ? (e.x = c.x, e.y = c.y, b) : d
    }

    function fn(a, b, c, d, e, f, g, h, k) {
        var l = !1,
            m = (e - g) * (b - d) - (f - h) * (a - c);
        if (0 === m) return !1;
        k.x = ((e * h - f * g) * (a - c) - (e - g) * (a * d - b * c)) / m;
        k.y = ((e * h - f * g) * (b - d) - (f - h) * (a * d - b * c)) / m;
        (a > c ? a - c : c - a) < (b > d ? b - d : d - b) ? (a = b < d ? b : d, b = b < d ? d : b, (k.y > a || H.ba(k.y, a)) && (k.y < b || H.ba(k.y, b)) && (l = !0)) : (b = a < c ? a : c, a = a < c ? c : a, (k.x > b || H.ba(k.x, b)) && (k.x < a || H.ba(k.x, a)) && (l = !0));
        return l
    }
    t.ph = function(a, b) {
        if (void 0 === b) return a.mf(this.actualBounds);
        var c = this.qa;
        null === c && (this.measure(Infinity, Infinity), c = this.qa);
        c = c.bounds;
        var d = this.strokeWidth / 2,
            e = !1,
            f = G.alloc();
        f.h(c.x - d, c.y - d);
        a.ea(b.ta(f)) && (f.h(c.x - d, c.bottom + d), a.ea(b.ta(f)) && (f.h(c.right + d, c.bottom + d), a.ea(b.ta(f)) && (f.h(c.right + d, c.y - d), a.ea(b.ta(f)) && (e = !0))));
        G.free(f);
        return e
    };
    t.Kc = function(a, b) {
        if (this.ph(a, b) || void 0 === b && (b = this.transform, a.mf(this.actualBounds))) return !0;
        var c = Qc.alloc();
        c.set(b);
        c.Zs();
        var d = a.left,
            e = a.right,
            f = a.top;
        a = a.bottom;
        var g = G.alloc();
        g.h(d, f);
        c.ta(g);
        if (this.qh(g, !0)) return G.free(g), !0;
        g.h(e, f);
        c.ta(g);
        if (this.qh(g, !0)) return G.free(g), !0;
        g.h(d, a);
        c.ta(g);
        if (this.qh(g, !0)) return G.free(g), !0;
        g.h(e, a);
        c.ta(g);
        if (this.qh(g, !0)) return G.free(g), !0;
        var h = G.alloc(),
            k = G.alloc();
        c.set(b);
        c.hv(this.transform);
        c.Zs();
        h.x = e;
        h.y = f;
        h.transform(c);
        g.x =
            d;
        g.y = f;
        g.transform(c);
        b = !1;
        ln(this, g, h, k) ? b = !0 : (g.x = e, g.y = a, g.transform(c), ln(this, g, h, k) ? b = !0 : (h.x = d, h.y = a, h.transform(c), ln(this, g, h, k) ? b = !0 : (g.x = d, g.y = f, g.transform(c), ln(this, g, h, k) && (b = !0))));
        G.free(g);
        Qc.free(c);
        G.free(h);
        G.free(k);
        return b
    };

    function ln(a, b, c, d) {
        if (!a.Uc(b, c, d)) return !1;
        a = b.x;
        b = b.y;
        var e = c.x,
            f = c.y;
        c = d.x;
        d = d.y;
        if (a === e) return b < f ? (a = b, b = f) : a = f, d >= a && d <= b;
        a < e ? (d = a, a = e) : d = e;
        return c >= d && c <= a
    }
    t.ex = function(a, b, c) {
        function d(a, b) {
            for (var c = a.length, d = 0; d < c; d += 2)
                if (b.ed(a[d], a[d + 1]) > e) return !0;
            return !1
        }
        if (c && null !== this.fill && this.qh(a, !0)) return !0;
        var e = a.Be(b),
            f = e;
        1.5 < this.strokeWidth && (e = this.strokeWidth / 2 + Math.sqrt(e), e *= e);
        b = this.qa;
        if (null === b && (this.measure(Infinity, Infinity), b = this.qa, null === b)) return !1;
        if (!c) {
            var g = b.bounds,
                h = g.x,
                k = g.y,
                l = g.x + g.width;
            g = g.y + g.height;
            if (Sb(a.x, a.y, h, k) <= e && Sb(a.x, a.y, l, k) <= e && Sb(a.x, a.y, h, g) <= e && Sb(a.x, a.y, l, g) <= e) return !0
        }
        h = b.startX;
        k = b.startY;
        l =
            b.endX;
        g = b.endY;
        if (b.type === ge) {
            if (c = (h - l) * (a.x - l) + (k - g) * (a.y - g), Rb(a.x, a.y, h, k, l, g) <= (0 <= (l - h) * (a.x - h) + (g - k) * (a.y - k) && 0 <= c ? e : f)) return !0
        } else {
            if (b.type === ke) return b = !1, c && (b = Rb(a.x, a.y, h, k, h, g) <= e || Rb(a.x, a.y, h, k, l, k) <= e || Rb(a.x, a.y, l, k, l, g) <= e || Rb(a.x, a.y, h, g, l, g) <= e), b;
            if (b.type === le) {
                b = a.x - (h + l) / 2;
                f = a.y - (k + g) / 2;
                var m = Math.abs(l - h) / 2,
                    n = Math.abs(g - k) / 2;
                if (0 === m || 0 === n) return Rb(a.x, a.y, h, k, l, g) <= e ? !0 : !1;
                if (c) {
                    if (a = H.wy(m, n, b, f), a * a <= e) return !0
                } else return Sb(b, f, -m, 0) >= e || Sb(b, f, 0, -n) >= e || Sb(b,
                    f, 0, n) >= e || Sb(b, f, m, 0) >= e ? !1 : !0
            } else if (b.type === ae) {
                l = b.bounds;
                f = l.x;
                h = l.y;
                k = l.x + l.width;
                l = l.y + l.height;
                if (a.x > k && a.x < f && a.y > l && a.y < h && Rb(a.x, a.y, f, h, f, l) > e && Rb(a.x, a.y, f, h, k, h) > e && Rb(a.x, a.y, k, l, f, l) > e && Rb(a.x, a.y, k, l, k, h) > e) return !1;
                f = Math.sqrt(e);
                if (c) {
                    if (null === this.fill ? Se(b, a.x, a.y, f) : b.ea(a, f, !0)) return !0
                } else {
                    c = b.figures;
                    for (b = 0; b < c.count; b++) {
                        f = c.j[b];
                        g = f.startX;
                        m = f.startY;
                        if (a.ed(g, m) > e) return !1;
                        h = f.segments.j;
                        k = h.length;
                        for (l = 0; l < k; l++) switch (n = h[l], n.type) {
                            case ze:
                            case ie:
                                g = n.endX;
                                m =
                                    n.endY;
                                if (a.ed(g, m) > e) return !1;
                                break;
                            case Ae:
                                var p = Ka();
                                H.ze(g, m, n.point1X, n.point1Y, n.point2X, n.point2Y, n.endX, n.endY, .8, p);
                                g = d(p, a);
                                Oa(p);
                                if (g) return !1;
                                g = n.endX;
                                m = n.endY;
                                if (a.ed(g, m) > e) return !1;
                                break;
                            case Be:
                                p = Ka();
                                H.iq(g, m, n.point1X, n.point1Y, n.endX, n.endY, .8, p);
                                g = d(p, a);
                                Oa(p);
                                if (g) return !1;
                                g = n.endX;
                                m = n.endY;
                                if (a.ed(g, m) > e) return !1;
                                break;
                            case Ce:
                            case De:
                                p = n.type === Ce ? Ee(n, f) : Fe(n, f, g, m);
                                var q = p.length;
                                if (0 === q) {
                                    g = n.centerX;
                                    m = n.centerY;
                                    if (a.ed(g, m) > e) return !1;
                                    break
                                }
                                n = null;
                                for (var r = Ka(), u = 0; u < q; u++)
                                    if (n =
                                        p[u], r.length = 0, H.ze(n[0], n[1], n[2], n[3], n[4], n[5], n[6], n[7], .8, r), d(r, a)) return Oa(r), !1;
                                Oa(r);
                                null !== n && (g = n[6], m = n[7]);
                                break;
                            default:
                                A("Unknown Segment type: " + n.type)
                        }
                    }
                    return !0
                }
            }
        }
        return !1
    };
    t.cc = function() {
        this.qa = null
    };

    function mn(a) {
        var b = a.diagram;
        null !== b && b.undoManager.isUndoingRedoing || (a.segmentOrientation = nn, "None" !== a.Ll ? (a.segmentIndex = -1, a.alignmentFocus = Sd) : "None" !== a.Qk && (a.segmentIndex = 0, a.alignmentFocus = new O(1 - Sd.x, Sd.y)))
    }
    V.makeGeometry = function(a, b, c) {
        if ("None" !== a.toArrow) var d = on[a.toArrow];
        else "None" !== a.fromArrow ? d = on[a.fromArrow] : (d = H.Je[a.figure], "string" === typeof d && (d = H.Je[d]), void 0 === d && A("Unknown Shape.figure: " + a.figure), d = d(a, b, c), d.Xk = b, d.Vk = c);
        if (null === d) {
            var e = H.Je.Rectangle;
            "function" === typeof e && (d = e(a, b, c))
        }
        return d
    };

    function pn(a) {
        var b = on[a];
        if (void 0 === b) {
            var c = a.toLowerCase();
            if ("none" === c) return "None";
            b = on[c];
            if (void 0 === b) {
                var d = null,
                    e;
                for (e in H.ym)
                    if (e.toLowerCase() === c) {
                        d = e;
                        break
                    } if (null !== d) return a = me(H.ym[d], !1), on[d] = a, c !== d && (on[c] = d), d
            }
        }
        return "string" === typeof b ? b : b instanceof $d ? a : null
    }
    pa.Object.defineProperties(V.prototype, {
        geometry: {
            get: function() {
                return null !== this.qa ? this.qa : this.Qd
            },
            set: function(a) {
                var b = this.qa;
                if (b !== a) {
                    null !== a ? this.Qd = this.qa = a.freeze() : this.Qd = this.qa = null;
                    var c = this.part;
                    null !== c && (c.Tg = NaN);
                    this.o();
                    this.g("geometry", b, a);
                    Rk(this) && (a = this.part, null !== a && Sk(this, a, "geometryString"))
                }
            }
        },
        geometryString: {
            get: function() {
                return null === this.geometry ? "" : this.geometry.toString()
            },
            set: function(a) {
                a =
                    me(a);
                var b = a.normalize();
                this.geometry = a;
                this.position = a = G.allocAt(-b.x, -b.y);
                G.free(a)
            }
        },
        isGeometryPositioned: {
            get: function() {
                return this.On
            },
            set: function(a) {
                var b = this.On;
                b !== a && (this.On = a, this.o(), this.g("isGeometryPositioned", b, a))
            }
        },
        fill: {
            get: function() {
                return this.Ok
            },
            set: function(a) {
                var b = this.Ok;
                b !== a && (a instanceof fl && a.freeze(), this.Ok = a, this.R(), this.g("fill", b, a))
            }
        },
        stroke: {
            get: function() {
                return this.Ic
            },
            set: function(a) {
                var b = this.Ic;
                b !== a && (a instanceof fl && a.freeze(), this.Ic = a, this.R(), this.g("stroke", b, a))
            }
        },
        strokeWidth: {
            get: function() {
                return this.dh
            },
            set: function(a) {
                var b = this.dh;
                if (b !== a)
                    if (0 <= a) {
                        this.dh = a;
                        this.o();
                        var c = this.part;
                        null !== c && (c.Tg = NaN);
                        this.g("strokeWidth", b, a)
                    } else xa(a, "value >= 0", V, "strokeWidth:value")
            }
        },
        strokeCap: {
            get: function() {
                return this.Cl
            },
            set: function(a) {
                var b = this.Cl;
                b !== a && ("string" !== typeof a || "butt" !==
                    a && "round" !== a && "square" !== a ? xa(a, '"butt", "round", or "square"', V, "strokeCap") : (this.Cl = a, this.R(), this.g("strokeCap", b, a)))
            }
        },
        strokeJoin: {
            get: function() {
                return this.Fl
            },
            set: function(a) {
                var b = this.Fl;
                b !== a && ("string" !== typeof a || "miter" !== a && "bevel" !== a && "round" !== a ? xa(a, '"miter", "bevel", or "round"', V, "strokeJoin") : (this.Fl = a, this.R(), this.g("strokeJoin", b, a)))
            }
        },
        strokeMiterLimit: {
            get: function() {
                return this.Ej
            },
            set: function(a) {
                var b = this.Ej;
                if (b !== a && 1 <= a) {
                    this.Ej = a;
                    this.R();
                    var c = this.part;
                    null !== c && (c.Tg = NaN);
                    this.g("strokeMiterLimit", b, a)
                }
            }
        },
        strokeDashArray: {
            get: function() {
                return this.Dl
            },
            set: function(a) {
                var b = this.Dl;
                if (b !== a) {
                    if (null !== a) {
                        for (var c = a.length, d = 0, e = 0; e < c; e++) {
                            var f = a[e];
                            0 <= f && isFinite(f) || A("strokeDashArray:value " + f + " at index " + e + " must be a positive number or zero.");
                            d += f
                        }
                        if (0 === d) {
                            if (null === b) return;
                            a = null
                        }
                    }
                    this.Dl = a;
                    this.R();
                    this.g("strokeDashArray", b, a)
                }
            }
        },
        strokeDashOffset: {
            get: function() {
                return this.El
            },
            set: function(a) {
                var b = this.El;
                b !== a && 0 <= a && (this.El = a, this.R(), this.g("strokeDashOffset", b, a))
            }
        },
        figure: {
            get: function() {
                return this.Nk
            },
            set: function(a) {
                var b = this.Nk;
                if (b !== a) {
                    var c = H.Je[a];
                    "function" === typeof c ? c = a : (c = H.Je[a.toLowerCase()]) || A("Unknown Shape.figure: " + a);
                    b !== c && (a = this.part, null !== a && (a.Tg = NaN), this.Nk = c, this.Qd = null, this.cc(), this.o(), this.g("figure", b, c))
                }
            }
        },
        toArrow: {
            get: function() {
                return this.Ll
            },
            set: function(a) {
                var b = this.Ll;
                !0 === a ? a = "Standard" : !1 === a && (a = "");
                if (b !== a) {
                    var c = pn(a);
                    null === c ? A("Unknown Shape.toArrow: " + a) : b !== c && (this.Ll = c, this.Qd = null, this.cc(), this.o(), mn(this), this.g("toArrow", b, c))
                }
            }
        },
        fromArrow: {
            get: function() {
                return this.Qk
            },
            set: function(a) {
                var b = this.Qk;
                !0 === a ? a = "Standard" : !1 === a && (a = "");
                if (b !== a) {
                    var c = pn(a);
                    null === c ? A("Unknown Shape.fromArrow: " + a) : b !== c && (this.Qk = c, this.Qd = null, this.cc(), this.o(), mn(this), this.g("fromArrow", b, c))
                }
            }
        },
        spot1: {
            get: function() {
                return this.cf
            },
            set: function(a) {
                var b = this.cf;
                b.A(a) || (this.cf = a = a.I(), this.o(), this.g("spot1", b, a))
            }
        },
        spot2: {
            get: function() {
                return this.df
            },
            set: function(a) {
                var b = this.df;
                b.A(a) || (this.df = a = a.I(), this.o(), this.g("spot2", b, a))
            }
        },
        parameter1: {
            get: function() {
                return this.Io
            },
            set: function(a) {
                var b = this.Io;
                b !== a && (this.Io = a, this.cc(), this.o(), this.g("parameter1", b, a))
            }
        },
        parameter2: {
            get: function() {
                return this.Jo
            },
            set: function(a) {
                var b = this.Jo;
                b !== a && (this.Jo = a, this.cc(), this.o(), this.g("parameter2", b, a))
            }
        },
        naturalBounds: {
            get: function() {
                if (null !== this.qa) return this.jc.assign(this.qa.bounds), this.jc;
                var a = this.desiredSize;
                return new N(0, 0, a.width, a.height)
            }
        },
        pathPattern: {
            get: function() {
                return this.Lo
            },
            set: function(a) {
                var b = this.Lo;
                b !== a && (this.Lo = a, this.R(), this.g("pathPattern", b, a))
            }
        },
        geometryStretch: {
            get: function() {
                return this.En
            },
            set: function(a) {
                var b = this.En;
                b !== a && (this.En = a, this.g("geometryStretch", b, a))
            }
        },
        interval: {
            get: function() {
                return this.Ed
            },
            set: function(a) {
                var b = this.Ed;
                a = Math.floor(a);
                if (b !== a && 0 <= a) {
                    this.Ed = a;
                    var c = this.diagram;
                    null !== c && this.panel === c.grid && gj(c);
                    this.o();
                    c = this.panel;
                    null !== c && (c.Lg = null);
                    this.g("interval", b, a)
                }
            }
        },
        graduatedStart: {
            get: function() {
                return this.Dd
            },
            set: function(a) {
                var b = this.Dd;
                b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Dd = a, this.o(),
                    this.g("graduatedStart", b, a))
            }
        },
        graduatedEnd: {
            get: function() {
                return this.Bd
            },
            set: function(a) {
                var b = this.Bd;
                b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Bd = a, this.o(), this.g("graduatedEnd", b, a))
            }
        },
        graduatedSkip: {
            get: function() {
                return this.Cd
            },
            set: function(a) {
                var b = this.Cd;
                b !== a && (this.Cd = a, this.o(), this.g("graduatedSkip", b, a))
            }
        }
    });
    V.prototype.intersectsRect = V.prototype.Kc;
    V.prototype.containedInRect = V.prototype.ph;
    V.prototype.getNearestIntersectionPoint = V.prototype.Uc;
    V.prototype.getDocumentBounds = V.prototype.Up;
    V.prototype.getDocumentPoint = V.prototype.ma;
    var on = new tb,
        en = new tb;
    V.className = "Shape";
    V.getFigureGenerators = function() {
        var a = new Lb,
            b;
        for (b in H.Je) b !== b.toLowerCase() && a.add(b, H.Je[b]);
        a.freeze();
        return a
    };
    V.defineFigureGenerator = function(a, b) {
        var c = a.toLowerCase(),
            d = H.Je;
        d[a] = b;
        d[c] = a
    };
    V.getArrowheadGeometries = function() {
        var a = new Lb;
        for (d in H.ym)
            if (void 0 === on[d]) {
                var b = me(H.ym[d], !1);
                on[d] = b;
                b = d.toLowerCase();
                b !== d && (on[b] = d)
            } for (var c in on)
            if (c !== c.toLowerCase()) {
                var d = on[c];
                d instanceof $d && a.add(c, d)
            } a.freeze();
        return a
    };
    V.defineArrowheadGeometry = function(a, b) {
        var c = null;
        "string" === typeof b ? c = me(b, !1) : c = b;
        b = a.toLowerCase();
        "none" !== b && a !== b || A("Shape.defineArrowheadGeometry name must not be empty or None or all-lower-case: " + a);
        var d = on;
        d[a] = c;
        d[b] = a
    };

    function uh() {
        Y.call(this);
        qn || (rn(), qn = !0);
        this.Ob = "";
        this.Ic = "black";
        this.ee = "13px sans-serif";
        this.si = "start";
        this.Ad = Yg;
        this.xi = Hd;
        this.jj = !0;
        this.ai = this.bi = !1;
        this.Xf = sn;
        this.ig = tn;
        this.Lr = this.rc = 0;
        this.eu = this.fu = null;
        this.pd = new Fm;
        this.yn = !1;
        this.Ec = this.Vm = this.vp = this.ti = this.wp = null;
        this.bf = this.af = 0;
        this.me = Infinity;
        this.bl = 0;
        this.Ed = 1;
        this.Dd = 0;
        this.Bd = 1;
        this.Cd = this.ej = null
    }
    oa(uh, Y);
    uh.prototype.cloneProtected = function(a) {
        Y.prototype.cloneProtected.call(this, a);
        a.Ob = this.Ob;
        a.Ic = this.Ic;
        a.ee = this.ee;
        a.si = this.si;
        a.Ad = this.Ad;
        a.xi = this.xi;
        a.jj = this.jj;
        a.bi = this.bi;
        a.ai = this.ai;
        a.Xf = this.Xf;
        a.ig = this.ig;
        a.rc = this.rc;
        a.Lr = this.Lr;
        a.fu = this.fu;
        a.eu = this.eu;
        a.pd.Sl(this.pd);
        a.yn = this.yn;
        a.wp = this.wp;
        a.ti = this.ti;
        a.vp = this.vp;
        a.Vm = this.Vm;
        a.Ec = this.Ec;
        a.af = this.af;
        a.bf = this.bf;
        a.me = this.me;
        a.bl = this.bl;
        a.Ed = this.Ed;
        a.Dd = this.Dd;
        a.Bd = this.Bd;
        a.ej = this.ej;
        a.Cd = this.Cd
    };

    function Em(a, b) {
        a.G = b.G | 6144;
        a.lb = b.opacity;
        a.ib = b.background;
        a.fc = b.areaBackground;
        a.Oc = b.desiredSize.I();
        a.Of = b.minSize.I();
        a.Nf = b.maxSize.I();
        a.Lf = b.Lf.copy();
        a.Ca = b.scale;
        a.Bc = b.angle;
        a.ue = b.stretch;
        a.Sg = b.margin.I();
        a.xb = b.alignment.I();
        a.rk = b.alignmentFocus.I();
        a.sl = b.segmentFraction;
        a.tl = b.segmentOffset.I();
        a.ul = b.segmentOrientation;
        null !== b.md && (a.md = b.md.copy());
        a.wl = b.shadowVisible;
        b instanceof uh && (a.Ob = b.Ob, a.Ic = b.Ic, a.ee = b.ee, a.si = b.si, a.Ad = b.Ad, a.xi = b.xi, a.jj = b.jj, a.bi = b.bi, a.ai = b.ai,
            a.Xf = b.Xf, a.ig = b.ig, a.pd.Gf = null, a.af = b.af, a.bf = b.bf, a.me = b.me, a.bl = b.bl, a.Ed = b.Ed, a.Dd = b.Dd, a.Bd = b.Bd, a.ej = b.ej, a.Cd = b.Cd)
    }
    t = uh.prototype;
    t.gb = function(a) {
        a.classType === uh ? this.wrap = a : Y.prototype.gb.call(this, a)
    };
    t.toString = function() {
        return 22 < this.Ob.length ? 'TextBlock("' + this.Ob.substring(0, 20) + '"...)' : 'TextBlock("' + this.Ob + '")'
    };
    t.o = function() {
        Y.prototype.o.call(this);
        this.eu = this.fu = null
    };
    t.zi = function(a, b) {
        if (null !== this.Ic && 0 !== this.Ob.length && null !== this.ee) {
            var c = this.naturalBounds,
                d = this.actualBounds,
                e = c.width,
                f = c.height,
                g = un(this),
                h = a.textAlign = this.si,
                k = b.Rn;
            "start" === h ? h = k ? "right" : "left" : "end" === h && (h = k ? "left" : "right");
            k = this.bi;
            var l = this.ai;
            fi(this, a, this.Ic, !0, !1, c, d);
            (k || l) && fi(this, a, this.Ic, !1, !1, c, d);
            d = 0;
            c = !1;
            var m = G.allocAt(0, 0);
            this.td.ta(m);
            var n = G.allocAt(0, g);
            this.td.ta(n);
            var p = m.Be(n);
            G.free(m);
            G.free(n);
            m = b.scale;
            8 > p * m * m && (c = !0);
            b.$c !== a && (c = !1);
            !1 === b.De("textGreeking") &&
                (c = !1);
            b = this.af;
            p = this.bf;
            switch (this.flip) {
                case Mk:
                    a.translate(e, 0);
                    a.scale(-1, 1);
                    break;
                case Lk:
                    a.translate(0, f);
                    a.scale(1, -1);
                    break;
                case Nk:
                    a.translate(e, f), a.scale(-1, -1)
            }
            m = this.rc;
            n = (b + g + p) * m;
            f > n && (d = this.xi, d = d.y * f - d.y * n + d.offsetY);
            n = this.pd;
            for (var q = 0; q < m; q++) {
                var r = n.Yc[q];
                r > e && (r = e);
                d += b;
                var u = n.Cc[q],
                    v = a,
                    x = d,
                    y = h,
                    z = 0;
                if (c) "left" === y ? z = 0 : "right" === y ? z = e - r : "center" === y && (z = (e - r) / 2), v.fillRect(0 + z, x + .25 * g, r, 1);
                else {
                    "left" === y ? z = 0 : "right" === y ? z = e : "center" === y && (z = e / 2);
                    var B = null !== vn ? vn(this,
                        g) : .75 * g;
                    v.fillText(u, 0 + z, x + B);
                    u = g / 20 | 0;
                    0 === u && (u = 1);
                    "right" === y ? z -= r : "center" === y && (z -= r / 2);
                    k && (y = null !== wn ? wn(this, g) : .8 * g, v.beginPath(), v.lineWidth = u, v.moveTo(0 + z, x + y), v.lineTo(0 + z + r, x + y), v.stroke());
                    l && (v.beginPath(), v.lineWidth = u, x = x + g - g / 2.2 | 0, 0 !== u % 2 && (x += .5), v.moveTo(0 + z, x), v.lineTo(0 + z + r, x), v.stroke())
                }
                d += g + p
            }
            switch (this.flip) {
                case Mk:
                    a.scale(-1, 1);
                    a.translate(-e, 0);
                    break;
                case Lk:
                    a.scale(1, -1);
                    a.translate(0, -f);
                    break;
                case Nk:
                    a.scale(-1, -1), a.translate(-e, -f)
            }
        }
    };
    t.em = function(a, b, c, d) {
        this.bl = a;
        var e = this.ee;
        null !== xn && yn !== e && (yn = xn.font = e);
        e = this.pd;
        e.reset();
        var f;
        if (isNaN(this.desiredSize.width)) {
            var g = this.Ob.replace(/\r\n/g, "\n").replace(/\r/g, "\n");
            if (0 === g.length) g = 0;
            else if (this.isMultiline) {
                for (var h = f = 0, k = !1; !k;) {
                    var l = g.indexOf("\n", h); - 1 === l && (l = g.length, k = !0);
                    f = Math.max(f, zn(g.substr(h, l - h).trim()));
                    h = l + 1
                }
                g = f
            } else f = g.indexOf("\n", 0), 0 <= f && (g = g.substr(0, f)), g = zn(g);
            g = Math.min(g, a / this.scale);
            g = Math.max(8, g)
        } else g = this.desiredSize.width;
        null !==
            this.panel && (g = Math.min(g, this.panel.maxSize.width));
        f = An(this, g, e);
        isNaN(this.desiredSize.height) ? f = Math.min(f, b / this.scale) : f = this.desiredSize.height;
        h = f;
        if (0 !== e.Gc && 1 !== e.Cc.length && this.Xf === Bn && (b = this.ee, b = this.Xf === Bn ? Cn(b) : 0, k = this.af + this.bf, k = Math.max(0, un(this) + k), h = Math.min(this.maxLines - 1, Math.max(Math.floor(h / k + .01) - 1, 0)), !(h + 1 >= e.Cc.length))) {
            k = e.Cc[h];
            for (b = Math.max(1, a - b); zn(k) > b && 1 < k.length;) k = k.substr(0, k.length - 1);
            k += Dn;
            b = zn(k);
            e.Cc[h] = k;
            e.Cc = e.Cc.slice(0, h + 1);
            e.Yc[h] = b;
            e.Yc =
                e.Yc.slice(0, h + 1);
            e.hg = e.Cc.length;
            e.Gc = Math.max(e.Gc, b);
            this.rc = e.hg
        }
        if (this.wrap === En || isNaN(this.desiredSize.width)) g = isNaN(a) ? e.Gc : Math.min(a, e.Gc), isNaN(this.desiredSize.width) && (g = Math.max(8, g));
        g = Math.max(c, g);
        f = Math.max(d, f);
        sc(this.jc, g, f);
        Uk(this, 0, 0, g, f)
    };
    t.oh = function(a, b, c, d) {
        Zk(this, a, b, c, d)
    };

    function Fn(a, b, c, d, e) {
        b = b.trim();
        var f = 0;
        var g = a.ee;
        var h = a.af + a.bf;
        h = Math.max(0, un(a) + h);
        var k = a.Xf === Bn ? Cn(g) : 0;
        if (a.rc >= a.me) null !== e && e.h(0, h);
        else {
            var l = b;
            if (a.ig === Gn)
                if (c.hg = 1, g = zn(b), 0 === k || g <= d) c.Gc = Math.max(c.Gc, g), c.Yc.push(c.Gc), c.Cc.push(b), null !== e && e.h(g, h);
                else {
                    f = Hn(a, l);
                    l = l.substr(f.length);
                    b = Hn(a, l);
                    for (g = zn(f + b); 0 < b.length && g <= d;) f += b, l = l.substr(b.length), b = Hn(a, l), g = zn((f + b).trim());
                    f += b.trim();
                    for (d = Math.max(1, d - k); zn(f) > d && 1 < f.length;) f = f.substr(0, f.length - 1);
                    f += Dn;
                    b = zn(f);
                    c.Yc.push(b);
                    c.Gc = b;
                    c.Cc.push(f);
                    null !== e && e.h(b, h)
                }
            else {
                k = 0;
                0 === l.length && (k = 1, c.Yc.push(0), c.Cc.push(l));
                for (; 0 < l.length;) {
                    var m = Hn(a, l);
                    for (l = l.substr(m.length); zn(m) > d;) {
                        var n = 1;
                        g = zn(m.substr(0, n));
                        for (b = 0; g <= d;) n++, b = g, g = zn(m.substr(0, n));
                        1 === n ? (c.Yc[a.rc + k] = g, f = Math.max(f, g)) : (c.Yc[a.rc + k] = b, f = Math.max(f, b));
                        n--;
                        1 > n && (n = 1);
                        c.Cc[a.rc + k] = m.substr(0, n);
                        k++;
                        m = m.substr(n);
                        if (a.rc + k > a.me) break
                    }
                    b = Hn(a, l);
                    for (g = zn(m + b); 0 < b.length && g <= d;) m += b, l = l.substr(b.length), b = Hn(a, l), g = zn((m + b).trim());
                    m = m.trim();
                    if ("" !== m && ("\u00ad" === m[m.length - 1] && (m = m.substring(0, m.length - 1) + "\u2010"), 0 === b.length ? (c.Yc.push(g), f = Math.max(f, g)) : (b = zn(m), c.Yc.push(b), f = Math.max(f, b)), c.Cc.push(m), k++, a.rc + k > a.me)) break
                }
                c.hg = Math.min(a.me, k);
                c.Gc = Math.max(c.Gc, f);
                null !== e && e.h(c.Gc, h * c.hg)
            }
        }
    }

    function Hn(a, b) {
        if (a.ig === In) return b.substr(0, 1);
        a = b.length;
        for (var c = 0, d = Jn; c < a && !d.test(b.charAt(c));) c++;
        for (; c < a && d.test(b.charAt(c));) c++;
        return c >= a ? b : b.substr(0, c)
    }

    function zn(a) {
        return null === xn ? 8 * a.length : xn.measureText(a).width
    }

    function un(a) {
        if (null !== a.pd.Gf) return a.pd.Gf;
        var b = a.ee;
        if (null === xn) {
            var c = 16;
            return a.pd.Gf = c
        }
        void 0 !== Kn[b] && 5E3 > Ln ? c = Kn[b] : (c = 1.3 * xn.measureText("M").width, Kn[b] = c, Ln++);
        return a.pd.Gf = c
    }

    function Cn(a) {
        if (null === xn) return 6;
        if (void 0 !== Mn[a] && 5E3 > Nn) var b = Mn[a];
        else b = xn.measureText(Dn).width, Mn[a] = b, Nn++;
        return b
    }

    function An(a, b, c) {
        var d = a.Ob.replace(/\r\n/g, "\n").replace(/\r/g, "\n"),
            e = a.af + a.bf;
        e = Math.max(0, un(a) + e);
        if (0 === d.length) return c.Gc = 0, a.rc = 1, e;
        if (!a.isMultiline) {
            var f = d.indexOf("\n", 0);
            0 <= f && (d = d.substr(0, f))
        }
        f = 0;
        for (var g = a.rc = 0, h, k = !1; !k;) {
            h = d.indexOf("\n", g); - 1 === h && (h = d.length, k = !0);
            if (g <= h) {
                g = d.substr(g, h - g);
                if (a.ig !== Gn) {
                    c.hg = 0;
                    var l = L.alloc();
                    Fn(a, g, c, b, l);
                    f += l.height;
                    L.free(l);
                    a.rc += c.hg
                } else Fn(a, g, c, b, null), f += e, a.rc++;
                a.rc === a.me && (k = !0)
            }
            g = h + 1
        }
        return a.Lr = f
    }

    function rn() {
        Jn = /[ \u200b\u00ad]/;
        Kn = new tb;
        Mn = new tb;
        xn = sh ? (new qk(null)).context : null
    }
    pa.Object.defineProperties(uh.prototype, {
        font: {
            get: function() {
                return this.ee
            },
            set: function(a) {
                var b = this.ee;
                b !== a && (this.ee = a, this.pd.Gf = null, this.o(), this.g("font", b, a))
            }
        },
        text: {
            get: function() {
                return this.Ob
            },
            set: function(a) {
                var b = this.Ob;
                null !== a && void 0 !== a ? a = a.toString() : a = "";
                b !== a && (this.Ob = a, this.o(), this.g("text", b, a))
            }
        },
        textAlign: {
            get: function() {
                return this.si
            },
            set: function(a) {
                var b = this.si;
                b === a || "start" !==
                    a && "end" !== a && "left" !== a && "right" !== a && "center" !== a || (this.si = a, this.R(), this.g("textAlign", b, a))
            }
        },
        flip: {
            get: function() {
                return this.Ad
            },
            set: function(a) {
                var b = this.Ad;
                b !== a && (this.Ad = a, this.R(), this.g("flip", b, a))
            }
        },
        verticalAlignment: {
            get: function() {
                return this.xi
            },
            set: function(a) {
                var b = this.xi;
                b.A(a) || (this.xi = a = a.I(), ol(this), this.g("verticalAlignment", b, a))
            }
        },
        naturalBounds: {
            get: function() {
                if (!this.jc.s()) {
                    var a =
                        L.alloc();
                    Fn(this, this.Ob, this.pd, 999999, a);
                    var b = a.width;
                    L.free(a);
                    a = An(this, b, this.pd);
                    var c = this.desiredSize;
                    isNaN(c.width) || (b = c.width);
                    isNaN(c.height) || (a = c.height);
                    sc(this.jc, b, a)
                }
                return this.jc
            }
        },
        isMultiline: {
            get: function() {
                return this.jj
            },
            set: function(a) {
                var b = this.jj;
                b !== a && (this.jj = a, this.o(), this.g("isMultiline", b, a))
            }
        },
        isUnderline: {
            get: function() {
                return this.bi
            },
            set: function(a) {
                var b = this.bi;
                b !== a && (this.bi = a, this.R(), this.g("isUnderline",
                    b, a))
            }
        },
        isStrikethrough: {
            get: function() {
                return this.ai
            },
            set: function(a) {
                var b = this.ai;
                b !== a && (this.ai = a, this.R(), this.g("isStrikethrough", b, a))
            }
        },
        wrap: {
            get: function() {
                return this.ig
            },
            set: function(a) {
                var b = this.ig;
                b !== a && (this.ig = a, this.o(), this.g("wrap", b, a))
            }
        },
        overflow: {
            get: function() {
                return this.Xf
            },
            set: function(a) {
                var b = this.Xf;
                b !== a && (this.Xf = a, this.o(), this.g("overflow", b, a))
            }
        },
        stroke: {
            get: function() {
                return this.Ic
            },
            set: function(a) {
                var b = this.Ic;
                b !== a && (a instanceof fl && a.freeze(), this.Ic = a, this.R(), this.g("stroke", b, a))
            }
        },
        lineCount: {
            get: function() {
                return this.rc
            }
        },
        editable: {
            get: function() {
                return this.yn
            },
            set: function(a) {
                var b = this.yn;
                b !== a && (this.yn = a, this.g("editable", b, a))
            }
        },
        textEditor: {
            get: function() {
                return this.wp
            },
            set: function(a) {
                var b = this.wp;
                b !== a && (this.wp = a, this.g("textEditor", b,
                    a))
            }
        },
        errorFunction: {
            get: function() {
                return this.Ec
            },
            set: function(a) {
                var b = this.Ec;
                b !== a && (this.Ec = a, this.g("errorFunction", b, a))
            }
        },
        interval: {
            get: function() {
                return this.Ed
            },
            set: function(a) {
                var b = this.Ed;
                a = Math.floor(a);
                if (b !== a && 0 <= a) {
                    this.Ed = a;
                    this.o();
                    var c = this.panel;
                    null !== c && (c.Lg = null);
                    this.g("interval", b, a)
                }
            }
        },
        graduatedStart: {
            get: function() {
                return this.Dd
            },
            set: function(a) {
                var b = this.Dd;
                b !== a && (0 > a ? a = 0 :
                    1 < a && (a = 1), this.Dd = a, this.o(), this.g("graduatedStart", b, a))
            }
        },
        graduatedEnd: {
            get: function() {
                return this.Bd
            },
            set: function(a) {
                var b = this.Bd;
                b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Bd = a, this.o(), this.g("graduatedEnd", b, a))
            }
        },
        graduatedFunction: {
            get: function() {
                return this.ej
            },
            set: function(a) {
                var b = this.ej;
                b !== a && (this.ej = a, this.o(), this.g("graduatedFunction", b, a))
            }
        },
        graduatedSkip: {
            get: function() {
                return this.Cd
            },
            set: function(a) {
                var b =
                    this.Cd;
                b !== a && (this.Cd = a, this.o(), this.g("graduatedSkip", b, a))
            }
        },
        textValidation: {
            get: function() {
                return this.ti
            },
            set: function(a) {
                var b = this.ti;
                b !== a && (this.ti = a, this.g("textValidation", b, a))
            }
        },
        textEdited: {
            get: function() {
                return this.vp
            },
            set: function(a) {
                var b = this.vp;
                b !== a && (this.vp = a, this.g("textEdited", b, a))
            }
        },
        spacingAbove: {
            get: function() {
                return this.af
            },
            set: function(a) {
                var b = this.af;
                b !== a && (this.af = a, this.g("spacingAbove",
                    b, a))
            }
        },
        spacingBelow: {
            get: function() {
                return this.bf
            },
            set: function(a) {
                var b = this.bf;
                b !== a && (this.bf = a, this.g("spacingBelow", b, a))
            }
        },
        maxLines: {
            get: function() {
                return this.me
            },
            set: function(a) {
                var b = this.me;
                b !== a && (a = Math.floor(a), 0 >= a && xa(a, "> 0", uh, "maxLines"), this.me = a, this.g("maxLines", b, a), this.o())
            }
        },
        metrics: {
            get: function() {
                return this.pd
            }
        },
        choices: {
            get: function() {
                return this.Vm
            },
            set: function(a) {
                var b = this.Vm;
                b !== a && (this.Vm = a, this.g("choices", b, a))
            }
        }
    });
    var vn = null,
        wn = null,
        Gn = new D(uh, "None", 0),
        En = new D(uh, "WrapFit", 1),
        tn = new D(uh, "WrapDesiredSize", 2),
        In = new D(uh, "WrapBreakAll", 3),
        sn = new D(uh, "OverflowClip", 0),
        Bn = new D(uh, "OverflowEllipsis", 1),
        Jn = null,
        Kn = null,
        Ln = 0,
        Mn = null,
        Nn = 0,
        Dn = "...",
        yn = "",
        xn = null,
        qn = !1;
    uh.className = "TextBlock";
    uh.getEllipsis = function() {
        return Dn
    };
    uh.setEllipsis = function(a) {
        Dn = a;
        Mn = new tb;
        Nn = 0
    };
    uh.getBaseline = function() {
        return vn
    };
    uh.setBaseline = function(a) {
        vn = a;
        a = Va();
        for (var b = a.length, c = 0; c < b; c++) a[c].yh()
    };
    uh.getUnderline = function() {
        return wn
    };
    uh.setUnderline = function(a) {
        wn = a;
        a = Va();
        for (var b = a.length, c = 0; c < b; c++) a[c].yh()
    };
    uh.isValidFont = function(a) {
        qn || (rn(), qn = !0);
        if (null === xn) return !0;
        var b = xn.font;
        if (a === b || "10px sans-serif" === a) return !0;
        xn.font = "10px sans-serif";
        xn.font = a;
        var c = xn.font;
        if ("10px sans-serif" !== c) return xn.font = b, !0;
        xn.font = "19px serif";
        var d = xn.font;
        xn.font = a;
        c = xn.font;
        xn.font = b;
        return c !== d
    };
    uh.None = Gn;
    uh.WrapFit = En;
    uh.WrapDesiredSize = tn;
    uh.WrapBreakAll = In;
    uh.OverflowClip = sn;
    uh.OverflowEllipsis = Bn;

    function Fm() {
        this.Gc = this.hg = 0;
        this.Yc = [];
        this.Cc = [];
        this.Gf = null
    }
    Fm.prototype.reset = function() {
        this.Gc = this.hg = 0;
        this.Gf = null;
        this.Yc = [];
        this.Cc = []
    };
    Fm.prototype.Sl = function(a) {
        this.hg = a.hg;
        this.Gf = a.Gf;
        this.Gc = a.Gc;
        this.Yc = Ga(a.Yc);
        this.Cc = Ga(a.Cc)
    };
    pa.Object.defineProperties(Fm.prototype, {
        arrSize: {
            get: function() {
                return this.Yc
            }
        },
        arrText: {
            get: function() {
                return this.Cc
            }
        },
        maxLineWidth: {
            get: function() {
                return this.Gc
            }
        },
        fontHeight: {
            get: function() {
                return this.Gf
            }
        }
    });
    Fm.className = "TextBlockMetrics";

    function Sj() {
        Y.call(this);
        this.Hg = null;
        this.op = "";
        this.bh = Hc;
        this.Tk = be;
        this.ef = this.Ec = null;
        this.Sk = dd;
        this.Ad = Yg;
        this.Hl = null;
        this.Zt = !1;
        this.hr = !0;
        this.fl = !1;
        this.xl = null
    }
    oa(Sj, Y);
    Sj.prototype.cloneProtected = function(a) {
        Y.prototype.cloneProtected.call(this, a);
        a.element = this.Hg;
        a.op = this.op;
        a.bh = this.bh.I();
        a.Tk = this.Tk;
        a.Ad = this.Ad;
        a.Ec = this.Ec;
        a.ef = this.ef;
        a.Sk = this.Sk.I();
        a.hr = this.hr;
        a.xl = this.xl
    };
    t = Sj.prototype;
    t.gb = function(a) {
        a === Yg || a === $g || a === Kk ? this.imageStretch = a : Y.prototype.gb.call(this, a)
    };
    t.toString = function() {
        return "Picture(" + this.source + ")#" + Bb(this)
    };

    function Xj(a) {
        void 0 === a && (a = "");
        "" !== a ? On[a] && (delete On[a], Pn--) : (On = new tb, Pn = 0)
    }

    function Qn(a, b) {
        a.Pn = !0;
        a.Rk = !1;
        for (var c, d = Va(), e = d.length, f = 0; f < e; f++) {
            var g = d[f],
                h = g.yj.J(a.src);
            if (null !== h)
                for (var k = h.length, l = 0; l < k; l++) c = h[l], g.ju.add(c), g.ec(), null === a.ou && (a.ou = b, null !== c.ef && c.ef(c, b))
        }
    }

    function Rn(a, b) {
        a.Rk = b;
        for (var c, d = Va(), e = d.length, f = 0; f < e; f++)
            if (c = d[f].yj.J(a.src), null !== c) {
                for (var g = c.length, h = Ka(), k = 0; k < g; k++) h.push(c[k]);
                for (k = 0; k < g; k++) c = h[k], null !== c.Ec && c.Ec(c, b);
                Oa(h)
            }
    }
    t.zi = function(a, b) {
        var c = this.Hg;
        if (null !== c) {
            var d = c.src;
            null !== d && "" !== d || A('Element has no source ("src") attribute: ' + c);
            if (!(c.Rk instanceof Event) && !0 === c.Pn) {
                d = this.naturalBounds;
                var e = 0,
                    f = 0,
                    g = this.Zt,
                    h = g ? +c.width : c.naturalWidth;
                g = g ? +c.height : c.naturalHeight;
                void 0 === h && c.videoWidth && (h = c.videoWidth);
                void 0 === g && c.videoHeight && (g = c.videoHeight);
                h = h || d.width;
                g = g || d.height;
                if (0 !== h && 0 !== g) {
                    var k = h,
                        l = g;
                    this.sourceRect.s() && (e = this.bh.x, f = this.bh.y, h = this.bh.width, g = this.bh.height);
                    var m = h,
                        n = g,
                        p = this.Tk,
                        q = this.Sk;
                    switch (p) {
                        case Yg:
                            if (this.sourceRect.s()) break;
                            m >= d.width && (e = e + q.offsetX + (m * q.x - d.width * q.x));
                            n >= d.height && (f = f + q.offsetY + (n * q.y - d.height * q.y));
                            h = Math.min(d.width, m);
                            g = Math.min(d.height, n);
                            break;
                        case be:
                            m = d.width;
                            n = d.height;
                            break;
                        case $g:
                        case Kk:
                            p === $g ? (p = Math.min(d.height / n, d.width / m), m *= p, n *= p) : p === Kk && (p = Math.max(d.height / n, d.width / m), m *= p, n *= p, m >= d.width && (e = (e + q.offsetX + (m * q.x - d.width * q.x) / m) * h), n >= d.height && (f = (f + q.offsetY + (n * q.y - d.height * q.y) / n) * g), h *= 1 / (m / d.width), g *=
                                1 / (n / d.height), m = d.width, n = d.height)
                    }
                    p = this.Ce() * b.scale;
                    var r = h * g / (m * p * n * p),
                        u = On[this.source];
                    p = null;
                    var v = Sn;
                    if (c.Pn && void 0 !== u && r > v * v)
                        for (2 > u.Ol.length && (Tn(u, 4, k, l), Tn(u, 16, k, l)), k = u.Ol, l = k.length, p = k[0], v = 0; v < l; v++)
                            if (k[v].ratio * k[v].ratio < r) p = k[v];
                            else break;
                    if (!b.vn) {
                        if (null === this.Hl)
                            if (null === this.Hg) this.Hl = !1;
                            else {
                                k = (new qk(null)).context;
                                k.drawImage(this.Hg, 0, 0);
                                try {
                                    k.getImageData(0, 0, 1, 1).data[3] && (this.Hl = !1), this.Hl = !1
                                } catch (x) {
                                    this.Hl = !0
                                }
                            } if (this.Hl) return
                    }
                    k = 0;
                    m < d.width && (k = q.offsetX +
                        (d.width * q.x - m * q.x));
                    l = 0;
                    n < d.height && (l = q.offsetY + (d.height * q.y - n * q.y));
                    switch (this.flip) {
                        case Mk:
                            a.translate(Math.min(d.width, m), 0);
                            a.scale(-1, 1);
                            break;
                        case Lk:
                            a.translate(0, Math.min(d.height, n));
                            a.scale(1, -1);
                            break;
                        case Nk:
                            a.translate(Math.min(d.width, m), Math.min(d.height, n)), a.scale(-1, -1)
                    }
                    if (b.De("pictureRatioOptimization") && !b.ij && void 0 !== u && null !== p && 1 !== p.ratio) {
                        a.save();
                        b = p.ratio;
                        try {
                            a.drawImage(p.source, e / b, f / b, Math.min(p.source.width, h / b), Math.min(p.source.height, g / b), k, l, Math.min(d.width,
                                m), Math.min(d.height, n))
                        } catch (x) {
                            this.hr = !1
                        }
                        a.restore()
                    } else try {
                        a.drawImage(c, e, f, h, g, k, l, Math.min(d.width, m), Math.min(d.height, n))
                    } catch (x) {
                        this.hr = !1
                    }
                    switch (this.flip) {
                        case Mk:
                            a.scale(-1, 1);
                            a.translate(-Math.min(d.width, m), 0);
                            break;
                        case Lk:
                            a.scale(1, -1);
                            a.translate(0, -Math.min(d.height, n));
                            break;
                        case Nk:
                            a.scale(-1, -1), a.translate(-Math.min(d.width, m), -Math.min(d.height, n))
                    }
                }
            }
        }
    };
    t.em = function(a, b, c, d) {
        var e = this.desiredSize,
            f = Xk(this, !0),
            g = this.Hg,
            h = this.Zt;
        if (h || !this.fl && g && g.complete) this.fl = !0;
        null === g && (isFinite(e.width) || (a = 0), isFinite(e.height) || (b = 0));
        isFinite(e.width) || f === be || f === Ik ? (isFinite(a) || (a = this.sourceRect.s() ? this.sourceRect.width : h ? +g.width : g.naturalWidth), c = 0) : null !== g && !1 !== this.fl && (a = this.sourceRect.s() ? this.sourceRect.width : h ? +g.width : g.naturalWidth);
        isFinite(e.height) || f === be || f === Jk ? (isFinite(b) || (b = this.sourceRect.s() ? this.sourceRect.height : h ?
            +g.height : g.naturalHeight), d = 0) : null !== g && !1 !== this.fl && (b = this.sourceRect.s() ? this.sourceRect.height : h ? +g.height : g.naturalHeight);
        isFinite(e.width) && (a = e.width);
        isFinite(e.height) && (b = e.height);
        e = this.maxSize;
        f = this.minSize;
        c = Math.max(c, f.width);
        d = Math.max(d, f.height);
        a = Math.min(e.width, a);
        b = Math.min(e.height, b);
        a = Math.max(c, a);
        b = Math.max(d, b);
        null === g || g.complete || (isFinite(a) || (a = 0), isFinite(b) || (b = 0));
        sc(this.jc, a, b);
        Uk(this, 0, 0, a, b)
    };
    t.oh = function(a, b, c, d) {
        Zk(this, a, b, c, d)
    };
    pa.Object.defineProperties(Sj.prototype, {
        element: {
            get: function() {
                return this.Hg
            },
            set: function(a) {
                var b = this.Hg;
                if (b !== a) {
                    null === a || a instanceof HTMLImageElement || a instanceof HTMLVideoElement || a instanceof HTMLCanvasElement || A("Picture.element must be an instance of Image, Canvas, or Video, not: " + a);
                    this.Zt = a instanceof HTMLCanvasElement;
                    this.Hg = a;
                    if (null !== a)
                        if (a instanceof HTMLCanvasElement || !0 === a.complete) a.Rk instanceof Event && null !== this.Ec && this.Ec(this, a.Rk),
                            !0 === a.Pn && null !== this.ef && this.ef(this, a.ou), a.Pn = !0, this.desiredSize.s() || (fj(this, !1), this.o());
                        else {
                            var c = this;
                            a.tw || (a.addEventListener("load", function(b) {
                                Qn(a, b);
                                c.desiredSize.s() || (fj(c, !1), c.o())
                            }), a.addEventListener("error", function(b) {
                                Rn(a, b)
                            }), a.tw = !0)
                        } this.g("element", b, a);
                    this.R()
                }
            }
        },
        source: {
            get: function() {
                return this.op
            },
            set: function(a) {
                var b = this.op;
                if (b !== a) {
                    this.op = a;
                    var c = On,
                        d = this.diagram,
                        e = null;
                    if (void 0 !== c[a]) e = c[a].Ol[0].source;
                    else {
                        30 < Pn && (Xj(),
                            c = On);
                        e = va("img");
                        var f = this;
                        e.addEventListener("load", function(a) {
                            Qn(e, a);
                            f.desiredSize.s() || (fj(f, !1), f.o())
                        });
                        e.addEventListener("error", function(a) {
                            Rn(e, a)
                        });
                        e.tw = !0;
                        var g = this.xl;
                        null !== g && (e.crossOrigin = g(this));
                        e.src = a;
                        c[a] = new Un(e);
                        Pn++
                    }
                    null !== d && Tj(d, this);
                    this.element = e;
                    null !== d && Rj(d, this);
                    this.o();
                    this.R();
                    this.g("source", b, a)
                }
            }
        },
        sourceCrossOrigin: {
            get: function() {
                return this.xl
            },
            set: function(a) {
                if (this.xl !== a && (this.xl = a, null !== this.element)) {
                    var b = this.element.src;
                    null === a && "string" === typeof b ? this.element.crossOrigin = null : null !== a && (this.element.crossOrigin = a(this));
                    this.element.src = b
                }
            }
        },
        sourceRect: {
            get: function() {
                return this.bh
            },
            set: function(a) {
                var b = this.bh;
                b.A(a) || (this.bh = a = a.I(), this.R(), this.g("sourceRect", b, a))
            }
        },
        imageStretch: {
            get: function() {
                return this.Tk
            },
            set: function(a) {
                var b = this.Tk;
                b !== a && (this.Tk = a, this.R(), this.g("imageStretch", b, a))
            }
        },
        flip: {
            get: function() {
                return this.Ad
            },
            set: function(a) {
                var b = this.Ad;
                b !== a && (this.Ad = a, this.R(), this.g("flip", b, a))
            }
        },
        imageAlignment: {
            get: function() {
                return this.Sk
            },
            set: function(a) {
                var b = this.Sk;
                b.A(a) || (this.Sk = a = a.I(), this.o(), this.g("imageAlignment", b, a))
            }
        },
        errorFunction: {
            get: function() {
                return this.Ec
            },
            set: function(a) {
                var b = this.Ec;
                b !== a && (this.Ec = a, this.g("errorFunction", b, a))
            }
        },
        successFunction: {
            get: function() {
                return this.ef
            },
            set: function(a) {
                var b =
                    this.ef;
                b !== a && (this.ef = a, this.g("successFunction", b, a))
            }
        },
        naturalBounds: {
            get: function() {
                return this.jc
            }
        }
    });
    var On = null,
        Pn = 0,
        Sn = 4;
    Sj.className = "Picture";
    On = new tb;
    Sj.clearCache = Xj;

    function Un(a) {
        this.Ol = [new Vn(a, 1)]
    }

    function Tn(a, b, c, d) {
        var e = new qk(null),
            f = e.context,
            g = 1 / b;
        e.width = c / b;
        e.height = d / b;
        b = new Vn(e.Ga, b);
        c = a.Ol[a.Ol.length - 1];
        f.setTransform(g * c.ratio, 0, 0, g * c.ratio, 0, 0);
        f.drawImage(c.source, 0, 0);
        a.Ol.push(b)
    }
    Un.className = "PictureCacheArray";

    function Vn(a, b) {
        this.source = a;
        this.ratio = b
    }
    Vn.className = "PictureCacheInstance";

    function Wn() {
        this.Rs = new $d;
        this.gc = null
    }
    t = Wn.prototype;
    t.reset = function(a) {
        null !== a ? (this.Rs = a, a.figures.clear()) : this.Rs = new $d;
        this.gc = null
    };

    function oe(a, b, c, d, e) {
        a.gc = new Ue;
        a.gc.startX = b;
        a.gc.startY = c;
        a.gc.isFilled = d;
        a.Rs.figures.add(a.gc);
        void 0 !== e && (a.gc.isShadowed = e)
    }

    function ve(a) {
        var b = a.gc.segments.length;
        0 < b && a.gc.segments.N(b - 1).close()
    }
    t.pq = function(a) {
        this.gc.isShadowed = a
    };
    t.moveTo = function(a, b, c) {
        void 0 === c && (c = !1);
        var d = new Ve(ze);
        d.endX = a;
        d.endY = b;
        c && d.close();
        this.gc.segments.add(d)
    };
    t.lineTo = function(a, b, c) {
        void 0 === c && (c = !1);
        var d = new Ve(ie);
        d.endX = a;
        d.endY = b;
        c && d.close();
        this.gc.segments.add(d)
    };

    function se(a, b, c, d, e, f, g) {
        var h;
        void 0 === h && (h = !1);
        var k = new Ve(Ae);
        k.point1X = b;
        k.point1Y = c;
        k.point2X = d;
        k.point2Y = e;
        k.endX = f;
        k.endY = g;
        h && k.close();
        a.gc.segments.add(k)
    }

    function te(a, b, c, d, e) {
        var f;
        void 0 === f && (f = !1);
        var g = new Ve(Be);
        g.point1X = b;
        g.point1Y = c;
        g.endX = d;
        g.endY = e;
        f && g.close();
        a.gc.segments.add(g)
    }
    t.arcTo = function(a, b, c, d, e, f, g) {
        void 0 === f && (f = 0);
        void 0 === g && (g = !1);
        var h = new Ve(Ce);
        h.startAngle = a;
        h.sweepAngle = b;
        h.centerX = c;
        h.centerY = d;
        h.radiusX = e;
        h.radiusY = 0 !== f ? f : e;
        g && h.close();
        this.gc.segments.add(h)
    };

    function ue(a, b, c, d, e, f, g, h) {
        var k;
        void 0 === k && (k = !1);
        b = new Ve(De, g, h, b, c, d, e, f);
        k && b.close();
        a.gc.segments.add(b)
    }

    function ne(a) {
        var b = we;
        if (null !== b) return we = null, b.reset(a), b;
        b = new Wn;
        b.reset(a);
        return b
    }
    var we = null;
    Wn.className = "StreamGeometryContext";

    function Xn(a, b) {
        var c = a.toLowerCase(),
            d = H.Je;
        d[a] = b;
        d[c] = a
    }
    Xn("Rectangle", function(a, b, c) {
        a = new $d(ke);
        a.startX = 0;
        a.startY = 0;
        a.endX = b;
        a.endY = c;
        return a
    });
    Xn("Square", function(a, b, c) {
        a = new $d(ke);
        a.startX = 0;
        a.startY = 0;
        a.endX = b;
        a.endY = c;
        a.defaultStretch = $g;
        return a
    });
    Xn("RoundedRectangle", function(a, b, c) {
        var d = a ? a.parameter1 : NaN;
        if (isNaN(d) || 0 >= d) d = 5;
        d = Math.min(d, b / 3);
        d = Math.min(d, c / 3);
        a = d * H.wg;
        b = (new $d).add((new Ue(d, 0, !0)).add(new Ve(ie, b - d, 0)).add(new Ve(Ae, b, d, b - a, 0, b, a)).add(new Ve(ie, b, c - d)).add(new Ve(Ae, b - d, c, b, c - a, b - a, c)).add(new Ve(ie, d, c)).add(new Ve(Ae, 0, c - d, a, c, 0, c - a)).add(new Ve(ie, 0, d)).add((new Ve(Ae, d, 0, 0, a, a, 0)).close()));
        1 < a && (b.spot1 = new O(0, 0, a, a), b.spot2 = new O(1, 1, -a, -a));
        return b
    });
    Xn("Border", "RoundedRectangle");
    Xn("Ellipse", function(a, b, c) {
        a = new $d(le);
        a.startX = 0;
        a.startY = 0;
        a.endX = b;
        a.endY = c;
        a.spot1 = Ud;
        a.spot2 = Vd;
        return a
    });
    Xn("Circle", function(a, b, c) {
        a = new $d(le);
        a.startX = 0;
        a.startY = 0;
        a.endX = b;
        a.endY = c;
        a.spot1 = Ud;
        a.spot2 = Vd;
        a.defaultStretch = $g;
        return a
    });
    Xn("TriangleRight", function(a, b, c) {
        return (new $d).add((new Ue(0, 0)).add(new Ve(ie, b, .5 * c)).add((new Ve(ie, 0, c)).close())).um(0, .25, .5, .75)
    });
    Xn("TriangleDown", function(a, b, c) {
        return (new $d).add((new Ue(0, 0)).add(new Ve(ie, b, 0)).add((new Ve(ie, .5 * b, c)).close())).um(.25, 0, .75, .5)
    });
    Xn("TriangleLeft", function(a, b, c) {
        return (new $d).add((new Ue(b, c)).add(new Ve(ie, 0, .5 * c)).add((new Ve(ie, b, 0)).close())).um(.5, .25, 1, .75)
    });
    Xn("TriangleUp", function(a, b, c) {
        return (new $d).add((new Ue(b, c)).add(new Ve(ie, 0, c)).add((new Ve(ie, .5 * b, 0)).close())).um(.25, .5, .75, 1)
    });
    Xn("Triangle", "TriangleUp");
    Xn("Diamond", function(a, b, c) {
        return (new $d).add((new Ue(.5 * b, 0)).add(new Ve(ie, 0, .5 * c)).add(new Ve(ie, .5 * b, c)).add((new Ve(ie, b, .5 * c)).close())).um(.25, .25, .75, .75)
    });
    Xn("LineH", function(a, b, c) {
        a = new $d(ge);
        a.startX = 0;
        a.startY = c / 2;
        a.endX = b;
        a.endY = c / 2;
        return a
    });
    Xn("LineV", function(a, b, c) {
        a = new $d(ge);
        a.startX = b / 2;
        a.startY = 0;
        a.endX = b / 2;
        a.endY = c;
        return a
    });
    Xn("None", "Rectangle");
    Xn("BarH", "Rectangle");
    Xn("BarV", "Rectangle");
    Xn("MinusLine", "LineH");
    Xn("PlusLine", function(a, b, c) {
        return (new $d).add((new Ue(0, c / 2, !1)).add(new Ve(ie, b, c / 2)).add(new Ve(ze, b / 2, 0)).add(new Ve(ie, b / 2, c)))
    });
    Xn("XLine", function(a, b, c) {
        return (new $d).add((new Ue(0, c, !1)).add(new Ve(ie, b, 0)).add(new Ve(ze, 0, 0)).add(new Ve(ie, b, c)))
    });
    H.ym = {
        "": "",
        Standard: "F1 m 0,0 l 8,4 -8,4 2,-4 z",
        Backward: "F1 m 8,0 l -2,4 2,4 -8,-4 z",
        Triangle: "F1 m 0,0 l 8,4.62 -8,4.62 z",
        BackwardTriangle: "F1 m 8,4 l 0,4 -8,-4 8,-4 0,4 z",
        Boomerang: "F1 m 0,0 l 8,4 -8,4 4,-4 -4,-4 z",
        BackwardBoomerang: "F1 m 8,0 l -8,4 8,4 -4,-4 4,-4 z",
        SidewaysV: "m 0,0 l 8,4 -8,4 0,-1 6,-3 -6,-3 0,-1 z",
        BackwardV: "m 8,0 l -8,4 8,4 0,-1 -6,-3 6,-3 0,-1 z",
        OpenTriangle: "m 0,0 l 8,4 -8,4",
        BackwardOpenTriangle: "m 8,0 l -8,4 8,4",
        OpenTriangleLine: "m 0,0 l 8,4 -8,4 m 8.5,0 l 0,-8",
        BackwardOpenTriangleLine: "m 8,0 l  -8,4 8,4 m -8.5,0 l 0,-8",
        OpenTriangleTop: "m 0,0 l 8,4 m 0,4",
        BackwardOpenTriangleTop: "m 8,0 l -8,4 m 0,4",
        OpenTriangleBottom: "m 0,8 l 8,-4",
        BackwardOpenTriangleBottom: "m 0,4 l 8,4",
        HalfTriangleTop: "F1 m 0,0 l 0,4 8,0 z m 0,8",
        BackwardHalfTriangleTop: "F1 m 8,0 l 0,4 -8,0 z m 0,8",
        HalfTriangleBottom: "F1 m 0,4 l 0,4 8,-4 z",
        BackwardHalfTriangleBottom: "F1 m 8,4 l 0,4 -8,-4 z",
        ForwardSemiCircle: "m 4,0 b 270 180 0 4 4",
        BackwardSemiCircle: "m 4,8 b 90 180 0 -4 4",
        Feather: "m 0,0 l 3,4 -3,4",
        BackwardFeather: "m 3,0 l -3,4 3,4",
        DoubleFeathers: "m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4",
        BackwardDoubleFeathers: "m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4",
        TripleFeathers: "m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4 m 3,-8 l 3,4 -3,4",
        BackwardTripleFeathers: "m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4 m 3,-8 l -3,4 3,4",
        ForwardSlash: "m 0,8 l 5,-8",
        BackSlash: "m 0,0 l 5,8",
        DoubleForwardSlash: "m 0,8 l 4,-8 m -2,8 l 4,-8",
        DoubleBackSlash: "m 0,0 l 4,8 m -2,-8 l 4,8",
        TripleForwardSlash: "m 0,8 l 4,-8 m -2,8 l 4,-8 m -2,8 l 4,-8",
        TripleBackSlash: "m 0,0 l 4,8 m -2,-8 l 4,8 m -2,-8 l 4,8",
        Fork: "m 0,4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4",
        BackwardFork: "m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4",
        LineFork: "m 0,0 l 0,8 m 0,-4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4",
        BackwardLineFork: "m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4 m 8,-8 l 0,8",
        CircleFork: "F1 m 6,4 b 0 360 -3 0 3 z m 0,0 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4",
        BackwardCircleFork: "F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 6,0 b 0 360 -3 0 3",
        CircleLineFork: "F1 m 6,4 b 0 360 -3 0 3 z m 1,-4 l 0,8 m 0,-4 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4",
        BackwardCircleLineFork: "F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 0,-4 l 0,8 m 7,-4 b 0 360 -3 0 3",
        Circle: "F1 m 8,4 b 0 360 -4 0 4 z",
        Block: "F1 m 0,0 l 0,8 8,0 0,-8 z",
        StretchedDiamond: "F1 m 0,3 l 5,-3 5,3 -5,3 -5,-3 z",
        Diamond: "F1 m 0,4 l 4,-4 4,4 -4,4 -4,-4 z",
        Chevron: "F1 m 0,0 l 5,0 3,4 -3,4 -5,0 3,-4 -3,-4 z",
        StretchedChevron: "F1 m 0,0 l 8,0 3,4 -3,4 -8,0 3,-4 -3,-4 z",
        NormalArrow: "F1 m 0,2 l 4,0 0,-2 4,4 -4,4 0,-2 -4,0 z",
        X: "m 0,0 l 8,8 m 0,-8 l -8,8",
        TailedNormalArrow: "F1 m 0,0 l 2,0 1,2 3,0 0,-2 2,4 -2,4 0,-2 -3,0 -1,2 -2,0 1,-4 -1,-4 z",
        DoubleTriangle: "F1 m 0,0 l 4,4 -4,4 0,-8 z  m 4,0 l 4,4 -4,4 0,-8 z",
        BigEndArrow: "F1 m 0,0 l 5,2 0,-2 3,4 -3,4 0,-2 -5,2 0,-8 z",
        ConcaveTailArrow: "F1 m 0,2 h 4 v -2 l 4,4 -4,4 v -2 h -4 l 2,-2 -2,-2 z",
        RoundedTriangle: "F1 m 0,1 a 1,1 0 0 1 1,-1 l 7,3 a 0.5,1 0 0 1 0,2 l -7,3 a 1,1 0 0 1 -1,-1 l 0,-6 z",
        SimpleArrow: "F1 m 1,2 l -1,-2 2,0 1,2 -1,2 -2,0 1,-2 5,0 0,-2 2,2 -2,2 0,-2 z",
        AccelerationArrow: "F1 m 0,0 l 0,8 0.2,0 0,-8 -0.2,0 z m 2,0 l 0,8 1,0 0,-8 -1,0 z m 3,0 l 2,0 2,4 -2,4 -2,0 0,-8 z",
        BoxArrow: "F1 m 0,0 l 4,0 0,2 2,0 0,-2 2,4 -2,4 0,-2 -2,0 0,2 -4,0 0,-8 z",
        TriangleLine: "F1 m 8,4 l -8,-4 0,8 8,-4 z m 0.5,4 l 0,-8",
        CircleEndedArrow: "F1 m 10,4 l -2,-3 0,2 -2,0 0,2 2,0 0,2 2,-3 z m -4,0 b 0 360 -3 0 3 z",
        DynamicWidthArrow: "F1 m 0,3 l 2,0 2,-1 2,-2 2,4 -2,4 -2,-2 -2,-1 -2,0 0,-2 z",
        EquilibriumArrow: "m 0,3 l 8,0 -3,-3 m 3,5 l -8,0 3,3",
        FastForward: "F1 m 0,0 l 3.5,4 0,-4 3.5,4 0,-4 1,0 0,8 -1,0 0,-4 -3.5,4 0,-4 -3.5,4 0,-8 z",
        Kite: "F1 m 0,4 l 2,-4 6,4 -6,4 -2,-4 z",
        HalfArrowTop: "F1 m 0,0 l 4,4 4,0 -8,-4 z m 0,8",
        HalfArrowBottom: "F1 m 0,8 l 4,-4 4,0 -8,4 z",
        OpposingDirectionDoubleArrow: "F1 m 0,4 l 2,-4 0,2 4,0 0,-2 2,4 -2,4 0,-2 -4,0 0,2 -2,-4 z",
        PartialDoubleTriangle: "F1 m 0,0 4,3 0,-3 4,4 -4,4 0,-3 -4,3 0,-8 z",
        LineCircle: "F1 m 0,0 l 0,8 m 7 -4 b 0 360 -3 0 3 z",
        DoubleLineCircle: "F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z",
        TripleLineCircle: "F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z",
        CircleLine: "F1 m 6 4 b 0 360 -3 0 3 z m 1,-4 l 0,8",
        DiamondCircle: "F1 m 8,4 l -4,4 -4,-4 4,-4 4,4 m 8,0 b 0 360 -4 0 4 z",
        PlusCircle: "F1 m 8,4 b 0 360 -4 0 4 l -8 0 z m -4 -4 l 0 8",
        OpenRightTriangleTop: "m 8,0 l 0,4 -8,0 m 0,4",
        OpenRightTriangleBottom: "m 8,8 l 0,-4 -8,0",
        Line: "m 0,0 l 0,8",
        DoubleLine: "m 0,0 l 0,8 m 2,0 l 0,-8",
        TripleLine: "m 0,0 l 0,8 m 2,0 l 0,-8 m 2,0 l 0,8",
        PentagonArrow: "F1 m 8,4 l -4,-4 -4,0 0,8 4,0 4,-4 z"
    };

    function T(a) {
        W.call(this, a);
        this.H = 2408959;
        this.Qg = this.xf = "";
        this.Uo = this.Ro = this.fp = this.Zn = null;
        this.hp = "";
        this.vf = this.Ln = this.gp = this.$g = null;
        this.To = "";
        this.So = mc;
        this.Ob = this.Vo = "";
        this.di = this.Ym = this.Oh = null;
        this.Mf = (new G(NaN, NaN)).freeze();
        this.fo = "";
        this.We = null;
        this.ho = Tc;
        this.Wo = Ed;
        this.po = bc;
        this.io = cc;
        this.un = null;
        this.$n = 127;
        this.pi = dc;
        this.Dj = "gray";
        this.Pd = 4;
        this.ww = -1;
        this.Gp = NaN;
        this.Px = new N;
        this.rj = null;
        this.Tg = NaN
    }
    oa(T, W);
    T.prototype.cloneProtected = function(a) {
        W.prototype.cloneProtected.call(this, a);
        a.H = this.H & -4097 | 49152;
        a.xf = this.xf;
        a.Qg = this.Qg;
        a.Zn = this.Zn;
        a.fp = this.fp;
        a.Ro = this.Ro;
        a.Uo = this.Uo;
        a.hp = this.hp;
        a.gp = this.gp;
        a.Ln = this.Ln;
        a.vf = null;
        a.To = this.To;
        a.So = this.So.I();
        a.Vo = this.Vo;
        a.Wo = this.Wo.I();
        a.Ob = this.Ob;
        a.Ym = this.Ym;
        a.Mf.assign(this.Mf);
        a.fo = this.fo;
        a.ho = this.ho.I();
        a.po = this.po.I();
        a.io = this.io.I();
        a.un = this.un;
        a.$n = this.$n;
        a.pi = this.pi.I();
        a.Dj = this.Dj;
        a.Pd = this.Pd;
        a.Gp = this.Gp
    };
    T.prototype.nf = function(a) {
        W.prototype.nf.call(this, a);
        a.vh();
        a.$g = null;
        a.We = null;
        a.rj = null
    };
    T.prototype.toString = function() {
        var a = Pa(this.constructor) + "#" + Bb(this);
        null !== this.data && (a += "(" + Qa(this.data) + ")");
        return a
    };
    T.prototype.ik = function(a, b, c, d, e, f, g) {
        var h = this.diagram;
        null !== h && (a === cf && "elements" === b ? e instanceof W ? xj(e, function(a) {
            zj(h.partManager, a);
            yj(h, a)
        }) : Rj(h, e) : a === df && "elements" === b && (e instanceof W ? xj(e, function(a) {
            Dj(h.partManager, a);
            Cj(h, a)
        }) : Tj(h, e)), h.bb(a, b, c, d, e, f, g))
    };
    T.prototype.Ea = function(a) {
        W.prototype.Ea.call(this, a);
        if (null !== this.data) {
            a = this.W.j;
            for (var b = a.length, c = 0; c < b; c++) {
                var d = a[c];
                d instanceof W && xj(d, function(a) {
                    null !== a.data && a.Ea()
                })
            }
        }
    };
    T.prototype.updateRelationshipsFromData = function() {
        null !== this.data && this.diagram.partManager.updateRelationshipsFromData(this)
    };
    T.prototype.Vj = function(a) {
        var b = this.vf;
        return null === b ? null : b.J(a)
    };
    T.prototype.kh = function(a, b) {
        if (null !== b) {
            var c = null,
                d = this.vf;
            null !== d && (c = d.J(a));
            if (c !== b) {
                if (null !== c) {
                    var e = c.diagram;
                    null !== e && e.remove(c)
                }
                null === d && (this.vf = d = new Lb);
                b.xf !== a && (b.category = a);
                d.add(a, b);
                a = this.diagram;
                null !== a && (a.add(b), b.data = this.data)
            }
        }
    };
    T.prototype.sf = function(a) {
        var b = this.vf;
        if (null !== b) {
            var c = b.J(a);
            if (null !== c) {
                var d = c.diagram;
                null !== d && d.remove(c)
            }
            b.remove(a);
            0 === b.count && (this.vf = null)
        }
    };
    T.prototype.Nj = function() {
        var a = this.vf;
        if (null !== a) {
            var b = Ka();
            for (a = a.iterator; a.next();) b.push(a.key);
            a = b.length;
            for (var c = 0; c < a; c++) this.sf(b[c]);
            Oa(b)
        }
    };
    T.prototype.updateAdornments = function() {
        var a = this.diagram;
        if (null !== a) {
            for (var b = this.adornments; b.next();) {
                var c = b.value;
                c.o();
                c.placeholder && c.placeholder.o()
            }
            a: {
                if (this.isSelected && this.selectionAdorned && (b = this.selectionObject, null !== b && this.actualBounds.s() && this.isVisible() && b.rf() && b.actualBounds.s())) {
                    c = this.Vj("Selection");
                    if (null === c) {
                        c = this.selectionAdornmentTemplate;
                        null === c && (c = this.wh() ? a.linkSelectionAdornmentTemplate : this instanceof hg ? a.groupSelectionAdornmentTemplate : a.nodeSelectionAdornmentTemplate);
                        if (!(c instanceof pf)) break a;
                        Xg(c);
                        c = c.copy();
                        null !== c && (this.wh() && this.selectionObject === this.path && (c.type = W.Link), c.adornedObject = b)
                    }
                    if (null !== c) {
                        if (null !== c.placeholder) {
                            var d = b.Ce(),
                                e = 0;
                            b instanceof V && (e = b.strokeWidth);
                            var f = L.alloc();
                            f.h((b.naturalBounds.width + e) * d, (b.naturalBounds.height + e) * d);
                            L.free(f)
                        }
                        c.type === W.Link ? c.o() : (b = G.alloc(), G.free(b));
                        this.kh("Selection", c);
                        break a
                    }
                }
                this.sf("Selection")
            }
            Yn(this, a);
            for (b = this.adornments; b.next();) b.value.Ea()
        }
    };
    T.prototype.Kb = function() {
        var a = this.diagram;
        null !== a && (Li(a), 0 !== (this.H & 16384) !== !0 && (di(this, !0), a.ec()))
    };

    function ci(a) {
        0 !== (a.H & 16384) !== !1 && (a.updateAdornments(), di(a, !1))
    }

    function Yn(a, b) {
        b.toolManager.mouseDownTools.each(function(b) {
            b.isEnabled && b.updateAdornments(a)
        });
        b.toolManager.updateAdornments(a)
    }

    function Zn(a) {
        if (!1 === mj(a)) {
            var b = a.diagram;
            null !== b && (b.Fd.add(a), b.ec());
            $n(a, !0);
            a.Yk()
        }
    }

    function ao(a) {
        a.H |= 2097152;
        if (!1 !== mj(a)) {
            var b = a.position,
                c = a.location;
            c.s() && b.s() || bo(a, b, c);
            c = a.wb;
            var d = N.alloc().assign(c);
            c.ha();
            c.x = b.x;
            c.y = b.y;
            c.freeze();
            a.it(d, c);
            N.free(d);
            $n(a, !1)
        }
    }
    T.prototype.move = function(a, b) {
        !0 === b ? this.location = a : this.position = a
    };
    T.prototype.moveTo = function(a, b, c) {
        a = G.allocAt(a, b);
        this.move(a, c);
        G.free(a)
    };
    T.prototype.isVisible = function() {
        if (!this.visible) return !1;
        var a = this.layer;
        if (null !== a && !a.visible) return !1;
        a = this.diagram;
        if (null !== a && (a = a.animationManager, a.isAnimating && (a = a.tj.J(this), null !== a && a.mt))) return !0;
        a = this.containingGroup;
        return null === a || a.isSubGraphExpanded && a.isVisible() ? !0 : !1
    };
    t = T.prototype;
    t.Mb = function(a) {
        var b = this.diagram;
        a ? (this.B(4), this.Kb(), null !== b && b.Fd.add(this)) : (this.B(8), this.Nj());
        this.vh();
        null !== b && (b.Xa(), b.R())
    };
    t.ab = function(a) {
        if (this.name === a) return this;
        var b = this.rj;
        null === b && (this.rj = b = new Lb);
        if (null !== b.J(a)) return b.J(a);
        var c = W.prototype.ab.call(this, a);
        if (null !== c) return b.set(a, c), c;
        b.set(a, null);
        return null
    };
    t.th = function(a, b, c) {
        void 0 === c && (c = new G);
        b = b.mc() ? dd : b;
        var d = a.naturalBounds;
        c.h(d.width * b.x + b.offsetX, d.height * b.y + b.offsetY);
        if (null === a || a === this) return c;
        a.transform.ta(c);
        for (a = a.panel; null !== a && a !== this;) a.transform.ta(c), a = a.panel;
        this.Lf.ta(c);
        c.offset(-this.sc.x, -this.sc.y);
        return c
    };
    t.Up = function(a) {
        void 0 === a && (a = new N);
        return a.assign(this.actualBounds)
    };
    t.bc = function() {
        !0 === kj(this) && (this instanceof hg && this.memberParts.each(function(a) {
            a.bc()
        }), this.measure(Infinity, Infinity));
        this.arrange()
    };

    function vj(a, b) {
        var c = a.Px;
        isNaN(a.Tg) && (a.Tg = Qm(a));
        var d = a.Tg;
        var e = 2 * d;
        if (!a.isShadowed) return c.h(b.x - 1 - d, b.y - 1 - d, b.width + 2 + e, b.height + 2 + e), c;
        d = b.x;
        e = b.y;
        var f = b.width;
        b = b.height;
        var g = a.shadowBlur;
        a = a.shadowOffset;
        f += g;
        b += g;
        d -= g / 2;
        e -= g / 2;
        0 < a.x ? f += a.x : (d += a.x, f -= a.x);
        0 < a.y ? b += a.y : (e += a.y, b -= a.y);
        c.h(d - 1, e - 1, f + 2, b + 2);
        return c
    }
    T.prototype.arrange = function() {
        if (!1 === lj(this)) ao(this);
        else {
            var a = this.wb,
                b = N.alloc();
            b.assign(a);
            a.ha();
            var c = ng(this);
            this.oh(0, 0, this.sc.width, this.sc.height);
            var d = this.position;
            bo(this, d, this.location);
            a.x = d.x;
            a.y = d.y;
            a.freeze();
            this.it(b, a);
            Yk(this, !1);
            b.A(a) ? this.kd(c) : !this.dc() || H.w(b.width, a.width) && H.w(b.height, a.height) || 0 <= this.ww && this.B(16);
            N.free(b);
            $n(this, !1)
        }
    };
    t = T.prototype;
    t.it = function(a, b) {
        var c = this.diagram;
        if (null !== c) {
            var d = !1;
            if (!1 === c.Ng && a.s()) {
                var e = N.alloc();
                e.assign(c.documentBounds);
                e.Iv(c.padding);
                a.x > e.x && a.y > e.y && a.right < e.right && a.bottom < e.bottom && b.x > e.x && b.y > e.y && b.right < e.right && b.bottom < e.bottom && (d = !0);
                N.free(e)
            }
            0 !== (this.H & 65536) !== !0 && a.A(b) || Aj(this, d, c);
            c.R();
            xc(a, b) || (this instanceof U && !c.undoManager.isUndoingRedoing && this.gd(), this.vh())
        }
    };
    t.Ev = function(a, b) {
        if (this.wh() || !a.s()) return !1;
        var c = this.diagram;
        if (null !== c && (co(this, c, a, b), !0 === c.undoManager.isUndoingRedoing)) return !0;
        this.sa = a;
        this.H &= -2097153;
        c = this.Mf;
        if (c.s()) {
            var d = c.copy();
            c.h(c.x + (a.x - b.x), c.y + (a.y - b.y));
            this.g("location", d, c)
        }!1 === mj(this) && !1 === lj(this) && (Zn(this), ao(this));
        return !0
    };

    function co(a, b, c, d) {
        null === b || a instanceof pf || (b = b.animationManager, b.$f && b.mh(a, "position", d.copy(), c.copy(), !1))
    }
    t.ut = function(a, b) {
        var c = this.Mf,
            d = this.sa;
        mj(this) || lj(this) ? c.h(NaN, NaN) : c.h(c.x + a - d.x, c.y + b - d.y);
        d.h(a, b);
        Zn(this)
    };
    t.Fv = function() {
        this.H &= -2097153;
        Zn(this)
    };

    function bo(a, b, c) {
        var d = G.alloc(),
            e = a.locationSpot,
            f = a.locationObject;
        e.mc() && A("determineOffset: Part's locationSpot must be real: " + e.toString());
        var g = f.naturalBounds,
            h = f instanceof V ? f.strokeWidth : 0;
        d.kk(0, 0, g.width + h, g.height + h, e);
        if (f !== a)
            for (d.offset(-h / 2, -h / 2), f.transform.ta(d), e = f.panel; null !== e && e !== a;) e.transform.ta(d), e = e.panel;
        a.Lf.ta(d);
        d.offset(-a.sc.x, -a.sc.y);
        e = a.diagram;
        f = c.s();
        g = b.s();
        f && g ? 0 !== (a.H & 2097152) ? eo(a, b, c, e, d) : fo(a, b, c, e, d) : f ? eo(a, b, c, e, d) : g && fo(a, b, c, e, d);
        a.H |= 2097152;
        G.free(d);
        a.Yk()
    }

    function eo(a, b, c, d, e) {
        var f = b.x,
            g = b.y;
        b.h(c.x - e.x, c.y - e.y);
        null !== d && (c = d.animationManager, (e = c.isAnimating) || !c.$f || a instanceof pf || c.mh(a, "position", new G(f, g), b, !1), e || b.x === f && b.y === g || (c = d.skipsUndoManager, d.skipsUndoManager = !0, a.g("position", new G(f, g), b), d.skipsUndoManager = c))
    }

    function fo(a, b, c, d, e) {
        var f = c.copy();
        c.h(b.x + e.x, b.y + e.y);
        c.A(f) || null === d || (b = d.skipsUndoManager, d.skipsUndoManager = !0, a.g("location", f, c), d.skipsUndoManager = b)
    }

    function Aj(a, b, c) {
        $k(a, !1);
        a instanceof U && lk(c, a);
        a.layer.isTemporary || b || c.Xa();
        b = a.wb;
        var d = c.viewportBounds;
        d.s() ? ng(a) ? (Ac(b, d, 10) || a.kd(!1), a.updateAdornments()) : b.Kc(d) ? (a.kd(!0), a.updateAdornments()) : a.Kb() : c.Zh = !0
    }
    t.Li = function() {
        return !0
    };
    t.dc = function() {
        return !0
    };
    t.wh = function() {
        return !1
    };
    t.rg = function() {
        return !0
    };

    function go(a, b, c, d) {
        b.constructor === a.constructor || ho || (ho = !0, ya('Should not change the class of the Part when changing category from "' + c + '" to "' + d + '"'), ya("  Old class: " + Pa(a.constructor) + ", new class: " + Pa(b.constructor) + ", part: " + a.toString()));
        a.Nj();
        var e = a.data;
        c = a.layerName;
        var f = a.isSelected,
            g = a.isHighlighted,
            h = !0,
            k = !0,
            l = !1;
        a instanceof U && (h = a.isTreeLeaf, k = a.isTreeExpanded, l = a.wasTreeExpanded);
        b.nf(a);
        b.cloneProtected(a);
        a.xf = d;
        a.o();
        a.R();
        b = a.diagram;
        d = !0;
        null !== b && (d = b.skipsUndoManager,
            b.skipsUndoManager = !0);
        a.jb = e;
        null !== e && a.Ea();
        null !== b && (b.skipsUndoManager = d);
        e = a.layerName;
        e !== c && (a.Qg = c, a.layerName = e);
        a instanceof U && (a.isTreeLeaf = h, a.isTreeExpanded = k, a.wasTreeExpanded = l, a.dc() && a.B(64));
        a.isSelected = f;
        a.isHighlighted = g
    }
    T.prototype.canCopy = function() {
        if (!this.copyable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowCopy) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowCopy ? !0 : !1
    };
    T.prototype.canDelete = function() {
        if (!this.deletable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowDelete) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowDelete ? !0 : !1
    };
    T.prototype.canEdit = function() {
        if (!this.textEditable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowTextEdit) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowTextEdit ? !0 : !1
    };
    T.prototype.canGroup = function() {
        if (!this.groupable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowGroup) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowGroup ? !0 : !1
    };
    T.prototype.canMove = function() {
        if (!this.movable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowMove) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowMove ? !0 : !1
    };
    T.prototype.canReshape = function() {
        if (!this.reshapable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowReshape) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowReshape ? !0 : !1
    };
    T.prototype.canResize = function() {
        if (!this.resizable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowResize) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowResize ? !0 : !1
    };
    T.prototype.canRotate = function() {
        if (!this.rotatable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowRotate) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowRotate ? !0 : !1
    };
    T.prototype.canSelect = function() {
        if (!this.selectable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowSelect) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowSelect ? !0 : !1
    };

    function di(a, b) {
        a.H = b ? a.H | 16384 : a.H & -16385
    }

    function mj(a) {
        return 0 !== (a.H & 32768)
    }

    function $n(a, b) {
        a.H = b ? a.H | 32768 : a.H & -32769
    }

    function $k(a, b) {
        a.H = b ? a.H | 65536 : a.H & -65537
    }

    function ng(a) {
        return 0 !== (a.H & 131072)
    }
    t = T.prototype;
    t.kd = function(a) {
        this.H = a ? this.H | 131072 : this.H & -131073
    };

    function io(a, b) {
        a.H = b ? a.H | 1048576 : a.H & -1048577
    }
    t.vh = function() {
        var a = this.containingGroup;
        null !== a && (a.o(), null !== a.placeholder && a.placeholder.o(), a.gd())
    };
    t.R = function() {
        var a = this.diagram;
        null !== a && !lj(this) && !mj(this) && this.isVisible() && this.wb.s() && a.R(vj(this, this.wb))
    };
    t.o = function() {
        W.prototype.o.call(this);
        var a = this.diagram;
        null !== a && (a.Fd.add(this), this instanceof U && null !== this.labeledLink && ol(this.labeledLink), a.ec(!0))
    };
    t.Xp = function(a) {
        a || (a = this.Oh, null !== a && jo(a, this))
    };
    t.Yp = function(a) {
        a || (a = this.Oh, null !== a && ko(a, this))
    };
    t.Tj = function() {
        var a = this.data;
        if (null !== a) {
            var b = this.diagram;
            null !== b && (b = b.model, null !== b && b.lm(a))
        }
    };
    t.Ly = function() {
        return lo(this, this)
    };

    function lo(a, b) {
        var c = b.containingGroup;
        return null !== c ? 1 + lo(a, c) : b instanceof U && (b = b.labeledLink, null !== b) ? lo(a, b) : 0
    }
    t.Oy = function() {
        return mo(this, this)
    };

    function mo(a, b) {
        var c = b.containingGroup;
        return null !== c || b instanceof U && (c = b.labeledLink, null !== c) ? mo(a, c) : b
    }
    t.Wd = function(a) {
        return a instanceof hg ? no(this, this, a) : !1
    };

    function no(a, b, c) {
        if (b === c || null === c) return !1;
        var d = b.containingGroup;
        return null === d || d !== c && !no(a, d, c) ? b instanceof U && (b = b.labeledLink, null !== b) ? no(a, b, c) : !1 : !0
    }
    t.ax = function(a) {
        if (null === a) return null;
        if (this === a) return this.containingGroup;
        for (var b = this; null !== b;) {
            b instanceof hg && io(b, !0);
            if (b instanceof U) {
                var c = b.labeledLink;
                null !== c && (b = c)
            }
            b = b.containingGroup
        }
        c = null;
        for (b = a; null !== b;) {
            if (0 !== (b.H & 1048576)) {
                c = b;
                break
            }
            b instanceof U && (a = b.labeledLink, null !== a && (b = a));
            b = b.containingGroup
        }
        for (b = this; null !== b;) b instanceof hg && io(b, !1), b instanceof U && (a = b.labeledLink, null !== a && (b = a)), b = b.containingGroup;
        return c
    };
    T.prototype.canLayout = function() {
        if (!this.isLayoutPositioned || !this.isVisible()) return !1;
        var a = this.layer;
        return null !== a && a.isTemporary || this instanceof U && this.isLinkLabel ? !1 : !0
    };
    T.prototype.B = function(a) {
        void 0 === a && (a = 16777215);
        if (this.isLayoutPositioned && 0 !== (a & this.layoutConditions)) {
            var b = this.layer;
            null !== b && b.isTemporary || this instanceof U && this.isLinkLabel ? b = !1 : (b = this.diagram, b = null !== b && b.undoManager.isUndoingRedoing ? !1 : !0)
        } else b = !1;
        if (b)
            if (b = this.Oh, null !== b) {
                var c = b.layout;
                null !== c ? c.B() : b.B(a)
            } else a = this.diagram, null !== a && (a = a.layout, null !== a && a.B())
    };

    function Bj(a) {
        if (!a.isVisible()) return !1;
        a = a.layer;
        return null !== a && a.isTemporary ? !1 : !0
    }

    function Ek(a, b, c, d, e, f) {
        void 0 === f && (f = null);
        if (!(a.contains(b) || null !== f && !f(b) || b instanceof pf))
            if (a.add(b), b instanceof U) {
                if (c && b instanceof hg)
                    for (var g = b.memberParts; g.next();) Ek(a, g.value, c, d, e, f);
                if (!1 !== e)
                    for (g = b.linksConnected; g.next();) {
                        var h = g.value;
                        if (!a.contains(h)) {
                            var k = h.fromNode,
                                l = h.toNode;
                            k = null === k || a.contains(k);
                            l = null === l || a.contains(l);
                            (e ? k && l : k || l) && Ek(a, h, c, d, e, f)
                        }
                    }
                if (1 < d)
                    for (b = b.Uu(); b.next();) Ek(a, b.value, c, d - 1, e, f)
            } else if (b instanceof S)
            for (b = b.labelNodes; b.next();) Ek(a,
                b.value, c, d, e, f)
    }
    pa.Object.defineProperties(T.prototype, {
        key: {
            get: function() {
                var a = this.diagram;
                if (null !== a) return a.model.pa(this.data)
            }
        },
        adornments: {
            get: function() {
                return null === this.vf ? xb : this.vf.iteratorValues
            }
        },
        layer: {
            get: function() {
                return this.di
            }
        },
        diagram: {
            get: function() {
                var a = this.di;
                return null !== a ? a.diagram : null
            }
        },
        layerName: {
            get: function() {
                return this.Qg
            },
            set: function(a) {
                var b =
                    this.Qg;
                if (b !== a) {
                    var c = this.diagram;
                    if (null === c || null !== c.Wl(a) && !c.partManager.addsToTemporaryLayer)
                        if (this.Qg = a, null !== c && c.Xa(), this.g("layerName", b, a), b = this.layer, null !== b && b.name !== a && (c = b.diagram, null !== c && (a = c.Wl(a), null !== a && a !== b))) {
                            var d = b.zc(-1, this, !0);
                            0 <= d && c.bb(df, "parts", b, this, null, d, !0);
                            d = a.Ji(99999999, this, !0);
                            b.visible !== a.visible && this.Mb(a.visible);
                            0 <= d && c.bb(cf, "parts", a, null, this, !0, d);
                            d = this.layerChanged;
                            if (null !== d) {
                                var e = c.ca;
                                c.ca = !0;
                                d(this, b, a);
                                c.ca = e
                            }
                        }
                }
            }
        },
        layerChanged: {
            get: function() {
                return this.Zn
            },
            set: function(a) {
                var b = this.Zn;
                b !== a && (this.Zn = a, this.g("layerChanged", b, a))
            }
        },
        zOrder: {
            get: function() {
                return this.Gp
            },
            set: function(a) {
                var b = this.Gp;
                if (b !== a) {
                    this.Gp = a;
                    var c = this.layer;
                    null !== c && gi(c, -1, this);
                    this.g("zOrder", b, a);
                    a = this.diagram;
                    null !== a && a.R()
                }
            }
        },
        locationObject: {
            get: function() {
                if (null === this.We) {
                    var a = this.locationObjectName;
                    "" !== a ? (a = this.ab(a), null !== a ? this.We = a : this.We = this) :
                        this instanceof pf ? this.type !== W.Link && null !== this.placeholder ? this.We = this.placeholder : this.We = this : this.We = this
                }
                return this.We.visible ? this.We : this
            }
        },
        minLocation: {
            get: function() {
                return this.po
            },
            set: function(a) {
                var b = this.po;
                b.A(a) || (this.po = a = a.I(), this.g("minLocation", b, a))
            }
        },
        maxLocation: {
            get: function() {
                return this.io
            },
            set: function(a) {
                var b = this.io;
                b.A(a) || (this.io = a = a.I(), this.g("maxLocation", b, a))
            }
        },
        locationObjectName: {
            get: function() {
                return this.fo
            },
            set: function(a) {
                var b = this.fo;
                b !== a && (this.fo = a, this.We = null, this.o(), this.g("locationObjectName", b, a))
            }
        },
        locationSpot: {
            get: function() {
                return this.ho
            },
            set: function(a) {
                var b = this.ho;
                b.A(a) || (this.ho = a = a.I(), this.o(), this.g("locationSpot", b, a))
            }
        },
        location: {
            get: function() {
                return this.Mf
            },
            set: function(a) {
                var b = a.x,
                    c = a.y,
                    d = this.Mf,
                    e = d.x,
                    f = d.y;
                (e === b || isNaN(e) && isNaN(b)) && (f === c || isNaN(f) && isNaN(c)) ||
                (a = a.I(), b = a, this.wh() ? b = !1 : (this.Mf = b, this.H |= 2097152, !1 === lj(this) && (Zn(this), c = this.sa, c.s() && (e = c.copy(), c.h(c.x + (b.x - d.x), c.y + (b.y - d.y)), co(this, this.diagram, c, e), this.g("position", e, c))), b = !0), b && this.g("location", d, a))
            }
        },
        category: {
            get: function() {
                return this.xf
            },
            set: function(a) {
                var b = this.xf;
                if (b !== a) {
                    var c = this.diagram,
                        d = this.data,
                        e = null;
                    if (null !== c && null !== d && !(this instanceof pf)) {
                        var f = c.model.undoManager;
                        f.isEnabled && !f.isUndoingRedoing && (e = this.clone(), e.W.addAll(this.W))
                    }
                    this.xf =
                        a;
                    this.g("category", b, a);
                    null === c || null === d || this instanceof pf ? this instanceof pf && (e = this.adornedPart, null !== e && (a = e.vf, null !== a && a.remove(b), e.kh(this.category, this))) : (f = c.model, f.undoManager.isUndoingRedoing || (this.wh() ? (c.partManager.setLinkCategoryForData(d, a), c = c.partManager.findLinkTemplateForCategory(a), null !== c && (Xg(c), c = c.copy(), null !== c && go(this, c, b, a))) : (null !== f && f.oq(d, a), c = oo(c.partManager, d, a), null !== c && (Xg(c), c = c.copy(), null === c || c instanceof S || (c.location = this.location, go(this,
                        c, b, a)))), null !== e && (b = this.clone(), b.W.addAll(this.W), this.g("self", e, b))))
                }
            }
        },
        self: {
            get: function() {
                return this
            },
            set: function(a) {
                go(this, a, this.category, a.category)
            }
        },
        copyable: {
            get: function() {
                return 0 !== (this.H & 1)
            },
            set: function(a) {
                var b = 0 !== (this.H & 1);
                b !== a && (this.H ^= 1, this.g("copyable", b, a))
            }
        },
        deletable: {
            get: function() {
                return 0 !== (this.H & 2)
            },
            set: function(a) {
                var b = 0 !== (this.H & 2);
                b !== a && (this.H ^= 2, this.g("deletable",
                    b, a))
            }
        },
        textEditable: {
            get: function() {
                return 0 !== (this.H & 4)
            },
            set: function(a) {
                var b = 0 !== (this.H & 4);
                b !== a && (this.H ^= 4, this.g("textEditable", b, a), this.Kb())
            }
        },
        groupable: {
            get: function() {
                return 0 !== (this.H & 8)
            },
            set: function(a) {
                var b = 0 !== (this.H & 8);
                b !== a && (this.H ^= 8, this.g("groupable", b, a))
            }
        },
        movable: {
            get: function() {
                return 0 !== (this.H & 16)
            },
            set: function(a) {
                var b = 0 !== (this.H & 16);
                b !== a && (this.H ^= 16, this.g("movable", b, a))
            }
        },
        selectionAdorned: {
            get: function() {
                return 0 !== (this.H & 32)
            },
            set: function(a) {
                var b = 0 !== (this.H & 32);
                b !== a && (this.H ^= 32, this.g("selectionAdorned", b, a), this.Kb())
            }
        },
        isInDocumentBounds: {
            get: function() {
                return 0 !== (this.H & 64)
            },
            set: function(a) {
                var b = 0 !== (this.H & 64);
                if (b !== a) {
                    this.H ^= 64;
                    var c = this.diagram;
                    null !== c && c.Xa();
                    this.g("isInDocumentBounds", b, a)
                }
            }
        },
        isLayoutPositioned: {
            get: function() {
                return 0 !== (this.H & 128)
            },
            set: function(a) {
                var b =
                    0 !== (this.H & 128);
                b !== a && (this.H ^= 128, this.g("isLayoutPositioned", b, a), this.B(a ? 4 : 8))
            }
        },
        selectable: {
            get: function() {
                return 0 !== (this.H & 256)
            },
            set: function(a) {
                var b = 0 !== (this.H & 256);
                b !== a && (this.H ^= 256, this.g("selectable", b, a), this.Kb())
            }
        },
        reshapable: {
            get: function() {
                return 0 !== (this.H & 512)
            },
            set: function(a) {
                var b = 0 !== (this.H & 512);
                b !== a && (this.H ^= 512, this.g("reshapable", b, a), this.Kb())
            }
        },
        resizable: {
            get: function() {
                return 0 !==
                    (this.H & 1024)
            },
            set: function(a) {
                var b = 0 !== (this.H & 1024);
                b !== a && (this.H ^= 1024, this.g("resizable", b, a), this.Kb())
            }
        },
        rotatable: {
            get: function() {
                return 0 !== (this.H & 2048)
            },
            set: function(a) {
                var b = 0 !== (this.H & 2048);
                b !== a && (this.H ^= 2048, this.g("rotatable", b, a), this.Kb())
            }
        },
        isSelected: {
            get: function() {
                return 0 !== (this.H & 4096)
            },
            set: function(a) {
                var b = 0 !== (this.H & 4096);
                if (b !== a) {
                    var c = this.diagram;
                    if (!a || this.canSelect() && !(null !== c && c.selection.count >=
                            c.maxSelectionCount)) {
                        this.H ^= 4096;
                        var d = !1;
                        if (null !== c) {
                            d = c.skipsUndoManager;
                            c.skipsUndoManager = !0;
                            var e = c.selection;
                            e.ha();
                            a ? e.add(this) : e.remove(this);
                            e.freeze()
                        }
                        this.g("isSelected", b, a);
                        this.Kb();
                        a = this.selectionChanged;
                        null !== a && a(this);
                        null !== c && (c.ec(), c.skipsUndoManager = d)
                    }
                }
            }
        },
        isHighlighted: {
            get: function() {
                return 0 !== (this.H & 524288)
            },
            set: function(a) {
                var b = 0 !== (this.H & 524288);
                if (b !== a) {
                    this.H ^= 524288;
                    var c = this.diagram;
                    null !== c && (c = c.highlighteds, c.ha(), a ? c.add(this) :
                        c.remove(this), c.freeze());
                    this.g("isHighlighted", b, a);
                    this.R();
                    a = this.highlightedChanged;
                    null !== a && a(this)
                }
            }
        },
        isShadowed: {
            get: function() {
                return 0 !== (this.H & 8192)
            },
            set: function(a) {
                var b = 0 !== (this.H & 8192);
                b !== a && (this.H ^= 8192, this.g("isShadowed", b, a), this.R())
            }
        },
        isAnimated: {
            get: function() {
                return 0 !== (this.H & 262144)
            },
            set: function(a) {
                var b = 0 !== (this.H & 262144);
                b !== a && (this.H ^= 262144, this.g("isAnimated", b, a))
            }
        },
        highlightedChanged: {
            get: function() {
                return this.Ln
            },
            set: function(a) {
                var b = this.Ln;
                b !== a && (this.Ln = a, this.g("highlightedChanged", b, a))
            }
        },
        selectionObjectName: {
            get: function() {
                return this.hp
            },
            set: function(a) {
                var b = this.hp;
                b !== a && (this.hp = a, this.$g = null, this.g("selectionObjectName", b, a))
            }
        },
        selectionAdornmentTemplate: {
            get: function() {
                return this.fp
            },
            set: function(a) {
                var b = this.fp;
                b !== a && (this.fp = a, this.g("selectionAdornmentTemplate", b, a))
            }
        },
        selectionObject: {
            get: function() {
                if (null === this.$g) {
                    var a = this.selectionObjectName;
                    null !== a && "" !== a ? (a = this.ab(a), null !== a ? this.$g = a : this.$g = this) : this instanceof S ? (a = this.path, null !== a ? this.$g = a : this.$g = this) : this.$g = this
                }
                return this.$g
            }
        },
        selectionChanged: {
            get: function() {
                return this.gp
            },
            set: function(a) {
                var b = this.gp;
                b !== a && (this.gp = a, this.g("selectionChanged", b, a))
            }
        },
        resizeAdornmentTemplate: {
            get: function() {
                return this.Ro
            },
            set: function(a) {
                var b =
                    this.Ro;
                b !== a && (this.Ro = a, this.g("resizeAdornmentTemplate", b, a))
            }
        },
        resizeObjectName: {
            get: function() {
                return this.To
            },
            set: function(a) {
                var b = this.To;
                b !== a && (this.To = a, this.g("resizeObjectName", b, a))
            }
        },
        resizeObject: {
            get: function() {
                var a = this.resizeObjectName;
                return "" !== a && (a = this.ab(a), null !== a) ? a : this
            }
        },
        resizeCellSize: {
            get: function() {
                return this.So
            },
            set: function(a) {
                var b = this.So;
                b.A(a) || (this.So = a = a.I(), this.g("resizeCellSize",
                    b, a))
            }
        },
        rotateAdornmentTemplate: {
            get: function() {
                return this.Uo
            },
            set: function(a) {
                var b = this.Uo;
                b !== a && (this.Uo = a, this.g("rotateAdornmentTemplate", b, a))
            }
        },
        rotateObjectName: {
            get: function() {
                return this.Vo
            },
            set: function(a) {
                var b = this.Vo;
                b !== a && (this.Vo = a, this.g("rotateObjectName", b, a))
            }
        },
        rotateObject: {
            get: function() {
                var a = this.rotateObjectName;
                return "" !== a && (a = this.ab(a), null !== a) ? a : this
            }
        },
        rotationSpot: {
            get: function() {
                return this.Wo
            },
            set: function(a) {
                var b = this.Wo;
                b.A(a) || (this.Wo = a = a.I(), this.g("rotationSpot", b, a))
            }
        },
        text: {
            get: function() {
                return this.Ob
            },
            set: function(a) {
                var b = this.Ob;
                b !== a && (this.Ob = a, this.g("text", b, a))
            }
        },
        containingGroup: {
            get: function() {
                return this.Oh
            },
            set: function(a) {
                if (this.dc()) {
                    var b = this.Oh;
                    if (b !== a) {
                        null === a || this !== a && !a.Wd(this) || (this === a && A("Cannot make a Group a member of itself: " + this.toString()),
                            A("Cannot make a Group indirectly contain itself: " + this.toString() + " already contains " + a.toString()));
                        this.B(2);
                        var c = this.diagram;
                        null !== b ? ko(b, this) : this instanceof hg && null !== c && c.vi.remove(this);
                        this.Oh = a;
                        null !== a ? jo(a, this) : this instanceof hg && null !== c && c.vi.add(this);
                        this.B(1);
                        if (null !== c) {
                            var d = this.data,
                                e = c.model;
                            if (null !== d && e.Zj()) {
                                var f = e.pa(null !== a ? a.data : null);
                                e.rt(d, f)
                            }
                        }
                        d = this.containingGroupChanged;
                        null !== d && (e = !0, null !== c && (e = c.ca, c.ca = !0), d(this, b, a), null !== c && (c.ca = e));
                        if (this instanceof hg)
                            for (c = new F, Ek(c, this, !0, 0, !0), c = c.iterator; c.next();)
                                if (d = c.value, d instanceof U)
                                    for (d = d.linksConnected; d.next();) po(d.value);
                        if (this instanceof U) {
                            for (c = this.linksConnected; c.next();) po(c.value);
                            c = this.labeledLink;
                            null !== c && po(c)
                        }
                        this.g("containingGroup", b, a);
                        null !== a && (b = a.layer, null !== b && gi(b, -1, a))
                    }
                } else A("cannot set the Part.containingGroup of a Link or Adornment")
            }
        },
        containingGroupChanged: {
            get: function() {
                return this.Ym
            },
            set: function(a) {
                var b = this.Ym;
                b !== a &&
                    (this.Ym = a, this.g("containingGroupChanged", b, a))
            }
        },
        isTopLevel: {
            get: function() {
                return null !== this.containingGroup || this instanceof U && null !== this.labeledLink ? !1 : !0
            }
        },
        layoutConditions: {
            get: function() {
                return this.$n
            },
            set: function(a) {
                var b = this.$n;
                b !== a && (this.$n = a, this.g("layoutConditions", b, a))
            }
        },
        dragComputation: {
            get: function() {
                return this.un
            },
            set: function(a) {
                var b = this.un;
                b !== a && (this.un = a, this.g("dragComputation",
                    b, a))
            }
        },
        shadowOffset: {
            get: function() {
                return this.pi
            },
            set: function(a) {
                var b = this.pi;
                b.A(a) || (this.pi = a = a.I(), this.R(), this.g("shadowOffset", b, a))
            }
        },
        shadowColor: {
            get: function() {
                return this.Dj
            },
            set: function(a) {
                var b = this.Dj;
                b !== a && (this.Dj = a, this.R(), this.g("shadowColor", b, a))
            }
        },
        shadowBlur: {
            get: function() {
                return this.Pd
            },
            set: function(a) {
                var b = this.Pd;
                b !== a && (this.Pd = a, this.R(), this.g("shadowBlur", b, a))
            }
        }
    });
    T.prototype.invalidateLayout = T.prototype.B;
    T.prototype.findCommonContainingGroup = T.prototype.ax;
    T.prototype.isMemberOf = T.prototype.Wd;
    T.prototype.findTopLevelPart = T.prototype.Oy;
    T.prototype.findSubGraphLevel = T.prototype.Ly;
    T.prototype.ensureBounds = T.prototype.bc;
    T.prototype.getDocumentBounds = T.prototype.Up;
    T.prototype.getRelativePoint = T.prototype.th;
    T.prototype.findObject = T.prototype.ab;
    T.prototype.moveTo = T.prototype.moveTo;
    T.prototype.invalidateAdornments = T.prototype.Kb;
    T.prototype.clearAdornments = T.prototype.Nj;
    T.prototype.removeAdornment = T.prototype.sf;
    T.prototype.addAdornment = T.prototype.kh;
    T.prototype.findAdornment = T.prototype.Vj;
    T.prototype.updateTargetBindings = T.prototype.Ea;
    var ho = !1;
    T.className = "Part";
    T.LayoutNone = 0;
    T.LayoutAdded = 1;
    T.LayoutRemoved = 2;
    T.LayoutShown = 4;
    T.LayoutHidden = 8;
    T.LayoutNodeSized = 16;
    T.LayoutGroupLayout = 32;
    T.LayoutNodeReplaced = 64;
    T.LayoutStandard = 127;
    T.LayoutAll = 16777215;

    function pf(a) {
        T.call(this, a);
        this.H &= -257;
        this.Qg = "Adornment";
        this.Wb = null;
        this.zw = 0;
        this.Kw = !1;
        this.l = [];
        this.Ua = null
    }
    oa(pf, T);
    pf.prototype.toString = function() {
        var a = this.adornedPart;
        return "Adornment(" + this.category + ")" + (null !== a ? a.toString() : "")
    };
    pf.prototype.updateRelationshipsFromData = function() {};
    pf.prototype.bk = function(a) {
        var b = this.adornedObject.part;
        if (b instanceof S && this.adornedObject instanceof V) {
            var c = b.path;
            b.bk(a);
            a = c.geometry;
            b = this.W.j;
            c = b.length;
            for (var d = 0; d < c; d++) {
                var e = b[d];
                e.isPanelMain && e instanceof V && (e.qa = a)
            }
        }
    };
    pf.prototype.Li = function() {
        var a = this.Wb;
        if (null === a) return !0;
        a = a.part;
        return null === a || !lj(a)
    };
    pf.prototype.dc = function() {
        return !1
    };
    pf.prototype.ik = function(a, b, c, d, e, f, g) {
        if (a === cf && "elements" === b)
            if (e instanceof Wg) null === this.Ua && (this.Ua = e);
            else {
                if (e instanceof W) {
                    var h = e.Vl(function(a) {
                        return a instanceof Wg
                    });
                    h instanceof Wg && null === this.Ua && (this.Ua = h)
                }
            }
        else a === df && "elements" === b && null !== this.Ua && (d === this.Ua ? this.Ua = null : d instanceof W && this.Ua.pg(d) && (this.Ua = null));
        T.prototype.ik.call(this, a, b, c, d, e, f, g)
    };
    pf.prototype.updateAdornments = function() {};
    pf.prototype.Tj = function() {};
    pa.Object.defineProperties(pf.prototype, {
        placeholder: {
            get: function() {
                return this.Ua
            }
        },
        adornedObject: {
            get: function() {
                return this.Wb
            },
            set: function(a) {
                var b = this.adornedPart,
                    c = null;
                null !== a && (c = a.part);
                null === b || null !== a && b === c || b.sf(this.category);
                this.Wb = a;
                null !== c && c.kh(this.category, this)
            }
        },
        adornedPart: {
            get: function() {
                var a = this.Wb;
                return null !== a ? a.part : null
            }
        },
        containingGroup: {
            get: function() {
                return null
            }
        }
    });
    pf.className = "Adornment";

    function U(a) {
        T.call(this, a);
        this.Z = 13;
        this.Za = new E;
        this.Ap = this.$k = this.gi = this.bo = this.ao = null;
        this.vk = Pc;
        this.tc = this.Le = null;
        this.Oo = qo;
        this.ih = !1
    }
    oa(U, T);
    U.prototype.cloneProtected = function(a) {
        T.prototype.cloneProtected.call(this, a);
        a.Z = this.Z;
        a.Z = this.Z & -17;
        a.ao = this.ao;
        a.bo = this.bo;
        a.gi = this.gi;
        a.Ap = this.Ap;
        a.vk = this.vk.I();
        a.Oo = this.Oo
    };
    t = U.prototype;
    t.nf = function(a) {
        T.prototype.nf.call(this, a);
        a.gd();
        a.Le = this.Le;
        a.tc = null
    };

    function ro(a, b) {
        null !== b && (null === a.Le && (a.Le = new F), a.Le.add(b))
    }

    function so(a, b, c, d) {
        if (null === b || null === a.Le) return null;
        for (var e = a.Le.iterator; e.next();) {
            var f = e.value;
            if (f.gt === a && f.iv === b && f.tx === c && f.ux === d || f.gt === b && f.iv === a && f.tx === d && f.ux === c) return f
        }
        return null
    }
    t.jz = function(a, b, c) {
        if (void 0 === b || null === b) b = "";
        if (void 0 === c || null === c) c = "";
        a = so(this, a, b, c);
        null !== a && a.$l()
    };
    t.ik = function(a, b, c, d, e, f, g) {
        a === cf && "elements" === b ? this.tc = null : a === df && "elements" === b && (this.tc = null);
        T.prototype.ik.call(this, a, b, c, d, e, f, g)
    };
    t.gd = function(a) {
        void 0 === a && (a = null);
        for (var b = this.linksConnected; b.next();) {
            var c = b.value;
            null !== a && a.contains(c) || (to(this, c.fromPort), to(this, c.toPort), c.Qa())
        }
    };

    function al(a, b) {
        for (var c = a.linksConnected; c.next();) {
            var d = c.value;
            if (d.fromPort === b || d.toPort === b) to(a, d.fromPort), to(a, d.toPort), d.Qa()
        }
    }

    function to(a, b) {
        null !== b && (b = b.No, null !== b && b.$l(), a = a.containingGroup, null === a || a.isSubGraphExpanded || to(a, a.port))
    }
    t.Li = function() {
        return !0
    };
    U.prototype.getAvoidableRect = function(a) {
        a.set(this.actualBounds);
        a.Jp(this.vk);
        return a
    };
    U.prototype.findVisibleNode = function() {
        for (var a = this; null !== a && !a.isVisible();) a = a.containingGroup;
        return a
    };
    U.prototype.isVisible = function() {
        if (!T.prototype.isVisible.call(this)) return !1;
        var a = !0,
            b = ni,
            c = this.diagram;
        if (null !== c) {
            a = c.animationManager;
            if (a.isAnimating && (a = a.tj.J(this), null !== a && a.mt)) return !0;
            a = c.isTreePathToChildren;
            b = c.treeCollapsePolicy
        }
        if (b === ni) {
            if (c = this.ng(), null !== c && !c.isTreeExpanded) return !1
        } else if (b === sk) {
            if (c = a ? this.Su() : this.Tu(), 0 < c.count && c.all(function(a) {
                    return !a.isTreeExpanded
                })) return !1
        } else if (b === tk && (c = a ? this.Su() : this.Tu(), 0 < c.count && c.any(function(a) {
                return !a.isTreeExpanded
            }))) return !1;
        c = this.labeledLink;
        return null !== c ? c.isVisible() : !0
    };
    t = U.prototype;
    t.Mb = function(a) {
        T.prototype.Mb.call(this, a);
        for (var b = this.linksConnected; b.next();) b.value.Mb(a)
    };
    t.Qu = function(a) {
        void 0 === a && (a = null);
        if (null === a) return this.Za.iterator;
        var b = new zb(this.Za),
            c = this;
        b.predicate = function(b) {
            return b.fromNode === c && b.fromPortId === a || b.toNode === c && b.toPortId === a
        };
        return b
    };
    t.Rp = function(a) {
        void 0 === a && (a = null);
        var b = new zb(this.Za),
            c = this;
        b.predicate = function(b) {
            return b.fromNode !== c ? !1 : null === a ? !0 : b.fromPortId === a
        };
        return b
    };
    t.ud = function(a) {
        void 0 === a && (a = null);
        var b = new zb(this.Za),
            c = this;
        b.predicate = function(b) {
            return b.toNode !== c ? !1 : null === a ? !0 : b.toPortId === a
        };
        return b
    };
    t.Ru = function(a) {
        void 0 === a && (a = null);
        for (var b = null, c = null, d = this.Za.iterator; d.next();) {
            var e = d.value;
            if (e.fromNode === this) {
                if (null === a || e.fromPortId === a) e = e.toNode, null !== b ? b.add(e) : null !== c && c !== e ? (b = new F, b.add(c), b.add(e)) : c = e
            } else e.toNode !== this || null !== a && e.toPortId !== a || (e = e.fromNode, null !== b ? b.add(e) : null !== c && c !== e ? (b = new F, b.add(c), b.add(e)) : c = e)
        }
        return null !== b ? b.iterator : null !== c ? new yb(c) : xb
    };
    t.Tu = function(a) {
        void 0 === a && (a = null);
        for (var b = null, c = null, d = this.Za.iterator; d.next();) {
            var e = d.value;
            e.fromNode !== this || null !== a && e.fromPortId !== a || (e = e.toNode, null !== b ? b.add(e) : null !== c && c !== e ? (b = new F, b.add(c), b.add(e)) : c = e)
        }
        return null !== b ? b.iterator : null !== c ? new yb(c) : xb
    };
    t.Su = function(a) {
        void 0 === a && (a = null);
        for (var b = null, c = null, d = this.Za.iterator; d.next();) {
            var e = d.value;
            e.toNode !== this || null !== a && e.toPortId !== a || (e = e.fromNode, null !== b ? b.add(e) : null !== c && c !== e ? (b = new F, b.add(c), b.add(e)) : c = e)
        }
        return null !== b ? b.iterator : null !== c ? new yb(c) : xb
    };
    t.Gy = function(a, b, c) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        var d = new zb(this.Za),
            e = this;
        d.predicate = function(d) {
            return (d.fromNode !== e || d.toNode !== a || null !== b && d.fromPortId !== b || null !== c && d.toPortId !== c) && (d.fromNode !== a || d.toNode !== e || null !== c && d.fromPortId !== c || null !== b && d.toPortId !== b) ? !1 : !0
        };
        return d
    };
    t.Hy = function(a, b, c) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        var d = new zb(this.Za),
            e = this;
        d.predicate = function(d) {
            return d.fromNode !== e || d.toNode !== a || null !== b && d.fromPortId !== b || null !== c && d.toPortId !== c ? !1 : !0
        };
        return d
    };

    function uo(a, b, c) {
        to(a, c);
        var d = a.Za.contains(b);
        d || a.Za.add(b);
        if (!d || b.fromNode === b.toNode) {
            var e = a.linkConnected;
            if (null !== e) {
                var f = !0,
                    g = a.diagram;
                null !== g && (f = g.ca, g.ca = !0);
                e(a, b, c);
                null !== g && (g.ca = f)
            }
        }!d && b.isTreeLink && (c = b.fromNode, b = b.toNode, null !== c && null !== b && c !== b && (d = !0, a = a.diagram, null !== a && (d = a.isTreePathToChildren), e = d ? b : c, f = d ? c : b, e.ih || (e.ih = f), !f.isTreeLeaf || null !== a && a.undoManager.isUndoingRedoing || (d ? c === f && (f.isTreeLeaf = !1) : b === f && (f.isTreeLeaf = !1))))
    }

    function vo(a, b, c) {
        to(a, c);
        var d = a.Za.remove(b),
            e = null;
        if (d || b.toNode === b.fromNode) {
            var f = a.linkDisconnected;
            e = a.diagram;
            if (null !== f) {
                var g = !0;
                null !== e && (g = e.ca, e.ca = !0);
                f(a, b, c);
                null !== e && (e.ca = g)
            }
        }
        d && b.isTreeLink && (c = !0, null !== e && (c = e.isTreePathToChildren), a = c ? b.toNode : b.fromNode, b = c ? b.fromNode : b.toNode, null !== a && (a.ih = !1), null === b || b.isTreeLeaf || (0 === b.Za.count ? (b.ih = null, null !== e && e.undoManager.isUndoingRedoing || (b.isTreeLeaf = !0)) : rk(b)))
    }

    function rk(a) {
        a.ih = !1;
        if (0 !== a.Za.count) {
            var b = !0,
                c = a.diagram;
            if (null === c || !c.undoManager.isUndoingRedoing) {
                null !== c && (b = c.isTreePathToChildren);
                for (c = a.Za.iterator; c.next();) {
                    var d = c.value;
                    if (d.isTreeLink)
                        if (b) {
                            if (d.fromNode === a) {
                                a.isTreeLeaf = !1;
                                return
                            }
                        } else if (d.toNode === a) {
                        a.isTreeLeaf = !1;
                        return
                    }
                }
                a.isTreeLeaf = !0
            }
        }
    }
    U.prototype.updateRelationshipsFromData = function() {
        var a = this.diagram;
        null !== a && a.partManager.updateRelationshipsFromData(this)
    };
    t = U.prototype;
    t.Xp = function(a) {
        T.prototype.Xp.call(this, a);
        a || (rk(this), a = this.$k, null !== a && wo(a, this))
    };
    t.Yp = function(a) {
        T.prototype.Yp.call(this, a);
        a || (a = this.$k, null !== a && null !== a.bd && (a.bd.remove(this), a.o()))
    };
    t.Tj = function() {
        if (0 < this.Za.count) {
            var a = this.diagram;
            if (null !== a)
                for (var b = null !== a.commandHandler ? a.commandHandler.deletesConnectedLinks : !0, c = this.Za.copy().iterator; c.next();) {
                    var d = c.value;
                    b ? a.remove(d) : (d.fromNode === this && (d.fromNode = null), d.toNode === this && (d.toNode = null))
                }
        }
        this.labeledLink = null;
        T.prototype.Tj.call(this)
    };
    t.Qs = function(a) {
        if (null === this.tc) {
            if ("" === a && !1 === this.uh) return this;
            xo(this)
        }
        var b = this.tc.J(a);
        return null !== b || "" !== a && (b = this.tc.J(""), null !== b) ? b : this
    };

    function xo(a) {
        null === a.tc ? a.tc = new Lb : a.tc.clear();
        a.vm(a, function(a, c) {
            Dl(a, c)
        });
        0 === a.tc.count && a.tc.add("", a)
    }

    function Dl(a, b) {
        var c = b.portId;
        null !== c && null !== a.tc && a.tc.add(c, b)
    }

    function Cl(a, b, c) {
        var d = b.portId;
        if (null !== d && (null !== a.tc && a.tc.remove(d), b = a.diagram, null !== b && c)) {
            c = null;
            for (a = a.Qu(d); a.next();) d = a.value, null === c && (c = Ka()), c.push(d);
            if (null !== c) {
                for (a = 0; a < c.length; a++) b.remove(c[a]);
                Oa(c)
            }
        }
    }
    t.lz = function(a) {
        if (null === a || a === this) return !1;
        var b = !0,
            c = this.diagram;
        null !== c && (b = c.isTreePathToChildren);
        c = this;
        if (b)
            for (; c !== a;) {
                b = null;
                for (var d = c.Za.iterator; d.next();) {
                    var e = d.value;
                    if (e.isTreeLink && (b = e.fromNode, b !== c && b !== this)) break
                }
                if (b === this || null === b || b === c) return !1;
                c = b
            } else
                for (; c !== a;) {
                    b = null;
                    for (d = c.Za.iterator; d.next() && (e = d.value, !e.isTreeLink || (b = e.toNode, b === c || b === this)););
                    if (b === this || null === b || b === c) return !1;
                    c = b
                }
        return !0
    };
    t.Sy = function() {
        var a = !0,
            b = this.diagram;
        null !== b && (a = b.isTreePathToChildren);
        b = this;
        if (a)
            for (;;) {
                a = null;
                for (var c = b.Za.iterator; c.next();) {
                    var d = c.value;
                    if (d.isTreeLink && (a = d.fromNode, a !== b && a !== this)) break
                }
                if (a === this) return this;
                if (null === a || a === b) return b;
                b = a
            } else
                for (;;) {
                    a = null;
                    for (c = b.Za.iterator; c.next() && (d = c.value, !d.isTreeLink || (a = d.toNode, a === b || a === this)););
                    if (a === this) return this;
                    if (null === a || a === b) return b;
                    b = a
                }
    };
    t.Dy = function(a) {
        if (null === a) return null;
        if (this === a) return this;
        for (var b = this; null !== b;) io(b, !0), b = b.ng();
        var c = null;
        for (b = a; null !== b;) {
            if (0 !== (b.H & 1048576)) {
                c = b;
                break
            }
            b = b.ng()
        }
        for (b = this; null !== b;) io(b, !1), b = b.ng();
        return c
    };
    t.Di = function() {
        var a = !0,
            b = this.diagram;
        null !== b && (a = b.isTreePathToChildren);
        b = this.Za.iterator;
        if (a)
            for (; b.next();) {
                if (a = b.value, a.isTreeLink && a.fromNode !== this) return a
            } else
                for (; b.next();)
                    if (a = b.value, a.isTreeLink && a.toNode !== this) return a;
        return null
    };
    t.ng = function() {
        var a = this.ih;
        if (null === a) return null;
        if (a instanceof U) return a;
        var b = !0;
        a = this.diagram;
        null !== a && (b = a.isTreePathToChildren);
        a = this.Za.iterator;
        if (b)
            for (; a.next();) {
                if (b = a.value, b.isTreeLink && (b = b.fromNode, b !== this)) return this.ih = b
            } else
                for (; a.next();)
                    if (b = a.value, b.isTreeLink && (b = b.toNode, b !== this)) return this.ih = b;
        return this.ih = null
    };
    t.Qy = function() {
        function a(b, d) {
            if (null !== b) {
                d.add(b);
                var c = b.Di();
                null !== c && (d.add(c), a(b.ng(), d))
            }
        }
        var b = new F;
        a(this, b);
        return b
    };
    t.Py = function() {
        return yo(this, this)
    };

    function yo(a, b) {
        b = b.ng();
        return null === b ? 0 : 1 + yo(a, b)
    }
    t.Tp = function() {
        var a = !0,
            b = this.diagram;
        null !== b && (a = b.isTreePathToChildren);
        b = new zb(this.Za);
        var c = this;
        b.predicate = a ? function(a) {
            return a.isTreeLink && a.fromNode === c ? !0 : !1
        } : function(a) {
            return a.isTreeLink && a.toNode === c ? !0 : !1
        };
        return b
    };
    t.Uu = function() {
        var a = !0,
            b = this.diagram;
        null !== b && (a = b.isTreePathToChildren);
        var c = b = null,
            d = this.Za.iterator;
        if (a)
            for (; d.next();) a = d.value, a.isTreeLink && a.fromNode === this && (a = a.toNode, null !== b ? b.add(a) : null !== c && c !== a ? (b = new E, b.add(c), b.add(a)) : c = a);
        else
            for (; d.next();) a = d.value, a.isTreeLink && a.toNode === this && (a = a.fromNode, null !== b ? b.add(a) : null !== c && c !== a ? (b = new E, b.add(c), b.add(a)) : c = a);
        return null !== b ? b.iterator : null !== c ? new yb(c) : xb
    };
    t.Ry = function(a) {
        void 0 === a && (a = Infinity);
        var b = new F;
        Ek(b, this, !1, a, !0);
        return b
    };
    U.prototype.collapseTree = function(a) {
        void 0 === a && (a = 1);
        1 > a && (a = 1);
        var b = this.diagram;
        if (null !== b && !b.Ee) {
            b.Ee = !0;
            var c = new F;
            c.add(this);
            zo(this, c, b.isTreePathToChildren, a, b, this, b.treeCollapsePolicy === ni);
            b.Ee = !1
        }
    };

    function zo(a, b, c, d, e, f, g) {
        if (1 < d)
            for (var h = c ? a.Rp() : a.ud(); h.next();) {
                var k = h.value;
                k.isTreeLink && (k = k.Us(a), null === k || k === a || b.contains(k) || (b.add(k), zo(k, b, c, d - 1, e, f, g)))
            } else Ao(a, b, c, e, f, g)
    }

    function Ao(a, b, c, d, e, f) {
        for (var g = e === a ? !0 : a.isTreeExpanded, h = c ? a.Rp() : a.ud(); h.next();) {
            var k = h.value;
            if (k.isTreeLink && (k = k.Us(a), null !== k && k !== a)) {
                var l = b.contains(k);
                l || b.add(k);
                g && (f && d.Hp(k, e), k.vh(), k.Mb(!1));
                k.isTreeExpanded && (k.wasTreeExpanded = k.isTreeExpanded, l || Ao(k, b, c, d, e, f))
            }
        }
        a.isTreeExpanded = !1
    }
    U.prototype.expandTree = function(a) {
        void 0 === a && (a = 2);
        2 > a && (a = 2);
        var b = this.diagram;
        if (null !== b && !b.Ee) {
            b.Ee = !0;
            var c = new F;
            c.add(this);
            Bo(this, c, b.isTreePathToChildren, a, b, this, b.treeCollapsePolicy === ni);
            b.Ee = !1
        }
    };

    function Bo(a, b, c, d, e, f, g) {
        for (var h = f === a ? !1 : a.isTreeExpanded, k = c ? a.Rp() : a.ud(); k.next();) {
            var l = k.value;
            l.isTreeLink && (h || l.Mc || l.Qa(), l = l.Us(a), null !== l && l !== a && !b.contains(l) && (b.add(l), h || (l.Mb(!0), l.vh(), g && e.Ip(l, f)), 2 < d || l.wasTreeExpanded)) && (l.wasTreeExpanded = !1, Bo(l, b, c, d - 1, e, f, g))
        }
        a.isTreeExpanded = !0
    }
    pa.Object.defineProperties(U.prototype, {
        portSpreading: {
            get: function() {
                return this.Oo
            },
            set: function(a) {
                var b = this.Oo;
                b !== a && (this.Oo = a, this.g("portSpreading", b, a), a = this.diagram, null !== a && a.undoManager.isUndoingRedoing || this.gd())
            }
        },
        avoidable: {
            get: function() {
                return 0 !== (this.Z & 8)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 8);
                if (b !== a) {
                    this.Z ^= 8;
                    var c = this.diagram;
                    null !== c && lk(c, this);
                    this.g("avoidable", b, a)
                }
            }
        },
        avoidableMargin: {
            get: function() {
                return this.vk
            },
            set: function(a) {
                "number" === typeof a && (a = new Ic(a));
                var b = this.vk;
                if (!b.A(a)) {
                    this.vk = a = a.I();
                    var c = this.diagram;
                    null !== c && lk(c, this);
                    this.g("avoidableMargin", b, a)
                }
            }
        },
        linksConnected: {
            get: function() {
                return this.Za.iterator
            }
        },
        linkConnected: {
            get: function() {
                return this.ao
            },
            set: function(a) {
                var b = this.ao;
                b !== a && (this.ao = a, this.g("linkConnected", b, a))
            }
        },
        linkDisconnected: {
            get: function() {
                return this.bo
            },
            set: function(a) {
                var b = this.bo;
                b !== a && (this.bo = a, this.g("linkDisconnected", b, a))
            }
        },
        linkValidation: {
            get: function() {
                return this.gi
            },
            set: function(a) {
                var b = this.gi;
                b !== a && (this.gi = a, this.g("linkValidation", b, a))
            }
        },
        isLinkLabel: {
            get: function() {
                return null !== this.$k
            }
        },
        labeledLink: {
            get: function() {
                return this.$k
            },
            set: function(a) {
                var b = this.$k;
                if (b !== a) {
                    var c = this.diagram,
                        d = this.data;
                    if (null !== b) {
                        null !== b.bd && (b.bd.remove(this),
                            b.o());
                        if (null !== c && null !== d && !c.undoManager.isUndoingRedoing) {
                            var e = b.data,
                                f = c.model;
                            if (null !== e && f.bm()) {
                                var g = f.pa(d);
                                void 0 !== g && f.vx(e, g)
                            }
                        }
                        this.containingGroup = null
                    }
                    this.$k = a;
                    null !== a && (wo(a, this), null === c || null === d || c.undoManager.isUndoingRedoing || (e = a.data, c = c.model, null !== e && c.bm() && (d = c.pa(d), void 0 !== d && c.Cu(e, d))), this.containingGroup = a.containingGroup);
                    ol(this);
                    this.g("labeledLink", b, a)
                }
            }
        },
        port: {
            get: function() {
                return this.Qs("")
            }
        },
        ports: {
            get: function() {
                null === this.tc && xo(this);
                return this.tc.iteratorValues
            }
        },
        isTreeExpanded: {
            get: function() {
                return 0 !== (this.Z & 1)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 1);
                if (b !== a) {
                    this.Z ^= 1;
                    var c = this.diagram;
                    this.g("isTreeExpanded", b, a);
                    b = this.treeExpandedChanged;
                    if (null !== b) {
                        var d = !0;
                        null !== c && (d = c.ca, c.ca = !0);
                        b(this);
                        null !== c && (c.ca = d)
                    }
                    null !== c && c.undoManager.isUndoingRedoing ? this.Mb(a) : a ? this.expandTree() : this.collapseTree()
                }
            }
        },
        wasTreeExpanded: {
            get: function() {
                return 0 !== (this.Z & 2)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 2);
                b !== a && (this.Z ^= 2, this.g("wasTreeExpanded", b, a))
            }
        },
        treeExpandedChanged: {
            get: function() {
                return this.Ap
            },
            set: function(a) {
                var b = this.Ap;
                b !== a && (this.Ap = a, this.g("treeExpandedChanged", b, a))
            }
        },
        isTreeLeaf: {
            get: function() {
                return 0 !== (this.Z & 4)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 4);
                b !== a && (this.Z ^= 4, this.g("isTreeLeaf", b, a))
            }
        }
    });
    U.prototype.expandTree = U.prototype.expandTree;
    U.prototype.collapseTree = U.prototype.collapseTree;
    U.prototype.findTreeParts = U.prototype.Ry;
    U.prototype.findTreeChildrenNodes = U.prototype.Uu;
    U.prototype.findTreeChildrenLinks = U.prototype.Tp;
    U.prototype.findTreeLevel = U.prototype.Py;
    U.prototype.findTreeParentChain = U.prototype.Qy;
    U.prototype.findTreeParentNode = U.prototype.ng;
    U.prototype.findTreeParentLink = U.prototype.Di;
    U.prototype.findCommonTreeParent = U.prototype.Dy;
    U.prototype.findTreeRoot = U.prototype.Sy;
    U.prototype.isInTreeOf = U.prototype.lz;
    U.prototype.findPort = U.prototype.Qs;
    U.prototype.findLinksTo = U.prototype.Hy;
    U.prototype.findLinksBetween = U.prototype.Gy;
    U.prototype.findNodesInto = U.prototype.Su;
    U.prototype.findNodesOutOf = U.prototype.Tu;
    U.prototype.findNodesConnected = U.prototype.Ru;
    U.prototype.findLinksInto = U.prototype.ud;
    U.prototype.findLinksOutOf = U.prototype.Rp;
    U.prototype.findLinksConnected = U.prototype.Qu;
    U.prototype.invalidateConnectedLinks = U.prototype.gd;
    U.prototype.invalidateLinkBundle = U.prototype.jz;
    var Co = new D(U, "SpreadingNone", 10),
        qo = new D(U, "SpreadingEvenly", 11),
        Do = new D(U, "SpreadingPacked", 12);
    U.className = "Node";
    U.SpreadingNone = Co;
    U.SpreadingEvenly = qo;
    U.SpreadingPacked = Do;

    function hg(a) {
        U.call(this, a);
        this.Z |= 4608;
        this.mo = new F;
        this.jl = new F;
        this.Ua = this.rp = this.hi = this.no = this.lo = null;
        this.ic = new ui;
        this.ic.group = this
    }
    oa(hg, U);
    hg.prototype.cloneProtected = function(a) {
        U.prototype.cloneProtected.call(this, a);
        this.Z = this.Z & -32769;
        a.lo = this.lo;
        a.no = this.no;
        a.hi = this.hi;
        a.rp = this.rp;
        var b = a.Vl(function(a) {
            return a instanceof Wg
        });
        b instanceof Wg ? a.Ua = b : a.Ua = null;
        null !== this.ic ? (a.ic = this.ic.copy(), a.ic.group = a) : (null !== a.ic && (a.ic.group = null), a.ic = null)
    };
    t = hg.prototype;
    t.nf = function(a) {
        U.prototype.nf.call(this, a);
        var b = a.Wj();
        for (a = a.memberParts; a.next();) {
            var c = a.value;
            c.o();
            c.B(8);
            c.Nj();
            if (c instanceof U) c.gd(b);
            else if (c instanceof S)
                for (c = c.labelNodes; c.next();) c.value.gd(b)
        }
    };
    t.ik = function(a, b, c, d, e, f, g) {
        if (a === cf && "elements" === b)
            if (e instanceof Wg) null === this.Ua ? this.Ua = e : this.Ua !== e && A("Cannot insert a second Placeholder into the visual tree of a Group.");
            else {
                if (e instanceof W) {
                    var h = e.Vl(function(a) {
                        return a instanceof Wg
                    });
                    h instanceof Wg && (null === this.Ua ? this.Ua = h : this.Ua !== h && A("Cannot insert a second Placeholder into the visual tree of a Group."))
                }
            }
        else a === df && "elements" === b && null !== this.Ua && (d === this.Ua ? this.Ua = null : d instanceof W && this.Ua.pg(d) && (this.Ua = null));
        U.prototype.ik.call(this, a, b, c, d, e, f, g)
    };
    t.oh = function(a, b, c, d) {
        this.We = this.Ua;
        U.prototype.oh.call(this, a, b, c, d)
    };
    t.Li = function() {
        if (!U.prototype.Li.call(this)) return !1;
        for (var a = this.memberParts; a.next();) {
            var b = a.value;
            if (b instanceof U) {
                if (b.isVisible() && lj(b)) return !1
            } else if (b instanceof S && b.isVisible() && lj(b) && b.fromNode !== this && b.toNode !== this) return !1
        }
        return !0
    };

    function jo(a, b) {
        if (a.mo.add(b)) {
            b instanceof hg && a.jl.add(b);
            var c = a.memberAdded;
            if (null !== c) {
                var d = !0,
                    e = a.diagram;
                null !== e && (d = e.ca, e.ca = !0);
                c(a, b);
                null !== e && (e.ca = d)
            }
            a.isVisible() && a.isSubGraphExpanded || b.Mb(!1)
        }
        b instanceof S && !a.computesBoundsIncludingLinks || (b = a.Ua, null === b && (b = a), b.o())
    }

    function ko(a, b) {
        if (a.mo.remove(b)) {
            b instanceof hg && a.jl.remove(b);
            var c = a.memberRemoved;
            if (null !== c) {
                var d = !0,
                    e = a.diagram;
                null !== e && (d = e.ca, e.ca = !0);
                c(a, b);
                null !== e && (e.ca = d)
            }
            a.isVisible() && a.isSubGraphExpanded || b.Mb(!0)
        }
        b instanceof S && !a.computesBoundsIncludingLinks || (b = a.Ua, null === b && (b = a), b.o())
    }
    t.Tj = function() {
        if (0 < this.mo.count) {
            var a = this.diagram;
            if (null !== a)
                for (var b = this.mo.copy().iterator; b.next();) a.remove(b.value)
        }
        U.prototype.Tj.call(this)
    };
    hg.prototype.canAddMembers = function(a) {
        var b = this.diagram;
        if (null === b) return !1;
        b = b.commandHandler;
        for (a = Gk(a).iterator; a.next();)
            if (!b.isValidMember(this, a.value)) return !1;
        return !0
    };
    hg.prototype.addMembers = function(a, b) {
        var c = this.diagram;
        if (null === c) return !1;
        c = c.commandHandler;
        var d = !0;
        for (a = Gk(a).iterator; a.next();) {
            var e = a.value;
            !b || c.isValidMember(this, e) ? e.containingGroup = this : d = !1
        }
        return d
    };
    hg.prototype.canUngroup = function() {
        if (!this.ungroupable) return !1;
        var a = this.layer;
        if (null !== a && !a.allowUngroup) return !1;
        a = a.diagram;
        return null === a || a.allowUngroup ? !0 : !1
    };
    t = hg.prototype;
    t.gd = function(a) {
        void 0 === a && (a = null);
        var b = 0 !== (this.Z & 65536);
        U.prototype.gd.call(this, a);
        if (!b)
            for (0 !== (this.Z & 65536) !== !0 && (this.Z = this.Z ^ 65536), b = this.Pu(); b.next();) {
                var c = b.value;
                if (null === a || !a.contains(c)) {
                    var d = c.fromNode;
                    null !== d && d !== this && d.Wd(this) && !d.isVisible() ? (to(d, c.fromPort), to(d, c.toPort), c.Qa()) : (d = c.toNode, null !== d && d !== this && d.Wd(this) && !d.isVisible() && (to(d, c.fromPort), to(d, c.toPort), c.Qa()))
                }
            }
    };
    t.Pu = function() {
        var a = this.Wj();
        a.add(this);
        for (var b = new F, c = a.iterator; c.next();) {
            var d = c.value;
            if (d instanceof U)
                for (d = d.linksConnected; d.next();) {
                    var e = d.value;
                    a.contains(e) || b.add(e)
                }
        }
        return b.iterator
    };
    t.Fy = function() {
        var a = this.Wj();
        a.add(this);
        for (var b = new F, c = a.iterator; c.next();) {
            var d = c.value;
            if (d instanceof U)
                for (d = d.linksConnected; d.next();) {
                    var e = d.value,
                        f = e.fromNode;
                    a.contains(f) && f !== this || b.add(f);
                    e = e.toNode;
                    a.contains(e) && e !== this || b.add(e)
                }
        }
        return b.iterator
    };
    t.Ey = function() {
        function a(b, d) {
            null !== b && (d.add(b), a(b.containingGroup, d))
        }
        var b = new F;
        a(this, b);
        return b
    };
    t.Wj = function() {
        var a = new F;
        Ek(a, this, !0, 0, !0);
        a.remove(this);
        return a
    };
    t.Mb = function(a) {
        U.prototype.Mb.call(this, a);
        for (var b = this.memberParts; b.next();) b.value.Mb(a)
    };
    hg.prototype.collapseSubGraph = function() {
        var a = this.diagram;
        if (null !== a && !a.Ee) {
            a.Ee = !0;
            var b = this.Wj();
            Eo(this, b, a, this);
            a.Ee = !1
        }
    };

    function Eo(a, b, c, d) {
        for (var e = a.memberParts; e.next();) {
            var f = e.value;
            f.Mb(!1);
            f instanceof hg && f.isSubGraphExpanded && (f.wasSubGraphExpanded = f.isSubGraphExpanded, Eo(f, b, c, d));
            if (f instanceof U) f.gd(b), c.Hp(f, d);
            else if (f instanceof S)
                for (f = f.labelNodes; f.next();) f.value.gd(b)
        }
        a.isSubGraphExpanded = !1
    }
    hg.prototype.expandSubGraph = function() {
        var a = this.diagram;
        if (null !== a && !a.Ee) {
            a.Ee = !0;
            var b = this.Wj();
            Fo(this, b, a, this);
            a.Ee = !1
        }
    };

    function Fo(a, b, c, d) {
        for (var e = a.memberParts; e.next();) {
            var f = e.value;
            f.Mb(!0);
            f instanceof hg && f.wasSubGraphExpanded && (f.wasSubGraphExpanded = !1, Fo(f, b, c, d));
            if (f instanceof U) f.gd(b), c.Ip(f, d);
            else if (f instanceof S)
                for (f = f.labelNodes; f.next();) f.value.gd(b)
        }
        a.isSubGraphExpanded = !0
    }
    hg.prototype.move = function(a, b) {
        void 0 === b && (b = !1);
        var c = b ? this.location : this.position,
            d = c.x;
        isNaN(d) && (d = 0);
        c = c.y;
        isNaN(c) && (c = 0);
        d = a.x - d;
        c = a.y - c;
        var e = G.allocAt(d, c);
        U.prototype.move.call(this, a, b);
        a = new F;
        for (b = this.Wj().iterator; b.next();) {
            var f = b.value;
            f instanceof S && (f.suspendsRouting && a.add(f), f.Mc || f.fromNode !== this && f.toNode !== this) && (f.suspendsRouting = !0)
        }
        for (b.reset(); b.next();)
            if (f = b.value, !(f.wh() || f instanceof U && f.isLinkLabel)) {
                var g = f.position,
                    h = f.location;
                g.s() ? (e.x = g.x + d, e.y = g.y +
                    c, f.position = e) : h.s() && (e.x = h.x + d, e.y = h.y + c, f.location = e)
            } for (b.reset(); b.next();)
            if (f = b.value, f instanceof S && (f.suspendsRouting = a.contains(f), f.Mc || f.fromNode !== this && f.toNode !== this)) g = f.position, e.x = g.x + d, e.y = g.y + c, e.s() ? f.move(e) : f.Qa(), Jj(f) && f.Qa();
        G.free(e)
    };
    pa.Object.defineProperties(hg.prototype, {
        placeholder: {
            get: function() {
                return this.Ua
            }
        },
        computesBoundsAfterDrag: {
            get: function() {
                return 0 !== (this.Z & 2048)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 2048);
                b !== a && (this.Z ^= 2048, this.g("computesBoundsAfterDrag", b, a))
            }
        },
        computesBoundsIncludingLinks: {
            get: function() {
                return 0 !== (this.Z & 4096)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 4096);
                b !== a && (this.Z ^= 4096, this.g("computesBoundsIncludingLinks",
                    b, a))
            }
        },
        computesBoundsIncludingLocation: {
            get: function() {
                return 0 !== (this.Z & 8192)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 8192);
                b !== a && (this.Z ^= 8192, this.g("computesBoundsIncludingLocation", b, a))
            }
        },
        handlesDragDropForMembers: {
            get: function() {
                return 0 !== (this.Z & 16384)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 16384);
                b !== a && (this.Z ^= 16384, this.g("handlesDragDropForMembers", b, a))
            }
        },
        memberParts: {
            get: function() {
                return this.mo.iterator
            }
        },
        layout: {
            get: function() {
                return this.ic
            },
            set: function(a) {
                var b = this.ic;
                if (b !== a) {
                    null !== b && (b.diagram = null, b.group = null);
                    this.ic = a;
                    var c = this.diagram;
                    null !== a && (a.diagram = c, a.group = this);
                    null !== c && (c.yg = !0);
                    this.g("layout", b, a);
                    null !== c && c.ec()
                }
            }
        },
        memberAdded: {
            get: function() {
                return this.lo
            },
            set: function(a) {
                var b = this.lo;
                b !== a && (this.lo = a, this.g("memberAdded", b, a))
            }
        },
        memberRemoved: {
            get: function() {
                return this.no
            },
            set: function(a) {
                var b = this.no;
                b !== a && (this.no = a, this.g("memberRemoved", b, a))
            }
        },
        memberValidation: {
            get: function() {
                return this.hi
            },
            set: function(a) {
                var b = this.hi;
                b !== a && (this.hi = a, this.g("memberValidation", b, a))
            }
        },
        ungroupable: {
            get: function() {
                return 0 !== (this.Z & 256)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 256);
                b !== a && (this.Z ^= 256, this.g("ungroupable", b, a))
            }
        },
        isSubGraphExpanded: {
            get: function() {
                return 0 !== (this.Z & 512)
            },
            set: function(a) {
                var b = 0 !== (this.Z & 512);
                if (b !== a) {
                    this.Z ^= 512;
                    var c = this.diagram;
                    this.g("isSubGraphExpanded", b, a);
                    b = this.subGraphExpandedChanged;
                    if (null !== b) {
                        var d = !0;
                        null !== c && (d = c.ca, c.ca = !0);
                        b(this);
                        null !== c && (c.ca = d)
                    }
                    null !== c && c.undoManager.isUndoingRedoing ? (null !== this.Ua && this.Ua.o(), this.memberParts.each(function(a) {
                        a.updateAdornments()
                    })) : a ? this.expandSubGraph() : this.collapseSubGraph()
                }
            }
        },
        wasSubGraphExpanded: {
            get: function() {
                return 0 !== (this.Z & 1024)
            },
            set: function(a) {
                var b =
                    0 !== (this.Z & 1024);
                b !== a && (this.Z ^= 1024, this.g("wasSubGraphExpanded", b, a))
            }
        },
        subGraphExpandedChanged: {
            get: function() {
                return this.rp
            },
            set: function(a) {
                var b = this.rp;
                b !== a && (this.rp = a, this.g("subGraphExpandedChanged", b, a))
            }
        },
        hk: {
            get: function() {
                return 0 !== (this.Z & 32768)
            },
            set: function(a) {
                0 !== (this.Z & 32768) !== a && (this.Z ^= 32768)
            }
        }
    });
    hg.prototype.expandSubGraph = hg.prototype.expandSubGraph;
    hg.prototype.collapseSubGraph = hg.prototype.collapseSubGraph;
    hg.prototype.findSubGraphParts = hg.prototype.Wj;
    hg.prototype.findContainingGroupChain = hg.prototype.Ey;
    hg.prototype.findExternalNodesConnected = hg.prototype.Fy;
    hg.prototype.findExternalLinksConnected = hg.prototype.Pu;
    hg.className = "Group";

    function Wg() {
        Y.call(this);
        this.fb = Oc;
        this.bp = new N(NaN, NaN, NaN, NaN)
    }
    oa(Wg, Y);
    Wg.prototype.cloneProtected = function(a) {
        Y.prototype.cloneProtected.call(this, a);
        a.fb = this.fb.I();
        a.bp = this.bp.copy()
    };
    Wg.prototype.qh = function(a) {
        if (null === this.background && null === this.areaBackground) return !1;
        var b = this.naturalBounds;
        return Cc(0, 0, b.width, b.height, a.x, a.y)
    };
    Wg.prototype.em = function() {
        var a = this.part;
        null !== a && (a instanceof hg || a instanceof pf) || A("Placeholder is not inside a Group or Adornment.");
        if (a instanceof hg) {
            var b = this.computeBorder(this.bp),
                c = this.minSize,
                d = this.jc;
            sc(d, (isFinite(c.width) ? Math.max(c.width, b.width) : b.width) || 0, (isFinite(c.height) ? Math.max(c.height, b.height) : b.height) || 0);
            Uk(this, 0, 0, d.width, d.height);
            d = a.memberParts;
            for (c = !1; d.next();)
                if (d.value.isVisible()) {
                    c = !0;
                    break
                } d = a.diagram;
            !c || null === d || d.animationManager.isAnimating ||
                isNaN(b.x) || isNaN(b.y) || (c = G.alloc(), c.Pi(b, a.locationSpot), c.A(a.location) || (a.location = new G(c.x, c.y)), G.free(c))
        } else {
            b = this.jc;
            c = this.fb;
            d = c.left + c.right;
            var e = c.top + c.bottom,
                f = a.adornedObject;
            a.angle = f.Fi();
            var g = 0;
            f instanceof V && (g = f.strokeWidth);
            var h = f.Ce(),
                k = f.naturalBounds,
                l = (k.width + g) * h;
            g = (k.height + g) * h;
            a.type !== W.Link && (f = f.ma("Selection" === a.category ? Tc : a.locationSpot, G.alloc()), a.location = f, G.free(f));
            isNaN(l) || isNaN(g) ? (a = a.adornedObject, l = a.ma(Tc, G.alloc()), f = N.allocAt(l.x, l.y, 0,
                0), f.Ie(a.ma(hd, l)), f.Ie(a.ma(bd, l)), f.Ie(a.ma(fd, l)), sc(b, f.width + d || 0, f.height + e || 0), Uk(this, -c.left, -c.top, b.width, b.height), G.free(l), N.free(f)) : (sc(b, l + d || 0, g + e || 0), Uk(this, -c.left, -c.top, b.width, b.height))
        }
    };
    Wg.prototype.oh = function(a, b, c, d) {
        this.actualBounds.h(a, b, c, d)
    };
    Wg.prototype.computeBorder = function(a) {
        var b = this.part,
            c = b.diagram;
        if (null !== c && b instanceof hg && !b.layer.isTemporary && b.computesBoundsAfterDrag && this.bp.s()) {
            var d = c.toolManager.findTool("Dragging");
            if (d === c.currentTool && (c = d.computeBorder(b, this.bp, a), null !== c)) return c
        }
        c = N.alloc();
        d = this.computeMemberBounds(c);
        var e = this.fb;
        b instanceof hg && !b.isSubGraphExpanded ? a.h(d.x - e.left, d.y - e.top, 0, 0) : a.h(d.x - e.left, d.y - e.top, Math.max(d.width + e.left + e.right, 0), Math.max(d.height + e.top + e.bottom, 0));
        N.free(c);
        b instanceof hg && b.computesBoundsIncludingLocation && b.location.s() && a.Ie(b.location);
        return a
    };
    Wg.prototype.computeMemberBounds = function(a) {
        if (!(this.part instanceof hg)) return a.h(0, 0, 0, 0), a;
        for (var b = this.part, c = Infinity, d = Infinity, e = -Infinity, f = -Infinity, g = b.memberParts; g.next();) {
            var h = g.value;
            if (h.isVisible()) {
                if (h instanceof S) {
                    if (!b.computesBoundsIncludingLinks) continue;
                    if (kj(h)) continue;
                    if (h.fromNode === b || h.toNode === b) continue
                }
                h = h.actualBounds;
                h.left < c && (c = h.left);
                h.top < d && (d = h.top);
                h.right > e && (e = h.right);
                h.bottom > f && (f = h.bottom)
            }
        }
        isFinite(c) && isFinite(d) ? a.h(c, d, e - c, f - d) : (b = b.location,
            a.h(b.x, b.y, 0, 0));
        return a
    };
    pa.Object.defineProperties(Wg.prototype, {
        padding: {
            get: function() {
                return this.fb
            },
            set: function(a) {
                "number" === typeof a && (a = new Ic(a));
                var b = this.fb;
                b.A(a) || (this.fb = a = a.I(), this.g("padding", b, a))
            }
        }
    });
    Wg.className = "Placeholder";

    function S() {
        T.call(this, W.Link);
        this.Sa = 8;
        this.Oe = null;
        this.Pe = "";
        this.ff = this.Dn = null;
        this.gf = "";
        this.zp = null;
        this.Jm = Ng;
        this.en = 0;
        this.hn = Ng;
        this.jn = NaN;
        this.Aj = Go;
        this.np = .5;
        this.bd = null;
        this.yb = (new E).freeze();
        this.rl = this.Wg = null;
        this.pl = new N;
        this.qa = new $d;
        this.xr = !0;
        this.K = this.u = this.wf = this.Ff = null;
        this.l = [];
        this.vu = new G;
        this.jr = this.Gw = this.Fw = null;
        this.Yt = NaN;
        this.P = null
    }
    oa(S, T);
    S.prototype.cloneProtected = function(a) {
        T.prototype.cloneProtected.call(this, a);
        a.Sa = this.Sa & -113;
        a.Pe = this.Pe;
        a.Dn = this.Dn;
        a.gf = this.gf;
        a.zp = this.zp;
        a.Jm = this.Jm;
        a.en = this.en;
        a.hn = this.hn;
        a.jn = this.jn;
        a.Aj = this.Aj;
        a.np = this.np;
        null !== this.P && (a.P = this.P.copy())
    };
    t = S.prototype;
    t.nf = function(a) {
        T.prototype.nf.call(this, a);
        this.Pe = a.Pe;
        this.gf = a.gf;
        a.Wg = null;
        a.Qa();
        a.wf = this.wf;
        var b = a.fromPort;
        null !== b && to(a.fromNode, b);
        b = a.toPort;
        null !== b && to(a.toNode, b)
    };
    t.gb = function(a) {
        a.classType === S ? 2 === (a.value & 2) ? this.routing = a : a === Qg || a === Mg || a === Lg ? this.curve = a : a === Ho || a === Io || a === Jo ? this.adjusting = a : a !== Go && a !== Ng && A("Unknown Link enum value for a Link property: " + a) : T.prototype.gb.call(this, a)
    };
    t.Jc = function() {
        null === this.P && (this.P = new Qk)
    };
    t.Li = function() {
        var a = this.fromNode;
        if (null !== a) {
            var b = a.findVisibleNode();
            null !== b && (a = b);
            if (lj(a) || mj(a)) return !1
        }
        a = this.toNode;
        return null !== a && (b = a.findVisibleNode(), null !== b && (a = b), lj(a) || mj(a)) ? !1 : !0
    };
    t.Ev = function() {
        return !1
    };
    t.Fv = function() {};
    t.dc = function() {
        return !1
    };
    S.prototype.computeAngle = function(a, b, c) {
        return S.computeAngle(b, c)
    };
    S.computeAngle = function(a, b) {
        switch (a) {
            default:
            case Ng:
                a = 0;
                break;
            case nn:
                a = b;
                break;
            case ym:
                a = b + 90;
                break;
            case Am:
                a = b - 90;
                break;
            case Ko:
                a = b + 180;
                break;
            case Lo:
                a = H.fq(b);
                90 < a && 270 > a && (a -= 180);
                break;
            case zm:
                a = H.fq(b + 90);
                90 < a && 270 > a && (a -= 180);
                break;
            case Bm:
                a = H.fq(b - 90);
                90 < a && 270 > a && (a -= 180);
                break;
            case Cm:
                a = H.fq(b);
                if (45 < a && 135 > a || 225 < a && 315 > a) return 0;
                90 < a && 270 > a && (a -= 180)
        }
        return H.fq(a)
    };

    function po(a) {
        var b = a.fromNode,
            c = a.toNode,
            d = null;
        null !== b ? d = null !== c ? b.ax(c) : b.containingGroup : null !== c ? d = c.containingGroup : d = null;
        b = d;
        c = a.Oh;
        if (c !== b) {
            null !== c && ko(c, a);
            a.Oh = b;
            null !== b && jo(b, a);
            var e = a.containingGroupChanged;
            if (null !== e) {
                var f = !0,
                    g = a.diagram;
                null !== g && (f = g.ca, g.ca = !0);
                e(a, c, b);
                null !== g && (g.ca = f)
            }!a.Mc || a.Fw !== c && a.Gw !== c || a.Qa()
        }
        if (a.isLabeledLink)
            for (a = a.labelNodes; a.next();) a.value.containingGroup = d
    }
    t = S.prototype;
    t.vh = function() {
        var a = this.containingGroup;
        null !== a && this.fromNode !== a && this.toNode !== a && a.computesBoundsIncludingLinks && T.prototype.vh.call(this)
    };
    t.Us = function(a) {
        var b = this.fromNode;
        return a === b ? this.toNode : b
    };
    t.Yy = function(a) {
        var b = this.fromPort;
        return a === b ? this.toPort : b
    };

    function wo(a, b) {
        null === a.bd && (a.bd = new F);
        a.bd.add(b);
        a.o()
    }
    t.Xp = function(a) {
        T.prototype.Xp.call(this, a);
        Mo(this) && this.Zp(this.actualBounds);
        if (!a) {
            a = this.Oe;
            var b = null;
            null !== a && (b = this.fromPort, uo(a, this, b));
            var c = this.ff;
            if (null !== c) {
                var d = this.toPort;
                c === a && d === b || uo(c, this, d)
            }
            No(this)
        }
    };
    t.Yp = function(a) {
        T.prototype.Yp.call(this, a);
        Mo(this) && this.Zp(this.actualBounds);
        if (!a) {
            a = this.Oe;
            var b = null;
            null !== a && (b = this.fromPort, vo(a, this, b));
            var c = this.ff;
            if (null !== c) {
                var d = this.toPort;
                c === a && d === b || vo(c, this, d)
            }
            Oo(this)
        }
    };
    t.Tj = function() {
        this.Mc = !0;
        if (null !== this.bd) {
            var a = this.diagram;
            if (null !== a)
                for (var b = this.bd.copy().iterator; b.next();) a.remove(b.value)
        }
        null !== this.data && (a = this.diagram, null !== a && a.partManager.removeDataForLink(this))
    };
    S.prototype.updateRelationshipsFromData = function() {
        if (null !== this.data) {
            var a = this.diagram;
            null !== a && a.partManager.updateRelationshipsFromData(this)
        }
    };
    S.prototype.move = function(a, b) {
        var c = b ? this.location : this.position,
            d = c.x;
        isNaN(d) && (d = 0);
        var e = c.y;
        isNaN(e) && (e = 0);
        d = a.x - d;
        e = a.y - e;
        !0 === b ? T.prototype.move.call(this, a, !1) : (a = G.allocAt(c.x + d, c.y + e), T.prototype.move.call(this, a, !1), G.free(a));
        Zf(this, d, e);
        for (a = this.labelNodes; a.next();) b = a.value, c = b.position, b.moveTo(c.x + d, c.y + e)
    };
    S.prototype.canRelinkFrom = function() {
        if (!this.relinkableFrom) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowRelink) return !1;
        a = a.diagram;
        return null === a || a.allowRelink ? !0 : !1
    };
    S.prototype.canRelinkTo = function() {
        if (!this.relinkableTo) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowRelink) return !1;
        a = a.diagram;
        return null === a || a.allowRelink ? !0 : !1
    };
    S.prototype.computeMidPoint = function(a) {
        var b = this.pointsCount;
        if (0 === b) return a.assign(ec), a;
        if (1 === b) return a.assign(this.i(0)), a;
        if (2 === b) {
            var c = this.i(0),
                d = this.i(1);
            a.h((c.x + d.x) / 2, (c.y + d.y) / 2);
            return a
        }
        if (this.isOrthogonal && (15 <= this.computeCorner() || this.computeCurve() === Qg)) return this.qa.Xu(.5, a), a.add(this.i(0)), c = this.qa.figures.first(), a.offset(-c.startX, -c.startY), a;
        if (this.computeCurve() === Qg) {
            if (3 === b) return this.i(1);
            d = (b - 1) / 3 | 0;
            c = 3 * (d / 2 | 0);
            if (1 === d % 2) {
                d = this.i(c);
                var e = this.i(c + 1),
                    f = this.i(c + 2);
                c = this.i(c + 3);
                H.jy(d.x, d.y, e.x, e.y, f.x, f.y, c.x, c.y, a)
            } else a.assign(this.i(c));
            return a
        }
        var g = this.flattenedLengths;
        c = this.flattenedTotalLength;
        for (e = f = d = 0; d < c / 2 && f < b;) {
            e = g[f];
            if (d + e > c / 2) break;
            d += e;
            f++
        }
        b = this.i(f);
        f = this.i(f + 1);
        1 > Math.abs(b.x - f.x) ? b.y > f.y ? a.h(b.x, b.y - (c / 2 - d)) : a.h(b.x, b.y + (c / 2 - d)) : 1 > Math.abs(b.y - f.y) ? b.x > f.x ? a.h(b.x - (c / 2 - d), b.y) : a.h(b.x + (c / 2 - d), b.y) : (c = (c / 2 - d) / e, a.h(b.x + c * (f.x - b.x), b.y + c * (f.y - b.y)));
        return a
    };
    S.prototype.computeMidAngle = function() {
        var a = this.pointsCount;
        if (2 > a) return NaN;
        if (2 === a) return this.i(0).Va(this.i(1));
        if (this.isOrthogonal && (15 <= this.computeCorner() || this.computeCurve() === Qg)) {
            a: {
                a = this.qa;
                var b = .5;0 > b ? b = 0 : 1 < b && (b = 1);
                if (a.type === ge) a = 180 * Math.atan2(a.endY - a.startY, a.endX - a.startX) / Math.PI;
                else {
                    var c = a.flattenedSegments,
                        d = a.flattenedLengths,
                        e = c.length;
                    b = a.flattenedTotalLength * b;
                    for (var f = 0, g = 0; g < e; g++) {
                        var h = d[g],
                            k = h.length;
                        for (a = 0; a < k; a++) {
                            var l = h[a];
                            if (f + l >= b) {
                                b = c[g];
                                c = b[2 * a];
                                d = b[2 * a + 1];
                                e = b[2 * a + 2];
                                a = b[2 * a + 3];
                                a = 1 > Math.abs(e - c) && 1 > Math.abs(a - d) ? 0 : 1 > Math.abs(e - c) ? 0 <= a - d ? 90 : 270 : 1 > Math.abs(a - d) ? 0 <= e - c ? 0 : 180 : 180 * Math.atan2(a - d, e - c) / Math.PI;
                                break a
                            }
                            f += l
                        }
                    }
                    a = NaN
                }
            }
            return a
        }
        if (this.computeCurve() === Qg && 4 <= a) {
            d = (a - 1) / 3 | 0;
            c = 3 * (d / 2 | 0);
            if (1 === d % 2) return c = Math.floor(c), a = this.i(c), d = this.i(c + 1), e = this.i(c + 2), c = this.i(c + 3), H.iy(a.x, a.y, d.x, d.y, e.x, e.y, c.x, c.y);
            if (0 < c && c + 1 < a) return this.i(c - 1).Va(this.i(c + 1))
        }
        d = this.flattenedLengths;
        e = this.flattenedTotalLength;
        for (c = b = 0; b < e / 2 && c < a;) {
            f =
                d[c];
            if (b + f > e / 2) break;
            b += f;
            c++
        }
        d = this.i(c);
        e = this.i(c + 1);
        if (1 > Math.abs(d.x - e.x) && 1 > Math.abs(d.y - e.y)) {
            if (0 < c && c + 2 < a) return this.i(c - 1).Va(this.i(c + 2))
        } else {
            if (1 > Math.abs(d.x - e.x)) return d.y > e.y ? 270 : 90;
            if (1 > Math.abs(d.y - e.y)) return d.x > e.x ? 180 : 0
        }
        return d.Va(e)
    };
    t = S.prototype;
    t.i = function(a) {
        return this.yb.j[a]
    };
    t.ld = function(a, b) {
        this.yb.jd(a, b)
    };
    t.M = function(a, b, c) {
        this.yb.jd(a, new G(b, c))
    };
    t.hz = function(a, b) {
        this.yb.Jb(a, b)
    };
    t.m = function(a, b, c) {
        this.yb.Jb(a, new G(b, c))
    };
    t.ye = function(a) {
        this.yb.add(a)
    };
    t.kf = function(a, b) {
        this.yb.add(new G(a, b))
    };
    t.tv = function(a) {
        this.yb.mb(a)
    };
    t.Oj = function() {
        this.yb.clear()
    };

    function Zf(a, b, c) {
        if (0 !== b || 0 !== c) {
            for (var d = a.Mc, e = new E, f = a.yb.iterator; f.next();) {
                var g = f.value;
                e.add((new G(g.x + b, g.y + c)).freeze())
            }
            e.freeze();
            f = a.yb;
            a.yb = e;
            isNaN(b) || isNaN(c) || a.diagram.animationManager.sb ? a.o() : (a.Mf.h(a.Mf.x + b, a.Mf.y + c), a.sa.h(a.sa.x + b, a.sa.y + c), ol(a));
            d && Po(a);
            b = a.diagram;
            null !== b && b.animationManager.sb && (a.rl = e);
            a.g("points", f, e)
        }
    }
    t.zh = function() {
        null === this.Wg && (this.Wg = this.yb, this.yb = this.yb.copy())
    };
    t.lf = function() {
        if (null !== this.Wg) {
            for (var a = this.Wg, b = this.yb, c = Infinity, d = Infinity, e = a.j, f = e.length, g = 0; g < f; g++) {
                var h = e[g];
                c = Math.min(h.x, c);
                d = Math.min(h.y, d)
            }
            h = g = Infinity;
            for (var k = b.j, l = k.length, m = 0; m < l; m++) {
                var n = k[m];
                g = Math.min(n.x, g);
                h = Math.min(n.y, h);
                n.freeze()
            }
            b.freeze();
            if (l === f)
                for (f = 0; f < l; f++) {
                    if (m = e[f], n = k[f], m.x - c !== n.x - g || m.y - d !== n.y - h) {
                        this.o();
                        this.cc();
                        break
                    }
                } else this.o(), this.cc();
            this.Wg = null;
            c = this.diagram;
            null !== c && c.animationManager.sb && (this.rl = b);
            Po(this);
            this.g("points",
                a, b)
        }
    };
    t.xx = function() {
        null !== this.Wg && (this.yb = this.Wg, this.Wg = null)
    };

    function Po(a) {
        0 === a.yb.count ? a.Mc = !1 : (a.Mc = !0, a.jr = null, a.Yt = NaN, a.defaultFromPoint = a.i(0), a.defaultToPoint = a.i(a.pointsCount - 1), Qo(a, !1))
    }
    t.Qa = function() {
        if (!this.suspendsRouting) {
            var a = this.diagram;
            a && (a.dt.contains(this) || a.undoManager.isUndoingRedoing || a.animationManager.isTicking && !a.animationManager.isAnimating) || (a = this.path, null !== a && (this.Mc = !1, this.o(), a.o()))
        }
    };
    t.Ui = function() {
        if (!this.Mc && !this.Ku) {
            var a = !0;
            try {
                this.Ku = !0, this.zh(), a = this.computePoints()
            } finally {
                this.Ku = !1, a ? this.lf() : this.xx()
            }
        }
    };
    S.prototype.computePoints = function() {
        var a = this.diagram;
        if (null === a) return !1;
        var b = this.fromNode,
            c = null;
        null === b ? (a.mi || (a.Xo = new V, a.Xo.desiredSize = fc, a.Xo.strokeWidth = 0, a.mi = new U, a.mi.add(a.Xo), a.mi.bc()), this.defaultFromPoint && (a.mi.position = a.mi.location = this.defaultFromPoint, a.mi.bc(), b = a.mi, c = a.Xo)) : c = this.fromPort;
        if (null !== c && !b.isVisible()) {
            var d = b.findVisibleNode();
            null !== d && d !== b ? (b = d, c = d.port) : b = d
        }
        this.Fw = b;
        if (null === b || !b.location.s()) return !1;
        for (; !(null === c || c.actualBounds.s() && c.rf());) c =
            c.panel;
        if (null === c) return !1;
        var e = this.toNode,
            f = null;
        null === e ? (a.ni || (a.Yo = new V, a.Yo.desiredSize = fc, a.Yo.strokeWidth = 0, a.ni = new U, a.ni.add(a.Yo), a.ni.bc()), this.defaultToPoint && (a.ni.position = a.ni.location = this.defaultToPoint, a.ni.bc(), e = a.ni, f = a.Yo)) : f = this.toPort;
        null === f || e.isVisible() || (a = e.findVisibleNode(), null !== a && a !== e ? (e = a, f = a.port) : e = a);
        this.Gw = e;
        if (null === e || !e.location.s()) return !1;
        for (; !(null === f || f.actualBounds.s() && f.rf());) f = f.panel;
        if (null === f) return !1;
        var g = this.pointsCount;
        d =
            this.computeSpot(!0, c);
        a = this.computeSpot(!1, f);
        var h = Ro(d),
            k = Ro(a),
            l = c === f && null !== c,
            m = this.isOrthogonal,
            n = this.curve === Qg;
        this.Ff = l && !m ? n = !0 : !1;
        var p = this.adjusting === Ng || l;
        if (!m && !l && h && k) {
            if (h = !1, !p && 3 <= g && (p = this.getLinkPoint(b, c, d, !0, !1, e, f), k = this.getLinkPoint(e, f, a, !1, !1, b, c), h = this.adjustPoints(0, p, g - 1, k)) && (p = this.getLinkPoint(b, c, d, !0, !1, e, f), k = this.getLinkPoint(e, f, a, !1, !1, b, c), this.adjustPoints(0, p, g - 1, k)), !h)
                if (this.Oj(), n) {
                    g = this.getLinkPoint(b, c, d, !0, !1, e, f);
                    p = this.getLinkPoint(e,
                        f, a, !1, !1, b, c);
                    h = p.x - g.x;
                    k = p.y - g.y;
                    l = this.computeCurviness();
                    n = m = 0;
                    var q = g.x + h / 3,
                        r = g.y + k / 3,
                        u = q,
                        v = r;
                    H.w(k, 0) ? v = 0 < h ? v - l : v + l : (m = -h / k, n = Math.sqrt(l * l / (m * m + 1)), 0 > l && (n = -n), u = (0 > k ? -1 : 1) * n + q, v = m * (u - q) + r);
                    q = g.x + 2 * h / 3;
                    r = g.y + 2 * k / 3;
                    var x = q,
                        y = r;
                    H.w(k, 0) ? y = 0 < h ? y - l : y + l : (x = (0 > k ? -1 : 1) * n + q, y = m * (x - q) + r);
                    this.Oj();
                    this.ye(g);
                    this.kf(u, v);
                    this.kf(x, y);
                    this.ye(p);
                    this.ld(0, this.getLinkPoint(b, c, d, !0, !1, e, f));
                    this.ld(3, this.getLinkPoint(e, f, a, !1, !1, b, c))
                } else d = this.getLinkPoint(b, c, d, !0, !1, e, f), a = this.getLinkPoint(e,
                    f, a, !1, !1, b, c), this.hasCurviness() ? (p = a.x - d.x, e = a.y - d.y, f = this.computeCurviness(), b = d.x + p / 2, c = d.y + e / 2, g = b, h = c, H.w(e, 0) ? h = 0 < p ? h - f : h + f : (p = -p / e, g = Math.sqrt(f * f / (p * p + 1)), 0 > f && (g = -g), g = (0 > e ? -1 : 1) * g + b, h = p * (g - b) + c), this.ye(d), this.kf(g, h)) : this.ye(d), this.ye(a)
        } else {
            n = this.isAvoiding;
            p && (m && n || l) && this.Oj();
            var z = l ? this.computeCurviness() : 0;
            n = this.getLinkPoint(b, c, d, !0, m, e, f);
            q = u = r = 0;
            if (m || !h || l) v = this.computeEndSegmentLength(b, c, d, !0), q = this.getLinkDirection(b, c, n, d, !0, m, e, f), l && (h || d.A(a) || !m && 1 === d.x +
                a.x && 1 === d.y + a.y) && (q -= m ? 90 : 30, 0 > z && (q -= 180)), 0 > q ? q += 360 : 360 <= q && (q -= 360), l && (v += Math.abs(z) * (m ? 1 : 2)), 0 === q ? r = v : 90 === q ? u = v : 180 === q ? r = -v : 270 === q ? u = -v : (r = v * Math.cos(q * Math.PI / 180), u = v * Math.sin(q * Math.PI / 180)), d.mc() && l && (v = c.ma(dd, G.alloc()), x = G.allocAt(v.x + 1E3 * r, v.y + 1E3 * u), this.getLinkPointFromPoint(b, c, v, x, !0, n), G.free(v), G.free(x));
            v = this.getLinkPoint(e, f, a, !1, m, b, c);
            var B = y = x = 0;
            if (m || !k || l) {
                var C = this.computeEndSegmentLength(e, f, a, !1);
                B = this.getLinkDirection(e, f, v, a, !1, m, b, c);
                l && (k || d.A(a) || !m &&
                    1 === d.x + a.x && 1 === d.y + a.y) && (B += m ? 0 : 30, 0 > z && (B += 180));
                0 > B ? B += 360 : 360 <= B && (B -= 360);
                l && (C += Math.abs(z) * (m ? 1 : 2));
                0 === B ? x = C : 90 === B ? y = C : 180 === B ? x = -C : 270 === B ? y = -C : (x = C * Math.cos(B * Math.PI / 180), y = C * Math.sin(B * Math.PI / 180));
                a.mc() && l && (a = f.ma(dd, G.alloc()), d = G.allocAt(a.x + 1E3 * x, a.y + 1E3 * y), this.getLinkPointFromPoint(e, f, a, d, !1, v), G.free(a), G.free(d))
            }
            a = n;
            if (m || !h || l) a = new G(n.x + r, n.y + u);
            d = v;
            if (m || !k || l) d = new G(v.x + x, v.y + y);
            !p && !m && h && 3 < g && this.adjustPoints(0, n, g - 2, d) ? this.ld(g - 1, v) : !p && !m && k && 3 < g && this.adjustPoints(1,
                a, g - 1, v) ? this.ld(0, n) : !p && (m ? 6 <= g : 4 < g) && this.adjustPoints(1, a, g - 2, d) ? (this.ld(0, n), this.ld(g - 1, v)) : (this.Oj(), this.ye(n), (m || !h || l) && this.ye(a), m && this.addOrthoPoints(a, q, d, B, b, e), (m || !k || l) && this.ye(d), this.ye(v))
        }
        return !0
    };

    function So(a, b) {
        Math.abs(b.x - a.x) > Math.abs(b.y - a.y) ? (b.x >= a.x ? b.x = a.x + 9E9 : b.x = a.x - 9E9, b.y = a.y) : (b.y >= a.y ? b.y = a.y + 9E9 : b.y = a.y - 9E9, b.x = a.x);
        return b
    }
    S.prototype.getLinkPointFromPoint = function(a, b, c, d, e, f) {
        void 0 === f && (f = new G);
        if (null === a || null === b) return f.assign(c), f;
        a.isVisible() || (e = a.findVisibleNode(), null !== e && e !== a && (b = e.port));
        a = null;
        e = b.panel;
        null === e || e.$d() || (e = e.panel);
        if (null === e) {
            e = d.x;
            d = d.y;
            var g = c.x;
            c = c.y
        } else {
            a = e.td;
            e = 1 / (a.m11 * a.m22 - a.m12 * a.m21);
            g = a.m22 * e;
            var h = -a.m12 * e,
                k = -a.m21 * e,
                l = a.m11 * e,
                m = e * (a.m21 * a.dy - a.m22 * a.dx),
                n = e * (a.m12 * a.dx - a.m11 * a.dy);
            e = d.x * g + d.y * k + m;
            d = d.x * h + d.y * l + n;
            g = c.x * g + c.y * k + m;
            c = c.x * h + c.y * l + n
        }
        b.Xj(e, d, g, c, f);
        null !==
            a && f.transform(a);
        return f
    };

    function To(a, b) {
        var c = b.No;
        null === c && (c = new Uo, c.port = b, c.node = b.part, b.No = c);
        return Vo(c, a)
    }
    S.prototype.getLinkPoint = function(a, b, c, d, e, f, g, h) {
        void 0 === h && (h = new G);
        if (c.hb() && !Ro(c)) return b.ma(c, h), h;
        if (c.qf()) {
            var k = To(this, b);
            if (null !== k) {
                h.assign(k.bq);
                if (e && this.routing === Wo) {
                    var l = To(this, g);
                    if (null !== l && k.Tl < l.Tl) {
                        k = G.alloc();
                        l = G.alloc();
                        var m = new N(b.ma(Tc, k), b.ma(hd, l)),
                            n = this.computeSpot(!d, g);
                        a = this.getLinkPoint(f, g, n, !d, e, a, b, l);
                        (c.pf(jd) || c.pf(pd)) && a.y >= m.y && a.y <= m.y + m.height ? h.y = a.y : (c.pf(id) || c.pf(qd)) && a.x >= m.x && a.x <= m.x + m.width && (h.x = a.x);
                        G.free(k);
                        G.free(l)
                    }
                }
                return h
            }
        }
        c =
            b.ma(.5 === c.x && .5 === c.y ? c : dd, G.alloc());
        this.pointsCount > (e ? 6 : 2) ? (g = d ? this.i(1) : this.i(this.pointsCount - 2), e && (g = So(c, g.copy()))) : (k = this.computeSpot(!d, g), f = G.alloc(), g = g.ma(.5 === k.x && .5 === k.y ? k : dd, f), e && (g = So(c, g)), G.free(f));
        this.getLinkPointFromPoint(a, b, c, g, d, h);
        G.free(c);
        return h
    };
    S.prototype.getLinkDirection = function(a, b, c, d, e, f, g, h) {
        a: if (d.hb()) var k = d.x > d.y ? d.x > 1 - d.y ? 0 : d.x < 1 - d.y ? 270 : 315 : d.x < d.y ? d.x > 1 - d.y ? 90 : d.x < 1 - d.y ? 180 : 135 : .5 > d.x ? 225 : .5 < d.x ? 45 : 0;
            else {
                if (d.qf() && (k = To(this, b), null !== k)) switch (k.Ac) {
                    case 1:
                        k = 270;
                        break a;
                    case 2:
                        k = 180;
                        break a;
                    default:
                    case 4:
                        k = 0;
                        break a;
                    case 8:
                        k = 90;
                        break a
                }
                k = b.ma(dd, G.alloc());
                this.pointsCount > (f ? 6 : 2) ? (h = e ? this.i(1) : this.i(this.pointsCount - 2), h = f ? So(k, h.copy()) : c) : (c = G.alloc(), h = h.ma(dd, c), G.free(c));
                c = Math.abs(h.x - k.x) > Math.abs(h.y - k.y) ? h.x >=
                    k.x ? 0 : 180 : h.y >= k.y ? 90 : 270;
                G.free(k);
                k = c
            }d.mc() && g.Wd(a) && (k += 180, 360 <= k && (k -= 360));
        if (Ro(d)) return k;a = b.Fi();
        if (0 === a) return k;45 <= a && 135 > a ? k += 90 : 135 <= a && 225 > a ? k += 180 : 225 <= a && 315 > a && (k += 270);360 <= k && (k -= 360);
        return k
    };
    S.prototype.computeEndSegmentLength = function(a, b, c, d) {
        if (null !== b && c.qf() && (a = To(this, b), null !== a)) return a.Ou;
        a = d ? this.fromEndSegmentLength : this.toEndSegmentLength;
        null !== b && isNaN(a) && (a = d ? b.fromEndSegmentLength : b.toEndSegmentLength);
        isNaN(a) && (a = 10);
        return a
    };
    S.prototype.computeSpot = function(a, b) {
        void 0 === b && (b = null);
        a ? (a = b ? b : this.fromPort, null === a ? a = dd : (b = this.fromSpot, b.Lb() && (b = a.fromSpot), a = b === Ed ? Sc : b)) : (a = b ? b : this.toPort, null === a ? a = dd : (b = this.toSpot, b.Lb() && (b = a.toSpot), a = b === Ed ? Sc : b));
        return a
    };

    function Ro(a) {
        return a === Sc || .5 === a.x && .5 === a.y
    }
    S.prototype.computeOtherPoint = function(a, b) {
        a = b.ma(dd);
        b = b.No;
        b = null !== b ? Vo(b, this) : null;
        null !== b && (a = b.bq);
        return a
    };
    S.prototype.computeShortLength = function(a) {
        if (a) {
            a = this.fromShortLength;
            if (isNaN(a)) {
                var b = this.fromPort;
                null !== b && (a = b.fromShortLength)
            }
            return isNaN(a) ? 0 : a
        }
        a = this.toShortLength;
        isNaN(a) && (b = this.toPort, null !== b && (a = b.toShortLength));
        return isNaN(a) ? 0 : a
    };
    S.prototype.lg = function(a, b, c, d, e, f) {
        if (!1 === this.pickable) return !1;
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        var g = f;
        void 0 === f && (g = Qc.alloc(), g.reset());
        g.multiply(this.transform);
        if (this.ph(a, g)) return Rm(this, b, c, e), void 0 === f && Qc.free(g), !0;
        if (this.Kc(a, g)) {
            var h = !1;
            if (!this.isAtomic)
                for (var k = this.W.j, l = k.length; l--;) {
                    var m = k[l];
                    if (m.visible || m === this.locationObject) {
                        var n = m.actualBounds,
                            p = this.naturalBounds;
                        if (!(n.x > p.width || n.y > p.height || 0 > n.x + n.width || 0 > n.y + n.height)) {
                            n = Qc.alloc();
                            n.set(g);
                            if (m instanceof W) h = m.lg(a, b, c, d, e, n);
                            else if (this.path === m) {
                                if (m instanceof V) {
                                    h = m;
                                    p = a;
                                    var q = d;
                                    if (!1 === h.pickable) h = !1;
                                    else if (n.multiply(h.transform), q) b: {
                                        var r = p,
                                            u = n;
                                        if (h.ph(r, u)) h = !0;
                                        else {
                                            if (void 0 === u && (u = h.transform, r.mf(h.actualBounds))) {
                                                h = !0;
                                                break b
                                            }
                                            p = r.left;
                                            q = r.right;
                                            var v = r.top;
                                            r = r.bottom;
                                            var x = G.alloc(),
                                                y = G.alloc(),
                                                z = G.alloc(),
                                                B = Qc.alloc();
                                            B.set(u);
                                            B.hv(h.transform);
                                            B.Zs();
                                            y.x = q;
                                            y.y = v;
                                            y.transform(B);
                                            x.x = p;
                                            x.y = v;
                                            x.transform(B);
                                            u = !1;
                                            ln(h, x, y, z) ? u = !0 : (x.x = q, x.y = r, x.transform(B), ln(h, x, y, z) ?
                                                u = !0 : (y.x = p, y.y = r, y.transform(B), ln(h, x, y, z) ? u = !0 : (x.x = p, x.y = v, x.transform(B), ln(h, x, y, z) && (u = !0))));
                                            Qc.free(B);
                                            G.free(x);
                                            G.free(y);
                                            G.free(z);
                                            h = u
                                        }
                                    }
                                    else h = h.ph(p, n)
                                }
                            } else h = Wk(m, a, d, n);
                            h && (null !== b && (m = b(m)), m && (null === c || c(m)) && e.add(m));
                            Qc.free(n)
                        }
                    }
                }
            void 0 === f && Qc.free(g);
            return h || null !== this.background || null !== this.areaBackground
        }
        void 0 === f && Qc.free(g);
        return !1
    };
    S.prototype.computeCurve = function() {
        if (null === this.Ff) {
            var a = this.fromPort,
                b = this.isOrthogonal;
            this.Ff = null !== a && a === this.toPort && !b
        }
        return this.Ff ? Qg : this.curve
    };
    S.prototype.computeCorner = function() {
        if (this.curve === Qg) return 0;
        var a = this.corner;
        if (isNaN(a) || 0 > a) a = 10;
        return a
    };
    S.prototype.findMidLabel = function() {
        for (var a = this.path, b = this.W.j, c = b.length, d = 0; d < c; d++) {
            var e = b[d];
            if (e !== a && !e.isPanelMain && (-Infinity === e.segmentIndex || isNaN(e.segmentIndex))) return e
        }
        for (a = this.labelNodes; a.next();)
            if (b = a.value, -Infinity === b.segmentIndex || isNaN(b.segmentIndex)) return b;
        return null
    };
    S.prototype.computeSpacing = function() {
        if (!this.isVisible()) return 0;
        var a = Math.max(14, this.computeThickness());
        var b = this.fromPort,
            c = this.toPort;
        if (null !== b && null !== c) {
            var d = this.findMidLabel();
            if (null !== d) {
                var e = d.naturalBounds,
                    f = d.margin,
                    g = isNaN(e.width) ? 30 : e.width * d.scale + f.left + f.right;
                e = isNaN(e.height) ? 14 : e.height * d.scale + f.top + f.bottom;
                d = d.segmentOrientation;
                d === nn || d === Lo || d === Ko ? a = Math.max(a, e) : d === Am || d === Bm || d === ym || d === zm ? a = Math.max(a, g) : (b = b.ma(dd).Va(c.ma(dd)) / 180 * Math.PI, a = Math.max(a,
                    Math.abs(Math.sin(b) * g) + Math.abs(Math.cos(b) * e) + 1));
                this.curve === Qg && (a *= 1.333)
            }
        }
        return a
    };
    S.prototype.arrangeBundledLinks = function(a, b) {
        if (b)
            for (b = 0; b < a.length; b++) {
                var c = a[b];
                c.adjusting === Ng && c.Qa()
            }
    };
    S.prototype.computeCurviness = function() {
        var a = this.curviness;
        if (isNaN(a)) {
            a = 16;
            var b = this.wf;
            if (null !== b) {
                for (var c = Ka(), d = 0, e = b.links, f = 0; f < e.length; f++) {
                    var g = e[f].computeSpacing();
                    c.push(g);
                    d += g
                }
                d = -d / 2;
                for (f = 0; f < e.length; f++) {
                    if (e[f] === this) {
                        a = d + c[f] / 2;
                        break
                    }
                    d += c[f]
                }
                b.gt === this.fromNode && (a = -a);
                Oa(c)
            }
        }
        return a
    };
    S.prototype.computeThickness = function() {
        if (!this.isVisible()) return 0;
        var a = this.path;
        return null !== a ? Math.max(a.strokeWidth, 1) : 1
    };
    S.prototype.hasCurviness = function() {
        return !isNaN(this.curviness) || null !== this.wf
    };
    S.prototype.adjustPoints = function(a, b, c, d) {
        var e = this.adjusting;
        if (this.isOrthogonal) {
            if (e === Io) return !1;
            e === Jo && (e = Ho)
        }
        switch (e) {
            case Io:
                var f = this.i(a),
                    g = this.i(c);
                if (!f.Pa(b) || !g.Pa(d)) {
                    e = f.x;
                    f = f.y;
                    var h = g.x - e,
                        k = g.y - f,
                        l = Math.sqrt(h * h + k * k);
                    if (!H.ba(l, 0)) {
                        if (H.ba(h, 0)) var m = 0 > k ? -Math.PI / 2 : Math.PI / 2;
                        else m = Math.atan(k / Math.abs(h)), 0 > h && (m = Math.PI - m);
                        g = b.x;
                        var n = b.y;
                        h = d.x - g;
                        var p = d.y - n;
                        k = Math.sqrt(h * h + p * p);
                        H.ba(h, 0) ? p = 0 > p ? -Math.PI / 2 : Math.PI / 2 : (p = Math.atan(p / Math.abs(h)), 0 > h && (p = Math.PI - p));
                        l = k / l;
                        m =
                            p - m;
                        this.ld(a, b);
                        for (a += 1; a < c; a++) b = this.i(a), h = b.x - e, k = b.y - f, b = Math.sqrt(h * h + k * k), H.ba(b, 0) || (H.ba(h, 0) ? k = 0 > k ? -Math.PI / 2 : Math.PI / 2 : (k = Math.atan(k / Math.abs(h)), 0 > h && (k = Math.PI - k)), h = k + m, b *= l, this.M(a, g + b * Math.cos(h), n + b * Math.sin(h)));
                        this.ld(c, d)
                    }
                }
                return !0;
            case Jo:
                f = this.i(a);
                n = this.i(c);
                if (!f.Pa(b) || !n.Pa(d)) {
                    e = f.x;
                    f = f.y;
                    g = n.x;
                    n = n.y;
                    l = (g - e) * (g - e) + (n - f) * (n - f);
                    h = b.x;
                    m = b.y;
                    k = d.x;
                    p = d.y;
                    var q = 1;
                    if (0 !== k - h) {
                        var r = (p - m) / (k - h);
                        q = Math.sqrt(1 + 1 / (r * r))
                    } else r = 9E9;
                    this.ld(a, b);
                    for (a += 1; a < c; a++) {
                        b = this.i(a);
                        var u = b.x,
                            v = b.y,
                            x = .5;
                        0 !== l && (x = ((e - u) * (e - g) + (f - v) * (f - n)) / l);
                        var y = e + x * (g - e),
                            z = f + x * (n - f);
                        b = Math.sqrt((u - y) * (u - y) + (v - z) * (v - z));
                        v < r * (u - y) + z && (b = -b);
                        0 < r && (b = -b);
                        u = h + x * (k - h);
                        x = m + x * (p - m);
                        0 !== r ? (b = u + b / q, this.M(a, b, x - (b - u) / r)) : this.M(a, u, x + b)
                    }
                    this.ld(c, d)
                }
                return !0;
            case Ho:
                a: {
                    if (this.isOrthogonal && (e = this.i(a), f = this.i(a + 1), g = this.i(a + 2), h = f.x, m = f.y, n = h, l = m, H.w(e.y, f.y) ? H.w(f.x, g.x) ? m = b.y : H.w(f.y, g.y) && (h = b.x) : H.w(e.x, f.x) && (H.w(f.y, g.y) ? h = b.x : H.w(f.x, g.x) && (m = b.y)), this.M(a + 1, h, m), e = this.i(c), f = this.i(c -
                            1), g = this.i(c - 2), h = f.x, m = f.y, k = h, p = m, H.w(e.y, f.y) ? H.w(f.x, g.x) ? m = d.y : H.w(f.y, g.y) && (h = d.x) : H.w(e.x, f.x) && (H.w(f.y, g.y) ? h = d.x : H.w(f.x, g.x) && (m = d.y)), this.M(c - 1, h, m), Jj(this))) {
                        this.M(a + 1, n, l);
                        this.M(c - 1, k, p);
                        c = !1;
                        break a
                    }
                    this.ld(a, b);this.ld(c, d);c = !0
                }
                return c;
            default:
                return !1
        }
    };
    S.prototype.addOrthoPoints = function(a, b, c, d, e, f) {
        b = -45 <= b && 45 > b ? 0 : 45 <= b && 135 > b ? 90 : 135 <= b && 225 > b ? 180 : 270;
        d = -45 <= d && 45 > d ? 0 : 45 <= d && 135 > d ? 90 : 135 <= d && 225 > d ? 180 : 270;
        var g = e.actualBounds.copy(),
            h = f.actualBounds.copy();
        if (g.s() && h.s()) {
            g.Vc(8, 8);
            h.Vc(8, 8);
            g.Ie(a);
            h.Ie(c);
            if (0 === b)
                if (c.x > a.x || 270 === d && c.y < a.y && h.right > a.x || 90 === d && c.y > a.y && h.right > a.x) {
                    var k = new G(c.x, a.y);
                    var l = new G(c.x, (a.y + c.y) / 2);
                    180 === d ? (k.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1), l.x = k.x, l.y = c.y) : 270 === d && c.y < a.y || 90 === d &&
                        c.y > a.y ? (k.x = a.x < h.left ? this.computeMidOrthoPosition(a.x, a.y, h.left, c.y, !1) : a.x < h.right && (270 === d && a.y < h.top || 90 === d && a.y > h.bottom) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1) : h.right, l.x = k.x, l.y = c.y) : 0 === d && a.x < h.left && a.y > h.top && a.y < h.bottom && (k.x = a.x, k.y = a.y < c.y ? Math.min(c.y, h.top) : Math.max(c.y, h.bottom), l.y = k.y)
                } else {
                    k = new G(a.x, c.y);
                    l = new G((a.x + c.x) / 2, c.y);
                    if (180 === d || 90 === d && c.y < g.top || 270 === d && c.y > g.bottom) 180 === d && (h.ea(a) || g.ea(c)) ? k.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0) :
                        c.y < a.y && (180 === d || 90 === d) ? k.y = this.computeMidOrthoPosition(a.x, g.top, c.x, Math.max(c.y, h.bottom), !0) : c.y > a.y && (180 === d || 270 === d) && (k.y = this.computeMidOrthoPosition(a.x, g.bottom, c.x, Math.min(c.y, h.top), !0)), l.x = c.x, l.y = k.y;
                    if (k.y > g.top && k.y < g.bottom)
                        if (c.x >= g.left && c.x <= a.x || a.x <= h.right && a.x >= c.x) {
                            if (90 === d || 270 === d) k = new G(Math.max((a.x + c.x) / 2, a.x), a.y), l = new G(k.x, c.y)
                        } else k.y = 270 === d || (0 === d || 180 === d) && c.y < a.y ? Math.min(c.y, 0 === d ? g.top : Math.min(g.top, h.top)) : Math.max(c.y, 0 === d ? g.bottom : Math.max(g.bottom,
                            h.bottom)), l.x = c.x, l.y = k.y
                }
            else if (180 === b)
                if (c.x < a.x || 270 === d && c.y < a.y && h.left < a.x || 90 === d && c.y > a.y && h.left < a.x) k = new G(c.x, a.y), l = new G(c.x, (a.y + c.y) / 2), 0 === d ? (k.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1), l.x = k.x, l.y = c.y) : 270 === d && c.y < a.y || 90 === d && c.y > a.y ? (k.x = a.x > h.right ? this.computeMidOrthoPosition(a.x, a.y, h.right, c.y, !1) : a.x > h.left && (270 === d && a.y < h.top || 90 === d && a.y > h.bottom) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1) : h.left, l.x = k.x, l.y = c.y) : 180 === d && a.x > h.right && a.y > h.top && a.y <
                    h.bottom && (k.x = a.x, k.y = a.y < c.y ? Math.min(c.y, h.top) : Math.max(c.y, h.bottom), l.y = k.y);
                else {
                    k = new G(a.x, c.y);
                    l = new G((a.x + c.x) / 2, c.y);
                    if (0 === d || 90 === d && c.y < g.top || 270 === d && c.y > g.bottom) 0 === d && (h.ea(a) || g.ea(c)) ? k.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0) : c.y < a.y && (0 === d || 90 === d) ? k.y = this.computeMidOrthoPosition(a.x, g.top, c.x, Math.max(c.y, h.bottom), !0) : c.y > a.y && (0 === d || 270 === d) && (k.y = this.computeMidOrthoPosition(a.x, g.bottom, c.x, Math.min(c.y, h.top), !0)), l.x = c.x, l.y = k.y;
                    if (k.y > g.top && k.y < g.bottom)
                        if (c.x <=
                            g.right && c.x >= a.x || a.x >= h.left && a.x <= c.x) {
                            if (90 === d || 270 === d) k = new G(Math.min((a.x + c.x) / 2, a.x), a.y), l = new G(k.x, c.y)
                        } else k.y = 270 === d || (0 === d || 180 === d) && c.y < a.y ? Math.min(c.y, 180 === d ? g.top : Math.min(g.top, h.top)) : Math.max(c.y, 180 === d ? g.bottom : Math.max(g.bottom, h.bottom)), l.x = c.x, l.y = k.y
                }
            else if (90 === b)
                if (c.y > a.y || 180 === d && c.x < a.x && h.bottom > a.y || 0 === d && c.x > a.x && h.bottom > a.y) k = new G(a.x, c.y), l = new G((a.x + c.x) / 2, c.y), 270 === d ? (k.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0), l.x = c.x, l.y = k.y) : 180 ===
                    d && c.x < a.x || 0 === d && c.x > a.x ? (k.y = a.y < h.top ? this.computeMidOrthoPosition(a.x, a.y, c.x, h.top, !0) : a.y < h.bottom && (180 === d && a.x < h.left || 0 === d && a.x > h.right) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0) : h.bottom, l.x = c.x, l.y = k.y) : 90 === d && a.y < h.top && a.x > h.left && a.x < h.right && (k.x = a.x < c.x ? Math.min(c.x, h.left) : Math.max(c.x, h.right), k.y = a.y, l.x = k.x);
                else {
                    k = new G(c.x, a.y);
                    l = new G(c.x, (a.y + c.y) / 2);
                    if (270 === d || 0 === d && c.x < g.left || 180 === d && c.x > g.right) 270 === d && (h.ea(a) || g.ea(c)) ? k.x = this.computeMidOrthoPosition(a.x,
                        a.y, c.x, c.y, !1) : c.x < a.x && (270 === d || 0 === d) ? k.x = this.computeMidOrthoPosition(g.left, a.y, Math.max(c.x, h.right), c.y, !1) : c.x > a.x && (270 === d || 180 === d) && (k.x = this.computeMidOrthoPosition(g.right, a.y, Math.min(c.x, h.left), c.y, !1)), l.x = k.x, l.y = c.y;
                    if (k.x > g.left && k.x < g.right)
                        if (c.y >= g.top && c.y <= a.y || a.y <= h.bottom && a.y >= c.y) {
                            if (0 === d || 180 === d) k = new G(a.x, Math.max((a.y + c.y) / 2, a.y)), l = new G(c.x, k.y)
                        } else k.x = 180 === d || (90 === d || 270 === d) && c.x < a.x ? Math.min(c.x, 90 === d ? g.left : Math.min(g.left, h.left)) : Math.max(c.x, 90 ===
                            d ? g.right : Math.max(g.right, h.right)), l.x = k.x, l.y = c.y
                }
            else if (c.y < a.y || 180 === d && c.x < a.x && h.top < a.y || 0 === d && c.x > a.x && h.top < a.y) k = new G(a.x, c.y), l = new G((a.x + c.x) / 2, c.y), 90 === d ? (k.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0), l.x = c.x, l.y = k.y) : 180 === d && c.x < a.x || 0 === d && c.x >= a.x ? (k.y = a.y > h.bottom ? this.computeMidOrthoPosition(a.x, a.y, c.x, h.bottom, !0) : a.y > h.top && (180 === d && a.x < h.left || 0 === d && a.x > h.right) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0) : h.top, l.x = c.x, l.y = k.y) : 270 === d && a.y > h.bottom && a.x >
                h.left && a.x < h.right && (k.x = a.x < c.x ? Math.min(c.x, h.left) : Math.max(c.x, h.right), k.y = a.y, l.x = k.x);
            else {
                k = new G(c.x, a.y);
                l = new G(c.x, (a.y + c.y) / 2);
                if (90 === d || 0 === d && c.x < g.left || 180 === d && c.x > g.right) 90 === d && (h.ea(a) || g.ea(c)) ? k.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1) : c.x < a.x && (90 === d || 0 === d) ? k.x = this.computeMidOrthoPosition(g.left, a.y, Math.max(c.x, h.right), c.y, !1) : c.x > a.x && (90 === d || 180 === d) && (k.x = this.computeMidOrthoPosition(g.right, a.y, Math.min(c.x, h.left), c.y, !1)), l.x = k.x, l.y = c.y;
                if (k.x > g.left &&
                    k.x < g.right)
                    if (c.y <= g.bottom && c.y >= a.y || a.y >= h.top && a.y <= c.y) {
                        if (0 === d || 180 === d) k = new G(a.x, Math.min((a.y + c.y) / 2, a.y)), l = new G(c.x, k.y)
                    } else k.x = 180 === d || (90 === d || 270 === d) && c.x < a.x ? Math.min(c.x, 270 === d ? g.left : Math.min(g.left, h.left)) : Math.max(c.x, 270 === d ? g.right : Math.max(g.right, h.right)), l.x = k.x, l.y = c.y
            }
            var m = k,
                n = l,
                p = c;
            if (this.isAvoiding) {
                var q = this.diagram;
                if (null === q || !fk(q) || g.ea(p) && !f.Wd(e) || h.ea(a) && !e.Wd(f) || e === f || this.layer.isTemporary) b = !1;
                else {
                    var r = gk(q, !0, this.containingGroup, null);
                    if (r.$j(Math.min(a.x, m.x), Math.min(a.y, m.y), Math.abs(a.x - m.x), Math.abs(a.y - m.y)) && r.$j(Math.min(m.x, n.x), Math.min(m.y, n.y), Math.abs(m.x - n.x), Math.abs(m.y - n.y)) && r.$j(Math.min(n.x, p.x), Math.min(n.y, p.y), Math.abs(n.x - p.x), Math.abs(n.y - p.y))) b = !1;
                    else {
                        e = a;
                        f = p;
                        var u = c = null;
                        if (q.isVirtualized) {
                            q = r.bounds.copy();
                            q.Vc(-r.Rl, -r.Ql);
                            var v = G.alloc();
                            Xo(r, a.x, a.y) || (H.Uc(q.x, q.y, q.x + q.width, q.y + q.height, a.x, a.y, m.x, m.y, v) ? (c = a = v.copy(), b = v.Va(m)) : H.Uc(q.x, q.y, q.x + q.width, q.y + q.height, m.x, m.y, n.x, n.y, v) ? (c = a =
                                v.copy(), b = v.Va(n)) : H.Uc(q.x, q.y, q.x + q.width, q.y + q.height, n.x, n.y, p.x, p.y, v) && (c = a = v.copy(), b = v.Va(p)));
                            Xo(r, p.x, p.y) || (H.Uc(q.x, q.y, q.x + q.width, q.y + q.height, p.x, p.y, n.x, n.y, v) ? (u = p = v.copy(), d = n.Va(v)) : H.Uc(q.x, q.y, q.x + q.width, q.y + q.height, n.x, n.y, m.x, m.y, v) ? (u = p = v.copy(), d = m.Va(v)) : H.Uc(q.x, q.y, q.x + q.width, q.y + q.height, m.x, m.y, a.x, a.y, v) && (u = p = v.copy(), d = a.Va(v)));
                            G.free(v)
                        }
                        g = g.copy().Wc(h);
                        h = r.Lz;
                        g.Vc(r.Rl * h, r.Ql * h);
                        Yo(r, a, b, p, d, g);
                        h = Zo(r, p.x, p.y);
                        !r.abort && h >= $o && (jk(r), h = r.pz, g.Vc(r.Rl * h, r.Ql *
                            h), Yo(r, a, b, p, d, g), h = Zo(r, p.x, p.y));
                        !r.abort && h >= $o && r.Rz && (jk(r), Yo(r, a, b, p, d, r.bounds), h = Zo(r, p.x, p.y));
                        if (!r.abort && h < $o && Zo(r, p.x, p.y) !== ap) {
                            bp(this, r, p.x, p.y, d, !0);
                            g = this.i(2);
                            if (4 > this.pointsCount) 0 === b || 180 === b ? (g.x = a.x, g.y = p.y) : (g.x = p.x, g.y = a.y), this.M(2, g.x, g.y), this.m(3, g.x, g.y);
                            else if (p = this.i(3), 0 === b || 180 === b) H.w(g.x, p.x) ? (g = 0 === b ? Math.max(g.x, a.x) : Math.min(g.x, a.x), this.M(2, g, a.y), this.M(3, g, p.y)) : H.w(g.y, p.y) ? (Math.abs(a.y - g.y) <= r.Ql / 2 && (this.M(2, g.x, a.y), this.M(3, p.x, a.y)), this.m(2,
                                g.x, a.y)) : this.M(2, a.x, g.y);
                            else if (90 === b || 270 === b) H.w(g.y, p.y) ? (g = 90 === b ? Math.max(g.y, a.y) : Math.min(g.y, a.y), this.M(2, a.x, g), this.M(3, p.x, g)) : H.w(g.x, p.x) ? (Math.abs(a.x - g.x) <= r.Rl / 2 && (this.M(2, a.x, g.y), this.M(3, a.x, p.y)), this.m(2, a.x, g.y)) : this.M(2, g.x, a.y);
                            null !== c && (a = this.i(1), p = this.i(2), a.x !== p.x && a.y !== p.y ? 0 === b || 180 === b ? this.m(2, a.x, p.y) : this.m(2, p.x, a.y) : 0 === b || 180 === b ? this.m(2, e.x, c.y) : this.m(2, c.x, e.y));
                            null !== u && (0 === d || 180 === d ? this.kf(f.x, u.y) : this.kf(u.x, f.y));
                            b = !0
                        } else b = !1
                    }
                }
            } else b = !1;
            b || (this.ye(k), this.ye(l))
        }
    };
    S.prototype.computeMidOrthoPosition = function(a, b, c, d, e) {
        var f = 0;
        this.hasCurviness() && (f = this.computeCurviness());
        return e ? (b + d) / 2 + f : (a + c) / 2 + f
    };

    function Jj(a) {
        if (null === a.diagram || !a.isAvoiding || !fk(a.diagram)) return !1;
        var b = a.points.j,
            c = b.length;
        if (4 > c) return !1;
        a = gk(a.diagram, !0, a.containingGroup, null);
        for (var d = 1; d < c - 2; d++) {
            var e = b[d],
                f = b[d + 1];
            if (!a.$j(Math.min(e.x, f.x), Math.min(e.y, f.y), Math.abs(e.x - f.x), Math.abs(e.y - f.y))) return !0
        }
        return !1
    }

    function bp(a, b, c, d, e, f) {
        var g = b.Rl,
            h = b.Ql,
            k = Zo(b, c, d),
            l = c,
            m = d;
        for (0 === e ? l += g : 90 === e ? m += h : 180 === e ? l -= g : m -= h; k > cp && Zo(b, l, m) === k - 1;) c = l, d = m, 0 === e ? l += g : 90 === e ? m += h : 180 === e ? l -= g : m -= h, --k;
        if (f) {
            if (k > cp)
                if (180 === e || 0 === e) c = Math.floor(c / g) * g + g / 2;
                else if (90 === e || 270 === e) d = Math.floor(d / h) * h + h / 2
        } else c = Math.floor(c / g) * g + g / 2, d = Math.floor(d / h) * h + h / 2;
        k > cp && (f = e, l = c, m = d, 0 === e ? (f = 90, m += h) : 90 === e ? (f = 180, l -= g) : 180 === e ? (f = 270, m -= h) : 270 === e && (f = 0, l += g), Zo(b, l, m) === k - 1 ? bp(a, b, l, m, f, !1) : (l = c, m = d, 0 === e ? (f = 270, m -= h) : 90 ===
            e ? (f = 0, l += g) : 180 === e ? (f = 90, m += h) : 270 === e && (f = 180, l -= g), Zo(b, l, m) === k - 1 && bp(a, b, l, m, f, !1)));
        a.kf(c, d)
    }
    S.prototype.By = function(a) {
        var b = a.x;
        a = a.y;
        for (var c = this.i(0), d = this.i(1), e = Rb(b, a, c.x, c.y, d.x, d.y), f = 0, g = 1; g < this.pointsCount - 1; g++) {
            c = this.i(g + 1);
            var h = Rb(b, a, d.x, d.y, c.x, c.y);
            d = c;
            h < e && (f = g, e = h)
        }
        return f
    };
    S.prototype.cc = function() {
        this.xr = !0
    };
    S.prototype.bk = function(a) {
        if (!a) {
            if (!1 === this.Mc) return;
            a = this.Ab();
            if (!this.xr && (null === a || null !== a.geometry)) return
        }
        this.qa = this.makeGeometry();
        a = this.path;
        if (null !== a) {
            a.qa = this.qa;
            for (var b = this.W.j, c = b.length, d = 0; d < c; d++) {
                var e = b[d];
                e !== a && e.isPanelMain && e instanceof V && (e.qa = this.qa)
            }
        }
    };
    S.prototype.makeGeometry = function() {
        var a = this.qa,
            b = this.pointsCount;
        if (2 > b) return a.type = ge, a;
        var c = !1,
            d = this.diagram;
        null !== d && Mo(this) && d.Th.contains(this) && (0 !== this.pl.width || 0 !== this.pl.height) && (c = !0);
        var e = this.i(0).copy(),
            f = e.copy();
        d = this.yb.j;
        var g = this.computeCurve();
        if (g === Qg && 3 <= b && !H.ba(this.smoothness, 0))
            if (3 === b) {
                var h = this.i(1);
                d = Math.min(e.x, h.x);
                var k = Math.min(e.y, h.y);
                h = this.i(2);
                d = Math.min(d, h.x);
                k = Math.min(k, h.y)
            } else {
                if (this.isOrthogonal)
                    for (k = 0; k < b; k++) h = d[k], f.x = Math.min(h.x,
                        f.x), f.y = Math.min(h.y, f.y);
                else
                    for (d = 3; d < b; d += 3) d + 3 >= b && (d = b - 1), k = this.i(d), f.x = Math.min(k.x, f.x), f.y = Math.min(k.y, f.y);
                d = f.x;
                k = f.y
            }
        else {
            for (k = 0; k < b; k++) h = d[k], f.x = Math.min(h.x, f.x), f.y = Math.min(h.y, f.y);
            d = f.x;
            k = f.y
        }
        d -= this.vu.x;
        k -= this.vu.y;
        e.x -= d;
        e.y -= k;
        if (2 !== b || Mo(this)) {
            a.type = ae;
            h = ne(a);
            0 !== this.computeShortLength(!0) && (e = dp(this, e, !0, f));
            oe(h, e.x, e.y, !1);
            if (g === Qg && 3 <= b && !H.ba(this.smoothness, 0))
                if (3 === b) c = this.i(1), b = c.x - d, c = c.y - k, e = this.i(2).copy(), e.x -= d, e.y -= k, 0 !== this.computeShortLength(!1) &&
                    (e = dp(this, e, !1, f)), se(h, b, c, b, c, e.x, e.y);
                else if (this.isOrthogonal) {
                f = new G(d, k);
                e = this.i(1).copy();
                g = new G(d, k);
                b = new G(d, k);
                c = this.i(0);
                for (var l, m = this.smoothness / 3, n = 1; n < this.pointsCount - 1; n++) {
                    l = this.i(n);
                    var p = c,
                        q = l,
                        r = this.i(ep(this, l, n, !1));
                    if (!H.ba(p.x, q.x) || !H.ba(q.x, r.x))
                        if (!H.ba(p.y, q.y) || !H.ba(q.y, r.y)) {
                            var u = m;
                            isNaN(u) && (u = this.smoothness / 3);
                            var v = p.x;
                            p = p.y;
                            var x = q.x;
                            q = q.y;
                            var y = r.x;
                            r = r.y;
                            var z = u * fp(v, p, x, q);
                            u *= fp(x, q, y, r);
                            H.ba(p, q) && H.ba(x, y) && (x > v ? r > q ? (g.x = x - z, g.y = q - z, b.x = x + u, b.y =
                                q + u) : (g.x = x - z, g.y = q + z, b.x = x + u, b.y = q - u) : r > q ? (g.x = x + z, g.y = q - z, b.x = x - u, b.y = q + u) : (g.x = x + z, g.y = q + z, b.x = x - u, b.y = q - u));
                            H.ba(v, x) && H.ba(q, r) && (q > p ? (y > x ? (g.x = x - z, g.y = q - z, b.x = x + u) : (g.x = x + z, g.y = q - z, b.x = x - u), b.y = q + u) : (y > x ? (g.x = x - z, g.y = q + z, b.x = x + u) : (g.x = x + z, g.y = q + z, b.x = x - u), b.y = q - u));
                            if (H.ba(v, x) && H.ba(x, y) || H.ba(p, q) && H.ba(q, r)) v = .5 * (v + y), p = .5 * (p + r), g.x = v, g.y = p, b.x = v, b.y = p;
                            1 === n ? (e.x = .5 * (c.x + l.x), e.y = .5 * (c.y + l.y)) : 2 === n && H.ba(c.x, this.i(0).x) && H.ba(c.y, this.i(0).y) && (e.x = .5 * (c.x + l.x), e.y = .5 * (c.y + l.y));
                            se(h, e.x -
                                d, e.y - k, g.x - d, g.y - k, l.x - d, l.y - k);
                            f.set(g);
                            e.set(b);
                            c = l
                        }
                }
                f = c.x;
                c = c.y;
                e = this.i(this.pointsCount - 1);
                0 !== this.computeShortLength(!1) && (e = dp(this, e.copy(), !1, ac));
                f = .5 * (f + e.x);
                c = .5 * (c + e.y);
                se(h, b.x - d, b.y - k, f - d, c - k, e.x - d, e.y - k)
            } else
                for (c = 3; c < b; c += 3) f = this.i(c - 2), c + 3 >= b && (c = b - 1), e = this.i(c - 1), g = this.i(c), c === b - 1 && 0 !== this.computeShortLength(!1) && (g = dp(this, g.copy(), !1, ac)), se(h, f.x - d, f.y - k, e.x - d, e.y - k, g.x - d, g.y - k);
            else {
                f = G.alloc();
                f.assign(this.i(0));
                g = 1;
                for (e = 0; g < b;) {
                    g = ep(this, f, g, 1 < g);
                    m = this.i(g);
                    if (g >=
                        b - 1) {
                        if (!f.A(m)) 0 !== this.computeShortLength(!1) && (m = dp(this, m.copy(), !1, ac)), gp(this, h, -d, -k, f, m, c);
                        else if (0 === e)
                            for (g = 1; g < b;) m = this.i(g++), gp(this, h, -d, -k, f, m, c), f.assign(m);
                        break
                    }
                    e = ep(this, m, g + 1, g < b - 3);
                    g = -d;
                    l = -k;
                    n = this.i(e);
                    v = c;
                    H.w(f.y, m.y) && H.w(m.x, n.x) ? (p = this.computeCorner(), p = Math.min(p, Math.abs(m.x - f.x) / 2), p = u = Math.min(p, Math.abs(n.y - m.y) / 2), H.w(p, 0) ? (gp(this, h, g, l, f, m, v), f.assign(m)) : (x = m.x, q = m.y, y = x, r = q, m.x > f.x ? x = m.x - p : x = m.x + p, n.y > m.y ? r = m.y + u : r = m.y - u, gp(this, h, g, l, f, new G(x, q), v), te(h, m.x +
                        g, m.y + l, y + g, r + l), f.h(y, r))) : H.w(f.x, m.x) && H.w(m.y, n.y) ? (p = this.computeCorner(), p = Math.min(p, Math.abs(m.y - f.y) / 2), p = u = Math.min(p, Math.abs(n.x - m.x) / 2), H.w(u, 0) ? (gp(this, h, g, l, f, m, v), f.assign(m)) : (x = m.x, q = m.y, y = x, r = q, m.y > f.y ? q = m.y - p : q = m.y + p, n.x > m.x ? y = m.x + u : y = m.x - u, gp(this, h, g, l, f, new G(x, q), v), te(h, m.x + g, m.y + l, y + g, r + l), f.h(y, r))) : (gp(this, h, g, l, f, m, v), f.assign(m));
                    g = e
                }
                G.free(f)
            }
            we = h
        } else h = this.i(1).copy(), h.x -= d, h.y -= k, 0 !== this.computeShortLength(!0) && (e = dp(this, e, !0, f)), 0 !== this.computeShortLength(!1) &&
            (h = dp(this, h, !1, f)), a.type = ge, a.startX = e.x, a.startY = e.y, a.endX = h.x, a.endY = h.y;
        return a
    };

    function fp(a, b, c, d) {
        a = c - a;
        if (isNaN(a) || Infinity === a || -Infinity === a) return NaN;
        0 > a && (a = -a);
        b = d - b;
        if (isNaN(b) || Infinity === b || -Infinity === b) return NaN;
        0 > b && (b = -b);
        return H.ba(a, 0) ? b : H.ba(b, 0) ? a : Math.sqrt(a * a + b * b)
    }

    function dp(a, b, c, d) {
        var e = a.pointsCount;
        if (2 > e) return b;
        if (c) {
            var f = a.i(1);
            c = f.x - d.x;
            f = f.y - d.y;
            d = fp(b.x, b.y, c, f);
            if (0 === d) return b;
            e = 2 === e ? .5 * d : d;
            a = a.computeShortLength(!0);
            a > e && (a = e);
            e = a * (f - b.y) / d;
            b.x += a * (c - b.x) / d;
            b.y += e
        } else {
            f = a.i(e - 2);
            c = f.x - d.x;
            f = f.y - d.y;
            d = fp(b.x, b.y, c, f);
            if (0 === d) return b;
            e = 2 === e ? .5 * d : d;
            a = a.computeShortLength(!1);
            a > e && (a = e);
            e = a * (b.y - f) / d;
            b.x -= a * (b.x - c) / d;
            b.y -= e
        }
        return b
    }

    function ep(a, b, c, d) {
        for (var e = a.pointsCount, f = b; H.ba(b.x, f.x) && H.ba(b.y, f.y);) {
            if (c >= e) return e - 1;
            f = a.i(c++)
        }
        if (!H.ba(b.x, f.x) && !H.ba(b.y, f.y)) return c - 1;
        for (var g = f; H.ba(b.x, f.x) && H.ba(f.x, g.x) && (!d || (b.y >= f.y ? f.y >= g.y : f.y <= g.y)) || H.ba(b.y, f.y) && H.ba(f.y, g.y) && (!d || (b.x >= f.x ? f.x >= g.x : f.x <= g.x));) {
            if (c >= e) return e - 1;
            g = a.i(c++)
        }
        return c - 2
    }

    function gp(a, b, c, d, e, f, g) {
        if (!g && Mo(a)) {
            g = [];
            var h = 0;
            a.isVisible() && (h = hp(a, e, f, g));
            if (0 < h)
                if (H.w(e.y, f.y))
                    if (e.x < f.x)
                        for (var k = 0; k < h;) {
                            var l = Math.max(e.x, Math.min(g[k++] - 5, f.x - 10));
                            b.lineTo(l + c, f.y + d);
                            var m = l + c;
                            for (var n = Math.min(l + 10, f.x); k < h;)
                                if (l = g[k], l < n + 10) k++, n = Math.min(l + 5, f.x);
                                else break;
                            l = f.y - 10 + d;
                            n += c;
                            var p = f.y + d;
                            a.curve === Mg ? oe(b, n, p, !1) : se(b, m, l, n, l, n, p)
                        } else
                            for (--h; 0 <= h;) {
                                k = Math.min(e.x, Math.max(g[h--] + 5, f.x + 10));
                                b.lineTo(k + c, f.y + d);
                                m = k + c;
                                for (l = Math.max(k - 10, f.x); 0 <= h;)
                                    if (k = g[h], k >
                                        l - 10) h--, l = Math.max(k - 5, f.x);
                                    else break;
                                k = f.y - 10 + d;
                                l += c;
                                n = f.y + d;
                                a.curve === Mg ? oe(b, l, n, !1) : se(b, m, k, l, k, l, n)
                            } else if (H.w(e.x, f.x))
                                if (e.y < f.y)
                                    for (k = 0; k < h;) {
                                        l = Math.max(e.y, Math.min(g[k++] - 5, f.y - 10));
                                        b.lineTo(f.x + c, l + d);
                                        m = l + d;
                                        for (l = Math.min(l + 10, f.y); k < h;)
                                            if (n = g[k], n < l + 10) k++, l = Math.min(n + 5, f.y);
                                            else break;
                                        n = f.x - 10 + c;
                                        p = f.x + c;
                                        l += d;
                                        a.curve === Mg ? oe(b, p, l, !1) : se(b, n, m, n, l, p, l)
                                    } else
                                        for (--h; 0 <= h;) {
                                            k = Math.min(e.y, Math.max(g[h--] + 5, f.y + 10));
                                            b.lineTo(f.x + c, k + d);
                                            m = k + d;
                                            for (k = Math.max(k - 10, f.y); 0 <= h;)
                                                if (l = g[h],
                                                    l > k - 10) h--, k = Math.max(l - 5, f.y);
                                                else break;
                                            l = f.x - 10 + c;
                                            n = f.x + c;
                                            k += d;
                                            a.curve === Mg ? oe(b, n, k, !1) : se(b, l, m, l, k, n, k)
                                        }
        }
        b.lineTo(f.x + c, f.y + d)
    }

    function hp(a, b, c, d) {
        var e = a.diagram;
        if (null === e || b.A(c)) return 0;
        for (e = e.layers; e.next();) {
            var f = e.value;
            if (null !== f && f.visible) {
                f = f.Fa.j;
                for (var g = f.length, h = 0; h < g; h++) {
                    var k = f[h];
                    if (k instanceof S) {
                        if (k === a) return 0 < d.length && d.sort(function(a, b) {
                            return a - b
                        }), d.length;
                        if (k.isVisible() && Mo(k)) {
                            var l = k.routeBounds;
                            l.s() && a.routeBounds.Kc(l) && !a.usesSamePort(k) && (l = k.path, null !== l && l.rf() && ip(b, c, d, k))
                        }
                    }
                }
            }
        }
        0 < d.length && d.sort(function(a, b) {
            return a - b
        });
        return d.length
    }

    function ip(a, b, c, d) {
        for (var e = H.w(a.y, b.y), f = d.pointsCount, g = d.i(0), h = G.alloc(), k = 1; k < f; k++) {
            var l = d.i(k);
            if (k < f - 1) {
                var m = d.i(k + 1);
                if (g.y === l.y && l.y === m.y) {
                    if (l.x > g.x && m.x >= l.x || l.x < g.x && m.x <= l.x) continue
                } else if (g.x === l.x && l.x === m.x && (l.y > g.y && m.y >= l.y || l.y < g.y && m.y <= l.y)) continue
            }
            a: {
                m = a.x;
                var n = a.y,
                    p = b.x,
                    q = b.y,
                    r = g.x;g = g.y;
                var u = l.x,
                    v = l.y;
                if (!H.w(m, p)) {
                    if (H.w(n, q) && H.w(r, u) && Math.min(m, p) < r && Math.max(m, p) > r && Math.min(g, v) < n && Math.max(g, v) > n && !H.w(g, v)) {
                        h.x = r;
                        h.y = n;
                        m = !0;
                        break a
                    }
                } else if (!H.w(n, q) &&
                    H.w(g, v) && Math.min(n, q) < g && Math.max(n, q) > g && Math.min(r, u) < m && Math.max(r, u) > m && !H.w(r, u)) {
                    h.x = m;
                    h.y = g;
                    m = !0;
                    break a
                }
                h.x = 0;h.y = 0;m = !1
            }
            m && (e ? c.push(h.x) : c.push(h.y));
            g = l
        }
        G.free(h)
    }

    function Mo(a) {
        a = a.curve;
        return a === Lg || a === Mg
    }

    function Qo(a, b) {
        if (b || Mo(a)) b = a.diagram, null === b || b.Qi || b.Th.contains(a) || 0 === a.pl.width && 0 === a.pl.height || b.Th.add(a, a.pl)
    }
    S.prototype.Zp = function(a) {
        var b = this.layer;
        if (null !== b && b.visible && !b.isTemporary) {
            var c = b.diagram;
            if (null !== c && !c.animationManager.isAnimating) {
                var d = !1;
                for (c = c.layers; c.next();) {
                    var e = c.value;
                    if (e.visible)
                        if (e === b) {
                            d = !0;
                            var f = !1;
                            e = e.Fa.j;
                            for (var g = e.length, h = 0; h < g; h++) {
                                var k = e[h];
                                k instanceof S && (k === this ? f = !0 : f && jp(this, k, a))
                            }
                        } else if (d)
                        for (f = e.Fa.j, e = f.length, g = 0; g < e; g++) h = f[g], h instanceof S && jp(this, h, a)
                }
            }
        }
    };

    function jp(a, b, c) {
        if (null !== b && null !== b.qa && Mo(b)) {
            var d = b.routeBounds;
            d.s() && (a.routeBounds.Kc(d) || c.Kc(d)) && (a.usesSamePort(b) || b.cc())
        }
    }
    S.prototype.usesSamePort = function(a) {
        var b = this.pointsCount,
            c = a.pointsCount;
        if (0 < b && 0 < c) {
            var d = this.i(0),
                e = a.i(0);
            if (d.Pa(e)) return !0;
            b = this.i(b - 1);
            a = a.i(c - 1);
            if (b.Pa(a) || d.Pa(a) || b.Pa(e)) return !0
        } else if (this.fromNode === a.fromNode || this.toNode === a.toNode || this.fromNode === a.toNode || this.toNode === a.fromNode) return !0;
        return !1
    };
    S.prototype.isVisible = function() {
        if (!T.prototype.isVisible.call(this)) return !1;
        var a = this.containingGroup,
            b = !0,
            c = this.diagram;
        null !== c && (b = c.isTreePathToChildren);
        c = this.fromNode;
        if (null !== c) {
            if (this.isTreeLink && b && !c.isTreeExpanded) return !1;
            if (c === a) return !0;
            for (var d = c; null !== d;) {
                if (d.labeledLink === this) return !0;
                d = d.containingGroup
            }
            c = c.findVisibleNode();
            if (null === c || c === a) return !1
        }
        c = this.toNode;
        if (null !== c) {
            if (this.isTreeLink && !b && !c.isTreeExpanded) return !1;
            if (c === a) return !0;
            for (b = c; null !== b;) {
                if (b.labeledLink ===
                    this) return !0;
                b = b.containingGroup
            }
            b = c.findVisibleNode();
            if (null === b || b === a) return !1
        }
        return !0
    };
    S.prototype.Mb = function(a) {
        T.prototype.Mb.call(this, a);
        null !== this.wf && this.wf.$l();
        if (null !== this.bd)
            for (var b = this.bd.iterator; b.next();) b.value.Mb(a)
    };

    function No(a) {
        var b = a.Oe;
        if (null !== b) {
            var c = a.ff;
            if (null !== c) {
                for (var d = a.Pe, e = a.gf, f = a = null, g = b.Za.j, h = g.length, k = 0; k < h; k++) {
                    var l = g[k];
                    if (l.Oe === b && l.Pe === d && l.ff === c && l.gf === e || l.Oe === c && l.Pe === e && l.ff === b && l.gf === d) null === f ? f = l : (null === a && (a = [], a.push(f)), a.push(l))
                }
                if (null !== a) {
                    f = so(b, c, d, e);
                    null === f && (f = new kp(b, d, c, e), ro(b, f), ro(c, f));
                    f.links = a;
                    for (b = 0; b < a.length; b++) a[b].wf = f;
                    f.$l()
                }
            }
        }
    }

    function Oo(a) {
        var b = a.wf;
        null !== b && (a.wf = null, a = b.links.indexOf(a), 0 <= a && (Ja(b.links, a), b.$l()))
    }
    S.prototype.wh = function() {
        return !0
    };
    pa.Object.defineProperties(S.prototype, {
        fromNode: {
            get: function() {
                return this.Oe
            },
            set: function(a) {
                var b = this.Oe;
                if (b !== a) {
                    var c = this.fromPort;
                    null !== b && (this.ff !== b && vo(b, this, c), Oo(this), this.B(2));
                    this.Oe = a;
                    null !== a && this.Mb(a.isVisible());
                    this.Ff = null;
                    this.Qa();
                    var d = this.diagram;
                    null !== d && d.partManager.setFromNodeForLink(this, a, b);
                    var e = this.fromPort,
                        f = this.fromPortChanged;
                    if (null !== f) {
                        var g = !0;
                        null !== d && (g = d.ca, d.ca = !0);
                        f(this, c, e);
                        null !== d && (d.ca = g)
                    }
                    null !== a && (this.ff !==
                        a && uo(a, this, e), No(this), this.B(1));
                    this.g("fromNode", b, a);
                    po(this)
                }
            }
        },
        fromPortId: {
            get: function() {
                return this.Pe
            },
            set: function(a) {
                var b = this.Pe;
                if (b !== a) {
                    var c = this.fromPort;
                    null !== c && to(this.fromNode, c);
                    Oo(this);
                    this.Pe = a;
                    var d = this.fromPort;
                    null !== d && to(this.fromNode, d);
                    var e = this.diagram;
                    if (null !== e) {
                        var f = this.data,
                            g = e.model;
                        null !== f && g.bm() && g.Bx(f, a)
                    }
                    c !== d && (this.Ff = null, this.Qa(), f = this.fromPortChanged, null !== f && (g = !0, null !== e && (g = e.ca, e.ca = !0), f(this, c, d), null !==
                        e && (e.ca = g)));
                    No(this);
                    this.g("fromPortId", b, a)
                }
            }
        },
        fromPort: {
            get: function() {
                var a = this.Oe;
                return null === a ? null : a.Qs(this.Pe)
            }
        },
        fromPortChanged: {
            get: function() {
                return this.Dn
            },
            set: function(a) {
                var b = this.Dn;
                b !== a && (this.Dn = a, this.g("fromPortChanged", b, a))
            }
        },
        toNode: {
            get: function() {
                return this.ff
            },
            set: function(a) {
                var b = this.ff;
                if (b !== a) {
                    var c = this.toPort;
                    null !== b && (this.Oe !== b && vo(b, this, c), Oo(this), this.B(2));
                    this.ff =
                        a;
                    null !== a && this.Mb(a.isVisible());
                    this.Ff = null;
                    this.Qa();
                    var d = this.diagram;
                    null !== d && d.partManager.setToNodeForLink(this, a, b);
                    var e = this.toPort,
                        f = this.toPortChanged;
                    if (null !== f) {
                        var g = !0;
                        null !== d && (g = d.ca, d.ca = !0);
                        f(this, c, e);
                        null !== d && (d.ca = g)
                    }
                    null !== a && (this.Oe !== a && uo(a, this, e), No(this), this.B(1));
                    this.g("toNode", b, a);
                    po(this)
                }
            }
        },
        toPortId: {
            get: function() {
                return this.gf
            },
            set: function(a) {
                var b = this.gf;
                if (b !== a) {
                    var c = this.toPort;
                    null !== c && to(this.toNode, c);
                    Oo(this);
                    this.gf = a;
                    var d = this.toPort;
                    null !== d && to(this.toNode, d);
                    var e = this.diagram;
                    if (null !== e) {
                        var f = this.data,
                            g = e.model;
                        null !== f && g.bm() && g.Fx(f, a)
                    }
                    c !== d && (this.Ff = null, this.Qa(), f = this.toPortChanged, null !== f && (g = !0, null !== e && (g = e.ca, e.ca = !0), f(this, c, d), null !== e && (e.ca = g)));
                    No(this);
                    this.g("toPortId", b, a)
                }
            }
        },
        toPort: {
            get: function() {
                var a = this.ff;
                return null === a ? null : a.Qs(this.gf)
            }
        },
        toPortChanged: {
            get: function() {
                return this.zp
            },
            set: function(a) {
                var b =
                    this.zp;
                b !== a && (this.zp = a, this.g("toPortChanged", b, a))
            }
        },
        fromSpot: {
            get: function() {
                return null !== this.P ? this.P.Kg : Ed
            },
            set: function(a) {
                this.Jc();
                var b = this.P.Kg;
                b.A(a) || (a = a.I(), this.P.Kg = a, this.g("fromSpot", b, a), this.Qa())
            }
        },
        fromEndSegmentLength: {
            get: function() {
                return null !== this.P ? this.P.Ig : NaN
            },
            set: function(a) {
                this.Jc();
                var b = this.P.Ig;
                b !== a && (0 > a && xa(a, ">= 0", S, "fromEndSegmentLength"), this.P.Ig = a, this.g("fromEndSegmentLength", b, a), this.Qa())
            }
        },
        fromShortLength: {
            get: function() {
                return null !== this.P ? this.P.Jg : NaN
            },
            set: function(a) {
                this.Jc();
                var b = this.P.Jg;
                b !== a && (this.P.Jg = a, this.g("fromShortLength", b, a), this.Qa(), this.cc())
            }
        },
        toSpot: {
            get: function() {
                return null !== this.P ? this.P.hh : Ed
            },
            set: function(a) {
                this.Jc();
                var b = this.P.hh;
                b.A(a) || (a = a.I(), this.P.hh = a, this.g("toSpot", b, a), this.Qa())
            }
        },
        toEndSegmentLength: {
            get: function() {
                return null !== this.P ? this.P.fh :
                    NaN
            },
            set: function(a) {
                this.Jc();
                var b = this.P.fh;
                b !== a && (0 > a && xa(a, ">= 0", S, "toEndSegmentLength"), this.P.fh = a, this.g("toEndSegmentLength", b, a), this.Qa())
            }
        },
        toShortLength: {
            get: function() {
                return null !== this.P ? this.P.gh : NaN
            },
            set: function(a) {
                this.Jc();
                var b = this.P.gh;
                b !== a && (this.P.gh = a, this.g("toShortLength", b, a), this.Qa(), this.cc())
            }
        },
        isLabeledLink: {
            get: function() {
                return null === this.bd ? !1 : 0 < this.bd.count
            }
        },
        labelNodes: {
            get: function() {
                return null === this.bd ? xb : this.bd.iterator
            }
        },
        relinkableFrom: {
            get: function() {
                return 0 !== (this.Sa & 1)
            },
            set: function(a) {
                var b = 0 !== (this.Sa & 1);
                b !== a && (this.Sa ^= 1, this.g("relinkableFrom", b, a), this.Kb())
            }
        },
        relinkableTo: {
            get: function() {
                return 0 !== (this.Sa & 2)
            },
            set: function(a) {
                var b = 0 !== (this.Sa & 2);
                b !== a && (this.Sa ^= 2, this.g("relinkableTo", b, a), this.Kb())
            }
        },
        resegmentable: {
            get: function() {
                return 0 !== (this.Sa &
                    4)
            },
            set: function(a) {
                var b = 0 !== (this.Sa & 4);
                b !== a && (this.Sa ^= 4, this.g("resegmentable", b, a), this.Kb())
            }
        },
        isTreeLink: {
            get: function() {
                return 0 !== (this.Sa & 8)
            },
            set: function(a) {
                var b = 0 !== (this.Sa & 8);
                b !== a && (this.Sa ^= 8, this.g("isTreeLink", b, a), null !== this.fromNode && rk(this.fromNode), null !== this.toNode && rk(this.toNode))
            }
        },
        path: {
            get: function() {
                var a = this.Ab();
                return a instanceof V ? a : null
            }
        },
        routeBounds: {
            get: function() {
                this.Ui();
                var a = this.pl,
                    b = Infinity,
                    c = Infinity,
                    d = this.pointsCount;
                if (0 === d) a.h(NaN, NaN, 0, 0);
                else {
                    if (1 === d) d = this.i(0), b = Math.min(d.x, b), c = Math.min(d.y, c), a.h(d.x, d.y, 0, 0);
                    else if (2 === d) {
                        d = this.i(0);
                        var e = this.i(1);
                        b = Math.min(d.x, e.x);
                        c = Math.min(d.y, e.y);
                        a.h(d.x, d.y, 0, 0);
                        a.Ie(e)
                    } else if (this.computeCurve() === Qg && 3 <= d && !this.isOrthogonal)
                        if (e = this.i(0), b = e.x, c = e.y, a.h(b, c, 0, 0), 3 === d) {
                            d = this.i(1);
                            b = Math.min(d.x, b);
                            c = Math.min(d.y, c);
                            var f = this.i(2);
                            b = Math.min(f.x, b);
                            c = Math.min(f.y, c);
                            H.Pl(e.x, e.y, d.x, d.y, d.x, d.y,
                                f.x, f.y, .5, a)
                        } else
                            for (f = 3; f < d; f += 3) {
                                var g = this.i(f - 2);
                                f + 3 >= d && (f = d - 1);
                                var h = this.i(f - 1),
                                    k = this.i(f);
                                H.Pl(e.x, e.y, g.x, g.y, h.x, h.y, k.x, k.y, .5, a);
                                b = Math.min(k.x, b);
                                c = Math.min(k.y, c);
                                e = k
                            } else
                                for (e = this.i(0), f = this.i(1), b = Math.min(e.x, f.x), c = Math.min(e.y, f.y), a.h(e.x, e.y, 0, 0), a.Ie(f), e = 2; e < d; e++) f = this.i(e), b = Math.min(f.x, b), c = Math.min(f.y, c), a.Ie(f);
                    this.vu.h(b - a.x, c - a.y)
                }
                return a
            }
        },
        midPoint: {
            get: function() {
                this.Ui();
                return this.computeMidPoint(new G)
            }
        },
        midAngle: {
            get: function() {
                this.Ui();
                return this.computeMidAngle()
            }
        },
        flattenedLengths: {
            get: function() {
                if (null === this.jr) {
                    this.Mc || Po(this);
                    for (var a = this.jr = [], b = this.pointsCount, c = 0; c < b - 1; c++) {
                        var d = this.i(c);
                        var e = this.i(c + 1);
                        H.ba(d.x, e.x) ? (d = e.y - d.y, 0 > d && (d = -d)) : H.ba(d.y, e.y) ? (d = e.x - d.x, 0 > d && (d = -d)) : d = Math.sqrt(d.Be(e));
                        a.push(d)
                    }
                }
                return this.jr
            }
        },
        flattenedTotalLength: {
            get: function() {
                var a = this.Yt;
                if (isNaN(a)) {
                    for (var b = this.flattenedLengths,
                            c = b.length, d = a = 0; d < c; d++) a += b[d];
                    this.Yt = a
                }
                return a
            }
        },
        points: {
            get: function() {
                return this.yb
            },
            set: function(a) {
                var b = this.yb;
                if (b !== a) {
                    var c = null;
                    if (Array.isArray(a)) {
                        var d = 0 === a.length % 2;
                        if (d)
                            for (var e = 0; e < a.length; e++)
                                if ("number" !== typeof a[e] || isNaN(a[e])) {
                                    d = !1;
                                    break
                                } if (d)
                            for (c = new E, d = 0; d < a.length / 2; d++) e = (new G(a[2 * d], a[2 * d + 1])).freeze(), c.add(e);
                        else {
                            d = !0;
                            for (e = 0; e < a.length; e++) {
                                var f = a[e];
                                if (!Ca(f) || "number" !== typeof f.x || isNaN(f.x) || "number" !== typeof f.y || isNaN(f.y)) {
                                    d = !1;
                                    break
                                }
                            }
                            if (d)
                                for (c = new E, d = 0; d < a.length; d++) e = a[d], c.add((new G(e.x, e.y)).freeze())
                        }
                    } else if (a instanceof E)
                        for (c = a.copy(), a = c.iterator; a.next();) a.value.freeze();
                    else A("Link.points value is not an instance of List or Array: " + a);
                    c.freeze();
                    this.yb = c;
                    this.cc();
                    this.o();
                    Po(this);
                    a = this.diagram;
                    null !== a && (a.Ki || a.undoManager.isUndoingRedoing || a.dt.add(this), a.animationManager.sb && (this.rl = c));
                    this.g("points", b, c)
                }
            }
        },
        pointsCount: {
            get: function() {
                return this.yb.count
            }
        },
        Mc: {
            get: function() {
                return 0 !== (this.Sa & 16)
            },
            set: function(a) {
                0 !== (this.Sa & 16) !== a && (this.Sa ^= 16)
            }
        },
        suspendsRouting: {
            get: function() {
                return 0 !== (this.Sa & 32)
            },
            set: function(a) {
                0 !== (this.Sa & 32) !== a && (this.Sa ^= 32)
            }
        },
        Ku: {
            get: function() {
                return 0 !== (this.Sa & 64)
            },
            set: function(a) {
                0 !== (this.Sa & 64) !== a && (this.Sa ^= 64)
            }
        },
        defaultFromPoint: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u = a.copy()
            }
        },
        defaultToPoint: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K = a.copy()
            }
        },
        isOrthogonal: {
            get: function() {
                return 2 === (this.Aj.value & 2)
            }
        },
        isAvoiding: {
            get: function() {
                return 4 === (this.Aj.value & 4)
            }
        },
        geometry: {
            get: function() {
                this.xr && (this.Ui(), this.qa = this.makeGeometry(), this.xr = !1);
                return this.qa
            }
        },
        firstPickIndex: {
            get: function() {
                return 2 >= this.pointsCount ?
                    0 : this.isOrthogonal || !Ro(this.computeSpot(!0)) ? 1 : 0
            }
        },
        lastPickIndex: {
            get: function() {
                var a = this.pointsCount;
                return 0 === a ? 0 : 2 >= a ? a - 1 : this.isOrthogonal || !Ro(this.computeSpot(!1)) ? a - 2 : a - 1
            }
        },
        adjusting: {
            get: function() {
                return this.Jm
            },
            set: function(a) {
                var b = this.Jm;
                b !== a && (this.Jm = a, this.g("adjusting", b, a))
            }
        },
        corner: {
            get: function() {
                return this.en
            },
            set: function(a) {
                var b = this.en;
                b !== a && (this.en = a, this.cc(), this.g("corner",
                    b, a))
            }
        },
        curve: {
            get: function() {
                return this.hn
            },
            set: function(a) {
                var b = this.hn;
                b !== a && (this.hn = a, this.Qa(), this.cc(), Qo(this, b === Mg || b === Lg || a === Mg || a === Lg), this.g("curve", b, a))
            }
        },
        curviness: {
            get: function() {
                return this.jn
            },
            set: function(a) {
                var b = this.jn;
                b !== a && (this.jn = a, this.Qa(), this.cc(), this.g("curviness", b, a))
            }
        },
        routing: {
            get: function() {
                return this.Aj
            },
            set: function(a) {
                var b = this.Aj;
                b !== a && (this.Aj = a, this.Ff = null,
                    this.Qa(), Qo(this, 2 === (b.value & 2) || 2 === (a.value & 2)), this.g("routing", b, a))
            }
        },
        smoothness: {
            get: function() {
                return this.np
            },
            set: function(a) {
                var b = this.np;
                b !== a && (this.np = a, this.cc(), this.g("smoothness", b, a))
            }
        },
        key: {
            get: function() {
                var a = this.diagram;
                if (null !== a && a.model.bm()) return a.model.lc(this.data)
            }
        }
    });
    S.prototype.invalidateOtherJumpOvers = S.prototype.Zp;
    S.prototype.findClosestSegment = S.prototype.By;
    S.prototype.updateRoute = S.prototype.Ui;
    S.prototype.invalidateRoute = S.prototype.Qa;
    S.prototype.rollbackRoute = S.prototype.xx;
    S.prototype.commitRoute = S.prototype.lf;
    S.prototype.startRoute = S.prototype.zh;
    S.prototype.clearPoints = S.prototype.Oj;
    S.prototype.removePoint = S.prototype.tv;
    S.prototype.addPointAt = S.prototype.kf;
    S.prototype.addPoint = S.prototype.ye;
    S.prototype.insertPointAt = S.prototype.m;
    S.prototype.insertPoint = S.prototype.hz;
    S.prototype.setPointAt = S.prototype.M;
    S.prototype.setPoint = S.prototype.ld;
    S.prototype.getPoint = S.prototype.i;
    S.prototype.getOtherPort = S.prototype.Yy;
    S.prototype.getOtherNode = S.prototype.Us;
    var Go = new D(S, "Normal", 1),
        lp = new D(S, "Orthogonal", 2),
        mp = new D(S, "AvoidsNodes", 6),
        Wo = new D(S, "AvoidsNodesStraight", 7),
        Ng = new D(S, "None", 0),
        Qg = new D(S, "Bezier", 9),
        Mg = new D(S, "JumpGap", 10),
        Lg = new D(S, "JumpOver", 11),
        Ho = new D(S, "End", 17),
        Io = new D(S, "Scale", 18),
        Jo = new D(S, "Stretch", 19),
        nn = new D(S, "OrientAlong", 21),
        ym = new D(S, "OrientPlus90", 22),
        Am = new D(S, "OrientMinus90", 23),
        Ko = new D(S, "OrientOpposite", 24),
        Lo = new D(S, "OrientUpright", 25),
        zm = new D(S, "OrientPlus90Upright", 26),
        Bm = new D(S, "OrientMinus90Upright",
            27),
        Cm = new D(S, "OrientUpright45", 28);
    S.className = "Link";
    S.Normal = Go;
    S.Orthogonal = lp;
    S.AvoidsNodes = mp;
    S.AvoidsNodesStraight = Wo;
    S.None = Ng;
    S.Bezier = Qg;
    S.JumpGap = Mg;
    S.JumpOver = Lg;
    S.End = Ho;
    S.Scale = Io;
    S.Stretch = Jo;
    S.OrientAlong = nn;
    S.OrientPlus90 = ym;
    S.OrientMinus90 = Am;
    S.OrientOpposite = Ko;
    S.OrientUpright = Lo;
    S.OrientPlus90Upright = zm;
    S.OrientMinus90Upright = Bm;
    S.OrientUpright45 = Cm;

    function kp(a, b, c, d) {
        mb(this);
        this.ie = this.wr = !1;
        this.gt = a;
        this.tx = b;
        this.iv = c;
        this.ux = d;
        this.links = []
    }
    kp.prototype.$l = function() {
        if (!this.wr) {
            var a = this.links;
            0 < a.length && (a = a[0].diagram, null !== a && (a.uw.add(this), this.ie = a.undoManager.isUndoingRedoing))
        }
        this.wr = !0
    };
    kp.prototype.Sv = function() {
        if (this.wr) {
            this.wr = !1;
            var a = this.links;
            if (0 < a.length) {
                var b = a[0],
                    c = b.diagram;
                c = null === c || c.Ki && !this.ie;
                this.ie = !1;
                b.arrangeBundledLinks(a, c);
                1 === a.length && (b.wf = null, a.length = 0)
            }
            0 === a.length && (a = this.gt, null !== this && null !== a.Le && a.Le.remove(this), a = this.iv, null !== this && null !== a.Le && a.Le.remove(this))
        }
    };
    kp.className = "LinkBundle";

    function hk() {
        mb(this);
        this.Gx = this.group = null;
        this.Ys = !0;
        this.abort = !1;
        this.Ld = this.Kd = 1;
        this.ko = this.jo = -1;
        this.oc = this.nc = 8;
        this.Cb = [
            []
        ];
        this.Hj = this.Gj = 0;
        this.Rz = !1;
        this.Lz = 22;
        this.pz = 111
    }
    hk.prototype.initialize = function(a) {
        if (!(0 >= a.width || 0 >= a.height)) {
            var b = a.y,
                c = a.x + a.width,
                d = a.y + a.height;
            this.Kd = Math.floor((a.x - this.nc) / this.nc) * this.nc;
            this.Ld = Math.floor((b - this.oc) / this.oc) * this.oc;
            this.jo = Math.ceil((c + 2 * this.nc) / this.nc) * this.nc;
            this.ko = Math.ceil((d + 2 * this.oc) / this.oc) * this.oc;
            a = 1 + (Math.ceil((this.jo - this.Kd) / this.nc) | 0);
            b = 1 + (Math.ceil((this.ko - this.Ld) / this.oc) | 0);
            if (null === this.Cb || this.Gj < a - 1 || this.Hj < b - 1) {
                c = [];
                for (d = 0; d <= a; d++) c[d] = [];
                this.Cb = c;
                this.Gj = a - 1;
                this.Hj = b - 1
            }
            a =
                np;
            if (null !== this.Cb)
                for (b = 0; b <= this.Gj; b++)
                    for (c = 0; c <= this.Hj; c++) this.Cb[b][c] = a
        }
    };

    function Xo(a, b, c) {
        return a.Kd <= b && b <= a.jo && a.Ld <= c && c <= a.ko
    }

    function Zo(a, b, c) {
        if (!Xo(a, b, c)) return np;
        b -= a.Kd;
        b /= a.nc;
        c -= a.Ld;
        c /= a.oc;
        return a.Cb[b | 0][c | 0]
    }

    function kk(a, b, c) {
        Xo(a, b, c) && (b -= a.Kd, b /= a.nc, c -= a.Ld, c /= a.oc, a.Cb[b | 0][c | 0] = ap)
    }

    function jk(a) {
        if (null !== a.Cb)
            for (var b = 0; b <= a.Gj; b++)
                for (var c = 0; c <= a.Hj; c++) a.Cb[b][c] >= cp && (a.Cb[b][c] = np)
    }
    hk.prototype.$j = function(a, b, c, d) {
        if (a > this.jo || a + c < this.Kd || b > this.ko || b + d < this.Ld) return !0;
        a = (a - this.Kd) / this.nc | 0;
        b = (b - this.Ld) / this.oc | 0;
        c = Math.max(0, c) / this.nc + 1 | 0;
        var e = Math.max(0, d) / this.oc + 1 | 0;
        0 > a && (c += a, a = 0);
        0 > b && (e += b, b = 0);
        if (0 > c || 0 > e) return !0;
        d = Math.min(a + c - 1, this.Gj) | 0;
        for (c = Math.min(b + e - 1, this.Hj) | 0; a <= d; a++)
            for (e = b; e <= c; e++)
                if (this.Cb[a][e] === ap) return !1;
        return !0
    };

    function op(a, b, c, d, e, f, g, h, k) {
        if (!(b < f || b > g || c < h || c > k)) {
            var l = b | 0;
            var m = c | 0;
            var n = a.Cb[l][m];
            if (n >= cp && n < $o)
                for (e ? m += d : l += d, n += 1; f <= l && l <= g && h <= m && m <= k && !(n >= a.Cb[l][m]);) a.Cb[l][m] = n, n += 1, e ? m += d : l += d;
            l = e ? m : l;
            if (e)
                if (0 < d)
                    for (c += d; c < l; c += d) op(a, b, c, 1, !e, f, g, h, k), op(a, b, c, -1, !e, f, g, h, k);
                else
                    for (c += d; c > l; c += d) op(a, b, c, 1, !e, f, g, h, k), op(a, b, c, -1, !e, f, g, h, k);
            else if (0 < d)
                for (b += d; b < l; b += d) op(a, b, c, 1, !e, f, g, h, k), op(a, b, c, -1, !e, f, g, h, k);
            else
                for (b += d; b > l; b += d) op(a, b, c, 1, !e, f, g, h, k), op(a, b, c, -1, !e, f, g, h,
                    k)
        }
    }

    function pp(a, b, c, d, e, f, g, h, k) {
        b |= 0;
        c |= 0;
        var l = ap,
            m = cp;
        for (a.Cb[b][c] = m; l === ap && b > f && b < g && c > h && c < k;) m += 1, a.Cb[b][c] = m, e ? c += d : b += d, l = a.Cb[b][c]
    }

    function qp(a, b, c, d, e, f, g, h, k) {
        b |= 0;
        c |= 0;
        var l = ap,
            m = $o;
        for (a.Cb[b][c] = m; l === ap && b > f && b < g && c > h && c < k;) a.Cb[b][c] = m, e ? c += d : b += d, l = a.Cb[b][c]
    }

    function Yo(a, b, c, d, e, f) {
        if (null !== a.Cb) {
            a.abort = !1;
            var g = b.x,
                h = b.y;
            if (Xo(a, g, h) && (g -= a.Kd, g /= a.nc, h -= a.Ld, h /= a.oc, b = d.x, d = d.y, Xo(a, b, d)))
                if (b -= a.Kd, b /= a.nc, d -= a.Ld, d /= a.oc, 1 >= Math.abs(g - b) && 1 >= Math.abs(h - d)) a.abort = !0;
                else {
                    var k = f.x,
                        l = f.y,
                        m = f.x + f.width,
                        n = f.y + f.height;
                    k -= a.Kd;
                    k /= a.nc;
                    l -= a.Ld;
                    l /= a.oc;
                    m -= a.Kd;
                    m /= a.nc;
                    n -= a.Ld;
                    n /= a.oc;
                    f = Math.max(0, Math.min(a.Gj, k | 0));
                    m = Math.min(a.Gj, Math.max(0, m | 0));
                    l = Math.max(0, Math.min(a.Hj, l | 0));
                    n = Math.min(a.Hj, Math.max(0, n | 0));
                    g |= 0;
                    h |= 0;
                    b |= 0;
                    d |= 0;
                    k = 0 === c || 90 === c ?
                        1 : -1;
                    c = 90 === c || 270 === c;
                    a.Cb[g][h] === ap ? (pp(a, g, h, k, c, f, m, l, n), pp(a, g, h, 1, !c, f, m, l, n), pp(a, g, h, -1, !c, f, m, l, n)) : pp(a, g, h, k, c, g, h, g, h);
                    a.Cb[b][d] === ap ? (qp(a, b, d, 0 === e || 90 === e ? 1 : -1, 90 === e || 270 === e, f, m, l, n), qp(a, b, d, 1, !(90 === e || 270 === e), f, m, l, n), qp(a, b, d, -1, !(90 === e || 270 === e), f, m, l, n)) : qp(a, b, d, k, c, b, d, b, d);
                    a.abort || (op(a, g, h, 1, !1, f, m, l, n), op(a, g, h, -1, !1, f, m, l, n), op(a, g, h, 1, !0, f, m, l, n), op(a, g, h, -1, !0, f, m, l, n))
                }
        }
    }
    pa.Object.defineProperties(hk.prototype, {
        bounds: {
            get: function() {
                return new N(this.Kd, this.Ld, this.jo - this.Kd, this.ko - this.Ld)
            }
        },
        Rl: {
            get: function() {
                return this.nc
            },
            set: function(a) {
                0 < a && a !== this.nc && (this.nc = a, this.initialize(this.bounds))
            }
        },
        Ql: {
            get: function() {
                return this.oc
            },
            set: function(a) {
                0 < a && a !== this.oc && (this.oc = a, this.initialize(this.bounds))
            }
        }
    });
    var ap = 0,
        cp = 1,
        $o = 999999,
        np = $o + 1;
    hk.className = "PositionArray";

    function Uo() {
        mb(this);
        this.port = this.node = null;
        this.Xd = [];
        this.eq = !1
    }
    Uo.prototype.toString = function() {
        for (var a = this.Xd, b = this.node.toString() + " " + a.length.toString() + ":", c = 0; c < a.length; c++) {
            var d = a[c];
            null !== d && (b += "\n  " + d.toString())
        }
        return b
    };

    function rp(a, b, c, d) {
        b = b.offsetY;
        switch (b) {
            case 8:
                return 90;
            case 2:
                return 180;
            case 1:
                return 270;
            case 4:
                return 0
        }
        switch (b) {
            case 9:
                return 180 < c ? 270 : 90;
            case 6:
                return 90 < c && 270 >= c ? 180 : 0
        }
        a = 180 * Math.atan2(a.height, a.width) / Math.PI;
        switch (b) {
            case 3:
                return c > a && c <= 180 + a ? 180 : 270;
            case 5:
                return c > 180 - a && c <= 360 - a ? 270 : 0;
            case 12:
                return c > a && c <= 180 + a ? 90 : 0;
            case 10:
                return c > 180 - a && c <= 360 - a ? 180 : 90;
            case 7:
                return 90 < c && c <= 180 + a ? 180 : c > 180 + a && c <= 360 - a ? 270 : 0;
            case 13:
                return 180 < c && c <= 360 - a ? 270 : c > a && 180 >= c ? 90 : 0;
            case 14:
                return c >
                    a && c <= 180 - a ? 90 : c > 180 - a && 270 >= c ? 180 : 0;
            case 11:
                return c > 180 - a && c <= 180 + a ? 180 : c > 180 + a ? 270 : 90
        }
        d && 15 !== b && (c -= 15, 0 > c && (c += 360));
        return c > a && c < 180 - a ? 90 : c >= 180 - a && c <= 180 + a ? 180 : c > 180 + a && c < 360 - a ? 270 : 0
    }
    Uo.prototype.$l = function() {
        this.Xd.length = 0
    };

    function Vo(a, b) {
        var c = a.Xd;
        if (0 === c.length) {
            a: if (!a.eq) {
                c = a.eq;
                a.eq = !0;
                var d = null,
                    e = a.node;
                e = e instanceof hg ? e : null;
                if (null === e || e.isSubGraphExpanded) var f = a.node.Qu(a.port.portId);
                else {
                    if (!e.actualBounds.s()) {
                        a.eq = c;
                        break a
                    }
                    d = e;
                    f = d.Pu()
                }
                var g = a.Xd.length = 0,
                    h = a.port.ma(Tc, G.alloc()),
                    k = a.port.ma(hd, G.alloc());
                e = N.allocAt(h.x, h.y, 0, 0);
                e.Ie(k);
                G.free(h);
                G.free(k);
                h = G.allocAt(e.x + e.width / 2, e.y + e.height / 2);
                k = a.port.Fi();
                for (f = f.iterator; f.next();) {
                    var l = f.value;
                    if (l.isVisible() && l.fromPort !== l.toPort) {
                        var m =
                            l.fromPort === a.port || null !== l.fromNode && l.fromNode.Wd(d),
                            n = l.computeSpot(m, a.port);
                        if (n.qf() && (m = m ? l.toPort : l.fromPort, null !== m)) {
                            var p = m.part;
                            if (null !== p) {
                                var q = p.findVisibleNode();
                                null !== q && q !== p && (p = q, m = p.port);
                                m = l.computeOtherPoint(p, m);
                                p = h.Va(m);
                                p -= k;
                                0 > p && (p += 360);
                                n = rp(e, n, p, l.isOrthogonal);
                                0 === n ? (n = 4, 180 < p && (p -= 360)) : n = 90 === n ? 8 : 180 === n ? 2 : 1;
                                q = a.Xd[g];
                                void 0 === q ? (q = new sp(l, p, n), a.Xd[g] = q) : (q.link = l, q.angle = p, q.Ac = n);
                                q.mv.set(m);
                                g++
                            }
                        }
                    }
                }
                G.free(h);
                a.Xd.sort(Uo.prototype.l);
                k = a.Xd.length;
                d = -1;
                for (g =
                    h = 0; g < k; g++) f = a.Xd[g], void 0 !== f && (f.Ac !== d && (d = f.Ac, h = 0), f.Wp = h, h++);
                d = -1;
                h = 0;
                for (g = k - 1; 0 <= g; g--) k = a.Xd[g], void 0 !== k && (k.Ac !== d && (d = k.Ac, h = k.Wp + 1), k.Tl = h);
                g = a.Xd;
                n = a.port;
                d = a.node.portSpreading;
                h = G.alloc();
                k = G.alloc();
                f = G.alloc();
                l = G.alloc();
                n.ma(Tc, h);
                n.ma(bd, k);
                n.ma(hd, f);
                n.ma(fd, l);
                q = p = m = n = 0;
                if (d === Do)
                    for (var r = 0; r < g.length; r++) {
                        var u = g[r];
                        if (null !== u) {
                            var v = u.link.computeThickness();
                            switch (u.Ac) {
                                case 8:
                                    p += v;
                                    break;
                                case 2:
                                    q += v;
                                    break;
                                case 1:
                                    n += v;
                                    break;
                                default:
                                case 4:
                                    m += v
                            }
                        }
                    }
                var x = r = 0,
                    y = 1,
                    z = u = 0;
                for (v = 0; v < g.length; v++) {
                    var B = g[v];
                    if (null !== B) {
                        if (r !== B.Ac) {
                            r = B.Ac;
                            switch (r) {
                                case 8:
                                    var C = f;
                                    x = l;
                                    break;
                                case 2:
                                    C = l;
                                    x = h;
                                    break;
                                case 1:
                                    C = h;
                                    x = k;
                                    break;
                                default:
                                case 4:
                                    C = k, x = f
                            }
                            u = x.x - C.x;
                            z = x.y - C.y;
                            switch (r) {
                                case 8:
                                    p > Math.abs(u) ? (y = Math.abs(u) / p, p = Math.abs(u)) : y = 1;
                                    break;
                                case 2:
                                    q > Math.abs(z) ? (y = Math.abs(z) / q, q = Math.abs(z)) : y = 1;
                                    break;
                                case 1:
                                    n > Math.abs(u) ? (y = Math.abs(u) / n, n = Math.abs(u)) : y = 1;
                                    break;
                                default:
                                case 4:
                                    m > Math.abs(z) ? (y = Math.abs(z) / m, m = Math.abs(z)) : y = 1
                            }
                            x = 0
                        }
                        var I = B.bq;
                        if (d === Do) {
                            B = B.link.computeThickness();
                            B *= y;
                            I.set(C);
                            switch (r) {
                                case 8:
                                    I.x = C.x + u / 2 + p / 2 - x - B / 2;
                                    break;
                                case 2:
                                    I.y = C.y + z / 2 + q / 2 - x - B / 2;
                                    break;
                                case 1:
                                    I.x = C.x + u / 2 - n / 2 + x + B / 2;
                                    break;
                                default:
                                case 4:
                                    I.y = C.y + z / 2 - m / 2 + x + B / 2
                            }
                            x += B
                        } else {
                            var J = .5;
                            d === qo && (J = (B.Wp + 1) / (B.Tl + 1));
                            I.x = C.x + u * J;
                            I.y = C.y + z * J
                        }
                    }
                }
                G.free(h);
                G.free(k);
                G.free(f);
                G.free(l);
                C = a.Xd;
                for (g = 0; g < C.length; g++) d = C[g], null !== d && (d.Ou = a.computeEndSegmentLength(d));
                a.eq = c;
                N.free(e)
            }c = a.Xd
        }
        for (a = 0; a < c.length; a++)
            if (e = c[a], null !== e && e.link === b) return e;
        return null
    }
    Uo.prototype.l = function(a, b) {
        return a === b ? 0 : null === a ? -1 : null === b ? 1 : a.Ac < b.Ac ? -1 : a.Ac > b.Ac ? 1 : a.angle < b.angle ? -1 : a.angle > b.angle ? 1 : 0
    };
    Uo.prototype.computeEndSegmentLength = function(a) {
        var b = a.link,
            c = b.computeEndSegmentLength(this.node, this.port, Sc, b.fromPort === this.port),
            d = a.Wp;
        if (0 > d) return c;
        var e = a.Tl;
        if (1 >= e || !b.isOrthogonal) return c;
        b = a.mv;
        var f = a.bq;
        if (2 === a.Ac || 8 === a.Ac) d = e - 1 - d;
        return ((a = 2 === a.Ac || 4 === a.Ac) ? b.y < f.y : b.x < f.x) ? c + 8 * d : (a ? b.y === f.y : b.x === f.x) ? c : c + 8 * (e - 1 - d)
    };
    Uo.className = "Knot";

    function sp(a, b, c) {
        this.link = a;
        this.angle = b;
        this.Ac = c;
        this.mv = new G;
        this.Tl = this.Wp = 0;
        this.bq = new G;
        this.Ou = 0
    }
    sp.prototype.toString = function() {
        return this.link.toString() + " " + this.angle.toString() + " " + this.Ac.toString() + ":" + this.Wp.toString() + "/" + this.Tl.toString() + " " + this.bq.toString() + " " + this.Ou.toString() + " " + this.mv.toString()
    };
    sp.className = "LinkInfo";

    function Qk() {
        this.hh = this.Kg = Ed;
        this.gh = this.Jg = this.fh = this.Ig = NaN;
        this.xp = this.Bn = null;
        this.yp = this.Cn = Infinity
    }
    Qk.prototype.copy = function() {
        var a = new Qk;
        a.Kg = this.Kg.I();
        a.hh = this.hh.I();
        a.Ig = this.Ig;
        a.fh = this.fh;
        a.Jg = this.Jg;
        a.gh = this.gh;
        a.Bn = this.Bn;
        a.xp = this.xp;
        a.Cn = this.Cn;
        a.yp = this.yp;
        return a
    };
    Qk.className = "LinkSettings";

    function ui() {
        mb(this);
        this.K = this.F = null;
        this.Og = this.Qn = !0;
        this.Wn = !1;
        this.Om = (new G(0, 0)).freeze();
        this.Tn = !0;
        this.Sn = null;
        this.ow = "";
        this.u = null;
        this.Vn = !1;
        this.l = null
    }
    ui.prototype.cloneProtected = function(a) {
        a.Qn = this.Qn;
        a.Og = this.Og;
        a.Wn = this.Wn;
        a.Om.assign(this.Om);
        a.Tn = this.Tn;
        a.Sn = this.Sn;
        a.ow = this.ow;
        a.Vn = !0
    };
    ui.prototype.copy = function() {
        var a = new this.constructor;
        this.cloneProtected(a);
        return a
    };
    ui.prototype.gb = function() {};
    ui.prototype.toString = function() {
        var a = Pa(this.constructor);
        a += "(";
        null !== this.group && (a += " in " + this.group);
        null !== this.diagram && (a += " for " + this.diagram);
        return a + ")"
    };
    ui.prototype.B = function() {
        if (this.isValidLayout) {
            var a = this.diagram;
            if (null !== a && !a.undoManager.isUndoingRedoing) {
                var b = a.animationManager;
                !b.isTicking && (b.isAnimating && b.xd(), this.isOngoing && a.Ki || this.isInitial && !a.Ki) && (this.isValidLayout = !1, a.ec())
            }
        }
    };
    ui.prototype.createNetwork = function() {
        return new tp(this)
    };
    ui.prototype.makeNetwork = function(a) {
        var b = this.createNetwork();
        a instanceof P ? (b.jg(a.nodes, !0), b.jg(a.links, !0)) : a instanceof hg ? b.jg(a.memberParts) : b.jg(a.iterator);
        return b
    };
    ui.prototype.updateParts = function() {
        var a = this.diagram;
        if (null === a && null !== this.network)
            for (var b = this.network.vertexes.iterator; b.next();) {
                var c = b.value.node;
                if (null !== c && (a = c.diagram, null !== a)) break
            }
        this.isValidLayout = !0;
        try {
            null !== a && a.Aa("Layout"), this.commitLayout()
        } finally {
            null !== a && a.$a("Layout")
        }
    };
    ui.prototype.commitLayout = function() {
        if (null !== this.network) {
            for (var a = this.network.vertexes.iterator; a.next();) a.value.commit();
            if (this.isRouting)
                for (a = this.network.edges.iterator; a.next();) a.value.commit()
        }
    };
    ui.prototype.doLayout = function(a) {
        var b = new F;
        a instanceof P ? (up(this, b, a.nodes, !0, this.hk, !0, !1, !0), up(this, b, a.parts, !0, this.hk, !0, !1, !0)) : a instanceof hg ? up(this, b, a.memberParts, !1, this.hk, !0, !1, !0) : b.addAll(a.iterator);
        var c = b.count;
        if (0 < c) {
            a = this.diagram;
            null !== a && a.Aa("Layout");
            c = Math.ceil(Math.sqrt(c));
            this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
            var d = this.arrangementOrigin.x,
                e = d,
                f = this.arrangementOrigin.y,
                g = 0,
                h = 0;
            for (b = b.iterator; b.next();) {
                var k = b.value;
                vp(k);
                var l =
                    k.measuredBounds,
                    m = l.width;
                l = l.height;
                k.moveTo(e, f);
                k instanceof hg && (k.hk = !1);
                e += Math.max(m, 50) + 20;
                h = Math.max(h, Math.max(l, 50));
                g >= c - 1 ? (g = 0, e = d, f += h + 20, h = 0) : g++
            }
            null !== a && a.$a("Layout")
        }
        this.isValidLayout = !0
    };
    ui.prototype.hk = function(a) {
        return !a.location.s() || a instanceof hg && a.hk ? !0 : !1
    };

    function up(a, b, c, d, e, f, g, h) {
        for (c = c.iterator; c.next();) {
            var k = c.value;
            d && !k.isTopLevel || null !== e && !e(k) || !k.canLayout() || (f && k instanceof U ? k.isLinkLabel || (k instanceof hg ? null === k.layout ? up(a, b, k.memberParts, !1, e, f, g, h) : (vp(k), b.add(k)) : (vp(k), b.add(k))) : g && k instanceof S ? b.add(k) : !h || !k.dc() || k instanceof U || (vp(k), b.add(k)))
        }
    }

    function vp(a) {
        var b = a.actualBounds;
        (0 === b.width || 0 === b.height || isNaN(b.width) || isNaN(b.height)) && a.bc()
    }
    ui.prototype.Hi = function(a, b) {
        var c = this.boundsComputation;
        if (null !== c) return b || (b = new N), c(a, this, b);
        if (!b) return a.actualBounds;
        b.set(a.actualBounds);
        return b
    };
    ui.prototype.Sw = function(a) {
        var b = new F;
        a instanceof P ? (up(this, b, a.nodes, !0, null, !0, !0, !0), up(this, b, a.links, !0, null, !0, !0, !0), up(this, b, a.parts, !0, null, !0, !0, !0)) : a instanceof hg ? up(this, b, a.memberParts, !1, null, !0, !0, !0) : up(this, b, a.iterator, !1, null, !0, !0, !0);
        return b
    };
    ui.prototype.initialOrigin = function(a) {
        var b = this.group;
        if (null !== b) {
            var c = b.position.copy();
            (isNaN(c.x) || isNaN(c.y)) && c.set(a);
            b = b.placeholder;
            null !== b && (c = b.ma(Tc), (isNaN(c.x) || isNaN(c.y)) && c.set(a), a = b.padding, c.x += a.left, c.y += a.top);
            return c
        }
        return a
    };
    pa.Object.defineProperties(ui.prototype, {
        diagram: {
            get: function() {
                return this.F
            },
            set: function(a) {
                this.F = a
            }
        },
        group: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K !== a && (this.K = a, null !== a && (this.F = a.diagram))
            }
        },
        isOngoing: {
            get: function() {
                return this.Qn
            },
            set: function(a) {
                this.Qn !== a && (this.Qn = a)
            }
        },
        isInitial: {
            get: function() {
                return this.Og
            },
            set: function(a) {
                this.Og = a;
                a || (this.Vn = !0)
            }
        },
        isViewportSized: {
            get: function() {
                return this.Wn
            },
            set: function(a) {
                this.Wn !== a && (this.Wn = a) && this.B()
            }
        },
        isRouting: {
            get: function() {
                return this.Tn
            },
            set: function(a) {
                this.Tn !== a && (this.Tn = a)
            }
        },
        isRealtime: {
            get: function() {
                return this.Sn
            },
            set: function(a) {
                this.Sn !== a && (this.Sn = a)
            }
        },
        isValidLayout: {
            get: function() {
                return this.Vn
            },
            set: function(a) {
                this.Vn !== a && (this.Vn = a, a || (a = this.diagram, null !==
                    a && (a.yg = !0)))
            }
        },
        network: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l !== a && (this.l = a, null !== a && (a.layout = this))
            }
        },
        boundsComputation: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u !== a && (this.u = a, this.B())
            }
        },
        arrangementOrigin: {
            get: function() {
                return this.Om
            },
            set: function(a) {
                this.Om.A(a) || (this.Om.assign(a), this.B())
            }
        }
    });
    ui.prototype.collectParts = ui.prototype.Sw;
    ui.prototype.getLayoutBounds = ui.prototype.Hi;
    ui.prototype.invalidateLayout = ui.prototype.B;
    ui.className = "Layout";

    function tp(a) {
        mb(this);
        this.ic = a;
        this.hf = new F;
        this.de = new F;
        this.ht = new Lb;
        this.ct = new Lb
    }
    tp.prototype.clear = function() {
        if (this.hf)
            for (var a = this.hf.iterator; a.next();) a.value.clear();
        if (this.de)
            for (a = this.de.iterator; a.next();) a.value.clear();
        this.hf = new F;
        this.de = new F;
        this.ht = new Lb;
        this.ct = new Lb
    };
    tp.prototype.toString = function(a) {
        void 0 === a && (a = 0);
        var b = "LayoutNetwork" + (null !== this.layout ? "(" + this.layout.toString() + ")" : "");
        if (0 >= a) return b;
        b += " vertexes: " + this.hf.count + " edges: " + this.de.count;
        if (1 < a) {
            for (var c = this.hf.iterator; c.next();) b += "\n    " + c.value.toString(a - 1);
            for (c = this.de.iterator; c.next();) b += "\n    " + c.value.toString(a - 1)
        }
        return b
    };
    tp.prototype.createVertex = function() {
        return new wp(this)
    };
    tp.prototype.createEdge = function() {
        return new xp(this)
    };
    tp.prototype.jg = function(a, b, c) {
        if (null !== a) {
            void 0 === b && (b = !1);
            void 0 === c && (c = null);
            null === c && (c = function(a) {
                if (a instanceof U) return !a.isLinkLabel;
                if (a instanceof S) {
                    var b = a.fromNode;
                    if (null === b || b.isLinkLabel) return !1;
                    a = a.toNode;
                    return null === a || a.isLinkLabel ? !1 : !0
                }
                return !1
            });
            for (a = a.iterator; a.next();) {
                var d = a.value;
                if (d instanceof U && (!b || d.isTopLevel) && d.canLayout() && c(d))
                    if (d instanceof hg && null === d.layout) this.jg(d.memberParts, !1);
                    else if (null === this.Ei(d)) {
                    var e = this.createVertex();
                    e.node =
                        d;
                    this.nh(e)
                }
            }
            for (a.reset(); a.next();)
                if (d = a.value, d instanceof S && (!b || d.isTopLevel) && d.canLayout() && c(d) && null === this.Qp(d)) {
                    var f = d.fromNode;
                    e = d.toNode;
                    null !== f && null !== e && f !== e && (f = this.findGroupVertex(f), e = this.findGroupVertex(e), null !== f && null !== e && this.ak(f, e, d))
                }
        }
    };
    tp.prototype.findGroupVertex = function(a) {
        if (null === a) return null;
        var b = a.findVisibleNode();
        if (null === b) return null;
        a = this.Ei(b);
        if (null !== a) return a;
        for (b = b.containingGroup; null !== b;) {
            a = this.Ei(b);
            if (null !== a) return a;
            b = b.containingGroup
        }
        return null
    };
    t = tp.prototype;
    t.nh = function(a) {
        if (null !== a) {
            this.hf.add(a);
            var b = a.node;
            null !== b && this.ht.add(b, a);
            a.network = this
        }
    };
    t.Nl = function(a) {
        if (null === a) return null;
        var b = this.Ei(a);
        null === b && (b = this.createVertex(), b.node = a, this.nh(b));
        return b
    };
    t.Nu = function(a) {
        if (null !== a && yp(this, a)) {
            for (var b = a.tg, c = b.count - 1; 0 <= c; c--) {
                var d = b.N(c);
                this.Uj(d)
            }
            b = a.kg;
            for (a = b.count - 1; 0 <= a; a--) c = b.N(a), this.Uj(c)
        }
    };

    function yp(a, b) {
        if (null === b) return !1;
        var c = a.hf.remove(b);
        c && a.ht.remove(b.node);
        return c
    }
    t.vy = function(a) {
        null !== a && (a = this.Ei(a), null !== a && this.Nu(a))
    };
    t.Ei = function(a) {
        return null === a ? null : this.ht.J(a)
    };
    t.Jj = function(a) {
        if (null !== a) {
            this.de.add(a);
            var b = a.link;
            null !== b && null === this.Qp(b) && this.ct.add(b, a);
            b = a.toVertex;
            null !== b && b.Du(a);
            b = a.fromVertex;
            null !== b && b.Bu(a);
            a.network = this
        }
    };
    t.$x = function(a) {
        if (null === a) return null;
        var b = a.fromNode,
            c = a.toNode,
            d = this.Qp(a);
        null === d ? (d = this.createEdge(), d.link = a, null !== b && (d.fromVertex = this.Nl(b)), null !== c && (d.toVertex = this.Nl(c)), this.Jj(d)) : (null !== b ? d.fromVertex = this.Nl(b) : d.fromVertex = null, null !== c ? d.toVertex = this.Nl(c) : d.toVertex = null);
        return d
    };
    t.Uj = function(a) {
        if (null !== a) {
            var b = a.toVertex;
            null !== b && b.Mu(a);
            b = a.fromVertex;
            null !== b && b.Lu(a);
            zp(this, a)
        }
    };

    function zp(a, b) {
        null !== b && a.de.remove(b) && a.ct.remove(b.link)
    }
    t.uy = function(a) {
        null !== a && (a = this.Qp(a), null !== a && this.Uj(a))
    };
    t.Qp = function(a) {
        return null === a ? null : this.ct.J(a)
    };
    t.ak = function(a, b, c) {
        if (null === a || null === b) return null;
        if (a.network === this && b.network === this) {
            var d = this.createEdge();
            d.link = c;
            d.fromVertex = a;
            d.toVertex = b;
            this.Jj(d);
            return d
        }
        return null
    };
    t.pm = function(a) {
        if (null !== a) {
            var b = a.fromVertex,
                c = a.toVertex;
            null !== b && null !== c && (b.Lu(a), c.Mu(a), a.pm(), b.Du(a), c.Bu(a))
        }
    };
    t.Np = function() {
        for (var a = Ka(), b = this.de.iterator; b.next();) {
            var c = b.value;
            c.fromVertex === c.toVertex && a.push(c)
        }
        b = a.length;
        for (c = 0; c < b; c++) this.Uj(a[c]);
        Oa(a)
    };
    tp.prototype.deleteArtificialVertexes = function() {
        for (var a = Ka(), b = this.hf.iterator; b.next();) {
            var c = b.value;
            null === c.node && a.push(c)
        }
        c = a.length;
        for (b = 0; b < c; b++) this.Nu(a[b]);
        b = Ka();
        for (c = this.de.iterator; c.next();) {
            var d = c.value;
            null === d.link && b.push(d)
        }
        c = b.length;
        for (d = 0; d < c; d++) this.Uj(b[d]);
        Oa(a);
        Oa(b)
    };

    function Ap(a) {
        for (var b = Ka(), c = a.de.iterator; c.next();) {
            var d = c.value;
            null !== d.fromVertex && null !== d.toVertex || b.push(d)
        }
        c = b.length;
        for (d = 0; d < c; d++) a.Uj(b[d]);
        Oa(b)
    }
    tp.prototype.Hx = function() {
        this.deleteArtificialVertexes();
        Ap(this);
        this.Np();
        for (var a = new E, b = !0; b;) {
            b = !1;
            for (var c = this.hf.iterator; c.next();) {
                var d = c.value;
                if (0 < d.tg.count || 0 < d.kg.count) {
                    b = this.layout.createNetwork();
                    a.add(b);
                    Bp(this, b, d);
                    b = !0;
                    break
                }
            }
        }
        a.sort(function(a, b) {
            return null === a || null === b || a === b ? 0 : b.vertexes.count - a.vertexes.count
        });
        return a
    };

    function Bp(a, b, c) {
        if (null !== c && c.network !== b) {
            yp(a, c);
            b.nh(c);
            for (var d = c.sourceEdges; d.next();) {
                var e = d.value;
                e.network !== b && (zp(a, e), b.Jj(e), Bp(a, b, e.fromVertex))
            }
            for (d = c.destinationEdges; d.next();) c = d.value, c.network !== b && (zp(a, c), b.Jj(c), Bp(a, b, c.toVertex))
        }
    }
    tp.prototype.Ay = function() {
        for (var a = new F, b = this.hf.iterator; b.next();) a.add(b.value.node);
        for (b = this.de.iterator; b.next();) a.add(b.value.link);
        return a
    };
    pa.Object.defineProperties(tp.prototype, {
        layout: {
            get: function() {
                return this.ic
            },
            set: function(a) {
                null !== a && (this.ic = a)
            }
        },
        vertexes: {
            get: function() {
                return this.hf
            }
        },
        edges: {
            get: function() {
                return this.de
            }
        }
    });
    tp.prototype.findAllParts = tp.prototype.Ay;
    tp.prototype.splitIntoSubNetworks = tp.prototype.Hx;
    tp.prototype.deleteSelfEdges = tp.prototype.Np;
    tp.prototype.reverseEdge = tp.prototype.pm;
    tp.prototype.linkVertexes = tp.prototype.ak;
    tp.prototype.findEdge = tp.prototype.Qp;
    tp.prototype.deleteLink = tp.prototype.uy;
    tp.prototype.deleteEdge = tp.prototype.Uj;
    tp.prototype.addLink = tp.prototype.$x;
    tp.prototype.addEdge = tp.prototype.Jj;
    tp.prototype.findVertex = tp.prototype.Ei;
    tp.prototype.deleteNode = tp.prototype.vy;
    tp.prototype.deleteVertex = tp.prototype.Nu;
    tp.prototype.addNode = tp.prototype.Nl;
    tp.prototype.addVertex = tp.prototype.nh;
    tp.prototype.addParts = tp.prototype.jg;
    tp.className = "LayoutNetwork";

    function wp(a) {
        mb(this);
        this.Xc = a;
        this.l = (new N(0, 0, 10, 10)).freeze();
        this.u = (new G(5, 5)).freeze();
        this.ii = this.jb = null;
        this.tg = new E;
        this.kg = new E
    }
    wp.prototype.clear = function() {
        this.ii = this.jb = null;
        this.tg = new E;
        this.kg = new E
    };
    wp.prototype.toString = function(a) {
        void 0 === a && (a = 0);
        var b = "LayoutVertex#" + Bb(this);
        if (0 < a && (b += null !== this.node ? "(" + this.node.toString() + ")" : "", 1 < a)) {
            a = "";
            for (var c = !0, d = this.tg.iterator; d.next();) {
                var e = d.value;
                c ? c = !1 : a += ",";
                a += e.toString(0)
            }
            e = "";
            c = !0;
            for (d = this.kg.iterator; d.next();) {
                var f = d.value;
                c ? c = !1 : e += ",";
                e += f.toString(0)
            }
            b += " sources: " + a + " destinations: " + e
        }
        return b
    };
    wp.prototype.commit = function() {
        var a = this.jb;
        if (null !== a) {
            var b = this.bounds,
                c = a.bounds;
            Ca(c) ? (c.x = b.x, c.y = b.y, c.width = b.width, c.height = b.height) : a.bounds = b.copy()
        } else if (a = this.node, null !== a) {
            b = this.bounds;
            if (!(a instanceof hg)) {
                c = N.alloc();
                var d = this.network.layout.Hi(a, c),
                    e = a.locationObject.ma(dd);
                if (d.s() && e.s()) {
                    a.moveTo(b.x + this.focusX - (e.x - d.x), b.y + this.focusY - (e.y - d.y));
                    N.free(c);
                    return
                }
                N.free(c)
            }
            a.moveTo(b.x, b.y)
        }
    };
    wp.prototype.Du = function(a) {
        null !== a && (this.tg.contains(a) || this.tg.add(a))
    };
    wp.prototype.Mu = function(a) {
        null !== a && this.tg.remove(a)
    };
    wp.prototype.Bu = function(a) {
        null !== a && (this.kg.contains(a) || this.kg.add(a))
    };
    wp.prototype.Lu = function(a) {
        null !== a && this.kg.remove(a)
    };

    function Cp(a, b) {
        a = a.ii;
        b = b.ii;
        return a ? b ? (a = a.text, b = b.text, a < b ? -1 : a > b ? 1 : 0) : 1 : null !== b ? -1 : 0
    }
    pa.Object.defineProperties(wp.prototype, {
        sourceEdgesArrayAccess: {
            get: function() {
                return this.tg._dataArray
            }
        },
        destinationEdgesArrayAccess: {
            get: function() {
                return this.kg._dataArray
            }
        },
        data: {
            get: function() {
                return this.jb
            },
            set: function(a) {
                this.jb = a;
                if (null !== a) {
                    var b = a.bounds;
                    a = b.x;
                    var c = b.y,
                        d = b.width;
                    b = b.height;
                    this.u.h(d / 2, b / 2);
                    this.l.h(a, c, d, b)
                }
            }
        },
        node: {
            get: function() {
                return this.ii
            },
            set: function(a) {
                if (this.ii !== a) {
                    this.ii = a;
                    a.bc();
                    var b = this.network.layout,
                        c = N.alloc(),
                        d = b.Hi(a, c);
                    b = d.x;
                    var e = d.y,
                        f = d.width;
                    d = d.height;
                    isNaN(b) && (b = 0);
                    isNaN(e) && (e = 0);
                    this.l.h(b, e, f, d);
                    N.free(c);
                    if (!(a instanceof hg) && (a = a.locationObject.ma(dd), a.s())) {
                        this.u.h(a.x - b, a.y - e);
                        return
                    }
                    this.u.h(f / 2, d / 2)
                }
            }
        },
        bounds: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l.A(a) || this.l.assign(a)
            }
        },
        focus: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u.A(a) ||
                    this.u.assign(a)
            }
        },
        centerX: {
            get: function() {
                return this.l.x + this.u.x
            },
            set: function(a) {
                var b = this.l;
                b.x + this.u.x !== a && (b.ha(), b.x = a - this.u.x, b.freeze())
            }
        },
        centerY: {
            get: function() {
                return this.l.y + this.u.y
            },
            set: function(a) {
                var b = this.l;
                b.y + this.u.y !== a && (b.ha(), b.y = a - this.u.y, b.freeze())
            }
        },
        focusX: {
            get: function() {
                return this.u.x
            },
            set: function(a) {
                var b = this.u;
                b.x !== a && (b.ha(), b.x = a, b.freeze())
            }
        },
        focusY: {
            get: function() {
                return this.u.y
            },
            set: function(a) {
                var b = this.u;
                b.y !== a && (b.ha(), b.y = a, b.freeze())
            }
        },
        x: {
            get: function() {
                return this.l.x
            },
            set: function(a) {
                var b = this.l;
                b.x !== a && (b.ha(), b.x = a, b.freeze())
            }
        },
        y: {
            get: function() {
                return this.l.y
            },
            set: function(a) {
                var b = this.l;
                b.y !== a && (b.ha(), b.y = a, b.freeze())
            }
        },
        width: {
            get: function() {
                return this.l.width
            },
            set: function(a) {
                var b = this.l;
                b.width !== a && (b.ha(), b.width =
                    a, b.freeze())
            }
        },
        height: {
            get: function() {
                return this.l.height
            },
            set: function(a) {
                var b = this.l;
                b.height !== a && (b.ha(), b.height = a, b.freeze())
            }
        },
        network: {
            get: function() {
                return this.Xc
            },
            set: function(a) {
                this.Xc = a
            }
        },
        sourceVertexes: {
            get: function() {
                for (var a = new F, b = this.sourceEdges; b.next();) a.add(b.value.fromVertex);
                return a.iterator
            }
        },
        destinationVertexes: {
            get: function() {
                for (var a = new F, b =
                        this.destinationEdges; b.next();) a.add(b.value.toVertex);
                return a.iterator
            }
        },
        vertexes: {
            get: function() {
                for (var a = new F, b = this.sourceEdges; b.next();) a.add(b.value.fromVertex);
                for (b = this.destinationEdges; b.next();) a.add(b.value.toVertex);
                return a.iterator
            }
        },
        sourceEdges: {
            get: function() {
                return this.tg.iterator
            }
        },
        destinationEdges: {
            get: function() {
                return this.kg.iterator
            }
        },
        edges: {
            get: function() {
                for (var a =
                        new E, b = this.sourceEdges; b.next();) a.add(b.value);
                for (b = this.destinationEdges; b.next();) a.add(b.value);
                return a.iterator
            }
        },
        edgesCount: {
            get: function() {
                return this.tg.count + this.kg.count
            }
        }
    });
    wp.prototype.deleteDestinationEdge = wp.prototype.Lu;
    wp.prototype.addDestinationEdge = wp.prototype.Bu;
    wp.prototype.deleteSourceEdge = wp.prototype.Mu;
    wp.prototype.addSourceEdge = wp.prototype.Du;
    wp.className = "LayoutVertex";
    wp.standardComparer = Cp;
    wp.smartComparer = function(a, b) {
        if (null !== a) {
            if (null !== b) {
                a = a.ii;
                var c = b.ii;
                if (null !== a) {
                    if (null !== c) {
                        b = a.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/);
                        a = c.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/);
                        for (c = 0; c < b.length; c++)
                            if ("" !== a[c] && void 0 !== a[c]) {
                                var d = parseFloat(b[c]),
                                    e = parseFloat(a[c]);
                                if (isNaN(d))
                                    if (isNaN(e)) {
                                        if (0 !== b[c].localeCompare(a[c])) return b[c].localeCompare(a[c])
                                    } else return 1;
                                else {
                                    if (isNaN(e)) return -1;
                                    if (0 !== d - e) return d -
                                        e
                                }
                            } else if ("" !== b[c]) return 1;
                        return "" !== a[c] && void 0 !== a[c] ? -1 : 0
                    }
                    return 1
                }
                return null !== c ? -1 : 0
            }
            return 1
        }
        return null !== b ? -1 : 0
    };

    function xp(a) {
        mb(this);
        this.Vb = a;
        this.eg = this.Hf = this.el = this.jb = null
    }
    xp.prototype.clear = function() {
        this.eg = this.Hf = this.el = this.jb = null
    };
    xp.prototype.toString = function(a) {
        void 0 === a && (a = 0);
        var b = "LayoutEdge#" + Bb(this);
        0 < a && (b += null !== this.el ? "(" + this.el.toString() + ")" : "", 1 < a && (b += " " + (this.Hf ? this.Hf.toString() : "null") + " --\x3e " + (this.eg ? this.eg.toString() : "null")));
        return b
    };
    xp.prototype.pm = function() {
        var a = this.Hf;
        this.Hf = this.eg;
        this.eg = a
    };
    xp.prototype.commit = function() {};
    xp.prototype.jx = function(a) {
        return this.eg === a ? this.Hf : this.Hf === a ? this.eg : null
    };
    pa.Object.defineProperties(xp.prototype, {
        network: {
            get: function() {
                return this.Vb
            },
            set: function(a) {
                this.Vb = a
            }
        },
        data: {
            get: function() {
                return this.jb
            },
            set: function(a) {
                this.jb !== a && (this.jb = a)
            }
        },
        link: {
            get: function() {
                return this.el
            },
            set: function(a) {
                this.el !== a && (this.el = a)
            }
        },
        fromVertex: {
            get: function() {
                return this.Hf
            },
            set: function(a) {
                this.Hf !== a && (this.Hf = a)
            }
        },
        toVertex: {
            get: function() {
                return this.eg
            },
            set: function(a) {
                this.eg !== a && (this.eg = a)
            }
        }
    });
    xp.prototype.getOtherVertex = xp.prototype.jx;
    xp.className = "LayoutEdge";

    function yk() {
        ui.call(this);
        this.isViewportSized = !0;
        this.Ep = this.Fp = NaN;
        this.Ag = (new L(NaN, NaN)).freeze();
        this.$e = (new L(10, 10)).freeze();
        this.xb = Dp;
        this.Bb = Ep;
        this.Rc = Fp;
        this.Nc = Gp
    }
    oa(yk, ui);
    yk.prototype.cloneProtected = function(a) {
        ui.prototype.cloneProtected.call(this, a);
        a.Fp = this.Fp;
        a.Ep = this.Ep;
        a.Ag.assign(this.Ag);
        a.$e.assign(this.$e);
        a.xb = this.xb;
        a.Bb = this.Bb;
        a.Rc = this.Rc;
        a.Nc = this.Nc
    };
    yk.prototype.gb = function(a) {
        a.classType === yk ? a === Fp || a === Hp || a === Ip || a === Jp ? this.sorting = a : a === Ep || a === Kp ? this.arrangement = a : a === Dp || a === Lp ? this.alignment = a : A("Unknown enum value: " + a) : ui.prototype.gb.call(this, a)
    };
    yk.prototype.doLayout = function(a) {
        this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
        var b = this.Sw(a);
        a = this.diagram;
        for (var c = b.copy().iterator; c.next();) {
            var d = c.value;
            if (!d.wh() || null === d.fromNode && null === d.toNode) {
                if (d.bc(), d instanceof hg)
                    for (d = d.memberParts; d.next();) b.remove(d.value)
            } else b.remove(d)
        }
        var e = b.Ma();
        if (0 !== e.length) {
            switch (this.sorting) {
                case Jp:
                    e.reverse();
                    break;
                case Fp:
                    e.sort(this.comparer);
                    break;
                case Hp:
                    e.sort(this.comparer), e.reverse()
            }
            var f = this.wrappingColumn;
            isNaN(f) && (f = 0);
            var g = this.wrappingWidth;
            isNaN(g) && null !== a ? (b = a.padding, g = Math.max(a.viewportBounds.width - b.left - b.right, 0)) : g = Math.max(this.wrappingWidth, 0);
            0 >= f && 0 >= g && (f = 1);
            b = this.spacing.width;
            isFinite(b) || (b = 0);
            c = this.spacing.height;
            isFinite(c) || (c = 0);
            null !== a && a.Aa("Layout");
            d = [];
            switch (this.alignment) {
                case Lp:
                    var h = b,
                        k = c,
                        l = N.alloc(),
                        m = Math.max(this.cellSize.width, 1);
                    if (!isFinite(m))
                        for (var n = m = 0; n < e.length; n++) {
                            var p = this.Hi(e[n], l);
                            m = Math.max(m, p.width)
                        }
                    m = Math.max(m + h, 1);
                    n = Math.max(this.cellSize.height,
                        1);
                    if (!isFinite(n))
                        for (p = n = 0; p < e.length; p++) {
                            var q = this.Hi(e[p], l);
                            n = Math.max(n, q.height)
                        }
                    n = Math.max(n + k, 1);
                    p = this.arrangement;
                    for (var r = q = this.arrangementOrigin.x, u = this.arrangementOrigin.y, v = 0, x = 0, y = 0; y < e.length; y++) {
                        var z = e[y],
                            B = this.Hi(z, l),
                            C = Math.ceil((B.width + h) / m) * m,
                            I = Math.ceil((B.height + k) / n) * n;
                        switch (p) {
                            case Kp:
                                var J = Math.abs(r - B.width);
                                break;
                            default:
                                J = r + B.width
                        }
                        if (0 < f && v > f - 1 || 0 < g && 0 < v && J > g) d.push(new N(0, u, g + h, x)), v = 0, r = q, u += x, x = 0;
                        x = Math.max(x, I);
                        switch (p) {
                            case Kp:
                                B = -B.width;
                                break;
                            default:
                                B =
                                    0
                        }
                        z.moveTo(r + B, u);
                        switch (p) {
                            case Kp:
                                r -= C;
                                break;
                            default:
                                r += C
                        }
                        v++
                    }
                    d.push(new N(0, u, g + h, x));
                    N.free(l);
                    break;
                case Dp:
                    k = g;
                    m = f;
                    n = b;
                    p = c;
                    g = N.alloc();
                    q = Math.max(this.cellSize.width, 1);
                    f = u = l = 0;
                    h = G.alloc();
                    for (r = 0; r < e.length; r++) x = e[r], v = this.Hi(x, g), x = x.th(x.locationObject, x.locationSpot, h), l = Math.max(l, x.x), u = Math.max(u, v.width - x.x), f = Math.max(f, x.y);
                    r = this.arrangement;
                    switch (r) {
                        case Kp:
                            l += n;
                            break;
                        default:
                            u += n
                    }
                    q = isFinite(q) ? Math.max(q + n, 1) : Math.max(l + u, 1);
                    var K = x = this.arrangementOrigin.x;
                    y = this.arrangementOrigin.y;
                    u = 0;
                    k >= l && (k -= l);
                    l = z = 0;
                    C = Math.max(this.cellSize.height, 1);
                    B = f = 0;
                    I = !0;
                    v = G.alloc();
                    for (J = 0; J < e.length; J++) {
                        var X = e[J],
                            Q = this.Hi(X, g),
                            ia = X.th(X.locationObject, X.locationSpot, h);
                        if (0 < u) switch (r) {
                            case Kp:
                                K = (K - x - (Q.width - ia.x)) / q;
                                K = H.ba(Math.round(K), K) ? Math.round(K) : Math.floor(K);
                                K = K * q + x;
                                break;
                            default:
                                K = (K - x + ia.x) / q, K = H.ba(Math.round(K), K) ? Math.round(K) : Math.ceil(K), K = K * q + x
                        } else switch (r) {
                            case Kp:
                                z = K + ia.x + Q.width;
                                break;
                            default:
                                z = K - ia.x
                        }
                        switch (r) {
                            case Kp:
                                var ja = -(K + ia.x) + z;
                                break;
                            default:
                                ja = K + Q.width - ia.x -
                                    z
                        }
                        if (0 < m && u > m - 1 || 0 < k && 0 < u && ja > k) {
                            d.push(new N(0, I ? y - f : y, k + n, B + f + p));
                            for (K = 0; K < u && J !== u; K++) {
                                ja = e[J - u + K];
                                var M = ja.th(ja.locationObject, ja.locationSpot, v);
                                ja.moveTo(ja.position.x, ja.position.y + f - M.y)
                            }
                            B += p;
                            y = I ? y + B : y + (B + f);
                            u = B = f = 0;
                            K = x;
                            I = !1
                        }
                        K === x && (l = r === Kp ? Math.max(l, Q.width - ia.x) : Math.min(l, -ia.x));
                        f = Math.max(f, ia.y);
                        B = Math.max(B, Q.height - ia.y);
                        isFinite(C) && (B = Math.max(B, Math.max(Q.height, C) - ia.y));
                        I ? X.moveTo(K - ia.x, y - ia.y) : X.moveTo(K - ia.x, y);
                        switch (r) {
                            case Kp:
                                K -= ia.x + n;
                                break;
                            default:
                                K += Q.width - ia.x +
                                    n
                        }
                        u++
                    }
                    d.push(new N(0, y, k + n, (I ? B : B + f) + p));
                    if (e.length !== u)
                        for (k = 0; k < u; k++) m = e[e.length - u + k], n = m.th(m.locationObject, m.locationSpot, h), m.moveTo(m.position.x, m.position.y + f - n.y);
                    G.free(h);
                    G.free(v);
                    if (r === Kp)
                        for (e = 0; e < d.length; e++) f = d[e], f.width += l, f.x -= l;
                    else
                        for (e = 0; e < d.length; e++) f = d[e], f.x > l && (f.width += f.x - l, f.x = l);
                    N.free(g)
            }
            for (h = f = g = e = 0; h < d.length; h++) k = d[h], e = Math.min(e, k.x), g = Math.min(g, k.y), f = Math.max(f, k.x + k.width);
            this.arrangement === Kp ? this.commitLayers(d, new G(e + b / 2 - (f + e), g - c / 2)) : this.commitLayers(d,
                new G(e - b / 2, g - c / 2));
            null !== a && a.$a("Layout");
            this.isValidLayout = !0
        }
    };
    yk.prototype.commitLayers = function() {};

    function Gp(a, b) {
        a = a.text;
        b = b.text;
        return a < b ? -1 : a > b ? 1 : 0
    }
    pa.Object.defineProperties(yk.prototype, {
        wrappingWidth: {
            get: function() {
                return this.Fp
            },
            set: function(a) {
                this.Fp !== a && (0 < a || isNaN(a)) && (this.Fp = a, this.isViewportSized = isNaN(a), this.B())
            }
        },
        wrappingColumn: {
            get: function() {
                return this.Ep
            },
            set: function(a) {
                this.Ep !== a && (0 < a || isNaN(a)) && (this.Ep = a, this.B())
            }
        },
        cellSize: {
            get: function() {
                return this.Ag
            },
            set: function(a) {
                this.Ag.A(a) || (this.Ag.assign(a), this.B())
            }
        },
        spacing: {
            get: function() {
                return this.$e
            },
            set: function(a) {
                this.$e.A(a) || (this.$e.assign(a), this.B())
            }
        },
        alignment: {
            get: function() {
                return this.xb
            },
            set: function(a) {
                this.xb === a || a !== Dp && a !== Lp || (this.xb = a, this.B())
            }
        },
        arrangement: {
            get: function() {
                return this.Bb
            },
            set: function(a) {
                this.Bb === a || a !== Ep && a !== Kp || (this.Bb = a, this.B())
            }
        },
        sorting: {
            get: function() {
                return this.Rc
            },
            set: function(a) {
                this.Rc === a || a !== Ip && a !== Jp &&
                    a !== Fp && a !== Hp || (this.Rc = a, this.B())
            }
        },
        comparer: {
            get: function() {
                return this.Nc
            },
            set: function(a) {
                this.Nc !== a && (this.Nc = a, this.B())
            }
        }
    });
    var Lp = new D(yk, "Position", 0),
        Dp = new D(yk, "Location", 1),
        Ep = new D(yk, "LeftToRight", 2),
        Kp = new D(yk, "RightToLeft", 3),
        Ip = new D(yk, "Forward", 4),
        Jp = new D(yk, "Reverse", 5),
        Fp = new D(yk, "Ascending", 6),
        Hp = new D(yk, "Descending", 7);
    yk.className = "GridLayout";
    yk.standardComparer = Gp;
    yk.smartComparer = function(a, b) {
        if (null !== a) {
            if (null !== b) {
                a = a.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/);
                b = b.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/);
                for (var c = 0; c < a.length; c++)
                    if ("" !== b[c] && void 0 !== b[c]) {
                        var d = parseFloat(a[c]),
                            e = parseFloat(b[c]);
                        if (isNaN(d))
                            if (isNaN(e)) {
                                if (0 !== a[c].localeCompare(b[c])) return a[c].localeCompare(b[c])
                            } else return 1;
                        else {
                            if (isNaN(e)) return -1;
                            if (0 !== d - e) return d - e
                        }
                    } else if ("" !== a[c]) return 1;
                return "" !==
                    b[c] && void 0 !== b[c] ? -1 : 0
            }
            return 1
        }
        return null !== b ? -1 : 0
    };
    yk.Position = Lp;
    yk.Location = Dp;
    yk.LeftToRight = Ep;
    yk.RightToLeft = Kp;
    yk.Forward = Ip;
    yk.Reverse = Jp;
    yk.Ascending = Fp;
    yk.Descending = Hp;

    function pi() {
        this.Ao = new F;
        this.eo = new F;
        this.Fa = new F;
        this.Me = new Lb;
        this.Cg = new Lb;
        this.kj = new Lb;
        this.F = null;
        this.wq = !1
    }
    t = pi.prototype;
    t.clear = function() {
        this.Ao.clear();
        this.eo.clear();
        this.Fa.clear();
        this.Me.clear();
        this.Cg.clear();
        this.kj.clear()
    };
    t.nb = function(a) {
        this.F = a
    };
    t.Ji = function(a) {
        if (a instanceof U) {
            if (this.Ao.add(a), a instanceof hg) {
                var b = a.containingGroup;
                null === b ? this.F.vi.add(a) : b.jl.add(a);
                b = a.layout;
                null !== b && (b.diagram = this.F)
            }
        } else a instanceof S ? this.eo.add(a) : a instanceof pf || this.Fa.add(a);
        b = a.data;
        null === b || a instanceof pf || (a instanceof S ? this.Cg.add(b, a) : this.Me.add(b, a))
    };
    t.zc = function(a) {
        a.Nj();
        if (a instanceof U) {
            if (this.Ao.remove(a), a instanceof hg) {
                var b = a.containingGroup;
                null === b ? this.F.vi.remove(a) : b.jl.remove(a);
                b = a.layout;
                null !== b && (b.diagram = null)
            }
        } else a instanceof S ? this.eo.remove(a) : a instanceof pf || this.Fa.remove(a);
        b = a.data;
        null === b || a instanceof pf || (a instanceof S ? this.Cg.remove(b) : this.Me.remove(b))
    };
    t.wd = function() {
        for (var a = this.F.nodeTemplateMap.iterator; a.next();) {
            var b = a.value,
                c = a.key;
            (!b.dc() || b instanceof hg) && A('Invalid node template in Diagram.nodeTemplateMap: template for "' + c + '" must be a Node or a simple Part, not a Group or Link: ' + b)
        }
        for (a = this.F.groupTemplateMap.iterator; a.next();) b = a.value, c = a.key, b instanceof hg || A('Invalid group template in Diagram.groupTemplateMap: template for "' + c + '" must be a Group, not a normal Node or Link: ' + b);
        for (a = this.F.linkTemplateMap.iterator; a.next();) b =
            a.value, c = a.key, b instanceof S || A('Invalid link template in Diagram.linkTemplateMap: template for "' + c + '" must be a Link, not a normal Node or simple Part: ' + b);
        a = Ka();
        for (b = this.F.selection.iterator; b.next();)(c = b.value.data) && a.push(c);
        b = Ka();
        for (c = this.F.highlighteds.iterator; c.next();) {
            var d = c.value.data;
            d && b.push(d)
        }
        c = Ka();
        for (d = this.nodes.iterator; d.next();) {
            var e = d.value;
            null !== e.data && (c.push(e.data), c.push(e.location))
        }
        for (d = this.links.iterator; d.next();) e = d.value, null !== e.data && (c.push(e.data),
            c.push(e.location));
        for (d = this.parts.iterator; d.next();) e = d.value, null !== e.data && (c.push(e.data), c.push(e.location));
        this.removeAllModeledParts();
        this.addAllModeledParts();
        for (d = 0; d < a.length; d++) e = this.xc(a[d]), null !== e && (e.isSelected = !0);
        for (d = 0; d < b.length; d++) e = this.xc(b[d]), null !== e && (e.isHighlighted = !0);
        for (d = 0; d < c.length; d += 2) e = this.xc(c[d]), null !== e && (e.location = c[d + 1]);
        Oa(a);
        Oa(b);
        Oa(c)
    };
    pi.prototype.addAllModeledParts = function() {
        this.addModeledParts(this.diagram.model.nodeDataArray)
    };
    pi.prototype.addModeledParts = function(a, b) {
        var c = this,
            d = this.diagram.model;
        a.forEach(function(a) {
            d.Pb(a) && Mp(c, a, !1)
        });
        a.forEach(function(a) {
            d.Pb(a) && c.resolveReferencesForData(a)
        });
        !1 !== b && bk(this.diagram, !1)
    };

    function Mp(a, b, c) {
        if (void 0 !== b && null !== b && !a.diagram.undoManager.isUndoingRedoing && !a.Me.contains(b)) {
            void 0 === c && (c = !0);
            a: {
                if (void 0 !== b && null !== b && !a.F.undoManager.isUndoingRedoing && !a.Me.contains(b)) {
                    var d = a.Ss(b);
                    var e = oo(a, b, d);
                    if (null !== e && (Xg(e), e = e.copy(), null !== e)) {
                        var f = a.diagram.skipsModelSourceBindings;
                        a.diagram.skipsModelSourceBindings = !0;
                        e.xf = d;
                        e.jb = b;
                        a.wq && (e.Qg = "Tool");
                        a.diagram.add(e);
                        e.jb = null;
                        e.data = b;
                        a.diagram.skipsModelSourceBindings = f;
                        d = e;
                        break a
                    }
                }
                d = null
            }
            null !== d && c && a.resolveReferencesForData(b)
        }
    }
    pi.prototype.insertLink = function() {
        return null
    };
    pi.prototype.resolveReferencesForData = function() {};
    pi.prototype.Ss = function(a) {
        return this.F.model.Ss(a)
    };

    function oo(a, b, c) {
        a = a.F;
        var d = a.model;
        d.Zj() && d.ev(b) ? (b = a.groupTemplateMap.J(c), null === b && (b = a.groupTemplateMap.J(""), null === b && (Np || (Np = !0, ya('No Group template found for category "' + c + '"'), ya("  Using default group template")), b = a.lw))) : (b = a.nodeTemplateMap.J(c), null === b && (b = a.nodeTemplateMap.J(""), null === b && (Op || (Op = !0, ya('No Node template found for category "' + c + '"'), ya("  Using default node template")), b = a.nw)));
        return b
    }
    pi.prototype.getLinkCategoryForData = function() {
        return ""
    };
    pi.prototype.setLinkCategoryForData = function() {};
    pi.prototype.setFromNodeForLink = function() {};
    pi.prototype.setToNodeForLink = function() {};
    pi.prototype.findLinkTemplateForCategory = function(a) {
        var b = this.F.linkTemplateMap.J(a);
        null === b && (b = this.F.linkTemplateMap.J(""), null === b && (Pp || (Pp = !0, ya('No Link template found for category "' + a + '"'), ya("  Using default link template")), b = this.F.mw));
        return b
    };
    pi.prototype.removeAllModeledParts = function() {
        this.nt(this.diagram.model.nodeDataArray)
    };
    pi.prototype.nt = function(a) {
        var b = this;
        a.forEach(function(a) {
            b.lq(a)
        })
    };
    pi.prototype.lq = function(a) {
        a = this.xc(a);
        null !== a && (Ej(this.diagram, a, !1), this.unresolveReferencesForPart(a))
    };
    pi.prototype.unresolveReferencesForPart = function() {};
    pi.prototype.removeDataForLink = function() {};
    pi.prototype.findPartForKey = function(a) {
        if (null === a || void 0 === a) return null;
        a = this.F.model.Qb(a);
        return null !== a ? this.Me.J(a) : null
    };
    t = pi.prototype;
    t.Ib = function(a) {
        if (null === a || void 0 === a) return null;
        a = this.F.model.Qb(a);
        if (null === a) return null;
        a = this.Me.J(a);
        return a instanceof U ? a : null
    };
    t.xc = function(a) {
        if (null === a) return null;
        var b = this.Me.J(a);
        return null !== b ? b : b = this.Cg.J(a)
    };
    t.Bi = function(a) {
        if (null === a) return null;
        a = this.Me.J(a);
        return a instanceof U ? a : null
    };
    t.wc = function(a) {
        return null === a ? null : this.Cg.J(a)
    };
    t.Ps = function(a) {
        for (var b = 0; b < arguments.length; ++b);
        b = new F;
        for (var c = this.Ao.iterator; c.next();) {
            var d = c.value,
                e = d.data;
            if (null !== e)
                for (var f = 0; f < arguments.length; f++) {
                    var g = arguments[f];
                    if (Ca(g) && Qp(this, e, g)) {
                        b.add(d);
                        break
                    }
                }
        }
        return b.iterator
    };
    t.Os = function(a) {
        for (var b = 0; b < arguments.length; ++b);
        b = new F;
        for (var c = this.eo.iterator; c.next();) {
            var d = c.value,
                e = d.data;
            if (null !== e)
                for (var f = 0; f < arguments.length; f++) {
                    var g = arguments[f];
                    if (Ca(g) && Qp(this, e, g)) {
                        b.add(d);
                        break
                    }
                }
        }
        return b.iterator
    };

    function Qp(a, b, c) {
        for (var d in c) {
            var e = b[d],
                f = c[d];
            if (Ea(f)) {
                if (!Ea(e) || e.length < f.length) return !1;
                for (var g = 0; g < e.length; g++) {
                    var h = f[g];
                    if (void 0 !== h && !Rp(a, e[g], h)) return !1
                }
            } else if (!Rp(a, e, f)) return !1
        }
        return !0
    }

    function Rp(a, b, c) {
        if ("function" === typeof c) {
            if (!c(b)) return !1
        } else if (c instanceof RegExp) {
            if (!b || !c.test(b.toString())) return !1
        } else if (Ca(b) && Ca(c)) {
            if (!Qp(a, b, c)) return !1
        } else if (b !== c) return !1;
        return !0
    }
    pi.prototype.doModelChanged = function(a) {
        if (this.F) {
            var b = this.F;
            if (a.model === b.model) {
                var c = a.change;
                b.doModelChanged(a);
                if (b.ca) {
                    b.ca = !1;
                    try {
                        var d = a.modelChange;
                        if ("" !== d)
                            if (c === af) {
                                if ("nodeCategory" === d) {
                                    var e = this.xc(a.object),
                                        f = a.newValue;
                                    null !== e && "string" === typeof f && (e.category = f)
                                } else "nodeDataArray" === d && (this.nt(a.oldValue), this.addModeledParts(a.newValue));
                                b.isModified = !0
                            } else if (c === cf) {
                            var g = a.newValue;
                            "nodeDataArray" === d && Ca(g) && Mp(this, g);
                            b.isModified = !0
                        } else if (c === df) {
                            var h = a.oldValue;
                            "nodeDataArray" === d && Ca(h) && this.lq(h);
                            b.isModified = !0
                        } else c === bf && ("SourceChanged" === d ? null !== a.object ? this.updateDataBindings(a.object, a.propertyName) : (this.sq(), this.updateAllTargetBindings()) : "ModelDisplaced" === d && this.wd());
                        else if (c === af) {
                            var k = a.propertyName,
                                l = a.object;
                            if (l === b.model) {
                                if ("nodeKeyProperty" === k || "nodeCategoryProperty" === k) b.undoManager.isUndoingRedoing || this.wd()
                            } else this.updateDataBindings(l, k);
                            b.isModified = !0
                        } else if (c === cf || c === df) {
                            var m = a.change === cf,
                                n = m ? a.newParam : a.oldParam,
                                p = m ? a.newValue : a.oldValue,
                                q = this.kj.J(a.object);
                            if (Array.isArray(q))
                                for (a = 0; a < q.length; a++) {
                                    var r = q[a];
                                    if (m) Wm(r, p, n);
                                    else if (!(0 > n)) {
                                        var u = n + Pm(r);
                                        r.zc(u, !0);
                                        $m(r, u, n)
                                    }
                                }
                            b.isModified = !0
                        }
                    } finally {
                        b.ca = !0
                    }
                }
            }
        }
    };
    pi.prototype.updateAllTargetBindings = function(a) {
        void 0 === a && (a = "");
        for (var b = this.parts.iterator; b.next();) b.value.Ea(a);
        for (b = this.nodes.iterator; b.next();) b.value.Ea(a);
        for (b = this.links.iterator; b.next();) b.value.Ea(a)
    };
    pi.prototype.sq = function() {
        for (var a = this.F.model, b = new F, c = a.nodeDataArray, d = 0; d < c.length; d++) b.add(c[d]);
        var e = [];
        this.nodes.each(function(a) {
            null === a.data || b.contains(a.data) || e.push(a.data)
        });
        this.parts.each(function(a) {
            null === a.data || b.contains(a.data) || e.push(a.data)
        });
        e.forEach(function(b) {
            Sp(a, b, !1)
        });
        for (d = 0; d < c.length; d++) {
            var f = c[d];
            null === this.xc(f) && Tp(a, f, !1)
        }
        this.refreshDataBoundLinks();
        for (c = this.parts.iterator; c.next();) c.value.updateRelationshipsFromData();
        for (c = this.nodes.iterator; c.next();) c.value.updateRelationshipsFromData();
        for (c = this.links.iterator; c.next();) c.value.updateRelationshipsFromData()
    };
    pi.prototype.refreshDataBoundLinks = function() {};
    pi.prototype.updateRelationshipsFromData = function() {};
    pi.prototype.updateDataBindings = function(a, b) {
        if ("string" === typeof b) {
            var c = this.xc(a);
            if (null !== c) c.Ea(b);
            else {
                c = null;
                for (var d = this.kj.iterator; d.next();) {
                    for (var e = d.value, f = 0; f < e.length; f++) {
                        var g = e[f].bx(a);
                        null !== g && (null === c && (c = Ka()), c.push(g))
                    }
                    if (null !== c) break
                }
                if (null !== c) {
                    for (d = 0; d < c.length; d++) c[d].Ea(b);
                    Oa(c)
                }
            }
            a === this.diagram.model.modelData && this.updateAllTargetBindings(b)
        }
    };

    function zj(a, b) {
        var c = b.ci;
        if (Ea(c)) {
            var d = a.kj.J(c);
            if (null === d) d = [], d.push(b), a.kj.add(c, d);
            else {
                for (a = 0; a < d.length; a++)
                    if (d[a] === b) return;
                d.push(b)
            }
        }
    }

    function Dj(a, b) {
        var c = b.ci;
        if (Ea(c)) {
            var d = a.kj.J(c);
            if (null !== d)
                for (var e = 0; e < d.length; e++)
                    if (d[e] === b) {
                        d.splice(e, 1);
                        0 === d.length && a.kj.remove(c);
                        break
                    }
        }
    }
    pi.prototype.Sj = function(a, b, c) {
        var d = new Lb;
        if (Ea(a))
            for (var e = 0; e < a.length; e++) Up(this, a[e], b, d, c);
        else
            for (a = a.iterator; a.next();) Up(this, a.value, b, d, c);
        if (null !== b) {
            c = b.model;
            a = b.toolManager.findTool("Dragging");
            a = null !== a ? a.dragOptions.dragsLink : b.Ek.dragsLink;
            e = new F;
            for (var f = new Lb, g = d.iterator; g.next();) {
                var h = g.value;
                if (h instanceof S) a || null !== h.fromNode && null !== h.toNode || e.add(h);
                else if (h instanceof U && null !== h.data && c.cm()) {
                    var k = h;
                    h = g.key;
                    var l = h.ng();
                    null !== l && (l = d.J(l), null !== l ? (c.He(k.data,
                        c.pa(l.data)), k = b.wc(k.data), h = h.Di(), null !== h && null !== k && f.add(h, k)) : c.He(k.data, void 0))
                }
            }
            0 < e.count && b.ot(e, !1);
            if (0 < f.count)
                for (c = f.iterator; c.next();) d.add(c.key, c.value)
        }
        if (null !== b && null !== this.F && (b = b.model, c = b.afterCopyFunction, null !== c)) {
            var m = new Lb;
            d.each(function(a) {
                null !== a.key.data && m.add(a.key.data, a.value.data)
            });
            c(m, b, this.F.model)
        }
        for (b = d.iterator; b.next();) b.value.Ea();
        return d
    };

    function Up(a, b, c, d, e) {
        if (null === b || e && !b.canCopy()) return null;
        if (d.contains(b)) return d.J(b);
        var f = a.copyPartData(b, c);
        if (!(f instanceof T)) return null;
        f.isSelected = !1;
        f.isHighlighted = !1;
        d.add(b, f);
        if (b instanceof U) {
            for (var g = b.linksConnected; g.next();) {
                var h = g.value;
                if (h.fromNode === b) {
                    var k = d.J(h);
                    null !== k && (k.fromNode = f)
                }
                h.toNode === b && (h = d.J(h), null !== h && (h.toNode = f))
            }
            if (b instanceof hg && f instanceof hg)
                for (b = b.memberParts; b.next();) g = Up(a, b.value, c, d, e), g instanceof S || null === g || (g.containingGroup =
                    f)
        } else if (b instanceof S && f instanceof S)
            for (g = b.fromNode, null !== g && (g = d.J(g), null !== g && (f.fromNode = g)), g = b.toNode, null !== g && (g = d.J(g), null !== g && (f.toNode = g)), b = b.labelNodes; b.next();) g = Up(a, b.value, c, d, e), null !== g && g instanceof U && (g.labeledLink = f);
        return f
    }
    pi.prototype.copyPartData = function(a, b) {
        var c = null,
            d = a.data;
        if (null !== d && null !== b) {
            var e = b.model;
            a instanceof S || (d = e.copyNodeData(d), Ca(d) && (e.jf(d), c = b.xc(d)))
        } else Xg(a), c = a.copy(), null !== c && (e = this.F, null !== b ? b.add(c) : null !== d && null !== e && null !== e.commandHandler && e.commandHandler.copiesClipboardData && (b = e.model, e = null, c instanceof S || (e = b.copyNodeData(d)), Ca(e) && (c.data = e)));
        return c
    };
    pa.Object.defineProperties(pi.prototype, {
        nodes: {
            get: function() {
                return this.Ao
            }
        },
        links: {
            get: function() {
                return this.eo
            }
        },
        parts: {
            get: function() {
                return this.Fa
            }
        },
        diagram: {
            get: function() {
                return this.F
            }
        },
        addsToTemporaryLayer: {
            get: function() {
                return this.wq
            },
            set: function(a) {
                this.wq = a
            }
        }
    });
    pi.prototype.updateAllRelationshipsFromData = pi.prototype.sq;
    pi.prototype.findLinksByExample = pi.prototype.Os;
    pi.prototype.findNodesByExample = pi.prototype.Ps;
    pi.prototype.findLinkForData = pi.prototype.wc;
    pi.prototype.findNodeForData = pi.prototype.Bi;
    pi.prototype.findPartForData = pi.prototype.xc;
    pi.prototype.findNodeForKey = pi.prototype.Ib;
    pi.prototype.removeModeledPart = pi.prototype.lq;
    pi.prototype.removeModeledParts = pi.prototype.nt;
    pi.prototype.rebuildParts = pi.prototype.wd;
    var Op = !1,
        Np = !1,
        Pp = !1;
    pi.className = "PartManager";

    function Vp(a) {
        pi.apply(this, arguments)
    }
    oa(Vp, pi);
    Vp.prototype.addAllModeledParts = function() {
        var a = this.diagram.model;
        this.addModeledParts(a.nodeDataArray);
        Wp(this, a.linkDataArray)
    };
    Vp.prototype.addModeledParts = function(a) {
        pi.prototype.addModeledParts.call(this, a, !1);
        for (a = this.links.iterator; a.next();) po(a.value);
        bk(this.diagram, !1)
    };

    function Wp(a, b) {
        b.forEach(function(b) {
            Xp(a, b)
        });
        bk(a.diagram, !1)
    }

    function Xp(a, b) {
        if (void 0 !== b && null !== b && !a.diagram.undoManager.isUndoingRedoing && !a.Cg.contains(b)) {
            var c = a.getLinkCategoryForData(b),
                d = a.findLinkTemplateForCategory(c);
            if (null !== d) {
                Xg(d);
                var e = d.copy();
                if (null !== e) {
                    d = a.diagram.skipsModelSourceBindings;
                    a.diagram.skipsModelSourceBindings = !0;
                    e.xf = c;
                    e.jb = b;
                    c = a.diagram.model;
                    var f = Yp(c, b, !0);
                    "" !== f && (e.fromPortId = f);
                    f = Zp(c, b, !0);
                    void 0 !== f && (f = a.Ib(f), f instanceof U && (e.fromNode = f));
                    f = Yp(c, b, !1);
                    "" !== f && (e.toPortId = f);
                    f = Zp(c, b, !1);
                    void 0 !== f && (f = a.Ib(f),
                        f instanceof U && (e.toNode = f));
                    c = c.og(b);
                    Array.isArray(c) && c.forEach(function(b) {
                        b = a.Ib(b);
                        null !== b && (b.labeledLink = e)
                    });
                    a.wq && (e.Qg = "Tool");
                    a.diagram.add(e);
                    e.jb = null;
                    e.data = b;
                    a.diagram.skipsModelSourceBindings = d
                }
            }
        }
    }
    Vp.prototype.removeAllModeledParts = function() {
        var a = this.diagram.model;
        $p(this, a.linkDataArray);
        this.nt(a.nodeDataArray)
    };

    function $p(a, b) {
        b.forEach(function(b) {
            a.lq(b)
        })
    }
    Vp.prototype.getLinkCategoryForData = function(a) {
        return this.diagram.model.Vu(a)
    };
    Vp.prototype.setLinkCategoryForData = function(a, b) {
        return this.diagram.model.qt(a, b)
    };
    Vp.prototype.setFromNodeForLink = function(a, b) {
        var c = this.diagram.model;
        c.Ax(a.data, c.pa(null !== b ? b.data : null))
    };
    Vp.prototype.setToNodeForLink = function(a, b) {
        var c = this.diagram.model;
        c.Ex(a.data, c.pa(null !== b ? b.data : null))
    };
    Vp.prototype.removeDataForLink = function(a) {
        this.diagram.model.km(a.data)
    };
    Vp.prototype.findPartForKey = function(a) {
        var b = pi.prototype.findPartForKey.call(this, a);
        return null === b && (a = this.diagram.model.rh(a), null !== a) ? this.Cg.J(a) : b
    };
    Vp.prototype.doModelChanged = function(a) {
        var b = this;
        pi.prototype.doModelChanged.call(this, a);
        if (this.diagram) {
            var c = this.diagram;
            if (a.model === c.model) {
                var d = a.change;
                if (c.ca) {
                    c.ca = !1;
                    try {
                        var e = a.modelChange;
                        if ("" !== e)
                            if (d === af) {
                                if ("linkFromKey" === e) {
                                    var f = this.wc(a.object);
                                    if (null !== f) {
                                        var g = this.Ib(a.newValue);
                                        f.fromNode = g
                                    }
                                } else if ("linkToKey" === e) {
                                    var h = this.wc(a.object);
                                    if (null !== h) {
                                        var k = this.Ib(a.newValue);
                                        h.toNode = k
                                    }
                                } else if ("linkFromPortId" === e) {
                                    var l = this.wc(a.object);
                                    if (null !== l) {
                                        var m = a.newValue;
                                        "string" === typeof m && (l.fromPortId = m)
                                    }
                                } else if ("linkToPortId" === e) {
                                    var n = this.wc(a.object);
                                    if (null !== n) {
                                        var p = a.newValue;
                                        "string" === typeof p && (n.toPortId = p)
                                    }
                                } else if ("nodeGroupKey" === e) {
                                    var q = this.xc(a.object);
                                    if (null !== q) {
                                        var r = a.newValue;
                                        if (void 0 !== r) {
                                            var u = this.Ib(r);
                                            u instanceof hg ? q.containingGroup = u : q.containingGroup = null
                                        } else q.containingGroup = null
                                    }
                                } else if ("linkLabelKeys" === e) {
                                    var v = this.wc(a.object);
                                    if (null !== v) {
                                        var x = a.oldValue,
                                            y = a.newValue;
                                        Array.isArray(x) && x.forEach(function(a) {
                                            a = b.Ib(a);
                                            null !== a && (a.labeledLink = null)
                                        });
                                        Array.isArray(y) && y.forEach(function(a) {
                                            a = b.Ib(a);
                                            null !== a && (a.labeledLink = v)
                                        })
                                    }
                                } else if ("linkCategory" === e) {
                                    var z = this.wc(a.object),
                                        B = a.newValue;
                                    null !== z && "string" === typeof B && (z.category = B)
                                } else "linkDataArray" === e && ($p(this, a.oldValue), Wp(this, a.newValue));
                                c.isModified = !0
                            } else if (d === cf) {
                            var C = a.newValue;
                            if ("linkDataArray" === e && "object" === typeof C && null !== C) Xp(this, C);
                            else if ("linkLabelKeys" === e && aq(C)) {
                                var I = this.wc(a.object),
                                    J = this.Ib(C);
                                null !== I && null !== J && (J.labeledLink =
                                    I)
                            }
                            c.isModified = !0
                        } else {
                            if (d === df) {
                                var K = a.oldValue;
                                if ("linkDataArray" === e && "object" === typeof K && null !== K) this.lq(K);
                                else if ("linkLabelKeys" === e && aq(K)) {
                                    var X = this.Ib(K);
                                    null !== X && (X.labeledLink = null)
                                }
                                c.isModified = !0
                            }
                        } else if (d === af) {
                            var Q = a.propertyName,
                                ia = a.object;
                            if (ia === c.model) {
                                if ("linkFromKeyProperty" === Q || "linkToKeyProperty" === Q || "linkFromPortIdProperty" === Q || "linkToPortIdProperty" === Q || "linkLabelKeysProperty" === Q || "nodeIsGroupProperty" === Q || "nodeGroupKeyProperty" === Q || "linkCategoryProperty" ===
                                    Q) c.undoManager.isUndoingRedoing || this.wd()
                            } else this.updateDataBindings(ia, Q);
                            c.isModified = !0
                        }
                    } finally {
                        c.ca = !0
                    }
                }
            }
        }
    };
    Vp.prototype.refreshDataBoundLinks = function() {
        var a = this,
            b = this.diagram.model,
            c = new F,
            d = b.linkDataArray;
        d.forEach(function(a) {
            c.add(a)
        });
        var e = [];
        this.links.each(function(a) {
            null === a.data || c.contains(a.data) || e.push(a.data)
        });
        e.forEach(function(a) {
            bq(b, a, !1)
        });
        d.forEach(function(c) {
            null === a.wc(c) && cq(b, c, !1)
        })
    };
    Vp.prototype.updateRelationshipsFromData = function(a) {
        var b = a.data;
        if (null !== b) {
            var c = a.diagram;
            if (null !== c) {
                var d = c.model;
                if (a instanceof S) {
                    var e = Zp(d, b, !0);
                    e = c.Ib(e);
                    a.fromNode = e;
                    e = Zp(d, b, !1);
                    e = c.Ib(e);
                    a.toNode = e;
                    b = d.og(b);
                    if (0 < b.length || 0 < a.labelNodes.count) {
                        if (1 === b.length && 1 === a.labelNodes.count) {
                            e = b[0];
                            var f = a.labelNodes.first();
                            if (d.pa(f.data) === e) return
                        }
                        e = (new F).addAll(b);
                        var g = new F;
                        a.labelNodes.each(function(a) {
                            null !== a.data && (a = d.pa(a.data), void 0 !== a && g.add(a))
                        });
                        b = g.copy();
                        b.kq(e);
                        e =
                            e.copy();
                        e.kq(g);
                        if (0 < b.count || 0 < e.count) b.each(function(b) {
                            b = c.Ib(b);
                            null !== b && b.labeledLink === a && (b.labeledLink = null)
                        }), e.each(function(b) {
                            b = c.Ib(b);
                            null !== b && b.labeledLink !== a && (b.labeledLink = a)
                        })
                    }
                } else !(a instanceof pf) && (b = d.Gi(b), b = c.findPartForKey(b), null === b || b instanceof hg) && (a.containingGroup = b)
            }
        }
    };
    Vp.prototype.resolveReferencesForData = function(a) {
        var b = this.diagram.model,
            c = b.pa(a);
        if (void 0 !== c) {
            var d = dq(b, c),
                e = this.xc(a);
            if (null !== d && null !== e) {
                d = d.iterator;
                for (var f = {}; d.next();) {
                    var g = d.value;
                    b.Pb(g) ? e instanceof hg && b.Gi(g) === c && (g = this.xc(g), null !== g && (g.containingGroup = e)) : (f.link = this.wc(g), null !== f.link && e instanceof U && (Zp(b, g, !0) === c && (f.link.fromNode = e), Zp(b, g, !1) === c && (f.link.toNode = e), g = b.og(g), Array.isArray(g) && g.some(function(a) {
                        return function(b) {
                            return b === c ? (e.labeledLink =
                                a.link, !0) : !1
                        }
                    }(f))));
                    f = {
                        link: f.link
                    }
                }
                eq(b, c)
            }
            a = b.Gi(a);
            void 0 !== a && (a = this.Ib(a), a instanceof hg && (e.containingGroup = a))
        }
    };
    Vp.prototype.unresolveReferencesForPart = function(a) {
        var b = this.diagram.model;
        if (a instanceof U) {
            var c = b.pa(a.data);
            if (void 0 !== c) {
                for (var d = a.linksConnected; d.next();) fq(b, c, d.value.data);
                a.isLinkLabel && (d = a.labeledLink, null !== d && fq(b, c, d.data));
                if (a instanceof hg)
                    for (a = a.memberParts; a.next();) d = a.value.data, b.Pb(d) && fq(b, c, d)
            }
        }
    };
    Vp.prototype.copyPartData = function(a, b) {
        var c = pi.prototype.copyPartData.call(this, a, b);
        if (a instanceof S)
            if (a = a.data, null !== a && null !== b) {
                var d = b.model;
                a = d.Mp(a);
                "object" === typeof a && null !== a && (d.yi(a), c = b.wc(a))
            } else null !== c && (b = this.diagram, null !== a && null !== b && null !== b.commandHandler && b.commandHandler.copiesClipboardData && (b = b.model.Mp(a), "object" === typeof b && null !== b && (c.data = b)));
        return c
    };
    Vp.prototype.insertLink = function(a, b, c, d) {
        var e = this.diagram,
            f = e.model,
            g = e.toolManager.findTool("Linking"),
            h = "";
        null !== a && (null === b && (b = a), h = b.portId, null === h && (h = ""));
        b = "";
        null !== c && (null === d && (d = c), b = d.portId, null === b && (b = ""));
        d = g.archetypeLinkData;
        if (d instanceof S) {
            if (Xg(d), f = d.copy(), null !== f) return f.fromNode = a, f.fromPortId = h, f.toNode = c, f.toPortId = b, e.add(f), a = g.archetypeLabelNodeData, a instanceof U && (Xg(a), a = a.copy(), null !== a && (a.labeledLink = f, e.add(a))), f
        } else if (null !== d && (d = f.Mp(d), "object" ===
                typeof d && null !== d)) return null !== a && gq(f, d, f.pa(a.data), !0), hq(f, d, h, !0), null !== c && gq(f, d, f.pa(c.data), !1), hq(f, d, b, !1), f.yi(d), a = g.archetypeLabelNodeData, null === a || a instanceof U || (a = f.copyNodeData(a), "object" === typeof a && null !== a && (f.jf(a), a = f.pa(a), void 0 !== a && f.Cu(d, a))), e.wc(d);
        return null
    };
    Vp.prototype.findPartForKey = Vp.prototype.findPartForKey;
    Vp.prototype.removeAllModeledParts = Vp.prototype.removeAllModeledParts;
    Vp.prototype.addModeledParts = Vp.prototype.addModeledParts;
    Vp.prototype.addAllModeledParts = Vp.prototype.addAllModeledParts;
    Vp.className = "GraphLinksPartManager";

    function iq() {
        pi.apply(this, arguments);
        this.Zg = null
    }
    oa(iq, pi);

    function jq(a, b, c) {
        if (null !== b && null !== c) {
            var d = a.diagram.toolManager.findTool("Linking"),
                e = b,
                f = c;
            if (a.diagram.isTreePathToChildren)
                for (b = f.linksConnected; b.next();) {
                    if (b.value.toNode === f) return
                } else
                    for (e = c, f = b, b = e.linksConnected; b.next();)
                        if (b.value.fromNode === e) return;
            if (null === d || !ug(d, e, f, null, !0))
                if (d = a.getLinkCategoryForData(c.data), b = a.findLinkTemplateForCategory(d), null !== b && (Xg(b), b = b.copy(), null !== b)) {
                    var g = a.diagram.skipsModelSourceBindings;
                    a.diagram.skipsModelSourceBindings = !0;
                    b.xf = d;
                    b.jb = c.data;
                    b.fromNode = e;
                    b.toNode = f;
                    a.diagram.add(b);
                    b.jb = null;
                    b.data = c.data;
                    a.diagram.skipsModelSourceBindings = g
                }
        }
    }
    iq.prototype.getLinkCategoryForData = function(a) {
        return this.diagram.model.Wu(a)
    };
    iq.prototype.setLinkCategoryForData = function(a, b) {
        this.diagram.model.Cv(a, b)
    };
    iq.prototype.setFromNodeForLink = function(a, b, c) {
        var d = this.diagram.model;
        void 0 === c && (c = null);
        b = null !== b ? b.data : null;
        if (this.diagram.isTreePathToChildren) d.He(a.data, d.pa(b));
        else {
            var e = this.Zg;
            this.Zg = a;
            null !== c && d.He(c.data, void 0);
            d.He(b, d.pa(null !== a.toNode ? a.toNode.data : null));
            this.Zg = e
        }
    };
    iq.prototype.setToNodeForLink = function(a, b, c) {
        var d = this.diagram.model;
        void 0 === c && (c = null);
        b = null !== b ? b.data : null;
        if (this.diagram.isTreePathToChildren) {
            var e = this.Zg;
            this.Zg = a;
            null !== c && d.He(c.data, void 0);
            d.He(b, d.pa(null !== a.fromNode ? a.fromNode.data : null));
            this.Zg = e
        } else d.He(a.data, d.pa(b))
    };
    iq.prototype.removeDataForLink = function(a) {
        this.diagram.model.He(a.data, void 0)
    };
    iq.prototype.doModelChanged = function(a) {
        pi.prototype.doModelChanged.call(this, a);
        if (this.diagram) {
            var b = this.diagram;
            if (a.model === b.model) {
                var c = a.change;
                if (b.ca) {
                    b.ca = !1;
                    try {
                        var d = a.modelChange;
                        if ("" !== d) {
                            if (c === af) {
                                if ("nodeParentKey" === d) {
                                    var e = a.object,
                                        f = this.Ib(a.newValue),
                                        g = this.Bi(e);
                                    if (null !== this.Zg) null !== f && (this.Zg.data = e, this.Zg.category = this.getLinkCategoryForData(e));
                                    else if (null !== g) {
                                        var h = g.Di();
                                        null !== h ? null === f ? b.remove(h) : b.isTreePathToChildren ? h.fromNode = f : h.toNode = f : jq(this, f,
                                            g)
                                    }
                                } else if ("parentLinkCategory" === d) {
                                    var k = this.Bi(a.object),
                                        l = a.newValue;
                                    if (null !== k && "string" === typeof l) {
                                        var m = k.Di();
                                        null !== m && (m.category = l)
                                    }
                                }
                                b.isModified = !0
                            }
                        } else if (c === af) {
                            var n = a.propertyName,
                                p = a.object;
                            p === b.model ? "nodeParentKeyProperty" === n && (b.undoManager.isUndoingRedoing || this.wd()) : this.updateDataBindings(p, n);
                            b.isModified = !0
                        }
                    } finally {
                        b.ca = !0
                    }
                }
            }
        }
    };
    iq.prototype.updateRelationshipsFromData = function(a) {
        var b = a.data;
        if (null !== b) {
            var c = a.diagram;
            if (null !== c) {
                var d = c.model;
                a instanceof U && (b = d.Ii(b), b = c.Ib(b), d = a.ng(), b !== d && (d = a.Di(), null !== b ? null !== d ? c.isTreePathToChildren ? d.fromNode = b : d.toNode = b : jq(this, b, a) : null !== d && Ej(c, d, !1)))
            }
        }
    };
    iq.prototype.updateDataBindings = function(a, b) {
        pi.prototype.updateDataBindings.call(this, a, b);
        "string" === typeof b && null !== this.xc(a) && (a = this.wc(a), null !== a && a.Ea(b))
    };
    iq.prototype.resolveReferencesForData = function(a) {
        var b = this.diagram.model,
            c = b.pa(a);
        if (void 0 !== c) {
            var d = dq(b, c),
                e = this.xc(a);
            if (null !== d && null !== e) {
                for (d = d.iterator; d.next();) {
                    var f = d.value;
                    b.Pb(f) && e instanceof U && b.Ii(f) === c && jq(this, e, this.Bi(f))
                }
                eq(b, c)
            }
            a = b.Ii(a);
            void 0 !== a && e instanceof U && (a = this.Ib(a), jq(this, a, e))
        }
    };
    iq.prototype.unresolveReferencesForPart = function(a) {
        var b = this.diagram.model;
        if (a instanceof U) {
            var c = b.pa(a.data),
                d = this.wc(a.data);
            if (null !== d) {
                d.isSelected = !1;
                d.isHighlighted = !1;
                var e = d.layer;
                if (null !== e) {
                    var f = e.zc(-1, d, !1);
                    0 <= f && this.diagram.bb(df, "parts", e, d, null, f, null);
                    f = d.layerChanged;
                    null !== f && f(d, e, null)
                }
            }
            d = this.diagram.isTreePathToChildren;
            for (a = a.linksConnected; a.next();) e = a.value, e = (d ? e.toNode : e.fromNode).data, b.Pb(e) && fq(b, c, e)
        }
    };
    iq.prototype.insertLink = function(a, b, c) {
        b = this.diagram.model;
        var d = a,
            e = c;
        this.diagram.isTreePathToChildren || (d = c, e = a);
        return null !== d && null !== e ? (b.He(e.data, b.pa(d.data)), e.Di()) : null
    };
    iq.className = "TreePartManager";

    function Z(a) {
        this.Bt = ',\n  "insertedNodeKeys": ';
        this.bw = ',\n  "modifiedNodeData": ';
        this.Dt = ',\n  "removedNodeKeys": ';
        mb(this);
        this.kn = this.Ta = "";
        this.Jf = !1;
        this.l = {};
        this.Hc = [];
        this.eb = new Lb;
        this.ji = "key";
        this.Bk = this.gl = null;
        this.$m = this.an = !1;
        this.cn = !0;
        this.Km = null;
        this.sj = "category";
        this.Df = new Lb;
        this.cu = new E;
        this.ah = !1;
        this.u = null;
        this.undoManager = new ff;
        void 0 !== a && (this.nodeDataArray = a)
    }
    Z.prototype.cloneProtected = function(a) {
        a.Ta = this.Ta;
        a.kn = this.kn;
        a.Jf = this.Jf;
        a.ji = this.ji;
        a.gl = this.gl;
        a.Bk = this.Bk;
        a.an = this.an;
        a.$m = this.$m;
        a.cn = this.cn;
        a.Km = this.Km;
        a.sj = this.sj
    };
    Z.prototype.copy = function() {
        var a = new this.constructor;
        this.cloneProtected(a);
        return a
    };
    t = Z.prototype;
    t.clear = function() {
        this.Hc = [];
        this.eb.clear();
        this.Df.clear();
        this.undoManager.clear()
    };
    t.toString = function(a) {
        void 0 === a && (a = 0);
        if (1 < a) return this.qq();
        var b = ("" !== this.name ? this.name : "") + " Model";
        if (0 < a) {
            b += "\n node data:";
            a = this.nodeDataArray;
            for (var c = a.length, d = 0; d < c; d++) {
                var e = a[d];
                b += " " + this.pa(e) + ":" + Qa(e)
            }
        }
        return b
    };
    t.mk = function() {
        var a = "";
        "" !== this.name && (a += ',\n  "name": ' + this.quote(this.name));
        "" !== this.dataFormat && (a += ',\n  "dataFormat": ' + this.quote(this.dataFormat));
        this.isReadOnly && (a += ',\n  "isReadOnly": ' + this.isReadOnly);
        "key" !== this.nodeKeyProperty && "string" === typeof this.nodeKeyProperty && (a += ',\n  "nodeKeyProperty": ' + this.quote(this.nodeKeyProperty));
        this.copiesArrays && (a += ',\n  "copiesArrays": true');
        this.copiesArrayObjects && (a += ',\n  "copiesArrayObjects": true');
        this.copiesKey || (a += ',\n  "copiesKey": false');
        "category" !== this.nodeCategoryProperty && "string" === typeof this.nodeCategoryProperty && (a += ',\n  "nodeCategoryProperty": ' + this.quote(this.nodeCategoryProperty));
        return a
    };
    t.jq = function(a) {
        a.name && (this.name = a.name);
        a.dataFormat && (this.dataFormat = a.dataFormat);
        a.isReadOnly && (this.isReadOnly = !0);
        a.nodeKeyProperty && (this.nodeKeyProperty = a.nodeKeyProperty);
        a.copiesArrays && (this.copiesArrays = !0);
        a.copiesArrayObjects && (this.copiesArrayObjects = !0);
        a.copiesKey || (this.copiesKey = !1);
        a.nodeCategoryProperty && (this.nodeCategoryProperty = a.nodeCategoryProperty)
    };

    function kq(a) {
        return ',\n  "modelData": ' + lq(a, a.modelData)
    }

    function mq(a, b) {
        b = b.modelData;
        Ca(b) && (a.mm(b), a.modelData = b)
    }
    t.Vv = function() {
        var a = this.modelData,
            b = !1,
            c;
        for (c in a)
            if (!nq(c, a[c])) {
                b = !0;
                break
            } a = "";
        b && (a = kq(this));
        return a + ',\n  "nodeDataArray": ' + oq(this, this.nodeDataArray, !0)
    };
    t.qv = function(a) {
        mq(this, a);
        a = a.nodeDataArray;
        Ea(a) && (this.mm(a), this.nodeDataArray = a)
    };

    function pq(a, b, c, d) {
        if (b === c) return !0;
        if (typeof b !== typeof c || "function" === typeof b || "function" === typeof c) return !1;
        if (Array.isArray(b) && Array.isArray(c)) {
            if (d.J(b) === c) return !0;
            d.add(b, c);
            if (b.length !== c.length) return !1;
            for (var e = 0; e < b.length; e++)
                if (!pq(a, b[e], c[e], d)) return !1;
            return !0
        }
        if (Ca(b) && Ca(c)) {
            if (d.J(b) === c) return !0;
            d.add(b, c);
            for (var f in b) {
                var g = b[f];
                if (!nq(f, g)) {
                    var h = c[f];
                    if (void 0 === h || !pq(a, g, h, d)) return !1
                }
            }
            for (e in c)
                if (f = c[e], !nq(e, f) && (g = b[e], void 0 === g || !pq(a, g, f, d))) return !1;
            return !0
        }
        return !1
    }

    function qq(a, b, c) {
        a[c] !== b[c] && A("Model.computeJsonDifference: Model." + c + ' is not the same in both models: "' + a[c] + '" and "' + b[c] + '"')
    }
    t.uq = function(a) {
        qq(this, a, "nodeKeyProperty");
        for (var b = new F, c = new F, d = (new F).addAll(this.eb.iteratorKeys), e = new Lb, f = a.nodeDataArray, g = f.length, h = 0; h < g; h++) {
            var k = f[h],
                l = a.pa(k);
            if (void 0 !== l) {
                d.remove(l);
                var m = this.Qb(l);
                null === m ? (b.add(l), c.add(k)) : pq(this, m, k, e) || c.add(k)
            } else this.et(k), l = this.pa(k), b.add(l), c.add(k)
        }
        f = "";
        pq(this, this.modelData, a.modelData, e) || (f += kq(this));
        0 < b.count && (f += this.Bt + oq(this, b.Ma(), !0));
        0 < c.count && (f += this.bw + oq(this, c.Ma(), !0));
        0 < d.count && (f += this.Dt + oq(this,
            d.Ma(), !0));
        return f
    };
    t.Ww = function(a, b) {
        void 0 === b && (this.constructor === Z ? b = "go.Model" : b = rq(this, this));
        return '{ "class": ' + this.quote(b) + ', "incremental": 1' + this.mk() + this.uq(a) + "}"
    };
    t.my = function(a, b) {
        return this.Ww(a, b)
    };
    t.Uv = function(a, b) {
        var c = this,
            d = !1,
            e = new F,
            f = new F,
            g = new F;
        a.changes.each(function(a) {
            a.model === c && ("nodeDataArray" === a.modelChange ? a.change === cf ? e.add(a.newValue) : a.change === df && g.add(a.oldValue) : c.Pb(a.object) ? f.add(a.object) : c.modelData === a.object && a.change === af && (d = !0))
        });
        var h = new F;
        e.each(function(a) {
            h.add(c.pa(a));
            b || f.add(a)
        });
        var k = new F;
        g.each(function(a) {
            k.add(c.pa(a));
            b && f.add(a)
        });
        a = "";
        d && (a += kq(this));
        0 < h.count && (a += (b ? this.Dt : this.Bt) + oq(this, h.Ma(), !0));
        0 < f.count && (a += this.bw + oq(this,
            f.Ma(), !0));
        0 < k.count && (a += (b ? this.Bt : this.Dt) + oq(this, k.Ma(), !0));
        return a
    };
    t.pv = function(a) {
        mq(this, a);
        var b = a.insertedNodeKeys,
            c = a.modifiedNodeData,
            d = new Lb;
        if (Array.isArray(c))
            for (var e = 0; e < c.length; e++) {
                var f = c[e],
                    g = this.pa(f);
                void 0 !== g && null !== g && d.set(g, f)
            }
        if (Array.isArray(b))
            for (e = b.length, f = 0; f < e; f++) {
                g = b[f];
                var h = this.Qb(g);
                null === h && (h = (h = d.get(g)) ? h : this.copyNodeData({}), this.sm(h, g), this.jf(h))
            }
        if (Array.isArray(c))
            for (b = c.length, d = 0; d < b; d++)
                if (e = c[d], f = this.pa(e), f = this.Qb(f), null !== f)
                    for (var k in e) "__gohashid" === k || k === this.nodeKeyProperty || this.Yj() && k ===
                        this.nodeIsGroupProperty || this.setDataProperty(f, k, e[k]);
        a = a.removedNodeKeys;
        if (Array.isArray(a))
            for (c = a.length, k = 0; k < c; k++) b = this.Qb(a[k]), null !== b && this.lm(b)
    };
    t.Ix = function(a, b) {
        a.change !== bf && A("Model.toIncrementalJson argument is not a Transaction ChangedEvent:" + a.toString());
        var c = a.object;
        if (!(a.isTransactionFinished && c instanceof ef)) return '{ "incremental": 0 }';
        void 0 === b && (this.constructor === Z ? b = "go.Model" : b = rq(this, this));
        return '{ "class": ' + this.quote(b) + ', "incremental": 1' + this.mk() + this.Uv(c, "FinishedUndo" === a.propertyName) + "}"
    };
    t.Pz = function(a, b) {
        return this.Ix(a, b)
    };
    t.qq = function(a) {
        void 0 === a && (this.constructor === Z ? a = "go.Model" : a = rq(this, this));
        return '{ "class": ' + this.quote(a) + this.mk() + this.Vv() + "}"
    };
    t.toJSON = function(a) {
        return this.qq(a)
    };
    t.Qw = function(a) {
        var b = null;
        if ("string" === typeof a) try {
            b = w.JSON.parse(a)
        } catch (d) {} else "object" === typeof a ? b = a : A("Unable to modify a Model from: " + a);
        var c = b.incremental;
        "number" !== typeof c && A("Unable to apply non-incremental changes to Model: " + a);
        0 !== c && (this.Aa("applyIncrementalJson"), this.pv(b), this.$a("applyIncrementalJson"))
    };
    t.gy = function(a) {
        return this.Qw(a)
    };
    Z.constructGraphLinksModel = function() {
        return new Z
    };
    t = Z.prototype;
    t.mm = function(a) {
        if (Ea(a))
            for (var b = a.length, c = 0; c < b; c++) {
                var d = a[c];
                if (Ca(d)) {
                    var e = c;
                    d = this.mm(d);
                    Array.isArray(a) ? a[e] = d : A("Cannot replace an object in an HTMLCollection or NodeList at " + e)
                }
            } else if (Ca(a)) {
                for (c in a)
                    if (e = a[c], Ca(e) && (e = this.mm(e), a[c] = e, "points" === c && Array.isArray(e))) {
                        d = 0 === e.length % 2;
                        for (var f = 0; f < e.length; f++)
                            if ("number" !== typeof e[f]) {
                                d = !1;
                                break
                            } if (d) {
                            d = new E;
                            for (f = 0; f < e.length / 2; f++) d.add(new G(e[2 * f], e[2 * f + 1]));
                            d.freeze();
                            a[c] = d
                        }
                    } if ("object" === typeof a) {
                    c = a;
                    e = a["class"];
                    if ("NaN" === e) c = NaN;
                    else if ("Date" === e) c = new Date(a.value);
                    else if ("go.Point" === e) c = new G(sq(a.x), sq(a.y));
                    else if ("go.Size" === e) c = new L(sq(a.width), sq(a.height));
                    else if ("go.Rect" === e) c = new N(sq(a.x), sq(a.y), sq(a.width), sq(a.height));
                    else if ("go.Margin" === e) c = new Ic(sq(a.top), sq(a.right), sq(a.bottom), sq(a.left));
                    else if ("go.Spot" === e) "string" === typeof a["enum"] ? c = Xd(a["enum"]) : c = new O(sq(a.x), sq(a.y), sq(a.offsetX), sq(a.offsetY));
                    else if ("go.Brush" === e) {
                        if (c = new fl, c.type = qb(fl, a.type), "string" ===
                            typeof a.color && (c.color = a.color), a.start instanceof O && (c.start = a.start), a.end instanceof O && (c.end = a.end), "number" === typeof a.startRadius && (c.startRadius = sq(a.startRadius)), "number" === typeof a.endRadius && (c.endRadius = sq(a.endRadius)), a = a.colorStops, Ca(a))
                            for (b in a) c.addColorStop(parseFloat(b), a[b])
                    } else "go.Geometry" === e ? (b = null, "string" === typeof a.path ? b = me(a.path) : b = new $d, b.type = qb($d, a.type), "number" === typeof a.startX && (b.startX = sq(a.startX)), "number" === typeof a.startY && (b.startY = sq(a.startY)),
                        "number" === typeof a.endX && (b.endX = sq(a.endX)), "number" === typeof a.endY && (b.endY = sq(a.endY)), a.spot1 instanceof O && (b.spot1 = a.spot1), a.spot2 instanceof O && (b.spot2 = a.spot2), c = b) : "go.EnumValue" === e && (b = a.classType, 0 === b.indexOf("go.") && (b = b.substr(3)), c = qb(tq[b] ? tq[b] : null, a.name));
                    a = c
                }
            } return a
    };
    t.quote = function(a) {
        for (var b = "", c = a.length, d = 0; d < c; d++) {
            var e = a[d];
            if ('"' === e || "\\" === e) b += "\\" + e;
            else if ("\b" === e) b += "\\b";
            else if ("\f" === e) b += "\\f";
            else if ("\n" === e) b += "\\n";
            else if ("\r" === e) b += "\\r";
            else if ("\t" === e) b += "\\t";
            else {
                var f = a.charCodeAt(d);
                b = 16 > f ? b + ("\\u000" + a.charCodeAt(d).toString(16)) : 32 > f ? b + ("\\u00" + a.charCodeAt(d).toString(16)) : 8232 === f ? b + "\\u2028" : 8233 === f ? b + "\\u2029" : b + e
            }
        }
        return '"' + b + '"'
    };
    t.wm = function(a) {
        return void 0 === a ? "undefined" : null === a ? "null" : !0 === a ? "true" : !1 === a ? "false" : "string" === typeof a ? this.quote(a) : "number" === typeof a ? Infinity === a ? "9e9999" : -Infinity === a ? "-9e9999" : isNaN(a) ? '{"class":"NaN"}' : a.toString() : a instanceof Date ? '{"class":"Date", "value":"' + a.toJSON() + '"}' : a instanceof Number ? this.wm(a.valueOf()) : Ea(a) ? oq(this, a) : Ca(a) ? lq(this, a) : "function" === typeof a ? "null" : a.toString()
    };

    function oq(a, b, c) {
        void 0 === c && (c = !1);
        var d = b.length;
        if (0 >= d) return "[]";
        var e = new sb;
        e.add("[ ");
        c && 1 < d && e.add("\n");
        for (var f = 0; f < d; f++) {
            var g = b[f];
            void 0 !== g && (0 < f && (e.add(","), c && e.add("\n")), e.add(a.wm(g)))
        }
        c && 1 < d && e.add("\n");
        e.add(" ]");
        return e.toString()
    }

    function nq(a, b) {
        return void 0 === b || "__gohashid" === a || "_" === a[0] || "function" === typeof b ? !0 : !1
    }

    function uq(a) {
        return isNaN(a) ? "NaN" : Infinity === a ? "9e9999" : -Infinity === a ? "-9e9999" : a
    }

    function lq(a, b) {
        var c = b;
        if (c instanceof G) b = {
            "class": "go.Point",
            x: uq(c.x),
            y: uq(c.y)
        };
        else if (c instanceof L) b = {
            "class": "go.Size",
            width: uq(c.width),
            height: uq(c.height)
        };
        else if (c instanceof N) b = {
            "class": "go.Rect",
            x: uq(c.x),
            y: uq(c.y),
            width: uq(c.width),
            height: uq(c.height)
        };
        else if (c instanceof Ic) b = {
            "class": "go.Margin",
            top: uq(c.top),
            right: uq(c.right),
            bottom: uq(c.bottom),
            left: uq(c.left)
        };
        else if (c instanceof O) c.hb() ? b = {
                "class": "go.Spot",
                x: uq(c.x),
                y: uq(c.y),
                offsetX: uq(c.offsetX),
                offsetY: uq(c.offsetY)
            } :
            b = {
                "class": "go.Spot",
                "enum": c.toString()
            };
        else if (c instanceof fl) {
            b = {
                "class": "go.Brush",
                type: c.type.name
            };
            if (c.type === il) b.color = c.color;
            else if (c.type === ll || c.type === gl) b.start = c.start, b.end = c.end, c.type === gl && (0 !== c.startRadius && (b.startRadius = uq(c.startRadius)), isNaN(c.endRadius) || (b.endRadius = uq(c.endRadius)));
            if (null !== c.colorStops) {
                var d = {};
                for (c = c.colorStops.iterator; c.next();) d[c.key] = c.value;
                b.colorStops = d
            }
        } else c instanceof $d ? (b = {
            "class": "go.Geometry",
            type: c.type.name
        }, 0 !== c.startX && (b.startX =
            uq(c.startX)), 0 !== c.startY && (b.startY = uq(c.startY)), 0 !== c.endX && (b.endX = uq(c.endX)), 0 !== c.endY && (b.endY = uq(c.endY)), c.spot1.A(Tc) || (b.spot1 = c.spot1), c.spot2.A(hd) || (b.spot2 = c.spot2), c.type === ae && (b.path = je(c))) : c instanceof D && (b = {
            "class": "go.EnumValue",
            classType: rq(a, c.classType),
            name: c.name
        });
        d = "{";
        c = !0;
        for (var e in b) {
            var f = an(b, e);
            if (!nq(e, f))
                if (c ? c = !1 : d += ", ", d += '"' + e + '":', "points" === e && f instanceof E) {
                    var g = "[";
                    for (f = f.iterator; f.next();) {
                        var h = f.value;
                        1 < g.length && (g += ",");
                        g += a.wm(h.x);
                        g += ",";
                        g += a.wm(h.y)
                    }
                    g += "]";
                    d += g
                } else d += a.wm(f)
        }
        return d + "}"
    }

    function sq(a) {
        return "number" === typeof a ? a : "NaN" === a ? NaN : "9e9999" === a ? Infinity : "-9e9999" === a ? -Infinity : parseFloat(a)
    }
    t.lh = function(a) {
        this.cu.add(a)
    };
    t.jk = function(a) {
        this.cu.remove(a)
    };
    t.Gs = function(a) {
        this.skipsUndoManager || this.undoManager.$u(a);
        for (var b = this.cu, c = b.length, d = 0; d < c; d++) b.N(d)(a)
    };
    t.bb = function(a, b, c, d, e, f, g) {
        vq(this, "", a, b, c, d, e, f, g)
    };
    t.g = function(a, b, c, d, e) {
        vq(this, "", af, a, this, b, c, d, e)
    };
    t.jt = function(a, b, c, d, e, f) {
        vq(this, "", af, b, a, c, d, e, f)
    };

    function vq(a, b, c, d, e, f, g, h, k) {
        void 0 === h && (h = null);
        void 0 === k && (k = null);
        var l = new $e;
        l.model = a;
        l.change = c;
        l.modelChange = b;
        l.propertyName = d;
        l.object = e;
        l.oldValue = f;
        l.oldParam = h;
        l.newValue = g;
        l.newParam = k;
        a.Gs(l)
    }
    t.Mj = function(a, b) {
        if (null !== a && a.model === this)
            if (a.change === af) Lj(a.object, a.propertyName, a.J(b));
            else if (a.change === cf) {
            var c = a.newParam;
            if ("nodeDataArray" === a.modelChange) {
                if (a = a.newValue, Ca(a) && "number" === typeof c) {
                    var d = this.pa(a);
                    b ? (this.Hc[c] === a && Ja(this.Hc, c), void 0 !== d && this.eb.remove(d)) : (this.Hc[c] !== a && Ia(this.Hc, c, a), void 0 !== d && this.eb.add(d, a))
                }
            } else "" === a.modelChange ? ((d = a.object) && !Ea(d) && a.propertyName && (d = an(a.object, a.propertyName)), Ea(d) && "number" === typeof c && (a = a.newValue, b ?
                Ja(d, c) : Ia(d, c, a))) : A("unknown ChangedEvent.Insert modelChange: " + a.toString())
        } else a.change === df ? (c = a.oldParam, "nodeDataArray" === a.modelChange ? (a = a.oldValue, Ca(a) && "number" === typeof c && (d = this.pa(a), b ? (this.Hc[c] !== a && Ia(this.Hc, c, a), void 0 !== d && this.eb.add(d, a)) : (this.Hc[c] === a && Ja(this.Hc, c), void 0 !== d && this.eb.remove(d)))) : "" === a.modelChange ? ((d = a.object) && !Ea(d) && a.propertyName && (d = an(a.object, a.propertyName)), Ea(d) && "number" === typeof c && (a = a.oldValue, b ? Ia(d, c, a) : Ja(d, c))) : A("unknown ChangedEvent.Remove modelChange: " +
            a.toString())) : a.change !== bf && A("unknown ChangedEvent: " + a.toString())
    };
    t.Aa = function(a) {
        return this.undoManager.Aa(a)
    };
    t.$a = function(a) {
        return this.undoManager.$a(a)
    };
    t.tf = function() {
        return this.undoManager.tf()
    };
    Z.prototype.commit = function(a, b) {
        void 0 === b && (b = "");
        var c = this.skipsUndoManager;
        null === b && (this.skipsUndoManager = !0, b = "");
        this.undoManager.Aa(b);
        var d = !1;
        try {
            a(this), d = !0
        } finally {
            d ? this.undoManager.$a(b) : this.undoManager.tf(), this.skipsUndoManager = c
        }
    };
    t = Z.prototype;
    t.Ea = function(a, b) {
        void 0 === b && (b = "");
        vq(this, "SourceChanged", bf, b, a, null, null)
    };
    t.pa = function(a) {
        if (null !== a) {
            var b = this.ji;
            if ("" !== b && (b = an(a, b), void 0 !== b)) {
                if (aq(b)) return b;
                A("Key value for node data " + a + " is not a number or a string: " + b)
            }
        }
    };
    t.sm = function(a, b) {
        if (null !== a) {
            var c = this.ji;
            if ("" !== c)
                if (this.Pb(a)) {
                    var d = an(a, c);
                    d !== b && null === this.Qb(b) && (Lj(a, c, b), void 0 !== d && this.eb.remove(d), this.eb.add(b, a), vq(this, "nodeKey", af, c, a, d, b), "string" === typeof c && this.Ea(a, c), this.mq(d, b))
                } else Lj(a, c, b)
        }
    };

    function aq(a) {
        return "number" === typeof a || "string" === typeof a
    }
    t.Pb = function(a) {
        var b = this.pa(a);
        return void 0 === b ? !1 : this.eb.J(b) === a
    };
    t.Qb = function(a) {
        null === a && A("Model.findNodeDataForKey:key must not be null");
        return void 0 !== a && aq(a) ? this.eb.J(a) : null
    };
    t.et = function(a) {
        if (null !== a) {
            var b = this.ji;
            if ("" !== b) {
                var c = this.pa(a);
                if (void 0 === c || this.eb.contains(c)) {
                    var d = this.gl;
                    if (null !== d && (c = d(this, a), void 0 !== c && null !== c && !this.eb.contains(c))) {
                        Lj(a, b, c);
                        return
                    }
                    if ("string" === typeof c) {
                        for (d = 2; this.eb.contains(c + d);) d++;
                        Lj(a, b, c + d)
                    } else if (void 0 === c || "number" === typeof c) {
                        for (c = -this.eb.count - 1; this.eb.contains(c);) c--;
                        Lj(a, b, c)
                    }
                }
            }
        }
    };
    t.jf = function(a) {
        null !== a && (Db(a), this.Pb(a) || Tp(this, a, !0))
    };

    function Tp(a, b, c) {
        var d = a.pa(b);
        if (void 0 === d || a.eb.J(d) !== b) a.et(b), d = a.pa(b), void 0 === d ? A("Model.makeNodeDataKeyUnique failed on " + b + ".  Data not added to Model.") : (a.eb.add(d, b), d = null, c && (d = a.Hc.length, Ia(a.Hc, d, b)), vq(a, "nodeDataArray", cf, "nodeDataArray", a, null, b, null, d), a.om(b), a.nm(b))
    }
    t.by = function(a) {
        if (Ea(a))
            for (var b = a.length, c = 0; c < b; c++) this.jf(a[c]);
        else
            for (a = a.iterator; a.next();) this.jf(a.value)
    };
    t.lm = function(a) {
        null !== a && Sp(this, a, !0)
    };

    function Sp(a, b, c) {
        var d = a.pa(b);
        void 0 !== d && a.eb.remove(d);
        d = null;
        if (c) {
            a: if (c = a.Hc, Array.isArray(c)) d = c.indexOf(b);
                else {
                    d = c.length;
                    for (var e = 0; e < d; e++)
                        if (c[e] === b) {
                            d = e;
                            break a
                        } d = -1
                }if (0 > d) return;Ja(a.Hc, d)
        }
        vq(a, "nodeDataArray", df, "nodeDataArray", a, b, null, d, null);
        a.rq(b)
    }
    t.Gz = function(a) {
        if (Ea(a))
            for (var b = a.length, c = 0; c < b; c++) this.lm(a[c]);
        else
            for (a = a.iterator; a.next();) this.lm(a.value)
    };
    t.wz = function(a) {
        if (Ea(a)) {
            for (var b = new F(this.eb.iteratorKeys), c = new F, d = a.length, e = 0; e < d; e++) {
                var f = a[e],
                    g = this.pa(f);
                if (void 0 !== g) {
                    c.add(g);
                    var h = this.Qb(g);
                    null !== h ? this.Lj(h, f) : (h = {}, this.sm(h, g), this.Lj(h, f), this.jf(h))
                } else this.jf(f), c.add(this.pa(f))
            }
            for (a = b.iterator; a.next();) b = a.value, c.contains(b) || (b = this.Qb(b)) && this.lm(b)
        }
    };
    t.mq = function(a, b) {
        void 0 !== b && (a = dq(this, a), a instanceof F && this.Df.add(b, a))
    };
    t.Qv = function() {};
    t.om = function() {};
    t.nm = function() {};
    t.rq = function() {};

    function fq(a, b, c) {
        if (void 0 !== b) {
            var d = a.Df.J(b);
            null === d && (d = new F, a.Df.add(b, d));
            d.add(c)
        }
    }

    function eq(a, b, c) {
        if (void 0 !== b) {
            var d = a.Df.J(b);
            d instanceof F && (void 0 === c || null === c ? a.Df.remove(b) : (d.remove(c), 0 === d.count && a.Df.remove(b)))
        }
    }

    function dq(a, b) {
        if (void 0 === b) return null;
        a = a.Df.J(b);
        return a instanceof F ? a : null
    }
    t.Hu = function(a) {
        void 0 === a ? this.Df.clear() : this.Df.remove(a)
    };
    Z.prototype.copyNodeData = function(a) {
        if (null === a) return null;
        var b = this.Bk;
        a = null !== b ? b(a, this) : wq(this, a, !0);
        Ca(a) && mb(a);
        return a
    };

    function wq(a, b, c) {
        if (a.copiesArrays && Array.isArray(b)) {
            var d = [];
            for (c = 0; c < b.length; c++) {
                var e = wq(a, b[c], a.copiesArrayObjects);
                d.push(e)
            }
            mb(d);
            return d
        }
        if (c && Ca(b)) {
            c = (c = b.constructor) ? new c : {};
            e = a.copiesKey || "string" !== typeof a.nodeKeyProperty ? null : a.nodeKeyProperty;
            for (d in b)
                if ("__gohashid" === d) c.__gohashid = void 0;
                else if (d === e) c[e] = void 0;
            else {
                var f = an(b, d),
                    g = rq(a, f);
                "GraphObject" === g || "Diagram" === g || "Layer" === g || "RowColumnDefinition" === g || "AnimationManager" === g || "Tool" === g || "CommandHandler" ===
                    g || "Layout" === g || "InputEvent" === g || "DiagramEvent" === g || f instanceof Z || f instanceof ff || f instanceof ef || f instanceof $e ? Lj(c, d, f) : (f = wq(a, f, !1), Lj(c, d, f))
            }
            mb(c);
            return c
        }
        return b instanceof G ? b.copy() : b instanceof L ? b.copy() : b instanceof N ? b.copy() : b instanceof O ? b.copy() : b instanceof Ic ? b.copy() : b
    }
    Z.prototype.setDataProperty = function(a, b, c) {
        if (this.Pb(a))
            if (b === this.nodeKeyProperty) this.sm(a, c);
            else {
                if (b === this.nodeCategoryProperty) {
                    this.oq(a, c);
                    return
                }
            }
        else !xq && a instanceof Y && (xq = !0, ya('Model.setDataProperty is modifying a GraphObject, "' + a.toString() + '"'), ya("  Is that really your intent?"));
        var d = an(a, b);
        d !== c && (Lj(a, b, c), this.jt(a, b, d, c))
    };
    t = Z.prototype;
    t.set = function(a, b, c) {
        this.setDataProperty(a, b, c)
    };
    t.Lj = function(a, b) {
        if (b) {
            var c = this.Pb(a),
                d;
            for (d in b) "__gohashid" === d || c && d === this.nodeKeyProperty || this.setDataProperty(a, d, b[d])
        }
    };
    t.Yx = function(a, b) {
        this.Vs(a, -1, b)
    };
    t.Vs = function(a, b, c) {
        0 > b && (b = a.length);
        Ia(a, b, c);
        vq(this, "", cf, "", a, null, c, null, b)
    };
    t.rv = function(a, b) {
        void 0 === b && (b = -1);
        a === this.Hc && A("Model.removeArrayItem should not be called on the Model.nodeDataArray"); - 1 === b && (b = a.length - 1);
        var c = a[b];
        Ja(a, b);
        vq(this, "", df, "", a, c, null, b, null)
    };
    t.Ss = function(a) {
        if (null === a) return "";
        var b = this.sj;
        if ("" === b) return "";
        b = an(a, b);
        if (void 0 === b) return "";
        if ("string" === typeof b) return b;
        A("getCategoryForNodeData found a non-string category for " + a + ": " + b);
        return ""
    };
    t.oq = function(a, b) {
        if (null !== a) {
            var c = this.sj;
            if ("" !== c)
                if (this.Pb(a)) {
                    var d = an(a, c);
                    void 0 === d && (d = "");
                    d !== b && (Lj(a, c, b), vq(this, "nodeCategory", af, c, a, d, b))
                } else Lj(a, c, b)
        }
    };
    t.cm = function() {
        return !1
    };
    t.Yj = function() {
        return !1
    };
    t.bm = function() {
        return !1
    };
    t.at = function() {
        return !1
    };
    t.Zj = function() {
        return !1
    };

    function ti() {
        return new Z
    }

    function rq(a, b) {
        if ("function" === typeof b) {
            if (b.className) return b.className;
            if (b.name) return b.name
        } else if ("object" === typeof b && null !== b && b.constructor) return rq(a, b.constructor);
        return typeof b
    }

    function an(a, b) {
        if (!a || !b) return null;
        try {
            if ("function" === typeof b) var c = b(a);
            else "function" === typeof a.getAttribute ? (c = a.getAttribute(b), null === c && (c = void 0)) : c = a[b]
        } catch (d) {}
        return c
    }

    function Lj(a, b, c) {
        if (a && b) try {
            "function" === typeof b ? b(a, c) : "function" === typeof a.setAttribute ? a.setAttribute(b, c) : a[b] = c
        } catch (d) {}
    }
    pa.Object.defineProperties(Z.prototype, {
        name: {
            get: function() {
                return this.Ta
            },
            set: function(a) {
                var b = this.Ta;
                b !== a && (this.Ta = a, this.g("name", b, a))
            }
        },
        dataFormat: {
            get: function() {
                return this.kn
            },
            set: function(a) {
                var b = this.kn;
                b !== a && (this.kn = a, this.g("dataFormat", b, a))
            }
        },
        isReadOnly: {
            get: function() {
                return this.Jf
            },
            set: function(a) {
                var b = this.Jf;
                b !== a && (this.Jf = a, this.g("isReadOnly", b, a))
            }
        },
        modelData: {
            get: function() {
                return this.l
            },
            set: function(a) {
                var b = this.l;
                b !== a && (this.l = a, this.g("modelData", b, a), this.Ea(a))
            }
        },
        undoManager: {
            get: function() {
                return this.u
            },
            set: function(a) {
                var b = this.u;
                b !== a && (null !== b && b.wx(this), this.u = a, null !== a && a.Nw(this))
            }
        },
        skipsUndoManager: {
            get: function() {
                return this.ah
            },
            set: function(a) {
                this.ah = a
            }
        },
        nodeKeyProperty: {
            get: function() {
                return this.ji
            },
            set: function(a) {
                var b = this.ji;
                b !== a && ("" === a && A("Model.nodeKeyProperty may not be the empty string"), 0 < this.eb.count && A("Cannot set Model.nodeKeyProperty when there is existing node data"), this.ji = a, this.g("nodeKeyProperty", b, a))
            }
        },
        makeUniqueKeyFunction: {
            get: function() {
                return this.gl
            },
            set: function(a) {
                var b = this.gl;
                b !== a && (this.gl = a, this.g("makeUniqueKeyFunction", b, a))
            }
        },
        nodeDataArray: {
            get: function() {
                return this.Hc
            },
            set: function(a) {
                var b = this.Hc;
                if (b !== a) {
                    this.eb.clear();
                    this.Qv();
                    for (var c = a.length, d = 0; d < c; d++) {
                        var e = a[d];
                        if (!Ca(e)) {
                            A("Model.nodeDataArray must only contain Objects, not: " + e);
                            return
                        }
                        Db(e)
                    }
                    this.Hc = a;
                    d = new E;
                    for (e = 0; e < c; e++) {
                        var f = a[e],
                            g = this.pa(f);
                        void 0 === g ? d.add(f) : null !== this.eb.J(g) ? d.add(f) : this.eb.add(g, f)
                    }
                    for (d = d.iterator; d.next();) e = d.value, this.et(e), f = this.pa(e), void 0 !== f && this.eb.add(f, e);
                    vq(this, "nodeDataArray", af, "nodeDataArray", this, b, a);
                    for (b = 0; b < c; b++) d = a[b], this.om(d), this.nm(d);
                    this.Hu();
                    Array.isArray(a) || (this.isReadOnly = !0)
                }
            }
        },
        copyNodeDataFunction: {
            get: function() {
                return this.Bk
            },
            set: function(a) {
                var b = this.Bk;
                b !== a && (this.Bk = a, this.g("copyNodeDataFunction", b, a))
            }
        },
        copiesArrays: {
            get: function() {
                return this.an
            },
            set: function(a) {
                var b = this.an;
                b !== a && (this.an = a, this.g("copiesArrays", b, a))
            }
        },
        copiesArrayObjects: {
            get: function() {
                return this.$m
            },
            set: function(a) {
                var b = this.$m;
                b !== a && (this.$m = a, this.g("copiesArrayObjects", b, a))
            }
        },
        copiesKey: {
            get: function() {
                return this.cn
            },
            set: function(a) {
                var b = this.cn;
                b !== a && (this.cn = a, this.g("copiesKey", b, a))
            }
        },
        afterCopyFunction: {
            get: function() {
                return this.Km
            },
            set: function(a) {
                var b = this.Km;
                b !== a && (this.Km = a, this.g("afterCopyFunction", b, a))
            }
        },
        nodeCategoryProperty: {
            get: function() {
                return this.sj
            },
            set: function(a) {
                var b = this.sj;
                b !== a && (this.sj = a, this.g("nodeCategoryProperty", b, a))
            }
        }
    });
    pa.Object.defineProperties(Z, {
        type: {
            get: function() {
                return "Model"
            }
        }
    });
    Z.prototype.setCategoryForNodeData = Z.prototype.oq;
    Z.prototype.getCategoryForNodeData = Z.prototype.Ss;
    Z.prototype.removeArrayItem = Z.prototype.rv;
    Z.prototype.insertArrayItem = Z.prototype.Vs;
    Z.prototype.addArrayItem = Z.prototype.Yx;
    Z.prototype.assignAllDataProperties = Z.prototype.Lj;
    Z.prototype.set = Z.prototype.set;
    Z.prototype.clearUnresolvedReferences = Z.prototype.Hu;
    Z.prototype.mergeNodeDataArray = Z.prototype.wz;
    Z.prototype.removeNodeDataCollection = Z.prototype.Gz;
    Z.prototype.removeNodeData = Z.prototype.lm;
    Z.prototype.addNodeDataCollection = Z.prototype.by;
    Z.prototype.addNodeData = Z.prototype.jf;
    Z.prototype.makeNodeDataKeyUnique = Z.prototype.et;
    Z.prototype.findNodeDataForKey = Z.prototype.Qb;
    Z.prototype.containsNodeData = Z.prototype.Pb;
    Z.prototype.setKeyForNodeData = Z.prototype.sm;
    Z.prototype.getKeyForNodeData = Z.prototype.pa;
    Z.prototype.updateTargetBindings = Z.prototype.Ea;
    Z.prototype.commit = Z.prototype.commit;
    Z.prototype.rollbackTransaction = Z.prototype.tf;
    Z.prototype.commitTransaction = Z.prototype.$a;
    Z.prototype.startTransaction = Z.prototype.Aa;
    Z.prototype.raiseDataChanged = Z.prototype.jt;
    Z.prototype.raiseChanged = Z.prototype.g;
    Z.prototype.raiseChangedEvent = Z.prototype.bb;
    Z.prototype.removeChangedListener = Z.prototype.jk;
    Z.prototype.addChangedListener = Z.prototype.lh;
    Z.prototype.writeJsonValue = Z.prototype.wm;
    Z.prototype.replaceJsonObjects = Z.prototype.mm;
    Z.prototype.applyIncrementalJSON = Z.prototype.gy;
    Z.prototype.applyIncrementalJson = Z.prototype.Qw;
    Z.prototype.toJSON = Z.prototype.toJSON;
    Z.prototype.toJson = Z.prototype.qq;
    Z.prototype.toIncrementalJSON = Z.prototype.Pz;
    Z.prototype.toIncrementalJson = Z.prototype.Ix;
    Z.prototype.computeJSONDifference = Z.prototype.my;
    Z.prototype.computeJsonDifference = Z.prototype.Ww;
    Z.prototype.clear = Z.prototype.clear;
    var xq = !1,
        tq = {};
    Z.className = "Model";
    Z.fromJSON = Z.fromJson = function(a, b) {
        void 0 === b && (b = null);
        var c = null;
        if ("string" === typeof a) try {
            c = w.JSON.parse(a)
        } catch (f) {} else "object" === typeof a ? c = a : A("Unable to construct a Model from: " + a);
        if (null === b) {
            a = null;
            var d = c["class"];
            if ("string" === typeof d) try {
                var e = null;
                0 === d.indexOf("go.") ? (d = d.substr(3), e = tq[d] ? tq[d] : null) : (e = tq[d] ? tq[d] : null, void 0 === e && (e = w[d]));
                "function" === typeof e && (a = new e)
            } catch (f) {}
            null === a || a instanceof Z ? b = a : A("Unable to construct a Model of declared class: " + c["class"])
        }
        null ===
            b && (b = Z.constructGraphLinksModel());
        b.jq(c);
        b.qv(c);
        return b
    };
    Z.safePropertyValue = an;
    Z.safePropertySet = Lj;
    tq.Brush = fl;
    tq.ChangedEvent = $e;
    tq.Geometry = $d;
    tq.GraphObject = Y;
    tq.Margin = Ic;
    tq.Panel = W;
    tq.Point = G;
    tq.Rect = N;
    tq.Size = L;
    tq.Spot = O;
    tq.Transaction = ef;
    tq.UndoManager = ff;

    function Ai(a, b, c) {
        mb(this);
        this.v = !1;
        void 0 === a && (a = "");
        void 0 === b && (b = a);
        void 0 === c && (c = null);
        this.l = -1;
        this.Rd = null;
        this.Kl = a;
        this.Jl = this.tp = 0;
        this.ss = null;
        this.Un = !1;
        this.yl = b;
        this.Zm = c;
        this.qo = yq;
        this.Tm = null;
        this.Wt = new F
    }
    Ai.prototype.copy = function() {
        var a = new Ai;
        a.Kl = this.Kl;
        a.tp = this.tp;
        a.Jl = this.Jl;
        a.ss = this.ss;
        a.Un = this.Un;
        a.yl = this.yl;
        a.Zm = this.Zm;
        a.qo = this.qo;
        a.Tm = this.Tm;
        return a
    };
    t = Ai.prototype;
    t.gb = function(a) {
        a.classType === Ai && (this.mode = a)
    };
    t.toString = function() {
        return "Binding(" + this.targetProperty + ":" + this.sourceProperty + (-1 !== this.Ti ? " " + this.Ti : "") + " " + this.mode.name + ")"
    };
    t.freeze = function() {
        this.v = !0;
        return this
    };
    t.ha = function() {
        this.v = !1;
        return this
    };
    t.ox = function(a) {
        void 0 === a && (a = null);
        this.mode = Um;
        this.backConverter = a;
        return this
    };
    t.gq = function(a) {
        void 0 === a && (a = "");
        this.sourceName = a;
        this.isToModel = !1;
        return this
    };
    t.yz = function() {
        this.sourceName = null;
        this.isToModel = !0;
        return this
    };

    function Tk(a, b, c) {
        a = a.sourceName;
        return null === a || "" === a ? b : "/" === a ? c.part : "." === a ? c : ".." === a ? c.panel : b.ab(a)
    }
    t.Rv = function(a, b, c) {
        var d = this.yl;
        if (void 0 === c || "" === d || d === c) {
            c = this.Kl;
            var e = this.Zm;
            if (null === e && "" === c) ya("Binding error: target property is the empty string: " + this.toString());
            else {
                var f = b;
                "" !== d && (f = an(b, d));
                if (void 0 !== f)
                    if (null === e) "" !== c && Lj(a, c, f);
                    else try {
                        if ("" !== c) {
                            var g = e(f, a);
                            Lj(a, c, g)
                        } else e(f, a)
                    } catch (h) {}
            }
        }
    };
    t.tq = function(a, b, c, d) {
        if (this.qo === Um) {
            var e = this.Kl;
            if (void 0 === c || e === c) {
                c = this.yl;
                var f = this.Tm,
                    g = a;
                "" !== e && (g = an(a, e));
                if (void 0 !== g && !this.Wt.contains(a)) try {
                    this.Wt.add(a);
                    var h = null !== d ? d.diagram : null,
                        k = null !== h ? h.model : null;
                    if (null === f)
                        if ("" !== c) null !== k ? k.setDataProperty(b, c, g) : Lj(b, c, g);
                        else {
                            if (null !== k && null !== d && 0 <= d.itemIndex && null !== d.panel && Array.isArray(d.panel.itemArray)) {
                                var l = d.itemIndex,
                                    m = d.panel.itemArray;
                                k.rv(m, l);
                                k.Vs(m, l, g)
                            }
                        }
                    else try {
                        if ("" !== c) {
                            var n = f(g, b, k);
                            null !== k ? k.setDataProperty(b,
                                c, n) : Lj(b, c, n)
                        } else {
                            var p = f(g, b, k);
                            if (void 0 !== p && null !== k && null !== d && 0 <= d.itemIndex && null !== d.panel && Array.isArray(d.panel.itemArray)) {
                                var q = d.itemIndex,
                                    r = d.panel.itemArray;
                                k.rv(r, q);
                                k.Vs(r, q, p)
                            }
                        }
                    } catch (u) {}
                } finally {
                    this.Wt.remove(a)
                }
            }
        }
    };
    pa.Object.defineProperties(Ai.prototype, {
        Ti: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.v && wa(this);
                this.l = a
            }
        },
        targetProperty: {
            get: function() {
                return this.Kl
            },
            set: function(a) {
                this.v && wa(this);
                this.Kl = a
            }
        },
        sourceName: {
            get: function() {
                return this.ss
            },
            set: function(a) {
                this.v && wa(this);
                this.ss = a;
                null !== a && (this.Un = !1)
            }
        },
        isToModel: {
            get: function() {
                return this.Un
            },
            set: function(a) {
                this.v &&
                    wa(this);
                this.Un = a
            }
        },
        sourceProperty: {
            get: function() {
                return this.yl
            },
            set: function(a) {
                this.v && wa(this);
                this.yl = a
            }
        },
        converter: {
            get: function() {
                return this.Zm
            },
            set: function(a) {
                this.v && wa(this);
                this.Zm = a
            }
        },
        backConverter: {
            get: function() {
                return this.Tm
            },
            set: function(a) {
                this.v && wa(this);
                this.Tm = a
            }
        },
        mode: {
            get: function() {
                return this.qo
            },
            set: function(a) {
                this.v && wa(this);
                this.qo = a
            }
        }
    });
    Ai.prototype.updateSource = Ai.prototype.tq;
    Ai.prototype.updateTarget = Ai.prototype.Rv;
    Ai.prototype.ofModel = Ai.prototype.yz;
    Ai.prototype.ofObject = Ai.prototype.gq;
    Ai.prototype.makeTwoWay = Ai.prototype.ox;
    var yq = new D(Ai, "OneWay", 1),
        Um = new D(Ai, "TwoWay", 2);
    Ai.className = "Binding";
    Ai.parseEnum = function(a, b) {
        return function(c) {
            c = qb(a, c);
            return null === c ? b : c
        }
    };
    Ai.toString = Qa;
    Ai.OneWay = yq;
    Ai.TwoWay = Um;

    function zq(a, b) {
        Z.call(this);
        this.At = ',\n  "insertedLinkKeys": ';
        this.aw = ',\n  "modifiedLinkData": ';
        this.Ct = ',\n  "removedLinkKeys": ';
        this.Pc = [];
        this.Kf = new F;
        this.rb = new Lb;
        this.fi = "";
        this.Wi = this.Ak = this.hl = null;
        this.Ue = "from";
        this.Ve = "to";
        this.pj = this.oj = "";
        this.nj = "category";
        this.Jd = "";
        this.ll = "isGroup";
        this.qe = "group";
        this.bn = !1;
        void 0 !== a && (this.nodeDataArray = a);
        void 0 !== b && (this.linkDataArray = b)
    }
    oa(zq, Z);
    zq.constructGraphLinksModel = Z.constructGraphLinksModel;
    zq.prototype.cloneProtected = function(a) {
        Z.prototype.cloneProtected.call(this, a);
        a.fi = this.fi;
        a.hl = this.hl;
        a.Ak = this.Ak;
        a.Ue = this.Ue;
        a.Ve = this.Ve;
        a.oj = this.oj;
        a.pj = this.pj;
        a.nj = this.nj;
        a.Jd = this.Jd;
        a.ll = this.ll;
        a.qe = this.qe;
        a.bn = this.bn
    };
    t = zq.prototype;
    t.clear = function() {
        Z.prototype.clear.call(this);
        this.Pc = [];
        this.rb.clear();
        this.Kf.clear()
    };
    t.toString = function(a) {
        void 0 === a && (a = 0);
        if (2 <= a) return this.qq();
        var b = ("" !== this.name ? this.name : "") + " GraphLinksModel";
        if (0 < a) {
            b += "\n node data:";
            a = this.nodeDataArray;
            var c = a.length,
                d;
            for (d = 0; d < c; d++) {
                var e = a[d];
                b += " " + this.pa(e) + ":" + Qa(e)
            }
            b += "\n link data:";
            a = this.linkDataArray;
            c = a.length;
            for (d = 0; d < c; d++) e = a[d], b += " " + Zp(this, e, !0) + "--\x3e" + Zp(this, e, !1)
        }
        return b
    };
    t.mk = function() {
        var a = Z.prototype.mk.call(this),
            b = "";
        "category" !== this.linkCategoryProperty && "string" === typeof this.linkCategoryProperty && (b += ',\n  "linkCategoryProperty": ' + this.quote(this.linkCategoryProperty));
        "" !== this.linkKeyProperty && "string" === typeof this.linkKeyProperty && (b += ',\n  "linkKeyProperty": ' + this.quote(this.linkKeyProperty));
        "from" !== this.linkFromKeyProperty && "string" === typeof this.linkFromKeyProperty && (b += ',\n  "linkFromKeyProperty": ' + this.quote(this.linkFromKeyProperty));
        "to" !==
        this.linkToKeyProperty && "string" === typeof this.linkToKeyProperty && (b += ',\n  "linkToKeyProperty": ' + this.quote(this.linkToKeyProperty));
        "" !== this.linkFromPortIdProperty && "string" === typeof this.linkFromPortIdProperty && (b += ',\n  "linkFromPortIdProperty": ' + this.quote(this.linkFromPortIdProperty));
        "" !== this.linkToPortIdProperty && "string" === typeof this.linkToPortIdProperty && (b += ',\n  "linkToPortIdProperty": ' + this.quote(this.linkToPortIdProperty));
        "" !== this.linkLabelKeysProperty && "string" === typeof this.linkLabelKeysProperty &&
            (b += ',\n  "linkLabelKeysProperty": ' + this.quote(this.linkLabelKeysProperty));
        "isGroup" !== this.nodeIsGroupProperty && "string" === typeof this.nodeIsGroupProperty && (b += ',\n  "nodeIsGroupProperty": ' + this.quote(this.nodeIsGroupProperty));
        "group" !== this.nodeGroupKeyProperty && "string" === typeof this.nodeGroupKeyProperty && (b += ',\n  "nodeGroupKeyProperty": ' + this.quote(this.nodeGroupKeyProperty));
        return a + b
    };
    t.jq = function(a) {
        Z.prototype.jq.call(this, a);
        a.linkKeyProperty && (this.linkKeyProperty = a.linkKeyProperty);
        a.linkFromKeyProperty && (this.linkFromKeyProperty = a.linkFromKeyProperty);
        a.linkToKeyProperty && (this.linkToKeyProperty = a.linkToKeyProperty);
        a.linkFromPortIdProperty && (this.linkFromPortIdProperty = a.linkFromPortIdProperty);
        a.linkToPortIdProperty && (this.linkToPortIdProperty = a.linkToPortIdProperty);
        a.linkCategoryProperty && (this.linkCategoryProperty = a.linkCategoryProperty);
        a.linkLabelKeysProperty && (this.linkLabelKeysProperty =
            a.linkLabelKeysProperty);
        a.nodeIsGroupProperty && (this.nodeIsGroupProperty = a.nodeIsGroupProperty);
        a.nodeGroupKeyProperty && (this.nodeGroupKeyProperty = a.nodeGroupKeyProperty)
    };
    t.Vv = function() {
        var a = Z.prototype.Vv.call(this),
            b = ',\n  "linkDataArray": ' + oq(this, this.linkDataArray, !0);
        return a + b
    };
    t.qv = function(a) {
        Z.prototype.qv.call(this, a);
        a = a.linkDataArray;
        Array.isArray(a) && (this.mm(a), this.linkDataArray = a)
    };
    t.uq = function(a) {
        if (!(a instanceof zq)) return A("Model.computeJsonDifference: newmodel must be a GraphLinksModel"), "";
        var b = Z.prototype.uq.call(this, a);
        qq(this, a, "linkKeyProperty");
        qq(this, a, "linkFromKeyProperty");
        qq(this, a, "linkToKeyProperty");
        qq(this, a, "linkLabelKeysProperty");
        qq(this, a, "nodeIsGroupProperty");
        qq(this, a, "nodeGroupKeyProperty");
        for (var c = new F, d = new F, e = (new F).addAll(this.rb.iteratorKeys), f = new Lb, g = a.linkDataArray, h = g.length, k = 0; k < h; k++) {
            var l = g[k],
                m = a.lc(l);
            if (void 0 !== m) {
                e.remove(m);
                var n = this.rh(m);
                null === n ? (c.add(m), d.add(l)) : pq(this, n, l, f) || d.add(l)
            } else this.cq(l), m = this.lc(l), c.add(m), d.add(l)
        }
        a = b;
        0 < c.count && (a += this.At + oq(this, c.Ma(), !0));
        0 < d.count && (a += this.aw + oq(this, d.Ma(), !0));
        0 < e.count && (a += this.Ct + oq(this, e.Ma(), !0));
        return a
    };
    t.Uv = function(a, b) {
        var c = Z.prototype.Uv.call(this, a, b),
            d = this,
            e = new F,
            f = new F,
            g = new F;
        a.changes.each(function(a) {
            a.model === d && ("linkDataArray" === a.modelChange ? a.change === cf ? e.add(a.newValue) : a.change === df && g.add(a.oldValue) : d.Ae(a.object) && f.add(a.object))
        });
        var h = new F;
        e.each(function(a) {
            h.add(d.lc(a));
            b || f.add(a)
        });
        var k = new F;
        g.each(function(a) {
            k.add(d.lc(a));
            b && f.add(a)
        });
        a = c;
        0 < h.count && (a += (b ? this.Ct : this.At) + oq(this, h.Ma(), !0));
        0 < f.count && (a += this.aw + oq(this, f.Ma(), !0));
        0 < k.count && (a += (b ? this.At :
            this.Ct) + oq(this, k.Ma(), !0));
        return a
    };
    t.pv = function(a) {
        Z.prototype.pv.call(this, a);
        var b = a.insertedLinkKeys;
        if (Array.isArray(b))
            for (var c = b.length, d = 0; d < c; d++) {
                var e = b[d],
                    f = this.rh(e);
                null === f && (f = this.Mp({}), this.tt(f, e), this.yi(f))
            }
        b = a.modifiedLinkData;
        if (Array.isArray(b))
            for (c = b.length, d = 0; d < c; d++)
                if (e = b[d], f = this.lc(e), f = this.rh(f), null !== f)
                    for (var g in e) "__gohashid" !== g && g !== this.linkKeyProperty && this.setDataProperty(f, g, e[g]);
        a = a.removedLinkKeys;
        if (Array.isArray(a))
            for (g = a.length, b = 0; b < g; b++) c = this.rh(a[b]), null !== c && this.km(c)
    };
    t.Mj = function(a, b) {
        if (a.change === cf) {
            var c = a.newParam;
            if ("linkDataArray" === a.modelChange) {
                a = a.newValue;
                if (Ca(a) && "number" === typeof c) {
                    var d = this.lc(a);
                    b ? (this.Kf.remove(a), this.Pc[c] === a && this.Pc.splice(c, 1), void 0 !== d && this.rb.remove(d)) : (this.Kf.add(a), this.Pc[c] !== a && this.Pc.splice(c, 0, a), void 0 !== d && this.rb.add(d, a))
                }
                return
            }
            if ("linkLabelKeys" === a.modelChange) {
                d = this.og(a.object);
                Array.isArray(d) && "number" === typeof c && (b ? (c = d.indexOf(a.newValue), 0 <= c && d.splice(c, 1)) : 0 > d.indexOf(a.newValue) && d.splice(c,
                    0, a.newValue));
                return
            }
        } else if (a.change === df) {
            c = a.oldParam;
            if ("linkDataArray" === a.modelChange) {
                a = a.oldValue;
                Ca(a) && "number" === typeof c && (d = this.lc(a), b ? (this.Kf.add(a), this.Pc[c] !== a && this.Pc.splice(c, 0, a), void 0 !== d && this.rb.add(d, a)) : (this.Kf.remove(a), this.Pc[c] === a && this.Pc.splice(c, 1), void 0 !== d && this.rb.remove(d)));
                return
            }
            if ("linkLabelKeys" === a.modelChange) {
                d = this.og(a.object);
                Array.isArray(d) && "number" === typeof c && (b ? 0 > d.indexOf(a.newValue) && d.splice(c, 0, a.newValue) : (c = d.indexOf(a.newValue),
                    0 <= c && d.splice(c, 1)));
                return
            }
        }
        Z.prototype.Mj.call(this, a, b)
    };
    t.dm = function(a) {
        if (void 0 !== a) {
            var b = this.Wi;
            if (null !== b) {
                var c = this.Qb(a);
                null === c && (c = this.copyNodeData(b), Lj(c, this.nodeKeyProperty, a), this.jf(c))
            }
            return a
        }
    };
    t.Vy = function(a) {
        return Zp(this, a, !0)
    };
    t.Ax = function(a, b) {
        gq(this, a, b, !0)
    };
    t.$y = function(a) {
        return Zp(this, a, !1)
    };
    t.Ex = function(a, b) {
        gq(this, a, b, !1)
    };

    function Zp(a, b, c) {
        if (null !== b && (a = c ? a.Ue : a.Ve, "" !== a && (a = an(b, a), void 0 !== a))) {
            if (aq(a)) return a;
            A((c ? "FromKey" : "ToKey") + " value for link data " + b + " is not a number or a string: " + a)
        }
    }

    function gq(a, b, c, d) {
        null === c && (c = void 0);
        if (null !== b) {
            var e = d ? a.Ue : a.Ve;
            if ("" !== e)
                if (c = a.dm(c), a.Ae(b)) {
                    var f = an(b, e);
                    f !== c && (eq(a, f, b), Lj(b, e, c), null === a.Qb(c) && fq(a, c, b), vq(a, d ? "linkFromKey" : "linkToKey", af, e, b, f, c), "string" === typeof e && a.Ea(b, e))
                } else Lj(b, e, c)
        }
    }
    t.Wy = function(a) {
        return Yp(this, a, !0)
    };
    t.Bx = function(a, b) {
        hq(this, a, b, !0)
    };
    t.az = function(a) {
        return Yp(this, a, !1)
    };
    t.Fx = function(a, b) {
        hq(this, a, b, !1)
    };

    function Yp(a, b, c) {
        if (null === b) return "";
        a = c ? a.oj : a.pj;
        if ("" === a) return "";
        b = an(b, a);
        return void 0 === b ? "" : b
    }

    function hq(a, b, c, d) {
        if (null !== b) {
            var e = d ? a.oj : a.pj;
            if ("" !== e)
                if (a.Ae(b)) {
                    var f = an(b, e);
                    void 0 === f && (f = "");
                    f !== c && (Lj(b, e, c), vq(a, d ? "linkFromPortId" : "linkToPortId", af, e, b, f, c), "string" === typeof e && a.Ea(b, e))
                } else Lj(b, e, c)
        }
    }
    t.og = function(a) {
        if (null === a) return Aq;
        var b = this.Jd;
        if ("" === b) return Aq;
        a = an(a, b);
        return void 0 === a ? Aq : a
    };
    t.Bv = function(a, b) {
        if (null !== a) {
            var c = this.Jd;
            if ("" !== c)
                if (this.Ae(a)) {
                    var d = an(a, c);
                    void 0 === d && (d = Aq);
                    if (d !== b) {
                        if (Array.isArray(d))
                            for (var e = d.length, f = 0; f < e; f++) eq(this, d[f], a);
                        Lj(a, c, b);
                        e = b.length;
                        for (f = 0; f < e; f++) {
                            var g = b[f];
                            null === this.Qb(g) && fq(this, g, a)
                        }
                        vq(this, "linkLabelKeys", af, c, a, d, b);
                        "string" === typeof c && this.Ea(a, c)
                    }
                } else Lj(a, c, b)
        }
    };
    t.Cu = function(a, b) {
        if (null !== b && void 0 !== b && null !== a) {
            var c = this.Jd;
            if ("" !== c) {
                var d = an(a, c);
                if (void 0 === d) c = [], c.push(b), this.Bv(a, c);
                else if (Array.isArray(d)) {
                    var e = d.indexOf(b);
                    0 <= e || (e = d.length, d.push(b), this.Ae(a) && (null === this.Qb(b) && fq(this, b, a), vq(this, "linkLabelKeys", cf, c, a, null, b, null, e)))
                } else A(c + " property is not an Array; cannot addLabelKeyForLinkData: " + a)
            }
        }
    };
    t.vx = function(a, b) {
        if (null !== b && void 0 !== b && null !== a) {
            var c = this.Jd;
            if ("" !== c) {
                var d = an(a, c);
                if (Array.isArray(d)) {
                    var e = d.indexOf(b);
                    0 > e || (d.splice(e, 1), this.Ae(a) && (eq(this, b, a), vq(this, "linkLabelKeys", df, c, a, b, null, e, null)))
                } else void 0 !== d && A(c + " property is not an Array; cannot removeLabelKeyforLinkData: " + a)
            }
        }
    };
    t.lc = function(a) {
        if (null !== a) {
            var b = this.fi;
            if ("" !== b && (b = an(a, b), void 0 !== b)) {
                if (aq(b)) return b;
                A("Key value for link data " + a + " is not a number or a string: " + b)
            }
        }
    };
    t.tt = function(a, b) {
        if (null !== a) {
            var c = this.fi;
            if ("" !== c)
                if (this.Ae(a)) {
                    var d = an(a, c);
                    d !== b && null === this.rh(b) && (Lj(a, c, b), void 0 !== d && this.rb.remove(d), this.rb.add(b, a), vq(this, "linkKey", af, c, a, d, b), "string" === typeof c && this.Ea(a, c))
                } else Lj(a, c, b)
        }
    };
    t.rh = function(a) {
        null === a && A("GraphLinksModel.findLinkDataForKey:key must not be null");
        return void 0 !== a && aq(a) ? this.rb.J(a) : null
    };
    t.cq = function(a) {
        if (null !== a) {
            var b = this.fi;
            if ("" !== b) {
                var c = this.lc(a);
                if (void 0 === c || this.rb.contains(c)) {
                    var d = this.hl;
                    if (null !== d && (c = d(this, a), void 0 !== c && null !== c && !this.rb.contains(c))) {
                        Lj(a, b, c);
                        return
                    }
                    if ("string" === typeof c) {
                        for (d = 2; this.rb.contains(c + d);) d++;
                        Lj(a, b, c + d)
                    } else if (void 0 === c || "number" === typeof c) {
                        for (c = -this.rb.count - 1; this.rb.contains(c);) c--;
                        Lj(a, b, c)
                    }
                }
            }
        }
    };
    t.Ae = function(a) {
        return null === a ? !1 : this.Kf.contains(a)
    };
    t.yi = function(a) {
        null !== a && (Db(a), this.Ae(a) || cq(this, a, !0))
    };

    function cq(a, b, c) {
        if ("" !== a.linkKeyProperty) {
            var d = a.lc(b);
            if (void 0 !== d && a.rb.J(d) === b) return;
            a.cq(b);
            d = a.lc(b);
            if (void 0 === d) {
                A("GraphLinksModel.makeLinkDataKeyUnique failed on " + b + ". Data not added to model.");
                return
            }
            a.rb.add(d, b)
        }
        a.Kf.add(b);
        d = null;
        c && (d = a.Pc.length, a.Pc.splice(d, 0, b));
        vq(a, "linkDataArray", cf, "linkDataArray", a, null, b, null, d);
        Bq(a, b)
    }
    t.ay = function(a) {
        if (Array.isArray(a))
            for (var b = a.length, c = 0; c < b; c++) this.yi(a[c]);
        else
            for (a = a.iterator; a.next();) this.yi(a.value)
    };
    t.km = function(a) {
        null !== a && bq(this, a, !0)
    };

    function bq(a, b, c) {
        a.Kf.remove(b);
        var d = a.lc(b);
        void 0 !== d && a.rb.remove(d);
        d = null;
        if (c) {
            d = a.Pc.indexOf(b);
            if (0 > d) return;
            a.Pc.splice(d, 1)
        }
        vq(a, "linkDataArray", df, "linkDataArray", a, b, null, d, null);
        c = Zp(a, b, !0);
        eq(a, c, b);
        c = Zp(a, b, !1);
        eq(a, c, b);
        d = a.og(b);
        if (Array.isArray(d))
            for (var e = d.length, f = 0; f < e; f++) c = d[f], eq(a, c, b)
    }
    t.Ez = function(a) {
        if (Array.isArray(a))
            for (var b = a.length, c = 0; c < b; c++) this.km(a[c]);
        else
            for (a = a.iterator; a.next();) this.km(a.value)
    };
    t.vz = function(a) {
        if (Ea(a)) {
            for (var b = new F(this.rb.iteratorKeys), c = new F, d = a.length, e = 0; e < d; e++) {
                var f = a[e],
                    g = this.lc(f);
                if (void 0 !== g) {
                    c.add(g);
                    var h = this.rh(g);
                    null !== h ? this.Lj(h, f) : (h = {}, this.tt(h, g), this.Lj(h, f), this.yi(h))
                } else this.yi(f), c.add(this.lc(f))
            }
            for (a = b.iterator; a.next();) b = a.value, c.contains(b) || (b = this.rh(b)) && this.km(b)
        }
    };

    function Bq(a, b) {
        var c = Zp(a, b, !0);
        c = a.dm(c);
        null === a.Qb(c) && fq(a, c, b);
        c = Zp(a, b, !1);
        c = a.dm(c);
        null === a.Qb(c) && fq(a, c, b);
        var d = a.og(b);
        if (Array.isArray(d))
            for (var e = d.length, f = 0; f < e; f++) c = d[f], null === a.Qb(c) && fq(a, c, b)
    }
    t.Mp = function(a) {
        if (null === a) return null;
        var b = this.Ak;
        a = null !== b ? b(a, this) : wq(this, a, !0);
        Ca(a) && (mb(a), "" !== this.Ue && Lj(a, this.Ue, void 0), "" !== this.Ve && Lj(a, this.Ve, void 0), "" !== this.Jd && Lj(a, this.Jd, []));
        return a
    };
    t.ev = function(a) {
        if (null === a) return !1;
        var b = this.ll;
        return "" === b ? !1 : an(a, b) ? !0 : !1
    };
    t.Gi = function(a) {
        if (null !== a) {
            var b = this.qe;
            if ("" !== b && (b = an(a, b), void 0 !== b)) {
                if (aq(b)) return b;
                A("GroupKey value for node data " + a + " is not a number or a string: " + b)
            }
        }
    };
    t.rt = function(a, b) {
        null === b && (b = void 0);
        if (null !== a) {
            var c = this.qe;
            if ("" !== c)
                if (this.Pb(a)) {
                    var d = an(a, c);
                    d !== b && (eq(this, d, a), Lj(a, c, b), null === this.Qb(b) && fq(this, b, a), vq(this, "nodeGroupKey", af, c, a, d, b), "string" === typeof c && this.Ea(a, c))
                } else Lj(a, c, b)
        }
    };
    zq.prototype.copyNodeData = function(a) {
        if (null === a) return null;
        a = Z.prototype.copyNodeData.call(this, a);
        this.Qj || "" === this.qe || void 0 === an(a, this.qe) || Lj(a, this.qe, void 0);
        return a
    };
    zq.prototype.setDataProperty = function(a, b, c) {
        if (this.Pb(a))
            if (b === this.nodeKeyProperty) this.sm(a, c);
            else {
                if (b === this.nodeCategoryProperty) {
                    this.oq(a, c);
                    return
                }
                if (b === this.nodeGroupKeyProperty) {
                    this.rt(a, c);
                    return
                }
            }
        else if (this.Ae(a)) {
            if (b === this.linkFromKeyProperty) {
                gq(this, a, c, !0);
                return
            }
            if (b === this.linkToKeyProperty) {
                gq(this, a, c, !1);
                return
            }
            if (b === this.linkFromPortIdProperty) {
                hq(this, a, c, !0);
                return
            }
            if (b === this.linkToPortIdProperty) {
                hq(this, a, c, !1);
                return
            }
            if (b === this.linkKeyProperty) {
                this.tt(a, c);
                return
            }
            if (b === this.linkCategoryProperty) {
                this.qt(a, c);
                return
            }
            if (b === this.linkLabelKeysProperty) {
                this.Bv(a, c);
                return
            }
        }
        var d = an(a, b);
        d !== c && (Lj(a, b, c), this.jt(a, b, d, c))
    };
    t = zq.prototype;
    t.Lj = function(a, b) {
        if (b) {
            var c = this.Pb(a),
                d = this.Ae(a),
                e;
            for (e in b) "__gohashid" === e || c && e === this.nodeKeyProperty || d && e === this.linkKeyProperty || this.setDataProperty(a, e, b[e])
        }
    };
    t.mq = function(a, b) {
        Z.prototype.mq.call(this, a, b);
        for (var c = this.eb.iterator; c.next();) this.vv(c.value, a, b);
        for (c = this.Kf.iterator; c.next();) {
            var d = c.value,
                e = a,
                f = b;
            if (Zp(this, d, !0) === e) {
                var g = this.Ue;
                Lj(d, g, f);
                vq(this, "linkFromKey", af, g, d, e, f);
                "string" === typeof g && this.Ea(d, g)
            }
            Zp(this, d, !1) === e && (g = this.Ve, Lj(d, g, f), vq(this, "linkToKey", af, g, d, e, f), "string" === typeof g && this.Ea(d, g));
            g = this.og(d);
            if (Array.isArray(g))
                for (var h = g.length, k = this.Jd, l = 0; l < h; l++) g[l] === e && (g[l] = f, vq(this, "linkLabelKeys", cf,
                    k, d, e, f, l, l))
        }
    };
    t.vv = function(a, b, c) {
        if (this.Gi(a) === b) {
            var d = this.qe;
            Lj(a, d, c);
            vq(this, "nodeGroupKey", af, d, a, b, c);
            "string" === typeof d && this.Ea(a, d)
        }
    };
    t.Qv = function() {
        Z.prototype.Qv.call(this);
        for (var a = this.linkDataArray, b = a.length, c = 0; c < b; c++) Bq(this, a[c])
    };
    t.om = function(a) {
        Z.prototype.om.call(this, a);
        a = this.pa(a);
        var b = dq(this, a);
        if (null !== b) {
            var c = Ka();
            for (b = b.iterator; b.next();) {
                var d = b.value;
                if (this.Pb(d)) {
                    if (this.Gi(d) === a) {
                        var e = this.qe;
                        vq(this, "nodeGroupKey", af, e, d, a, a);
                        "string" === typeof e && this.Ea(d, e);
                        c.push(d)
                    }
                } else if (Zp(this, d, !0) === a && (e = this.Ue, vq(this, "linkFromKey", af, e, d, a, a), "string" === typeof e && this.Ea(d, e), c.push(d)), Zp(this, d, !1) === a && (e = this.Ve, vq(this, "linkToKey", af, e, d, a, a), "string" === typeof e && this.Ea(d, e), c.push(d)), e = this.og(d),
                    Array.isArray(e))
                    for (var f = e.length, g = this.Jd, h = 0; h < f; h++) e[h] === a && (vq(this, "linkLabelKeys", cf, g, d, a, a, h, h), c.push(d))
            }
            for (b = 0; b < c.length; b++) eq(this, a, c[b]);
            Oa(c)
        }
    };
    t.nm = function(a) {
        Z.prototype.nm.call(this, a);
        var b = this.Gi(a);
        null === this.Qb(b) && fq(this, b, a)
    };
    t.rq = function(a) {
        Z.prototype.rq.call(this, a);
        var b = this.Gi(a);
        eq(this, b, a)
    };
    t.Vu = function(a) {
        if (null === a) return "";
        var b = this.nj;
        if ("" === b) return "";
        b = an(a, b);
        if (void 0 === b) return "";
        if ("string" === typeof b) return b;
        A("getCategoryForLinkData found a non-string category for " + a + ": " + b);
        return ""
    };
    zq.prototype.getLinkCategoryForData = function(a) {
        return this.Vu(a)
    };
    zq.prototype.qt = function(a, b) {
        if (null !== a) {
            var c = this.nj;
            if ("" !== c)
                if (this.Ae(a)) {
                    var d = an(a, c);
                    void 0 === d && (d = "");
                    d !== b && (Lj(a, c, b), vq(this, "linkCategory", af, c, a, d, b), "string" === typeof c && this.Ea(a, c))
                } else Lj(a, c, b)
        }
    };
    zq.prototype.setLinkCategoryForData = function(a, b) {
        this.qt(a, b)
    };
    zq.prototype.Yj = function() {
        return !0
    };
    zq.prototype.bm = function() {
        return !0
    };
    zq.prototype.at = function() {
        return !0
    };
    zq.prototype.Zj = function() {
        return !0
    };
    pa.Object.defineProperties(zq.prototype, {
        archetypeNodeData: {
            get: function() {
                return this.Wi
            },
            set: function(a) {
                var b = this.Wi;
                b !== a && (this.Wi = a, this.g("archetypeNodeData", b, a))
            }
        },
        linkFromKeyProperty: {
            get: function() {
                return this.Ue
            },
            set: function(a) {
                var b = this.Ue;
                b !== a && (this.Ue = a, this.g("linkFromKeyProperty", b, a))
            }
        },
        linkToKeyProperty: {
            get: function() {
                return this.Ve
            },
            set: function(a) {
                var b = this.Ve;
                b !== a && (this.Ve = a, this.g("linkToKeyProperty",
                    b, a))
            }
        },
        linkFromPortIdProperty: {
            get: function() {
                return this.oj
            },
            set: function(a) {
                var b = this.oj;
                b !== a && (this.oj = a, this.g("linkFromPortIdProperty", b, a))
            }
        },
        linkToPortIdProperty: {
            get: function() {
                return this.pj
            },
            set: function(a) {
                var b = this.pj;
                b !== a && (this.pj = a, this.g("linkToPortIdProperty", b, a))
            }
        },
        linkLabelKeysProperty: {
            get: function() {
                return this.Jd
            },
            set: function(a) {
                var b = this.Jd;
                b !== a && (this.Jd = a, this.g("linkLabelKeysProperty",
                    b, a))
            }
        },
        linkDataArray: {
            get: function() {
                return this.Pc
            },
            set: function(a) {
                var b = this.Pc;
                if (b !== a) {
                    this.rb.clear();
                    for (var c = a.length, d = 0; d < c; d++) {
                        var e = a[d];
                        if (!Ca(e)) {
                            A("GraphLinksModel.linkDataArray must only contain Objects, not: " + e);
                            return
                        }
                        Db(e)
                    }
                    this.Pc = a;
                    if ("" !== this.linkKeyProperty) {
                        d = new E;
                        for (e = 0; e < c; e++) {
                            var f = a[e],
                                g = this.lc(f);
                            void 0 === g ? d.add(f) : null !== this.rb.J(g) ? d.add(f) : this.rb.add(g, f)
                        }
                        for (d = d.iterator; d.next();) e = d.value, this.cq(e), f = this.lc(e), void 0 !==
                            f && this.rb.add(f, e)
                    }
                    d = new F;
                    for (e = 0; e < c; e++) d.add(a[e]);
                    this.Kf = d;
                    vq(this, "linkDataArray", af, "linkDataArray", this, b, a);
                    for (b = 0; b < c; b++) Bq(this, a[b])
                }
            }
        },
        linkKeyProperty: {
            get: function() {
                return this.fi
            },
            set: function(a) {
                var b = this.fi;
                if (b !== a) {
                    this.fi = a;
                    this.rb.clear();
                    for (var c = this.linkDataArray.length, d = 0; d < c; d++) {
                        var e = this.linkDataArray[d],
                            f = this.lc(e);
                        void 0 === f && (this.cq(e), f = this.lc(e));
                        void 0 !== f && this.rb.add(f, e)
                    }
                    this.g("linkKeyProperty", b, a)
                }
            }
        },
        makeUniqueLinkKeyFunction: {
            get: function() {
                return this.hl
            },
            set: function(a) {
                var b = this.hl;
                b !== a && (this.hl = a, this.g("makeUniqueLinkKeyFunction", b, a))
            }
        },
        copyLinkDataFunction: {
            get: function() {
                return this.Ak
            },
            set: function(a) {
                var b = this.Ak;
                b !== a && (this.Ak = a, this.g("copyLinkDataFunction", b, a))
            }
        },
        nodeIsGroupProperty: {
            get: function() {
                return this.ll
            },
            set: function(a) {
                var b = this.ll;
                b !== a && (this.ll = a, this.g("nodeIsGroupProperty", b, a))
            }
        },
        nodeGroupKeyProperty: {
            get: function() {
                return this.qe
            },
            set: function(a) {
                var b = this.qe;
                b !== a && (this.qe = a, this.g("nodeGroupKeyProperty", b, a))
            }
        },
        Qj: {
            get: function() {
                return this.bn
            },
            set: function(a) {
                this.bn !== a && (this.bn = a)
            }
        },
        linkCategoryProperty: {
            get: function() {
                return this.nj
            },
            set: function(a) {
                var b = this.nj;
                b !== a && (this.nj = a, this.g("linkCategoryProperty", b, a))
            }
        }
    });
    pa.Object.defineProperties(zq, {
        type: {
            get: function() {
                return "GraphLinksModel"
            }
        }
    });
    zq.prototype.setCategoryForLinkData = zq.prototype.qt;
    zq.prototype.getCategoryForLinkData = zq.prototype.Vu;
    zq.prototype.assignAllDataProperties = zq.prototype.Lj;
    zq.prototype.setGroupKeyForNodeData = zq.prototype.rt;
    zq.prototype.getGroupKeyForNodeData = zq.prototype.Gi;
    zq.prototype.isGroupForNodeData = zq.prototype.ev;
    zq.prototype.copyLinkData = zq.prototype.Mp;
    zq.prototype.mergeLinkDataArray = zq.prototype.vz;
    zq.prototype.removeLinkDataCollection = zq.prototype.Ez;
    zq.prototype.removeLinkData = zq.prototype.km;
    zq.prototype.addLinkDataCollection = zq.prototype.ay;
    zq.prototype.addLinkData = zq.prototype.yi;
    zq.prototype.containsLinkData = zq.prototype.Ae;
    zq.prototype.makeLinkDataKeyUnique = zq.prototype.cq;
    zq.prototype.findLinkDataForKey = zq.prototype.rh;
    zq.prototype.setKeyForLinkData = zq.prototype.tt;
    zq.prototype.getKeyForLinkData = zq.prototype.lc;
    zq.prototype.removeLabelKeyForLinkData = zq.prototype.vx;
    zq.prototype.addLabelKeyForLinkData = zq.prototype.Cu;
    zq.prototype.setLabelKeysForLinkData = zq.prototype.Bv;
    zq.prototype.getLabelKeysForLinkData = zq.prototype.og;
    zq.prototype.setToPortIdForLinkData = zq.prototype.Fx;
    zq.prototype.getToPortIdForLinkData = zq.prototype.az;
    zq.prototype.setFromPortIdForLinkData = zq.prototype.Bx;
    zq.prototype.getFromPortIdForLinkData = zq.prototype.Wy;
    zq.prototype.setToKeyForLinkData = zq.prototype.Ex;
    zq.prototype.getToKeyForLinkData = zq.prototype.$y;
    zq.prototype.setFromKeyForLinkData = zq.prototype.Ax;
    zq.prototype.getFromKeyForLinkData = zq.prototype.Vy;
    zq.prototype.clear = zq.prototype.clear;
    var Aq = Object.freeze([]);
    zq.className = "GraphLinksModel";
    tq.GraphLinksModel = zq;
    Z.constructGraphLinksModel = Z.constructGraphLinksModel = function() {
        return new zq
    };
    Z.initDiagramModel = ti = function() {
        return new zq
    };

    function Cq(a) {
        Z.call(this);
        this.re = "parent";
        this.dn = !1;
        this.vj = "parentLinkCategory";
        void 0 !== a && (this.nodeDataArray = a)
    }
    oa(Cq, Z);
    Cq.constructGraphLinksModel = Z.constructGraphLinksModel;
    Cq.prototype.cloneProtected = function(a) {
        Z.prototype.cloneProtected.call(this, a);
        a.re = this.re;
        a.dn = this.dn;
        a.vj = this.vj
    };
    t = Cq.prototype;
    t.toString = function(a) {
        void 0 === a && (a = 0);
        if (2 <= a) return this.qq();
        var b = ("" !== this.name ? this.name : "") + " TreeModel";
        if (0 < a) {
            b += "\n node data:";
            a = this.nodeDataArray;
            for (var c = a.length, d = 0; d < c; d++) {
                var e = a[d];
                b += " " + this.pa(e) + ":" + Qa(e)
            }
        }
        return b
    };
    t.mk = function() {
        var a = Z.prototype.mk.call(this),
            b = "";
        "parent" !== this.nodeParentKeyProperty && "string" === typeof this.nodeParentKeyProperty && (b += ',\n  "nodeParentKeyProperty": ' + this.quote(this.nodeParentKeyProperty));
        return a + b
    };
    t.jq = function(a) {
        Z.prototype.jq.call(this, a);
        a.nodeParentKeyProperty && (this.nodeParentKeyProperty = a.nodeParentKeyProperty)
    };
    t.uq = function(a) {
        qq(this, a, "nodeParentKeyProperty");
        return Z.prototype.uq.call(this, a)
    };
    t.dm = function(a) {
        return a
    };
    t.Ii = function(a) {
        if (null !== a) {
            var b = this.re;
            if ("" !== b && (b = an(a, b), void 0 !== b)) {
                if (aq(b)) return b;
                A("ParentKey value for node data " + a + " is not a number or a string: " + b)
            }
        }
    };
    t.He = function(a, b) {
        null === b && (b = void 0);
        if (null !== a) {
            var c = this.re;
            if ("" !== c)
                if (b = this.dm(b), this.Pb(a)) {
                    var d = an(a, c);
                    d !== b && (eq(this, d, a), Lj(a, c, b), null === this.Qb(b) && fq(this, b, a), vq(this, "nodeParentKey", af, c, a, d, b), "string" === typeof c && this.Ea(a, c))
                } else Lj(a, c, b)
        }
    };
    t.Wu = function(a) {
        if (null === a) return "";
        var b = this.vj;
        if ("" === b) return "";
        b = an(a, b);
        if (void 0 === b) return "";
        if ("string" === typeof b) return b;
        A("getParentLinkCategoryForNodeData found a non-string category for " + a + ": " + b);
        return ""
    };
    Cq.prototype.getLinkCategoryForData = function(a) {
        return this.Wu(a)
    };
    Cq.prototype.Cv = function(a, b) {
        if (null !== a) {
            var c = this.vj;
            if ("" !== c)
                if (this.Pb(a)) {
                    var d = an(a, c);
                    void 0 === d && (d = "");
                    d !== b && (Lj(a, c, b), vq(this, "parentLinkCategory", af, c, a, d, b), "string" === typeof c && this.Ea(a, c))
                } else Lj(a, c, b)
        }
    };
    Cq.prototype.setLinkCategoryForData = function(a, b) {
        this.Cv(a, b)
    };
    Cq.prototype.copyNodeData = function(a) {
        if (null === a) return null;
        a = Z.prototype.copyNodeData.call(this, a);
        this.Rj || "" === this.re || void 0 === an(a, this.re) || Lj(a, this.re, void 0);
        return a
    };
    Cq.prototype.setDataProperty = function(a, b, c) {
        if (this.Pb(a))
            if (b === this.nodeKeyProperty) this.sm(a, c);
            else {
                if (b === this.nodeCategoryProperty) {
                    this.oq(a, c);
                    return
                }
                if (b === this.nodeParentKeyProperty) {
                    this.He(a, c);
                    return
                }
            } var d = an(a, b);
        d !== c && (Lj(a, b, c), this.jt(a, b, d, c))
    };
    t = Cq.prototype;
    t.mq = function(a, b) {
        Z.prototype.mq.call(this, a, b);
        for (var c = this.eb.iterator; c.next();) this.vv(c.value, a, b)
    };
    t.vv = function(a, b, c) {
        if (this.Ii(a) === b) {
            var d = this.re;
            Lj(a, d, c);
            vq(this, "nodeParentKey", af, d, a, b, c);
            "string" === typeof d && this.Ea(a, d)
        }
    };
    t.om = function(a) {
        Z.prototype.om.call(this, a);
        a = this.pa(a);
        var b = dq(this, a);
        if (null !== b) {
            var c = Ka();
            for (b = b.iterator; b.next();) {
                var d = b.value;
                if (this.Pb(d) && this.Ii(d) === a) {
                    var e = this.re;
                    vq(this, "nodeParentKey", af, e, d, a, a);
                    "string" === typeof e && this.Ea(d, e);
                    c.push(d)
                }
            }
            for (b = 0; b < c.length; b++) eq(this, a, c[b]);
            Oa(c)
        }
    };
    t.nm = function(a) {
        Z.prototype.nm.call(this, a);
        var b = this.Ii(a);
        b = this.dm(b);
        null === this.Qb(b) && fq(this, b, a)
    };
    t.rq = function(a) {
        Z.prototype.rq.call(this, a);
        var b = this.Ii(a);
        eq(this, b, a)
    };
    t.cm = function() {
        return !0
    };
    t.at = function() {
        return !0
    };
    pa.Object.defineProperties(Cq.prototype, {
        nodeParentKeyProperty: {
            get: function() {
                return this.re
            },
            set: function(a) {
                var b = this.re;
                b !== a && (this.re = a, this.g("nodeParentKeyProperty", b, a))
            }
        },
        Rj: {
            get: function() {
                return this.dn
            },
            set: function(a) {
                this.dn !== a && (this.dn = a)
            }
        },
        parentLinkCategoryProperty: {
            get: function() {
                return this.vj
            },
            set: function(a) {
                var b = this.vj;
                b !== a && (this.vj = a, this.g("parentLinkCategoryProperty", b, a))
            }
        },
        linkCategoryProperty: {
            get: function() {
                return this.parentLinkCategoryProperty
            },
            set: function(a) {
                this.parentLinkCategoryProperty = a
            }
        }
    });
    pa.Object.defineProperties(Cq, {
        type: {
            get: function() {
                return "TreeModel"
            }
        }
    });
    Cq.prototype.setParentLinkCategoryForNodeData = Cq.prototype.Cv;
    Cq.prototype.getParentLinkCategoryForNodeData = Cq.prototype.Wu;
    Cq.prototype.setParentKeyForNodeData = Cq.prototype.He;
    Cq.prototype.getParentKeyForNodeData = Cq.prototype.Ii;
    Cq.className = "TreeModel";
    tq.TreeModel = Cq;

    function Dq() {
        ui.call(this);
        this.rw = this.xn = this.Yb = 0;
        this.dr = 360;
        this.qw = Eq;
        this.bj = 0;
        this.cw = new G;
        this.Rq = this.Sd = 0;
        this.Cs = new Fq;
        this.Jt = this.uj = 0;
        this.Rx = 600;
        this.Po = NaN;
        this.Qm = 1;
        this.qp = 0;
        this.Gl = 360;
        this.Bb = Eq;
        this.L = Gq;
        this.Rc = Hq;
        this.Nc = Cp;
        this.$e = 6;
        this.zo = Iq
    }
    oa(Dq, ui);
    Dq.prototype.cloneProtected = function(a) {
        ui.prototype.cloneProtected.call(this, a);
        a.Po = this.Po;
        a.Qm = this.Qm;
        a.qp = this.qp;
        a.Gl = this.Gl;
        a.Bb = this.Bb;
        a.L = this.L;
        a.Rc = this.Rc;
        a.Nc = this.Nc;
        a.$e = this.$e;
        a.zo = this.zo
    };
    Dq.prototype.gb = function(a) {
        if (a.classType === Dq)
            if (a === Jq || a === Kq || a === Lq || a === Nq || a === Hq) this.sorting = a;
            else if (a === Oq || a === Pq || a === Gq || a === Qq) this.direction = a;
        else if (a === Rq || a === Sq || a === Eq || a === Tq) this.arrangement = a;
        else {
            if (a === Uq || a === Iq) this.nodeDiameterFormula = a
        } else ui.prototype.gb.call(this, a)
    };
    Dq.prototype.createNetwork = function() {
        return new Vq(this)
    };
    Dq.prototype.doLayout = function(a) {
        null === this.network && (this.network = this.makeNetwork(a));
        this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
        a = this.network.vertexes;
        if (1 >= a.count) 1 === a.count && (a = a.first(), a.centerX = 0, a.centerY = 0);
        else {
            var b = new E;
            b.addAll(a.iterator);
            a = new E;
            var c = new E;
            var d = this.sort(b);
            var e, f, g = this.Rq;
            var h = this.arrangement;
            var k = this.nodeDiameterFormula;
            var l = this.radius;
            if (!isFinite(l) || 0 >= l) l = NaN;
            var m = this.aspectRatio;
            if (!isFinite(m) || 0 >= m) m = 1;
            var n = this.startAngle;
            isFinite(n) || (n = 0);
            var p = this.sweepAngle;
            if (!isFinite(p) || 360 < p || 1 > p) p = 360;
            b = this.spacing;
            isFinite(b) || (b = NaN);
            h === Tq && k === Uq ? h = Eq : h === Tq && k !== Uq && (h = this.arrangement);
            if ((this.direction === Oq || this.direction === Pq) && this.sorting !== Hq) {
                for (k = 0; !(k >= d.length); k += 2) {
                    a.add(d.N(k));
                    if (k + 1 >= d.length) break;
                    c.add(d.N(k + 1))
                }
                this.direction === Oq ? (this.arrangement === Tq && a.reverse(), d = new E, d.addAll(a), d.addAll(c)) : (this.arrangement === Tq && c.reverse(), d = new E, d.addAll(c), d.addAll(a))
            }
            k = d.length;
            for (var q = f = e = 0; q <
                d.length; q++) {
                var r = n + p * f * (this.direction === Gq ? 1 : -1) / k,
                    u = d.N(q).diameter;
                isNaN(u) && (u = Wq(d.N(q), r));
                360 > p && (0 === q || q === d.length - 1) && (u /= 2);
                e += u;
                f++
            }
            if (isNaN(l) || h === Tq) {
                isNaN(b) && (b = 6);
                if (h !== Eq && h !== Tq) {
                    f = -Infinity;
                    for (g = 0; g < k; g++) q = d.N(g), e = d.N(g === k - 1 ? 0 : g + 1), isNaN(q.diameter) && Wq(q, 0), isNaN(e.diameter) && Wq(e, 0), f = Math.max(f, (q.diameter + e.diameter) / 2);
                    g = f + b;
                    h === Rq ? l = (f + b) / (2 * Math.PI / k) : l = Xq(this, g * (360 <= p ? k : k - 1), m, n * Math.PI / 180, p * Math.PI / 180)
                } else l = Xq(this, e + (360 <= p ? k : k - 1) * (h !== Tq ? b : 1.6 * b), m, n *
                    Math.PI / 180, p * Math.PI / 180);
                f = l * m
            } else if (f = l * m, q = Yq(this, l, f, n * Math.PI / 180, p * Math.PI / 180), isNaN(b)) {
                if (h === Eq || h === Tq) b = (q - e) / (360 <= p ? k : k - 1)
            } else if (h === Eq || h === Tq) q = (q - e) / (360 <= p ? k : k - 1), q < b ? (l = Xq(this, e + b * (360 <= p ? k : k - 1), m, n * Math.PI / 180, p * Math.PI / 180), f = l * m) : b = q;
            else {
                g = -Infinity;
                for (e = 0; e < k; e++) r = d.N(e), u = d.N(e === k - 1 ? 0 : e + 1), isNaN(r.diameter) && Wq(r, 0), isNaN(u.diameter) && Wq(u, 0), g = Math.max(g, (r.diameter + u.diameter) / 2);
                g += b;
                e = Xq(this, g * (360 <= p ? k : k - 1), m, n * Math.PI / 180, p * Math.PI / 180);
                e > l ? (l = e, f = l * m) : g =
                    q / (360 <= p ? k : k - 1)
            }
            this.qw = h;
            this.Yb = l;
            this.xn = m;
            this.rw = n;
            this.dr = p;
            this.bj = b;
            this.Sd = f;
            this.Rq = g;
            b = d;
            d = this.qw;
            h = this.Yb;
            l = this.rw;
            m = this.dr;
            n = this.bj;
            p = this.Sd;
            k = this.Rq;
            if (this.direction !== Oq && this.direction !== Pq || d !== Tq)
                if (this.direction === Oq || this.direction === Pq) {
                    g = 0;
                    switch (d) {
                        case Sq:
                            g = 180 * Zq(this, h, p, l, k) / Math.PI;
                            break;
                        case Eq:
                            k = b = 0;
                            g = a.first();
                            null !== g && (b = Wq(g, Math.PI / 2));
                            g = c.first();
                            null !== g && (k = Wq(g, Math.PI / 2));
                            g = 180 * Zq(this, h, p, l, n + (b + k) / 2) / Math.PI;
                            break;
                        case Rq:
                            g = m / b.length
                    }
                    if (this.direction ===
                        Oq) {
                        switch (d) {
                            case Sq:
                                $q(this, a, l, Qq);
                                break;
                            case Eq:
                                ar(this, a, l, Qq);
                                break;
                            case Rq:
                                br(this, a, m / 2, l, Qq)
                        }
                        switch (d) {
                            case Sq:
                                $q(this, c, l + g, Gq);
                                break;
                            case Eq:
                                ar(this, c, l + g, Gq);
                                break;
                            case Rq:
                                br(this, c, m / 2, l + g, Gq)
                        }
                    } else {
                        switch (d) {
                            case Sq:
                                $q(this, c, l, Qq);
                                break;
                            case Eq:
                                ar(this, c, l, Qq);
                                break;
                            case Rq:
                                br(this, c, m / 2, l, Qq)
                        }
                        switch (d) {
                            case Sq:
                                $q(this, a, l + g, Gq);
                                break;
                            case Eq:
                                ar(this, a, l + g, Gq);
                                break;
                            case Rq:
                                br(this, a, m / 2, l + g, Gq)
                        }
                    }
                } else switch (d) {
                    case Sq:
                        $q(this, b, l, this.direction);
                        break;
                    case Eq:
                        ar(this, b, l, this.direction);
                        break;
                    case Rq:
                        br(this, b, m, l, this.direction);
                        break;
                    case Tq:
                        cr(this, b, m, l, this.direction)
                } else cr(this, b, m, l - m / 2, Gq)
        }
        this.updateParts();
        this.network = null;
        this.isValidLayout = !0
    };

    function br(a, b, c, d, e) {
        var f = a.dr,
            g = a.Yb;
        a = a.Sd;
        d = d * Math.PI / 180;
        c = c * Math.PI / 180;
        for (var h = b.length, k = 0; k < h; k++) {
            var l = d + (e === Gq ? k * c / (360 <= f ? h : h - 1) : -(k * c) / h),
                m = b.N(k),
                n = g * Math.tan(l) / a;
            n = Math.sqrt((g * g + a * a * n * n) / (1 + n * n));
            m.centerX = n * Math.cos(l);
            m.centerY = n * Math.sin(l);
            m.actualAngle = 180 * l / Math.PI
        }
    }

    function ar(a, b, c, d) {
        var e = a.Yb,
            f = a.Sd,
            g = a.bj;
        c = c * Math.PI / 180;
        for (var h = b.length, k = 0; k < h; k++) {
            var l = b.N(k),
                m = b.N(k === h - 1 ? 0 : k + 1),
                n = f * Math.sin(c);
            l.centerX = e * Math.cos(c);
            l.centerY = n;
            l.actualAngle = 180 * c / Math.PI;
            isNaN(l.diameter) && Wq(l, 0);
            isNaN(m.diameter) && Wq(m, 0);
            l = Zq(a, e, f, d === Gq ? c : -c, (l.diameter + m.diameter) / 2 + g);
            c += d === Gq ? l : -l
        }
    }

    function $q(a, b, c, d) {
        var e = a.Yb,
            f = a.Sd,
            g = a.Rq;
        c = c * Math.PI / 180;
        for (var h = b.length, k = 0; k < h; k++) {
            var l = b.N(k);
            l.centerX = e * Math.cos(c);
            l.centerY = f * Math.sin(c);
            l.actualAngle = 180 * c / Math.PI;
            l = Zq(a, e, f, d === Gq ? c : -c, g);
            c += d === Gq ? l : -l
        }
    }

    function cr(a, b, c, d, e) {
        var f = a.dr;
        a.uj = 0;
        a.Cs = new Fq;
        if (360 > c) {
            for (f = d + (e === Gq ? f : -f); 0 > f;) f += 360;
            f %= 360;
            180 < f && (f -= 360);
            f *= Math.PI / 180;
            a.Jt = f;
            dr(a, b, c, d, e)
        } else er(a, b, c, d, e);
        a.Cs.commit(b)
    }

    function er(a, b, c, d, e) {
        var f = a.Yb,
            g = a.bj,
            h = a.xn,
            k = f * Math.cos(d * Math.PI / 180),
            l = a.Sd * Math.sin(d * Math.PI / 180),
            m = b.Ma();
        if (3 === m.length) m[0].centerX = f, m[0].centerY = 0, m[1].centerX = m[0].centerX - m[0].width / 2 - m[1].width / 2 - g, m[1].y = m[0].y, m[2].centerX = (m[0].centerX + m[1].centerX) / 2, m[2].y = m[0].y - m[2].height - g;
        else if (4 === m.length) m[0].centerX = f, m[0].centerY = 0, m[2].centerX = -m[0].centerX, m[2].centerY = m[0].centerY, m[1].centerX = 0, m[1].y = Math.min(m[0].y, m[2].y) - m[1].height - g, m[3].centerX = 0, m[3].y = Math.max(m[0].y +
            m[0].height + g, m[2].y + m[2].height + g);
        else {
            f = G.alloc();
            for (var n = 0; n < m.length; n++) {
                m[n].centerX = k;
                m[n].centerY = l;
                if (n >= m.length - 1) break;
                fr(a, k, l, m, n, e, f) || gr(a, k, l, m, n, e, f);
                k = f.x;
                l = f.y
            }
            G.free(f);
            a.uj++;
            if (!(23 < a.uj)) {
                k = m[0].centerX;
                l = m[0].centerY;
                f = m[m.length - 1].centerX;
                n = m[m.length - 1].centerY;
                var p = Math.abs(k - f) - ((m[0].width + m[m.length - 1].width) / 2 + g),
                    q = Math.abs(l - n) - ((m[0].height + m[m.length - 1].height) / 2 + g);
                g = 0;
                1 > Math.abs(q) ? Math.abs(k - f) < (m[0].width + m[m.length - 1].width) / 2 && (g = 0) : g = 0 < q ? q : 1 > Math.abs(p) ?
                    0 : p;
                k = Math.abs(f) > Math.abs(n) ? 0 < f !== l > n : 0 < n !== k < f;
                if (k = e === Gq ? k : !k) g = -Math.abs(g), g = Math.min(g, -m[m.length - 1].width), g = Math.min(g, -m[m.length - 1].height);
                a.Cs.compare(g, m);
                1 < Math.abs(g) && (a.Yb = 8 > a.uj ? a.Yb - g / (2 * Math.PI) : 5 > m.length && 10 < g ? a.Yb / 2 : a.Yb - (0 < g ? 1.7 : -2.3), a.Sd = a.Yb * h, er(a, b, c, d, e))
            }
        }
    }

    function dr(a, b, c, d, e) {
        for (var f = a.Yb, g = a.Sd, h = a.xn, k = f * Math.cos(d * Math.PI / 180), l = g * Math.sin(d * Math.PI / 180), m = G.alloc(), n = b.Ma(), p = 0; p < n.length; p++) {
            n[p].centerX = k;
            n[p].centerY = l;
            if (p >= n.length - 1) break;
            fr(a, k, l, n, p, e, m) || gr(a, k, l, n, p, e, m);
            k = m.x;
            l = m.y
        }
        G.free(m);
        a.uj++;
        if (!(23 < a.uj)) {
            k = Math.atan2(l, k);
            k = e === Gq ? a.Jt - k : k - a.Jt;
            k = Math.abs(k) < Math.abs(k - 2 * Math.PI) ? k : k - 2 * Math.PI;
            f = k * (f + g) / 2;
            g = a.Cs;
            if (Math.abs(f) < Math.abs(g.Yl))
                for (g.Yl = f, g.nk = [], g.xm = [], k = 0; k < n.length; k++) g.nk[k] = n[k].bounds.x, g.xm[k] = n[k].bounds.y;
            1 < Math.abs(f) && (a.Yb = 8 > a.uj ? a.Yb - f / (2 * Math.PI) : a.Yb - (0 < f ? 1.7 : -2.3), a.Sd = a.Yb * h, dr(a, b, c, d, e))
        }
    }

    function fr(a, b, c, d, e, f, g) {
        var h = a.Yb,
            k = a.Sd,
            l = 0;
        a = (d[e].width + d[e + 1].width) / 2 + a.bj;
        var m = !1;
        if (0 <= c !== (f === Gq)) {
            if (f = b + a, f > h) {
                f = b - a;
                if (f < -h) return g.x = f, g.y = l, !1;
                m = !0
            }
        } else if (f = b - a, f < -h) {
            f = b + a;
            if (f > h) return g.x = f, g.y = l, !1;
            m = !0
        }
        l = Math.sqrt(1 - Math.min(1, f * f / (h * h))) * k;
        0 > c !== m && (l = -l);
        if (Math.abs(c - l) > (d[e].height + d[e + 1].height) / 2) return g.x = f, g.y = l, !1;
        g.x = f;
        g.y = l;
        return !0
    }

    function gr(a, b, c, d, e, f, g) {
        var h = a.Yb,
            k = a.Sd,
            l = 0;
        a = (d[e].height + d[e + 1].height) / 2 + a.bj;
        d = !1;
        if (0 <= b !== (f === Gq)) {
            if (f = c - a, f < -k) {
                f = c + a;
                if (f > k) {
                    g.x = l;
                    g.y = f;
                    return
                }
                d = !0
            }
        } else if (f = c + a, f > k) {
            f = c - a;
            if (f < -k) {
                g.x = l;
                g.y = f;
                return
            }
            d = !0
        }
        l = Math.sqrt(1 - Math.min(1, f * f / (k * k))) * h;
        0 > b !== d && (l = -l);
        g.x = l;
        g.y = f
    }
    Dq.prototype.commitLayout = function() {
        this.commitNodes();
        this.isRouting && this.commitLinks()
    };
    Dq.prototype.commitNodes = function() {
        var a = null !== this.group && null !== this.group.placeholder && this.group.isSubGraphExpanded,
            b = a ? this.group.location.copy() : null,
            c = this.actualCenter;
        a ? c = new G(0, 0) : (c.x = this.arrangementOrigin.x + this.Yb, c.y = this.arrangementOrigin.y + this.Sd);
        for (var d = this.network.vertexes.iterator; d.next();) {
            var e = d.value;
            e.x += c.x;
            e.y += c.y;
            e.commit()
        }
        a && (this.group.bc(), a = this.group.position.copy(), c = this.group.location.copy(), b = b.Yd(c.Yd(a)), this.group.move(b), this.cw = b.Yd(a))
    };
    Dq.prototype.commitLinks = function() {
        for (var a = this.network.edges.iterator; a.next();) a.value.commit()
    };

    function Yq(a, b, c, d, e) {
        var f = a.Rx;
        if (.001 > Math.abs(a.xn - 1)) return void 0 !== d && void 0 !== e ? e * b : 2 * Math.PI * b;
        a = b > c ? Math.sqrt(b * b - c * c) / b : Math.sqrt(c * c - b * b) / c;
        var g = 0;
        var h = void 0 !== d && void 0 !== e ? e / (f + 1) : Math.PI / (2 * (f + 1));
        for (var k = 0, l = 0; l <= f; l++) {
            void 0 !== d && void 0 !== e ? k = d + l * e / f : k = l * Math.PI / (2 * f);
            var m = Math.sin(k);
            g += Math.sqrt(1 - a * a * m * m) * h
        }
        return void 0 !== d && void 0 !== e ? (b > c ? b : c) * g : 4 * (b > c ? b : c) * g
    }

    function Xq(a, b, c, d, e) {
        return b / (void 0 !== d && void 0 !== e ? Yq(a, 1, c, d, e) : Yq(a, 1, c))
    }

    function Zq(a, b, c, d, e) {
        if (.001 > Math.abs(a.xn - 1)) return e / b;
        var f = b > c ? Math.sqrt(b * b - c * c) / b : Math.sqrt(c * c - b * b) / c,
            g = 0;
        a = 2 * Math.PI / (700 * a.network.vertexes.count);
        b > c && (d += Math.PI / 2);
        for (var h = 0;; h++) {
            var k = Math.sin(d + h * a);
            g += (b > c ? b : c) * Math.sqrt(1 - f * f * k * k) * a;
            if (g >= e) return h * a
        }
    }
    Dq.prototype.sort = function(a) {
        switch (this.sorting) {
            case Lq:
                break;
            case Nq:
                a.reverse();
                break;
            case Jq:
                a.sort(this.comparer);
                break;
            case Kq:
                a.sort(this.comparer);
                a.reverse();
                break;
            case Hq:
                for (var b = [], c = 0; c < a.length; c++) b.push(0);
                c = new E;
                for (var d = 0; d < a.length; d++) {
                    var e = -1,
                        f = -1;
                    if (0 === d)
                        for (var g = 0; g < a.length; g++) {
                            var h = a.N(g).edgesCount;
                            h > e && (e = h, f = g)
                        } else
                            for (g = 0; g < a.length; g++) h = b[g], h > e && (e = h, f = g);
                    c.add(a.N(f));
                    b[f] = -1;
                    f = a.N(f);
                    for (g = f.sourceEdges; g.next();) e = a.indexOf(g.value.fromVertex), 0 > e || 0 <=
                        b[e] && b[e]++;
                    for (f = f.destinationEdges; f.next();) e = a.indexOf(f.value.toVertex), 0 > e || 0 <= b[e] && b[e]++
                }
                a = [];
                for (b = 0; b < c.length; b++) {
                    e = c.N(b);
                    a[b] = [];
                    for (f = e.destinationEdges; f.next();) d = c.indexOf(f.value.toVertex), d !== b && 0 > a[b].indexOf(d) && a[b].push(d);
                    for (e = e.sourceEdges; e.next();) d = c.indexOf(e.value.fromVertex), d !== b && 0 > a[b].indexOf(d) && a[b].push(d)
                }
                f = [];
                for (b = 0; b < a.length; b++) f[b] = 0;
                b = [];
                g = [];
                h = [];
                e = [];
                d = new E;
                for (var k = 0, l = 0; l < a.length; l++) {
                    var m = a[l].length;
                    if (1 === m) e.push(l);
                    else if (0 === m) d.add(c.N(l));
                    else {
                        if (0 === k) b.push(l);
                        else {
                            for (var n = m = Infinity, p = -1, q = [], r = 0; r < b.length; r++) 0 > a[b[r]].indexOf(b[r === b.length - 1 ? 0 : r + 1]) && q.push(r === b.length - 1 ? 0 : r + 1);
                            if (0 === q.length)
                                for (r = 0; r < b.length; r++) q.push(r);
                            for (r = 0; r < q.length; r++) {
                                for (var u = q[r], v = a[l], x = 0, y = 0; y < g.length; y++) {
                                    var z = f[g[y]],
                                        B = f[h[y]];
                                    if (z < B) {
                                        var C = z;
                                        z = B
                                    } else C = B;
                                    if (C < u && u <= z)
                                        for (B = 0; B < v.length; B++) {
                                            var I = v[B];
                                            0 > b.indexOf(I) || C < f[I] && f[I] < z || C === f[I] || z === f[I] || x++
                                        } else
                                            for (B = 0; B < v.length; B++) I = v[B], 0 > b.indexOf(I) || C < f[I] && f[I] < z && C !== f[I] &&
                                                z !== f[I] && x++
                                }
                                v = x;
                                for (y = x = 0; y < a[l].length; y++) C = b.indexOf(a[l][y]), 0 <= C && (C = Math.abs(u - (C >= u ? C + 1 : C)), x += C < b.length + 1 - C ? C : b.length + 1 - C);
                                for (y = 0; y < g.length; y++) C = f[g[y]], z = f[h[y]], C >= u && C++, z >= u && z++, C > z && (B = z, z = C, C = B), z - C < (b.length + 2) / 2 === (C < u && u <= z) && x++;
                                if (v < m || v === m && x < n) m = v, n = x, p = u
                            }
                            b.splice(p, 0, l);
                            for (m = 0; m < b.length; m++) f[b[m]] = m;
                            for (m = 0; m < a[l].length; m++) n = a[l][m], 0 <= b.indexOf(n) && (g.push(l), h.push(n))
                        }
                        k++
                    }
                }
                for (g = b.length;;) {
                    f = !0;
                    for (h = 0; h < e.length; h++)
                        if (k = e[h], l = a[k][0], m = b.indexOf(l), 0 <= m) {
                            for (p =
                                n = 0; p < a[l].length; p++) q = b.indexOf(a[l][p]), 0 > q || q === m || (r = q > m ? q - m : m - q, n += q < m !== r > g - r ? 1 : -1);
                            b.splice(0 > n ? m : m + 1, 0, k);
                            e.splice(h, 1);
                            h--
                        } else f = !1;
                    if (f) break;
                    else b.push(e[0]), e.splice(0, 1)
                }
                for (a = 0; a < b.length; a++) d.add(c.N(b[a]));
                return d;
            default:
                A("Invalid sorting type.")
        }
        return a
    };
    pa.Object.defineProperties(Dq.prototype, {
        radius: {
            get: function() {
                return this.Po
            },
            set: function(a) {
                this.Po !== a && (0 < a || isNaN(a)) && (this.Po = a, this.B())
            }
        },
        aspectRatio: {
            get: function() {
                return this.Qm
            },
            set: function(a) {
                this.Qm !== a && 0 < a && (this.Qm = a, this.B())
            }
        },
        startAngle: {
            get: function() {
                return this.qp
            },
            set: function(a) {
                this.qp !== a && (this.qp = a, this.B())
            }
        },
        sweepAngle: {
            get: function() {
                return this.Gl
            },
            set: function(a) {
                this.Gl !== a && (0 < a && 360 >= a ? this.Gl = a : this.Gl = 360, this.B())
            }
        },
        arrangement: {
            get: function() {
                return this.Bb
            },
            set: function(a) {
                this.Bb === a || a !== Tq && a !== Eq && a !== Sq && a !== Rq || (this.Bb = a, this.B())
            }
        },
        direction: {
            get: function() {
                return this.L
            },
            set: function(a) {
                this.L === a || a !== Gq && a !== Qq && a !== Oq && a !== Pq || (this.L = a, this.B())
            }
        },
        sorting: {
            get: function() {
                return this.Rc
            },
            set: function(a) {
                this.Rc === a || a !== Lq && a !== Nq &&
                    a !== Jq && !Kq && a !== Hq || (this.Rc = a, this.B())
            }
        },
        comparer: {
            get: function() {
                return this.Nc
            },
            set: function(a) {
                this.Nc !== a && (this.Nc = a, this.B())
            }
        },
        spacing: {
            get: function() {
                return this.$e
            },
            set: function(a) {
                this.$e !== a && (this.$e = a, this.B())
            }
        },
        nodeDiameterFormula: {
            get: function() {
                return this.zo
            },
            set: function(a) {
                this.zo === a || a !== Iq && a !== Uq || (this.zo = a, this.B())
            }
        },
        actualXRadius: {
            get: function() {
                return this.Yb
            }
        },
        actualYRadius: {
            get: function() {
                return this.Sd
            }
        },
        actualSpacing: {
            get: function() {
                return this.bj
            }
        },
        actualCenter: {
            get: function() {
                return this.cw
            }
        }
    });
    var Eq = new D(Dq, "ConstantSpacing", 0),
        Sq = new D(Dq, "ConstantDistance", 1),
        Rq = new D(Dq, "ConstantAngle", 2),
        Tq = new D(Dq, "Packed", 3),
        Gq = new D(Dq, "Clockwise", 4),
        Qq = new D(Dq, "Counterclockwise", 5),
        Oq = new D(Dq, "BidirectionalLeft", 6),
        Pq = new D(Dq, "BidirectionalRight", 7),
        Lq = new D(Dq, "Forwards", 8),
        Nq = new D(Dq, "Reverse", 9),
        Jq = new D(Dq, "Ascending", 10),
        Kq = new D(Dq, "Descending", 11),
        Hq = new D(Dq, "Optimized", 12),
        Iq = new D(Dq, "Pythagorean", 13),
        Uq = new D(Dq, "Circular", 14);
    Dq.className = "CircularLayout";
    Dq.ConstantSpacing = Eq;
    Dq.ConstantDistance = Sq;
    Dq.ConstantAngle = Rq;
    Dq.Packed = Tq;
    Dq.Clockwise = Gq;
    Dq.Counterclockwise = Qq;
    Dq.BidirectionalLeft = Oq;
    Dq.BidirectionalRight = Pq;
    Dq.Forwards = Lq;
    Dq.Reverse = Nq;
    Dq.Ascending = Jq;
    Dq.Descending = Kq;
    Dq.Optimized = Hq;
    Dq.Pythagorean = Iq;
    Dq.Circular = Uq;

    function Fq() {
        this.Yl = -Infinity;
        this.xm = this.nk = null
    }
    Fq.prototype.compare = function(a, b) {
        if (0 < a && 0 > this.Yl || Math.abs(a) < Math.abs(this.Yl) && !(0 > a && 0 < this.Yl))
            for (this.Yl = a, this.nk = [], this.xm = [], a = 0; a < b.length; a++) this.nk[a] = b[a].bounds.x, this.xm[a] = b[a].bounds.y
    };
    Fq.prototype.commit = function(a) {
        if (null !== this.nk && null !== this.xm)
            for (var b = 0; b < this.nk.length; b++) {
                var c = a.N(b);
                c.x = this.nk[b];
                c.y = this.xm[b]
            }
    };
    Fq.className = "VertexArrangement";

    function Vq(a) {
        tp.call(this, a)
    }
    oa(Vq, tp);
    Vq.prototype.createVertex = function() {
        return new hr(this)
    };
    Vq.prototype.createEdge = function() {
        return new ir(this)
    };
    Vq.className = "CircularNetwork";

    function hr(a) {
        wp.call(this, a);
        this.K = this.aj = NaN
    }
    oa(hr, wp);

    function Wq(a, b) {
        var c = a.network;
        if (null === c) return NaN;
        c = c.layout;
        if (null === c) return NaN;
        if (c.arrangement === Tq)
            if (c.nodeDiameterFormula === Uq) a.aj = Math.max(a.width, a.height);
            else {
                c = Math.abs(Math.sin(b));
                b = Math.abs(Math.cos(b));
                if (0 === c) return a.width;
                if (0 === b) return a.height;
                a.aj = Math.min(a.height / c, a.width / b)
            }
        else a.aj = c.nodeDiameterFormula === Uq ? Math.max(a.width, a.height) : Math.sqrt(a.width * a.width + a.height * a.height);
        return a.aj
    }
    pa.Object.defineProperties(hr.prototype, {
        diameter: {
            get: function() {
                return this.aj
            },
            set: function(a) {
                this.aj !== a && (this.aj = a)
            }
        },
        actualAngle: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K !== a && (this.K = a)
            }
        }
    });
    hr.className = "CircularVertex";

    function ir(a) {
        xp.call(this, a)
    }
    oa(ir, xp);
    ir.className = "CircularEdge";

    function jr() {
        ui.call(this);
        this.jh = null;
        this.Yn = 0;
        this.yd = (new L(100, 100)).freeze();
        this.Pm = !1;
        this.Ze = !0;
        this.Zc = !1;
        this.il = 100;
        this.An = 1;
        this.If = 1E3;
        this.to = 10;
        this.Qo = Math;
        this.Ik = .05;
        this.Hk = 50;
        this.Fk = 150;
        this.Gk = 0;
        this.nn = 10;
        this.mn = 5
    }
    oa(jr, ui);
    jr.prototype.cloneProtected = function(a) {
        ui.prototype.cloneProtected.call(this, a);
        a.yd.assign(this.yd);
        a.Pm = this.Pm;
        a.Ze = this.Ze;
        a.Zc = this.Zc;
        a.il = this.il;
        a.An = this.An;
        a.If = this.If;
        a.to = this.to;
        a.Qo = this.Qo;
        a.Ik = this.Ik;
        a.Hk = this.Hk;
        a.Fk = this.Fk;
        a.Gk = this.Gk;
        a.nn = this.nn;
        a.mn = this.mn
    };
    jr.prototype.createNetwork = function() {
        return new kr(this)
    };
    jr.prototype.doLayout = function(a) {
        null === this.network && (this.network = this.makeNetwork(a));
        a = this.maxIterations;
        if (0 < this.network.vertexes.count) {
            this.network.Np();
            for (var b = this.network.vertexes.iterator; b.next();) {
                var c = b.value;
                c.charge = this.electricalCharge(c);
                c.mass = this.gravitationalMass(c)
            }
            for (b = this.network.edges.iterator; b.next();) c = b.value, c.stiffness = this.springStiffness(c), c.length = this.springLength(c);
            this.Eu();
            this.Yn = 0;
            if (this.needsClusterLayout()) {
                b = this.network;
                for (c = b.Hx().iterator; c.next();) {
                    this.network =
                        c.value;
                    for (var d = this.network.vertexes.iterator; d.next();) {
                        var e = d.value;
                        e.vd = e.vertexes.count;
                        e.xh = 1;
                        e.Pj = null;
                        e.Ge = null
                    }
                    lr(this, 0, a)
                }
                this.network = b;
                c.reset();
                d = this.arrangementSpacing;
                for (var f = c.count, g = !0, h = e = 0, k = Ka(), l = 0; l < f + b.vertexes.count + 2; l++) k[l] = null;
                f = 0;
                c.reset();
                for (var m = N.alloc(); c.next();)
                    if (l = c.value, this.computeBounds(l, m), g) g = !1, e = m.x + m.width / 2, h = m.y + m.height / 2, k[0] = new G(m.x + m.width + d.width, m.y), k[1] = new G(m.x, m.y + m.height + d.height), f = 2;
                    else {
                        var n = mr(k, f, e, h, m.width, m.height,
                                d),
                            p = k[n],
                            q = new G(p.x + m.width + d.width, p.y),
                            r = new G(p.x, p.y + m.height + d.height);
                        n + 1 < f && k.splice(n + 1, 0, null);
                        k[n] = q;
                        k[n + 1] = r;
                        f++;
                        n = p.x - m.x;
                        p = p.y - m.y;
                        for (l = l.vertexes.iterator; l.next();) q = l.value, q.centerX += n, q.centerY += p
                    } N.free(m);
                for (l = b.vertexes.iterator; l.next();) g = l.value, q = g.bounds, 2 > f ? (e = q.x + q.width / 2, h = q.y + q.height / 2, k[0] = new G(q.x + q.width + d.width, q.y), k[1] = new G(q.x, q.y + q.height + d.height), f = 2) : (m = mr(k, f, e, h, q.width, q.height, d), p = k[m], n = new G(p.x + q.width + d.width, p.y), q = new G(p.x, p.y + q.height +
                    d.height), m + 1 < f && k.splice(m + 1, 0, null), k[m] = n, k[m + 1] = q, f++, g.centerX = p.x + g.width / 2, g.centerY = p.y + g.height / 2);
                Oa(k);
                for (c.reset(); c.next();) {
                    d = c.value;
                    for (e = d.vertexes.iterator; e.next();) b.nh(e.value);
                    for (d = d.edges.iterator; d.next();) b.Jj(d.value)
                }
            }
            nr(this, a);
            this.updateParts()
        }
        this.il = a;
        this.network = null;
        this.isValidLayout = !0
    };
    jr.prototype.needsClusterLayout = function() {
        if (3 > this.network.vertexes.count) return !1;
        for (var a = 0, b = 0, c = this.network.vertexes.first().bounds, d = this.network.vertexes.iterator; d.next();) {
            if (d.value.bounds.Kc(c) && (a++, 2 < a)) return !0;
            if (10 < b) break;
            b++
        }
        return !1
    };
    jr.prototype.computeBounds = function(a, b) {
        var c = !0;
        for (a = a.vertexes.iterator; a.next();) {
            var d = a.value;
            c ? (c = !1, b.set(d.bounds)) : b.Wc(d.bounds)
        }
        return b
    };

    function lr(a, b, c) {
        if (or(a, b)) {
            var d = a.If;
            a.If *= 1 + 1 / (b + 1);
            var e = pr(a, b),
                f = Math.max(0, Math.max(Math.min(a.network.vertexes.count, c * (b + 1) / 11), 10));
            a.maxIterations += f;
            lr(a, b + 1, c);
            nr(a, f);
            qr(a, e);
            b = e.vertexes.Ma();
            b.sort(function(a, b) {
                return null === a || null === b || a === b ? 0 : b.vd - a.vd
            });
            for (c = 0; c < b.length; c++) rr(a, b[c]);
            a.If = d
        }
    }

    function or(a, b) {
        if (10 < b || 3 > a.network.vertexes.count) return !1;
        a.jh = a.network.vertexes.Ma();
        a = a.jh;
        a.sort(function(a, b) {
            return null === a || null === b || a === b ? 0 : b.vd - a.vd
        });
        for (b = a.length - 1; 0 <= b && 1 >= a[b].vd;) b--;
        return 1 < a.length - b
    }

    function pr(a, b) {
        for (var c = a.network, d = new kr(a), e = 0; e < a.jh.length; e++) {
            var f = a.jh[e];
            if (1 < f.vd) {
                d.nh(f);
                var g = new sr;
                g.yt = f.vd;
                g.zt = f.width;
                g.xt = f.height;
                g.Wv = f.focus.x;
                g.Xv = f.focus.y;
                null === f.Ge && (f.Ge = new E);
                f.Ge.add(g);
                f.yv = f.Ge.count - 1
            } else break
        }
        for (f = c.edges.iterator; f.next();) {
            var h = f.value;
            e = h.fromVertex;
            g = h.toVertex;
            e.network === d && g.network === d ? d.Jj(h) : e.network === d ? (h = e.Pj, null === h && (h = new E, e.Pj = h), h.add(g), e.vd--, e.xh += g.xh) : g.network === d && (h = g.Pj, null === h && (h = new E, g.Pj = h), h.add(e),
                g.vd--, g.xh += e.xh)
        }
        for (e = d.edges.iterator; e.next();) f = e.value, f.length *= Math.max(1, H.sqrt((f.fromVertex.xh + f.toVertex.xh) / (4 * b + 1)));
        for (b = d.vertexes.iterator; b.next();) {
            e = b.value;
            var k = e.Pj;
            if (null !== k && 0 < k.count && (g = e.Ge.N(e.Ge.count - 1).yt - e.vd, !(0 >= g))) {
                for (var l = h = 0, m = k.count - g; m < k.count; m++) {
                    var n = k.N(m),
                        p = null;
                    for (f = n.edges.iterator; f.next();) {
                        var q = f.value;
                        if (q.jx(n) === e) {
                            p = q;
                            break
                        }
                    }
                    null !== p && (l += p.length, h += n.width * n.height)
                }
                f = e.centerX;
                k = e.centerY;
                m = e.width;
                n = e.height;
                p = e.focus;
                q = m * n;
                1 > q &&
                    (q = 1);
                h = H.sqrt((h + q + l * l * 4 / (g * g)) / q);
                g = (h - 1) * m / 2;
                h = (h - 1) * n / 2;
                e.bounds = new N(f - p.x - g, k - p.y - h, m + 2 * g, n + 2 * h);
                e.focus = new G(p.x + g, p.y + h)
            }
        }
        a.network = d;
        return c
    }

    function qr(a, b) {
        for (var c = a.network.vertexes.iterator; c.next();) {
            var d = c.value;
            d.network = b;
            if (null !== d.Ge) {
                var e = d.Ge.N(d.yv);
                d.vd = e.yt;
                var f = e.Wv,
                    g = e.Xv;
                d.bounds = new N(d.centerX - f, d.centerY - g, e.zt, e.xt);
                d.focus = new G(f, g);
                d.yv--
            }
        }
        for (c = a.network.edges.iterator; c.next();) c.value.network = b;
        a.network = b
    }

    function rr(a, b) {
        var c = b.Pj;
        if (null !== c && 0 !== c.count) {
            var d = b.centerX,
                e = b.centerY,
                f = b.width,
                g = b.height;
            null !== b.Ge && 0 < b.Ge.count && (g = b.Ge.N(0), f = g.zt, g = g.xt);
            f = H.sqrt(f * f + g * g) / 2;
            for (var h = !1, k = g = 0, l = 0, m = b.vertexes.iterator; m.next();) {
                var n = m.value;
                1 >= n.vd ? k++ : (h = !0, l++, g += Math.atan2(b.centerY - n.centerY, b.centerX - n.centerX))
            }
            if (0 !== k)
                for (0 < l && (g /= l), l = b = 0, b = h ? 2 * Math.PI / (k + 1) : 2 * Math.PI / k, 0 === k % 2 && (l = b / 2), 1 < c.count && c.sort(function(a, b) {
                        return null === a || null === b || a === b ? 0 : b.width * b.height - a.width * a.height
                    }),
                    h = 0 === k % 2 ? 0 : 1, c = c.iterator; c.next();)
                    if (k = c.value, !(1 < k.vd || a.isFixed(k))) {
                        m = null;
                        for (n = k.edges.iterator; n.next();) {
                            m = n.value;
                            break
                        }
                        n = k.width;
                        var p = k.height;
                        n = H.sqrt(n * n + p * p) / 2;
                        m = f + m.length + n;
                        n = g + (b * (h / 2 >> 1) + l) * (0 === h % 2 ? 1 : -1);
                        k.centerX = d + m * Math.cos(n);
                        k.centerY = e + m * Math.sin(n);
                        h++
                    }
        }
    }

    function mr(a, b, c, d, e, f, g) {
        var h = 9E19,
            k = -1,
            l = 0;
        a: for (; l < b; l++) {
            var m = a[l],
                n = m.x - c,
                p = m.y - d;
            n = n * n + p * p;
            if (n < h) {
                for (p = l - 1; 0 <= p; p--)
                    if (a[p].y > m.y && a[p].x - m.x < e + g.width) continue a;
                for (p = l + 1; p < b; p++)
                    if (a[p].x > m.x && a[p].y - m.y < f + g.height) continue a;
                k = l;
                h = n
            }
        }
        return k
    }
    jr.prototype.Eu = function() {
        if (this.comments)
            for (var a = this.network.vertexes.iterator; a.next();) this.addComments(a.value)
    };
    jr.prototype.addComments = function(a) {
        var b = a.node;
        if (null !== b)
            for (b = b.Ru(); b.next();) {
                var c = b.value;
                if ("Comment" === c.category && c.isVisible()) {
                    var d = this.network.Ei(c);
                    null === d && (d = this.network.Nl(c));
                    d.charge = this.defaultCommentElectricalCharge;
                    c = null;
                    for (var e = d.destinationEdges; e.next();) {
                        var f = e.value;
                        if (f.toVertex === a) {
                            c = f;
                            break
                        }
                    }
                    if (null === c)
                        for (e = d.sourceEdges; e.next();)
                            if (f = e.value, f.fromVertex === a) {
                                c = f;
                                break
                            } null === c && (c = this.network.ak(a, d, null));
                    c.length = this.defaultCommentSpringLength
                }
            }
    };

    function tr(a, b) {
        var c = a.bounds,
            d = c.x;
        a = c.y;
        var e = c.width;
        c = c.height;
        var f = b.bounds,
            g = f.x;
        b = f.y;
        var h = f.width;
        f = f.height;
        return d + e < g ? a > b + f ? (c = d + e - g, a = a - b - f, H.sqrt(c * c + a * a)) : a + c < b ? (d = d + e - g, a = a + c - b, H.sqrt(d * d + a * a)) : g - (d + e) : d > g + h ? a > b + f ? (c = d - g - h, a = a - b - f, H.sqrt(c * c + a * a)) : a + c < b ? (d = d - g - h, a = a + c - b, H.sqrt(d * d + a * a)) : d - (g + h) : a > b + f ? a - (b + f) : a + c < b ? b - (a + c) : .1
    }

    function nr(a, b) {
        a.jh = null;
        for (b = a.Yn + b; a.Yn < b && (a.Yn++, ur(a)););
        a.jh = null
    }

    function ur(a) {
        null === a.jh && (a.jh = a.network.vertexes.Ma());
        var b = a.jh;
        if (0 >= b.length) return !1;
        var c = b[0];
        c.forceX = 0;
        c.forceY = 0;
        for (var d = c.centerX, e = d, f = c = c.centerY, g = 1; g < b.length; g++) {
            var h = b[g];
            h.forceX = 0;
            h.forceY = 0;
            var k = h.centerX;
            h = h.centerY;
            d = Math.min(d, k);
            e = Math.max(e, k);
            c = Math.min(c, h);
            f = Math.max(f, h)
        }(e = e - d > f - c) ? b.sort(function(a, b) {
            return null === a || null === b || a === b ? 0 : a.centerX - b.centerX
        }): b.sort(function(a, b) {
            return null === a || null === b || a === b ? 0 : a.centerY - b.centerY
        });
        c = a.If;
        var l = d = h = 0;
        for (f =
            0; f < b.length; f++) {
            g = b[f];
            d = g.bounds;
            h = g.focus;
            k = d.x + h.x;
            var m = d.y + h.y;
            d = g.charge * a.electricalFieldX(k, m);
            l = g.charge * a.electricalFieldY(k, m);
            d += g.mass * a.gravitationalFieldX(k, m);
            l += g.mass * a.gravitationalFieldY(k, m);
            g.forceX += d;
            g.forceY += l;
            for (var n = f + 1; n < b.length; n++) {
                var p = b[n];
                if (p !== g) {
                    d = p.bounds;
                    h = p.focus;
                    l = d.x + h.x;
                    var q = d.y + h.y;
                    if (k - l > c || l - k > c) {
                        if (e) break
                    } else if (m - q > c || q - m > c) {
                        if (!e) break
                    } else {
                        var r = tr(g, p);
                        1 > r ? (d = a.randomNumberGenerator, null === d && (a.randomNumberGenerator = d = new vr), r = d.random(),
                            h = d.random(), k > l ? (d = Math.abs(p.bounds.right - g.bounds.x), d = (1 + d) * r) : k < l ? (d = Math.abs(p.bounds.x - g.bounds.right), d = -(1 + d) * r) : (d = Math.max(p.width, g.width), d = (1 + d) * r - d / 2), m > q ? (l = Math.abs(p.bounds.bottom - g.bounds.y), l = (1 + l) * h) : k < l ? (l = Math.abs(p.bounds.y - g.bounds.bottom), l = -(1 + l) * h) : (l = Math.max(p.height, g.height), l = (1 + l) * h - l / 2)) : (h = -(g.charge * p.charge) / (r * r), d = (l - k) / r * h, l = (q - m) / r * h);
                        g.forceX += d;
                        g.forceY += l;
                        p.forceX -= d;
                        p.forceY -= l
                    }
                }
            }
        }
        for (e = a.network.edges.iterator; e.next();) h = e.value, c = h.fromVertex, f = h.toVertex,
            g = c.bounds, k = c.focus, d = g.x + k.x, g = g.y + k.y, m = f.bounds, n = f.focus, k = m.x + n.x, m = m.y + n.y, n = tr(c, f), 1 > n ? (n = a.randomNumberGenerator, null === n && (a.randomNumberGenerator = n = new vr), h = n.random(), n = n.random(), d = (d > k ? 1 : -1) * (1 + (f.width > c.width ? f.width : c.width)) * h, l = (g > m ? 1 : -1) * (1 + (f.height > c.height ? f.height : c.height)) * n) : (h = h.stiffness * (n - h.length), d = (k - d) / n * h, l = (m - g) / n * h), c.forceX += d, c.forceY += l, f.forceX -= d, f.forceY -= l;
        d = 0;
        e = a.moveLimit;
        for (c = 0; c < b.length; c++) f = b[c], a.isFixed(f) ? a.moveFixedVertex(f) : (g = f.forceX, k =
            f.forceY, g < -e ? g = -e : g > e && (g = e), k < -e ? k = -e : k > e && (k = e), f.centerX += g, f.centerY += k, d = Math.max(d, g * g + k * k));
        return d > a.epsilonDistance * a.epsilonDistance
    }
    jr.prototype.moveFixedVertex = function() {};
    jr.prototype.commitLayout = function() {
        this.Dv();
        this.commitNodes();
        this.isRouting && this.commitLinks()
    };
    jr.prototype.Dv = function() {
        if (this.setsPortSpots)
            for (var a = this.network.edges.iterator; a.next();) {
                var b = a.value.link;
                null !== b && (b.fromSpot = Ed, b.toSpot = Ed)
            }
    };
    jr.prototype.commitNodes = function() {
        var a = 0,
            b = 0;
        if (this.arrangesToOrigin) {
            var c = N.alloc();
            this.computeBounds(this.network, c);
            b = this.arrangementOrigin;
            a = b.x - c.x;
            b = b.y - c.y;
            N.free(c)
        }
        c = N.alloc();
        for (var d = this.network.vertexes.iterator; d.next();) {
            var e = d.value;
            if (0 !== a || 0 !== b) c.assign(e.bounds), c.x += a, c.y += b, e.bounds = c;
            e.commit()
        }
        N.free(c)
    };
    jr.prototype.commitLinks = function() {
        for (var a = this.network.edges.iterator; a.next();) a.value.commit()
    };
    jr.prototype.springStiffness = function(a) {
        a = a.stiffness;
        return isNaN(a) ? this.Ik : a
    };
    jr.prototype.springLength = function(a) {
        a = a.length;
        return isNaN(a) ? this.Hk : a
    };
    jr.prototype.electricalCharge = function(a) {
        a = a.charge;
        return isNaN(a) ? this.Fk : a
    };
    jr.prototype.electricalFieldX = function() {
        return 0
    };
    jr.prototype.electricalFieldY = function() {
        return 0
    };
    jr.prototype.gravitationalMass = function(a) {
        a = a.mass;
        return isNaN(a) ? this.Gk : a
    };
    jr.prototype.gravitationalFieldX = function() {
        return 0
    };
    jr.prototype.gravitationalFieldY = function() {
        return 0
    };
    jr.prototype.isFixed = function(a) {
        return a.isFixed
    };
    pa.Object.defineProperties(jr.prototype, {
        currentIteration: {
            get: function() {
                return this.Yn
            }
        },
        arrangementSpacing: {
            get: function() {
                return this.yd
            },
            set: function(a) {
                this.yd.A(a) || (this.yd.assign(a), this.B())
            }
        },
        arrangesToOrigin: {
            get: function() {
                return this.Pm
            },
            set: function(a) {
                this.Pm !== a && (this.Pm = a, this.B())
            }
        },
        setsPortSpots: {
            get: function() {
                return this.Ze
            },
            set: function(a) {
                this.Ze !== a && (this.Ze =
                    a, this.B())
            }
        },
        comments: {
            get: function() {
                return this.Zc
            },
            set: function(a) {
                this.Zc !== a && (this.Zc = a, this.B())
            }
        },
        maxIterations: {
            get: function() {
                return this.il
            },
            set: function(a) {
                this.il !== a && 0 <= a && (this.il = a, this.B())
            }
        },
        epsilonDistance: {
            get: function() {
                return this.An
            },
            set: function(a) {
                this.An !== a && 0 < a && (this.An = a, this.B())
            }
        },
        infinityDistance: {
            get: function() {
                return this.If
            },
            set: function(a) {
                this.If !==
                    a && 1 < a && (this.If = a, this.B())
            }
        },
        moveLimit: {
            get: function() {
                return this.to
            },
            set: function(a) {
                this.to !== a && 1 < a && (this.to = a, this.B())
            }
        },
        randomNumberGenerator: {
            get: function() {
                return this.Qo
            },
            set: function(a) {
                this.Qo !== a && (null !== a && "function" !== typeof a.random && A('ForceDirectedLayout.randomNumberGenerator must have a "random()" function on it: ' + a), this.Qo = a)
            }
        },
        defaultSpringStiffness: {
            get: function() {
                return this.Ik
            },
            set: function(a) {
                this.Ik !== a && (this.Ik = a, this.B())
            }
        },
        defaultSpringLength: {
            get: function() {
                return this.Hk
            },
            set: function(a) {
                this.Hk !== a && (this.Hk = a, this.B())
            }
        },
        defaultElectricalCharge: {
            get: function() {
                return this.Fk
            },
            set: function(a) {
                this.Fk !== a && (this.Fk = a, this.B())
            }
        },
        defaultGravitationalMass: {
            get: function() {
                return this.Gk
            },
            set: function(a) {
                this.Gk !== a && (this.Gk = a, this.B())
            }
        },
        defaultCommentSpringLength: {
            get: function() {
                return this.nn
            },
            set: function(a) {
                this.nn !== a && (this.nn = a, this.B())
            }
        },
        defaultCommentElectricalCharge: {
            get: function() {
                return this.mn
            },
            set: function(a) {
                this.mn !== a && (this.mn = a, this.B())
            }
        }
    });
    jr.className = "ForceDirectedLayout";

    function sr() {
        this.Xv = this.Wv = this.xt = this.zt = this.yt = 0
    }
    sr.className = "ForceDirectedSubnet";

    function kr(a) {
        tp.call(this, a)
    }
    oa(kr, tp);
    kr.prototype.createVertex = function() {
        return new wr(this)
    };
    kr.prototype.createEdge = function() {
        return new xr(this)
    };
    kr.className = "ForceDirectedNetwork";

    function wr(a) {
        wp.call(this, a);
        this.Wa = !1;
        this.Ub = this.K = NaN;
        this.xh = this.vd = this.La = this.da = 0;
        this.Ge = this.Pj = null;
        this.yv = 0
    }
    oa(wr, wp);
    pa.Object.defineProperties(wr.prototype, {
        isFixed: {
            get: function() {
                return this.Wa
            },
            set: function(a) {
                this.Wa !== a && (this.Wa = a)
            }
        },
        charge: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K !== a && (this.K = a)
            }
        },
        mass: {
            get: function() {
                return this.Ub
            },
            set: function(a) {
                this.Ub !== a && (this.Ub = a)
            }
        },
        forceX: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da !== a && (this.da = a)
            }
        },
        forceY: {
            get: function() {
                return this.La
            },
            set: function(a) {
                this.La !== a && (this.La = a)
            }
        }
    });
    wr.className = "ForceDirectedVertex";

    function xr(a) {
        xp.call(this, a);
        this.l = this.u = NaN
    }
    oa(xr, xp);
    pa.Object.defineProperties(xr.prototype, {
        stiffness: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u !== a && (this.u = a)
            }
        },
        length: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l !== a && (this.l = a)
            }
        }
    });
    xr.className = "ForceDirectedEdge";

    function vr() {
        var a = 0;
        void 0 === a && (a = 42);
        this.seed = a;
        this.Jx = 48271;
        this.Lx = 2147483647;
        this.Q = 44488.07041494893;
        this.Nx = 3399;
        this.Kx = 1 / 2147483647;
        this.random()
    }
    vr.prototype.random = function() {
        var a = this.seed % this.Q * this.Jx - this.seed / this.Q * this.Nx;
        0 < a ? this.seed = a : this.seed = a + this.Lx;
        return this.seed * this.Kx
    };
    vr.className = "RandomNumberGenerator";

    function yr() {
        ui.call(this);
        this.Xb = this.ke = 25;
        this.L = 0;
        this.Dk = zr;
        this.dl = Ar;
        this.Uk = Br;
        this.lj = 4;
        this.qk = Cr;
        this.Yf = 7;
        this.Ze = !0;
        this.co = 4;
        this.Ha = this.Kr = this.ya = -1;
        this.qd = this.oo = 0;
        this.Ka = this.nd = this.od = this.Hd = this.hc = null;
        this.vo = 0;
        this.uo = this.qj = null;
        this.Md = 0;
        this.wo = null;
        this.ew = new G;
        this.oe = [];
        this.oe.length = 100
    }
    oa(yr, ui);
    yr.prototype.cloneProtected = function(a) {
        ui.prototype.cloneProtected.call(this, a);
        a.ke = this.ke;
        a.Xb = this.Xb;
        a.L = this.L;
        a.Dk = this.Dk;
        a.dl = this.dl;
        a.Uk = this.Uk;
        a.lj = this.lj;
        a.qk = this.qk;
        a.Yf = this.Yf;
        a.Ze = this.Ze;
        a.co = this.co
    };
    yr.prototype.gb = function(a) {
        a.classType === yr ? 0 === a.name.indexOf("Aggressive") ? this.aggressiveOption = a : 0 === a.name.indexOf("Cycle") ? this.cycleRemoveOption = a : 0 === a.name.indexOf("Init") ? this.initializeOption = a : 0 === a.name.indexOf("Layer") ? this.layeringOption = a : A("Unknown enum value: " + a) : ui.prototype.gb.call(this, a)
    };
    yr.prototype.createNetwork = function() {
        return new Dr(this)
    };
    yr.prototype.doLayout = function(a) {
        null === this.network && (this.network = this.makeNetwork(a));
        this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
        this.Kr = -1;
        this.qd = this.oo = 0;
        this.wo = this.uo = this.qj = null;
        for (a = 0; a < this.oe.length; a++) this.oe[a] = null;
        if (0 < this.network.vertexes.count) {
            this.network.Np();
            this.cycleRemoveOption !== Er && this.removeCycles();
            for (a = this.network.vertexes.iterator; a.next();) a.value.layer = -1;
            this.ya = -1;
            this.assignLayers();
            for (a.reset(); a.next();) this.ya = Math.max(this.ya,
                a.value.layer);
            this.cycleRemoveOption === Er && this.removeCycles();
            a = this.network;
            for (var b = [], c = a.edges.iterator; c.next();) {
                var d = c.value;
                d.valid = !1;
                b.push(d)
            }
            for (c = 0; c < b.length; c++) {
                d = b[c];
                var e = d.fromVertex,
                    f = d.toVertex;
                if (!d.valid && (null !== e.node && null !== f.node || e.layer !== f.layer)) {
                    var g = 0,
                        h = 0,
                        k = 0,
                        l = 0;
                    if (null !== d.link) {
                        h = d.link;
                        if (null === h) continue;
                        var m = e.node;
                        g = f.node;
                        if (null === m || null === g) continue;
                        var n = h.fromNode;
                        k = h.toNode;
                        var p = h.fromPort;
                        h = h.toPort;
                        if (d.rev) {
                            l = n;
                            var q = p;
                            n = k;
                            p = h;
                            k = l;
                            h = q
                        }
                        var r =
                            e.focus;
                        l = f.focus;
                        var u = d.rev ? f.bounds : e.bounds;
                        q = G.alloc();
                        m !== n ? u.s() && n.isVisible() && n.actualBounds.s() ? (n.th(p, dd, q), q.x += n.actualBounds.x - u.x, q.y += n.actualBounds.y - u.y) : q.assign(r) : u.s() ? (n.th(p, dd, q), q.s() || q.assign(r)) : q.assign(r);
                        n = d.rev ? e.bounds : f.bounds;
                        m = G.alloc();
                        g !== k ? n.s() && k.isVisible() && k.actualBounds.s() ? (k.th(h, dd, m), m.x += k.actualBounds.x - n.x, m.y += k.actualBounds.y - n.y) : m.assign(l) : n.s() ? (k.th(h, dd, m), m.s() || m.assign(l)) : m.assign(l);
                        90 === this.L || 270 === this.L ? (g = Math.round((q.x - r.x) /
                            this.Xb), k = q.x, h = Math.round((m.x - l.x) / this.Xb), l = m.x) : (g = Math.round((q.y - r.y) / this.Xb), k = q.y, h = Math.round((m.y - l.y) / this.Xb), l = m.y);
                        G.free(q);
                        G.free(m);
                        d.portFromColOffset = g;
                        d.portFromPos = k;
                        d.portToColOffset = h;
                        d.portToPos = l
                    } else d.portFromColOffset = 0, d.portFromPos = 0, d.portToColOffset = 0, d.portToPos = 0;
                    q = e.layer;
                    m = f.layer;
                    n = 0;
                    u = d.link;
                    if (null !== u) {
                        var v = u.fromPort,
                            x = u.toPort;
                        if (null !== v && null !== x) {
                            var y = u.fromNode;
                            p = u.toNode;
                            if (null !== y && null !== p) {
                                var z = Fr(this, !0),
                                    B = Fr(this, !1),
                                    C = this.setsPortSpots ?
                                    z : u.computeSpot(!0, v);
                                r = this.setsPortSpots ? B : u.computeSpot(!1, x);
                                var I = u.isOrthogonal;
                                C.qf() && C.pf(B) && r.qf() && r.pf(z) ? n = 0 : (z = u.getLinkPoint(y, v, C, !0, I, p, x, G.alloc()), B = u.getLinkDirection(y, v, z, C, !0, I, p, x), G.free(z), C.bt() || B !== Gr(this, d, !0) ? this.setsPortSpots && null !== y && 1 === y.ports.count && d.rev && (n += 1) : n += 1, C = u.getLinkPoint(p, x, r, !1, I, y, v, G.alloc()), u = u.getLinkDirection(p, x, C, r, !1, I, y, v), G.free(C), r.bt() || u !== Gr(this, d, !1) ? this.setsPortSpots && null !== p && 1 === p.ports.count && d.rev && (n += 2) : n += 2)
                            }
                        }
                    }
                    p =
                        n;
                    n = 1 === p || 3 === p ? !0 : !1;
                    if (p = 2 === p || 3 === p ? !0 : !1) r = a.createVertex(), r.node = null, r.Kj = 1, r.layer = q, r.near = e, a.nh(r), e = a.ak(e, r, d.link), e.valid = !1, e.rev = d.rev, e.portFromColOffset = g, e.portToColOffset = 0, e.portFromPos = k, e.portToPos = 0, e = r;
                    u = 1;
                    n && u--;
                    if (q - m > u && 0 < q) {
                        d.valid = !1;
                        r = a.createVertex();
                        r.node = null;
                        r.Kj = 2;
                        r.layer = q - 1;
                        a.nh(r);
                        e = a.ak(e, r, d.link);
                        e.valid = !0;
                        e.rev = d.rev;
                        e.portFromColOffset = p ? 0 : g;
                        e.portToColOffset = 0;
                        e.portFromPos = p ? 0 : k;
                        e.portToPos = 0;
                        e = r;
                        for (q--; q - m > u && 0 < q;) r = a.createVertex(), r.node = null,
                            r.Kj = 3, r.layer = q - 1, a.nh(r), e = a.ak(e, r, d.link), e.valid = !0, e.rev = d.rev, e.portFromColOffset = 0, e.portToColOffset = 0, e.portFromPos = 0, e.portToPos = 0, e = r, q--;
                        e = a.ak(r, f, d.link);
                        e.valid = !n;
                        n && (r.near = f);
                        e.rev = d.rev;
                        e.portFromColOffset = 0;
                        e.portToColOffset = h;
                        e.portFromPos = 0;
                        e.portToPos = l
                    } else d.valid = !0
                }
            }
            a = this.hc = [];
            for (b = 0; b <= this.ya; b++) a[b] = 0;
            for (b = this.network.vertexes.iterator; b.next();) b.value.index = -1;
            this.initializeIndices();
            this.Kr = -1;
            for (c = this.qd = this.oo = 0; c <= this.ya; c++) a[c] > a[this.qd] && (this.Kr =
                a[c] - 1, this.qd = c), a[c] < a[this.oo] && (this.oo = c);
            this.wo = [];
            for (c = 0; c < a.length; c++) this.wo[c] = [];
            for (b.reset(); b.next();) a = b.value, this.wo[a.layer][a.index] = a;
            this.Ha = -1;
            for (a = 0; a <= this.ya; a++) {
                b = Hr(this, a);
                c = 0;
                d = this.hc[a];
                for (f = 0; f < d; f++) e = b[f], c += this.nodeMinColumnSpace(e, !0), e.column = c, c += 1, c += this.nodeMinColumnSpace(e, !1);
                this.Ha = Math.max(this.Ha, c - 1);
                Ir(this, a, b)
            }
            this.reduceCrossings();
            this.straightenAndPack();
            this.updateParts()
        }
        this.network = null;
        this.isValidLayout = !0
    };
    yr.prototype.linkMinLength = function() {
        return 1
    };

    function Jr(a) {
        var b = a.fromVertex.node;
        a = a.toVertex.node;
        return null === b && null === a ? 8 : null === b || null === a ? 4 : 1
    }
    yr.prototype.nodeMinLayerSpace = function(a, b) {
        return null === a.node ? 0 : 90 === this.L || 270 === this.L ? b ? a.focus.y + 10 : a.bounds.height - a.focus.y + 10 : b ? a.focus.x + 10 : a.bounds.width - a.focus.x + 10
    };
    yr.prototype.nodeMinColumnSpace = function(a, b) {
        if (null === a.node) return 0;
        var c = b ? a.kv : a.jv;
        if (null !== c) return c;
        c = this.L;
        return 90 === c || 270 === c ? b ? a.kv = a.focus.x / this.Xb + 1 | 0 : a.jv = (a.bounds.width - a.focus.x) / this.Xb + 1 | 0 : b ? a.kv = a.focus.y / this.Xb + 1 | 0 : a.jv = (a.bounds.height - a.focus.y) / this.Xb + 1 | 0
    };

    function Kr(a) {
        null === a.qj && (a.qj = []);
        for (var b = 0, c = a.network.vertexes.iterator; c.next();) {
            var d = c.value;
            a.qj[b] = d.layer;
            b++;
            a.qj[b] = d.column;
            b++;
            a.qj[b] = d.index;
            b++
        }
        return a.qj
    }

    function Lr(a, b) {
        var c = 0;
        for (a = a.network.vertexes.iterator; a.next();) {
            var d = a.value;
            d.layer = b[c];
            c++;
            d.column = b[c];
            c++;
            d.index = b[c];
            c++
        }
    }

    function Mr(a, b, c) {
        var d = Hr(a, b),
            e = a.hc[b];
        if (null === a.uo || a.uo.length < e * e) a.uo = [];
        for (var f = a.uo, g = 0; g < e; g++) {
            var h = 0,
                k = d[g],
                l = k.near;
            if (null !== l && l.layer === k.layer)
                if (k = l.index, k > g)
                    for (var m = g + 1; m < k; m++) {
                        var n = d[m];
                        n.near === l && n.Kj === l.Kj || h++
                    } else
                        for (m = g - 1; m > k; m--) n = d[m], n.near === l && n.Kj === l.Kj || h++;
            var p;
            if (0 <= c)
                for (k = d[g].sourceEdgesArrayAccess, l = 0; l < k.length; l++) {
                    var q = k[l];
                    if (q.valid && q.fromVertex.layer !== b)
                        for (n = q.fromVertex.index, m = q.portToPos, q = q.portFromPos, p = l + 1; p < k.length; p++) {
                            var r =
                                k[p];
                            if (r.valid && r.fromVertex.layer !== b) {
                                var u = r.fromVertex.index;
                                var v = r.portToPos;
                                r = r.portFromPos;
                                m < v && (n > u || n === u && q > r) && h++;
                                v < m && (u > n || u === n && r > q) && h++
                            }
                        }
                }
            if (0 >= c)
                for (k = d[g].destinationEdgesArrayAccess, l = 0; l < k.length; l++)
                    if (q = k[l], q.valid && q.toVertex.layer !== b)
                        for (n = q.toVertex.index, m = q.portToPos, q = q.portFromPos, p = l + 1; p < k.length; p++) r = k[p], r.valid && r.toVertex.layer !== b && (u = r.toVertex.index, v = r.portToPos, r = r.portFromPos, q < r && (n > u || n === u && m > v) && h++, r < q && (u > n || u === n && v > m) && h++);
            f[g * e + g] = h;
            for (k = g +
                1; k < e; k++) {
                var x = 0,
                    y = 0;
                if (0 <= c) {
                    h = d[g].sourceEdgesArrayAccess;
                    var z = d[k].sourceEdgesArrayAccess;
                    for (l = 0; l < h.length; l++)
                        if (q = h[l], q.valid && q.fromVertex.layer !== b)
                            for (n = q.fromVertex.index, q = q.portFromPos, p = 0; p < z.length; p++) r = z[p], r.valid && r.fromVertex.layer !== b && (u = r.fromVertex.index, r = r.portFromPos, (n < u || n === u && q < r) && y++, (u < n || u === n && r < q) && x++)
                }
                if (0 >= c)
                    for (h = d[g].destinationEdgesArrayAccess, z = d[k].destinationEdgesArrayAccess, l = 0; l < h.length; l++)
                        if (q = h[l], q.valid && q.toVertex.layer !== b)
                            for (n = q.toVertex.index,
                                m = q.portToPos, p = 0; p < z.length; p++) r = z[p], r.valid && r.toVertex.layer !== b && (u = r.toVertex.index, v = r.portToPos, (n < u || n === u && m < v) && y++, (u < n || u === n && v < m) && x++);
                f[g * e + k] = x;
                f[k * e + g] = y
            }
        }
        Ir(a, b, d);
        return f
    }
    yr.prototype.countCrossings = function() {
        for (var a = 0, b = 0; b <= this.ya; b++)
            for (var c = Mr(this, b, 1), d = this.hc[b], e = 0; e < d; e++)
                for (var f = e; f < d; f++) a += c[e * d + f];
        return a
    };

    function Nr(a) {
        for (var b = 0, c = 0; c <= a.ya; c++) {
            for (var d = a, e = c, f = Hr(d, e), g = d.hc[e], h = 0, k = 0; k < g; k++) {
                var l = f[k].destinationEdgesArrayAccess;
                if (null !== l)
                    for (var m = 0; m < l.length; m++) {
                        var n = l[m];
                        if (n.valid && n.toVertex.layer !== e) {
                            var p = n.fromVertex.column + n.portFromColOffset;
                            var q = n.toVertex.column + n.portToColOffset;
                            h += (Math.abs(p - q) + 1) * Jr(n)
                        }
                    }
            }
            Ir(d, e, f);
            b += h
        }
        return b
    }
    yr.prototype.normalize = function() {
        var a = Infinity;
        this.Ha = -1;
        for (var b = this.network.vertexes.iterator; b.next();) {
            var c = b.value;
            a = Math.min(a, c.column - this.nodeMinColumnSpace(c, !0));
            this.Ha = Math.max(this.Ha, c.column + this.nodeMinColumnSpace(c, !1))
        }
        for (b.reset(); b.next();) b.value.column -= a;
        this.Ha -= a
    };

    function Or(a, b, c) {
        for (var d = Hr(a, b), e = a.hc[b], f = [], g = 0; g < e; g++) {
            var h = d[g],
                k = null;
            0 >= c && (k = h.sourceEdgesArrayAccess);
            var l = null;
            0 <= c && (l = h.destinationEdgesArrayAccess);
            var m = 0,
                n = 0,
                p = h.near;
            null !== p && p.layer === h.layer && (m += p.column - 1, n++);
            if (null !== k)
                for (p = 0; p < k.length; p++) {
                    h = k[p];
                    var q = h.fromVertex;
                    h.valid && !h.rev && q.layer !== b && (m += q.column, n++)
                }
            if (null !== l)
                for (k = 0; k < l.length; k++) h = l[k], p = h.toVertex, h.valid && !h.rev && p.layer !== b && (m += p.column, n++);
            f[g] = 0 === n ? -1 : m / n
        }
        Ir(a, b, d);
        return f
    }

    function Pr(a, b, c) {
        for (var d = Hr(a, b), e = a.hc[b], f = [], g = 0; g < e; g++) {
            var h = d[g],
                k = null;
            0 >= c && (k = h.sourceEdgesArrayAccess);
            var l = null;
            0 <= c && (l = h.destinationEdgesArrayAccess);
            var m = 0,
                n = [],
                p = h.near;
            null !== p && p.layer === h.layer && (n[m] = p.column - 1, m++);
            h = void 0;
            if (null !== k)
                for (p = 0; p < k.length; p++) {
                    h = k[p];
                    var q = h.fromVertex;
                    h.valid && !h.rev && q.layer !== b && (n[m] = q.column + h.portFromColOffset, m++)
                }
            if (null !== l)
                for (k = 0; k < l.length; k++) h = l[k], p = h.toVertex, h.valid && !h.rev && p.layer !== b && (n[m] = p.column + h.portToColOffset,
                    m++);
            0 === m ? f[g] = -1 : (n.sort(function(a, b) {
                return a - b
            }), l = m >> 1, f[g] = 0 !== (m & 1) ? n[l] : n[l - 1] + n[l] >> 1)
        }
        Ir(a, b, d);
        return f
    }

    function Qr(a, b, c, d, e, f) {
        if (b.component === d) {
            b.component = c;
            if (e)
                for (var g = b.destinationEdges; g.next();) {
                    var h = g.value;
                    var k = h.toVertex;
                    var l = b.layer - k.layer;
                    h = a.linkMinLength(h);
                    l === h && Qr(a, k, c, d, e, f)
                }
            if (f)
                for (g = b.sourceEdges; g.next();) h = g.value, k = h.fromVertex, l = k.layer - b.layer, h = a.linkMinLength(h), l === h && Qr(a, k, c, d, e, f)
        }
    }

    function Rr(a, b, c, d, e, f) {
        if (b.component === d) {
            b.component = c;
            if (e)
                for (var g = b.destinationEdges; g.next();) Rr(a, g.value.toVertex, c, d, e, f);
            if (f)
                for (b = b.sourceEdges; b.next();) Rr(a, b.value.fromVertex, c, d, e, f)
        }
    }
    yr.prototype.removeCycles = function() {
        for (var a = this.network.edges.iterator; a.next();) a.value.rev = !1;
        switch (this.Dk) {
            default:
            case Sr:
                a = this.network;
                var b = 0,
                    c = a.vertexes.count - 1,
                    d = [];
                d.length = c + 1;
                for (var e = a.vertexes.iterator; e.next();) e.value.valid = !0;
                for (; null !== Tr(a);) {
                    for (e = Ur(a); null !== e;) d[c] = e, c--, e.valid = !1, e = Ur(a);
                    for (e = Vr(a); null !== e;) d[b] = e, b++, e.valid = !1, e = Vr(a);
                    e = null;
                    for (var f = 0, g = this.network.vertexes.iterator; g.next();) {
                        var h = g.value;
                        if (h.valid) {
                            for (var k = 0, l = h.destinationEdges; l.next();) l.value.toVertex.valid &&
                                k++;
                            l = 0;
                            for (var m = h.sourceEdges; m.next();) m.value.fromVertex.valid && l++;
                            if (null === e || f < k - l) e = h, f = k - l
                        }
                    }
                    null !== e && (d[b] = e, b++, e.valid = !1)
                }
                for (b = 0; b < a.vertexes.count; b++) d[b].index = b;
                for (d = a.edges.iterator; d.next();) b = d.value, b.fromVertex.index > b.toVertex.index && (a.pm(b), b.rev = !0);
                break;
            case zr:
                for (d = this.network.vertexes.iterator; d.next();) a = d.value, a.Ul = -1, a.finish = -1;
                for (a = this.network.edges.iterator; a.next();) a.value.forest = !1;
                this.vo = 0;
                for (d.reset(); d.next();) b = d.value, 0 === b.sourceEdges.count &&
                    Wr(this, b);
                for (d.reset(); d.next();) b = d.value, -1 === b.Ul && Wr(this, b);
                for (a.reset(); a.next();) d = a.value, d.forest || (b = d.fromVertex, c = b.finish, e = d.toVertex, f = e.finish, e.Ul < b.Ul && c < f && (this.network.pm(d), d.rev = !0));
                break;
            case Er:
                a = this.network;
                b = a.vertexes.iterator;
                for (d = Infinity; b.next();) d = Math.min(d, b.value.layer);
                if (Infinity > d) {
                    if (0 > d)
                        for (b.reset(); b.next();) b.value.layer -= d;
                    d = [];
                    for (b.reset(); b.next();) c = b.value, e = d[c.layer], void 0 === e ? d[c.layer] = [c] : e.push(c);
                    for (c = b = 0; c < d.length; c++)
                        if (e = d[c], !e ||
                            0 === e.length) b++;
                        else if (0 < c)
                        for (f = 0; f < e.length; f++) e[f].layer -= b;
                    for (d = a.edges.iterator; d.next();) b = d.value, b.fromVertex.layer < b.toVertex.layer && (a.pm(b), b.rev = !0)
                }
        }
    };

    function Tr(a) {
        for (a = a.vertexes.iterator; a.next();) {
            var b = a.value;
            if (b.valid) return b
        }
        return null
    }

    function Ur(a) {
        for (a = a.vertexes.iterator; a.next();) {
            var b = a.value;
            if (b.valid) {
                for (var c = !0, d = b.destinationEdges; d.next();)
                    if (d.value.toVertex.valid) {
                        c = !1;
                        break
                    } if (c) return b
            }
        }
        return null
    }

    function Vr(a) {
        for (a = a.vertexes.iterator; a.next();) {
            var b = a.value;
            if (b.valid) {
                for (var c = !0, d = b.sourceEdges; d.next();)
                    if (d.value.fromVertex.valid) {
                        c = !1;
                        break
                    } if (c) return b
            }
        }
        return null
    }

    function Wr(a, b) {
        b.Ul = a.vo;
        a.vo++;
        for (var c = b.destinationEdges; c.next();) {
            var d = c.value,
                e = d.toVertex; - 1 === e.Ul && (d.forest = !0, Wr(a, e))
        }
        b.finish = a.vo;
        a.vo++
    }
    yr.prototype.assignLayers = function() {
        switch (this.dl) {
            case Xr:
                Yr(this);
                break;
            case Zr:
                for (var a, b = this.network.vertexes.iterator; b.next();) a = $r(this, b.value), this.ya = Math.max(a, this.ya);
                for (b.reset(); b.next();) a = b.value, a.layer = this.ya - a.layer;
                break;
            default:
            case Ar:
                Yr(this);
                for (b = this.network.vertexes.iterator; b.next();) b.value.valid = !1;
                for (b.reset(); b.next();) a = b.value, 0 === a.sourceEdges.count && as(this, a);
                a = Infinity;
                for (b.reset(); b.next();) a = Math.min(a, b.value.layer);
                this.ya = -1;
                for (b.reset(); b.next();) {
                    var c =
                        b.value;
                    c.layer -= a;
                    this.ya = Math.max(this.ya, c.layer)
                }
        }
    };

    function Yr(a) {
        for (var b = a.network.vertexes.iterator; b.next();) {
            var c = bs(a, b.value);
            a.ya = Math.max(c, a.ya)
        }
    }

    function bs(a, b) {
        var c = 0;
        if (-1 === b.layer) {
            for (var d = b.destinationEdges; d.next();) {
                var e = d.value,
                    f = e.toVertex;
                e = a.linkMinLength(e);
                c = Math.max(c, bs(a, f) + e)
            }
            b.layer = c
        } else c = b.layer;
        return c
    }

    function $r(a, b) {
        var c = 0;
        if (-1 === b.layer) {
            for (var d = b.sourceEdges; d.next();) {
                var e = d.value,
                    f = e.fromVertex;
                e = a.linkMinLength(e);
                c = Math.max(c, $r(a, f) + e)
            }
            b.layer = c
        } else c = b.layer;
        return c
    }

    function as(a, b) {
        if (!b.valid) {
            b.valid = !0;
            for (var c = b.destinationEdges; c.next();) as(a, c.value.toVertex);
            for (c = a.network.vertexes.iterator; c.next();) c.value.component = -1;
            for (var d = b.sourceEdgesArrayAccess, e = d.length, f = 0; f < e; f++) {
                var g = d[f],
                    h = g.fromVertex,
                    k = g.toVertex;
                g = a.linkMinLength(g);
                h.layer - k.layer > g && Qr(a, h, 0, -1, !0, !1)
            }
            for (Qr(a, b, 1, -1, !0, !0); 0 !== b.component;) {
                f = 0;
                d = Infinity;
                h = 0;
                k = null;
                for (g = a.network.vertexes.iterator; g.next();) {
                    var l = g.value;
                    if (1 === l.component) {
                        var m = 0,
                            n = !1,
                            p = l.sourceEdgesArrayAccess;
                        e = p.length;
                        for (var q = 0; q < e; q++) {
                            var r = p[q],
                                u = r.fromVertex;
                            m += 1;
                            1 !== u.component && (f += 1, u = u.layer - l.layer, r = a.linkMinLength(r), d = Math.min(d, u - r))
                        }
                        p = l.destinationEdgesArrayAccess;
                        e = p.length;
                        for (q = 0; q < e; q++) r = p[q].toVertex, --m, 1 !== r.component ? --f : n = !0;
                        (null === k || m < h) && !n && (k = l, h = m)
                    }
                }
                if (0 < f) {
                    for (c.reset(); c.next();) e = c.value, 1 === e.component && (e.layer += d);
                    b.component = 0
                } else k.component = 0
            }
            for (c = a.network.vertexes.iterator; c.next();) c.value.component = -1;
            for (Qr(a, b, 1, -1, !0, !1); 0 !== b.component;) {
                d = 0;
                e = Infinity;
                f = 0;
                h = null;
                for (k = a.network.vertexes.iterator; k.next();)
                    if (g = k.value, 1 === g.component) {
                        l = 0;
                        m = !1;
                        p = g.sourceEdgesArrayAccess;
                        n = p.length;
                        for (q = 0; q < n; q++) r = p[q].fromVertex, l += 1, 1 !== r.component ? d += 1 : m = !0;
                        p = g.destinationEdgesArrayAccess;
                        n = p.length;
                        for (q = 0; q < n; q++) r = p[q], u = r.toVertex, --l, 1 !== u.component && (--d, u = g.layer - u.layer, r = a.linkMinLength(r), e = Math.min(e, u - r));
                        (null === h || l > f) && !m && (h = g, f = l)
                    } if (0 > d) {
                    for (c.reset(); c.next();) d = c.value, 1 === d.component && (d.layer -= e);
                    b.component = 0
                } else h.component = 0
            }
        }
    }

    function Gr(a, b, c) {
        return 90 === a.L ? c && !b.rev || !c && b.rev ? 270 : 90 : 180 === a.L ? c && !b.rev || !c && b.rev ? 0 : 180 : 270 === a.L ? c && !b.rev || !c && b.rev ? 90 : 270 : c && !b.rev || !c && b.rev ? 180 : 0
    }
    yr.prototype.initializeIndices = function() {
        switch (this.Uk) {
            default:
            case cs:
                for (var a = this.network.vertexes.iterator; a.next();) {
                    var b = a.value,
                        c = b.layer;
                    b.index = this.hc[c];
                    this.hc[c]++
                }
                break;
            case Br:
                a = this.network.vertexes.iterator;
                for (b = this.ya; 0 <= b; b--)
                    for (a.reset(); a.next();) c = a.value, c.layer === b && -1 === c.index && ds(this, c);
                break;
            case es:
                for (a = this.network.vertexes.iterator, b = 0; b <= this.ya; b++)
                    for (a.reset(); a.next();) c = a.value, c.layer === b && -1 === c.index && fs(this, c)
        }
    };

    function ds(a, b) {
        var c = b.layer;
        b.index = a.hc[c];
        a.hc[c]++;
        b = b.destinationEdgesArrayAccess;
        for (c = !0; c;) {
            c = !1;
            for (var d = 0; d < b.length - 1; d++) {
                var e = b[d],
                    f = b[d + 1];
                e.portFromColOffset > f.portFromColOffset && (c = !0, b[d] = f, b[d + 1] = e)
            }
        }
        for (c = 0; c < b.length; c++) d = b[c], d.valid && (d = d.toVertex, -1 === d.index && ds(a, d))
    }

    function fs(a, b) {
        var c = b.layer;
        b.index = a.hc[c];
        a.hc[c]++;
        b = b.sourceEdgesArrayAccess;
        for (var d = !0; d;)
            for (d = !1, c = 0; c < b.length - 1; c++) {
                var e = b[c],
                    f = b[c + 1];
                e.portToColOffset > f.portToColOffset && (d = !0, b[c] = f, b[c + 1] = e)
            }
        for (c = 0; c < b.length; c++) d = b[c], d.valid && (d = d.fromVertex, -1 === d.index && fs(a, d))
    }
    yr.prototype.reduceCrossings = function() {
        var a = this.countCrossings(),
            b = Kr(this),
            c, d;
        for (c = 0; c < this.lj; c++) {
            for (d = 0; d <= this.ya; d++) gs(this, d, 1), hs(this, d, 1);
            var e = this.countCrossings();
            e < a && (a = e, b = Kr(this));
            for (d = this.ya; 0 <= d; d--) gs(this, d, -1), hs(this, d, -1);
            e = this.countCrossings();
            e < a && (a = e, b = Kr(this))
        }
        Lr(this, b);
        for (c = 0; c < this.lj; c++) {
            for (d = 0; d <= this.ya; d++) gs(this, d, 0), hs(this, d, 0);
            e = this.countCrossings();
            e < a && (a = e, b = Kr(this));
            for (d = this.ya; 0 <= d; d--) gs(this, d, 0), hs(this, d, 0);
            e = this.countCrossings();
            e < a && (a = e, b = Kr(this))
        }
        Lr(this, b);
        var f, g, h;
        switch (this.qk) {
            case is:
                break;
            case js:
                for (h = a + 1;
                    (d = this.countCrossings()) < h;)
                    for (h = d, c = this.ya; 0 <= c; c--)
                        for (g = 0; g <= c; g++) {
                            for (f = !0; f;)
                                for (f = !1, d = c; d >= g; d--) f = hs(this, d, -1) || f;
                            e = this.countCrossings();
                            e >= a ? Lr(this, b) : (a = e, b = Kr(this));
                            for (f = !0; f;)
                                for (f = !1, d = c; d >= g; d--) f = hs(this, d, 1) || f;
                            e = this.countCrossings();
                            e >= a ? Lr(this, b) : (a = e, b = Kr(this));
                            for (f = !0; f;)
                                for (f = !1, d = g; d <= c; d++) f = hs(this, d, 1) || f;
                            e >= a ? Lr(this, b) : (a = e, b = Kr(this));
                            for (f = !0; f;)
                                for (f = !1, d = g; d <= c; d++) f =
                                    hs(this, d, -1) || f;
                            e >= a ? Lr(this, b) : (a = e, b = Kr(this));
                            for (f = !0; f;)
                                for (f = !1, d = c; d >= g; d--) f = hs(this, d, 0) || f;
                            e >= a ? Lr(this, b) : (a = e, b = Kr(this));
                            for (f = !0; f;)
                                for (f = !1, d = g; d <= c; d++) f = hs(this, d, 0) || f;
                            e >= a ? Lr(this, b) : (a = e, b = Kr(this))
                        }
                break;
            default:
            case Cr:
                for (c = this.ya, g = 0, h = a + 1;
                    (d = this.countCrossings()) < h;) {
                    h = d;
                    for (f = !0; f;)
                        for (f = !1, d = c; d >= g; d--) f = hs(this, d, -1) || f;
                    e = this.countCrossings();
                    e >= a ? Lr(this, b) : (a = e, b = Kr(this));
                    for (f = !0; f;)
                        for (f = !1, d = c; d >= g; d--) f = hs(this, d, 1) || f;
                    e = this.countCrossings();
                    e >= a ? Lr(this, b) :
                        (a = e, b = Kr(this));
                    for (f = !0; f;)
                        for (f = !1, d = g; d <= c; d++) f = hs(this, d, 1) || f;
                    e >= a ? Lr(this, b) : (a = e, b = Kr(this));
                    for (f = !0; f;)
                        for (f = !1, d = g; d <= c; d++) f = hs(this, d, -1) || f;
                    e >= a ? Lr(this, b) : (a = e, b = Kr(this));
                    for (f = !0; f;)
                        for (f = !1, d = c; d >= g; d--) f = hs(this, d, 0) || f;
                    e >= a ? Lr(this, b) : (a = e, b = Kr(this));
                    for (f = !0; f;)
                        for (f = !1, d = g; d <= c; d++) f = hs(this, d, 0) || f;
                    e >= a ? Lr(this, b) : (a = e, b = Kr(this))
                }
        }
        Lr(this, b)
    };

    function gs(a, b, c) {
        var d = Hr(a, b),
            e = a.hc[b],
            f = Pr(a, b, c),
            g = Or(a, b, c);
        for (c = 0; c < e; c++) - 1 === g[c] && (g[c] = d[c].column), -1 === f[c] && (f[c] = d[c].column);
        for (var h = !0, k; h;)
            for (h = !1, c = 0; c < e - 1; c++)
                if (f[c + 1] < f[c] || f[c + 1] === f[c] && g[c + 1] < g[c]) h = !0, k = f[c], f[c] = f[c + 1], f[c + 1] = k, k = g[c], g[c] = g[c + 1], g[c + 1] = k, k = d[c], d[c] = d[c + 1], d[c + 1] = k;
        for (c = f = 0; c < e; c++) k = d[c], k.index = c, f += a.nodeMinColumnSpace(k, !0), k.column = f, f += 1, f += a.nodeMinColumnSpace(k, !1);
        Ir(a, b, d)
    }

    function hs(a, b, c) {
        var d = Hr(a, b),
            e = a.hc[b];
        c = Mr(a, b, c);
        var f;
        var g = [];
        for (f = 0; f < e; f++) g[f] = -1;
        var h = [];
        for (f = 0; f < e; f++) h[f] = -1;
        for (var k = !1, l = !0; l;)
            for (l = !1, f = 0; f < e - 1; f++) {
                var m = c[d[f].index * e + d[f + 1].index],
                    n = c[d[f + 1].index * e + d[f].index],
                    p = 0,
                    q = 0,
                    r = d[f].column,
                    u = d[f + 1].column,
                    v = a.nodeMinColumnSpace(d[f], !0),
                    x = a.nodeMinColumnSpace(d[f], !1),
                    y = a.nodeMinColumnSpace(d[f + 1], !0),
                    z = a.nodeMinColumnSpace(d[f + 1], !1);
                v = r - v + y;
                x = u - x + z;
                var B = d[f].sourceEdges.iterator;
                for (B.reset(); B.next();)
                    if (y = B.value, z = y.fromVertex,
                        y.valid && z.layer === b) {
                        for (y = 0; d[y] !== z;) y++;
                        y < f && (p += 2 * (f - y), q += 2 * (f + 1 - y));
                        y === f + 1 && (p += 1);
                        y > f + 1 && (p += 4 * (y - f), q += 4 * (y - (f + 1)))
                    } B = d[f].destinationEdges.iterator;
                for (B.reset(); B.next();)
                    if (y = B.value, z = y.toVertex, y.valid && z.layer === b) {
                        for (y = 0; d[y] !== z;) y++;
                        y === f + 1 && (q += 1)
                    } B = d[f + 1].sourceEdges.iterator;
                for (B.reset(); B.next();)
                    if (y = B.value, z = y.fromVertex, y.valid && z.layer === b) {
                        for (y = 0; d[y] !== z;) y++;
                        y < f && (p += 2 * (f + 1 - y), q += 2 * (f - y));
                        y === f && (q += 1);
                        y > f + 1 && (p += 4 * (y - (f + 1)), q += 4 * (y - f))
                    } B = d[f + 1].destinationEdges.iterator;
                for (B.reset(); B.next();)
                    if (y = B.value, z = y.toVertex, y.valid && z.layer === b) {
                        for (y = 0; d[y] !== z;) y++;
                        y === f && (p += 1)
                    } y = z = 0;
                B = g[d[f].index];
                var C = h[d[f].index],
                    I = g[d[f + 1].index],
                    J = h[d[f + 1].index]; - 1 !== B && (z += Math.abs(B - r), y += Math.abs(B - x)); - 1 !== C && (z += Math.abs(C - r), y += Math.abs(C - x)); - 1 !== I && (z += Math.abs(I - u), y += Math.abs(I - v)); - 1 !== J && (z += Math.abs(J - u), y += Math.abs(J - v));
                if (q < p - .5 || q === p && n < m - .5 || q === p && n === m && y < z - .5) l = k = !0, d[f].column = x, d[f + 1].column = v, m = d[f], d[f] = d[f + 1], d[f + 1] = m
            }
        for (f = 0; f < e; f++) d[f].index =
            f;
        Ir(a, b, d);
        return k
    }
    yr.prototype.straightenAndPack = function() {
        var a = 0 !== (this.Yf & 1);
        var b = 7 === this.Yf;
        1E3 < this.network.edges.count && !b && (a = !1);
        if (a) {
            var c = [];
            for (b = 0; b <= this.ya; b++) c[b] = 0;
            for (var d, e = this.network.vertexes.iterator; e.next();) {
                var f = e.value;
                b = f.layer;
                d = f.column;
                f = this.nodeMinColumnSpace(f, !1);
                c[b] = Math.max(c[b], d + f)
            }
            for (e.reset(); e.next();) f = e.value, b = f.layer, d = f.column, f.column = (8 * (this.Ha - c[b]) >> 1) + 8 * d;
            this.Ha *= 8
        }
        if (0 !== (this.Yf & 2))
            for (c = !0; c;) {
                c = !1;
                for (b = this.qd + 1; b <= this.ya; b++) c = ks(this, b, 1) || c;
                for (b =
                    this.qd - 1; 0 <= b; b--) c = ks(this, b, -1) || c;
                c = ks(this, this.qd, 0) || c
            }
        if (0 !== (this.Yf & 4)) {
            for (b = this.qd + 1; b <= this.ya; b++) ls(this, b, 1);
            for (b = this.qd - 1; 0 <= b; b--) ls(this, b, -1);
            ls(this, this.qd, 0)
        }
        a && (ms(this, -1), ms(this, 1));
        if (0 !== (this.Yf & 2))
            for (c = !0; c;) {
                c = !1;
                c = ks(this, this.qd, 0) || c;
                for (b = this.qd + 1; b <= this.ya; b++) c = ks(this, b, 0) || c;
                for (b = this.qd - 1; 0 <= b; b--) c = ks(this, b, 0) || c
            }
    };

    function ks(a, b, c) {
        for (var d = !1; ns(a, b, c);) d = !0;
        return d
    }

    function ns(a, b, c) {
        var d, e = Hr(a, b),
            f = a.hc[b],
            g = Or(a, b, -1);
        if (0 < c)
            for (d = 0; d < f; d++) g[d] = -1;
        var h = Or(a, b, 1);
        if (0 > c)
            for (d = 0; d < f; d++) h[d] = -1;
        for (var k = !1, l = !0; l;)
            for (l = !1, d = 0; d < f; d++) {
                var m = e[d].column,
                    n = a.nodeMinColumnSpace(e[d], !0),
                    p = a.nodeMinColumnSpace(e[d], !1),
                    q = 0;
                0 > d - 1 || m - e[d - 1].column - 1 > n + a.nodeMinColumnSpace(e[d - 1], !1) ? q = m - 1 : q = m;
                n = d + 1 >= f || e[d + 1].column - m - 1 > p + a.nodeMinColumnSpace(e[d + 1], !0) ? m + 1 : m;
                var r = p = 0,
                    u = 0;
                if (0 >= c)
                    for (var v = e[d].sourceEdges.iterator; v.next();) {
                        var x = v.value;
                        var y = x.fromVertex;
                        if (x.valid && y.layer !== b) {
                            var z = Jr(x);
                            var B = x.portFromColOffset;
                            x = x.portToColOffset;
                            y = y.column;
                            p += (Math.abs(m + x - (y + B)) + 1) * z;
                            r += (Math.abs(q + x - (y + B)) + 1) * z;
                            u += (Math.abs(n + x - (y + B)) + 1) * z
                        }
                    }
                if (0 <= c)
                    for (v = e[d].destinationEdges.iterator; v.next();) x = v.value, y = x.toVertex, x.valid && y.layer !== b && (z = Jr(x), B = x.portFromColOffset, x = x.portToColOffset, y = y.column, p += (Math.abs(m + B - (y + x)) + 1) * z, r += (Math.abs(q + B - (y + x)) + 1) * z, u += (Math.abs(n + B - (y + x)) + 1) * z);
                x = B = z = 0;
                v = g[e[d].index];
                y = h[e[d].index]; - 1 !== v && (z += Math.abs(v - m), B +=
                    Math.abs(v - q), x += Math.abs(v - n)); - 1 !== y && (z += Math.abs(y - m), B += Math.abs(y - q), x += Math.abs(y - n));
                if (r < p || r === p && B < z) l = k = !0, e[d].column = q;
                else if (u < p || u === p && x < z) l = k = !0, e[d].column = n
            }
        Ir(a, b, e);
        a.normalize();
        return k
    }

    function ls(a, b, c) {
        var d = Hr(a, b),
            e = a.hc[b],
            f = Pr(a, b, c),
            g = [];
        for (c = 0; c < e; c++) g[c] = f[c];
        for (f = !0; f;)
            for (f = !1, c = 0; c < e; c++) {
                var h = d[c].column,
                    k = a.nodeMinColumnSpace(d[c], !0),
                    l = a.nodeMinColumnSpace(d[c], !1),
                    m = 0;
                if (-1 === g[c])
                    if (0 === c && c === e - 1) m = h;
                    else if (0 === c) {
                    var n = d[c + 1].column;
                    n - h === l + a.nodeMinColumnSpace(d[c + 1], !0) ? m = h - 1 : m = h
                } else c === e - 1 ? (n = d[c - 1].column, m = h - n === k + a.nodeMinColumnSpace(d[c - 1], !1) ? h + 1 : h) : (n = d[c - 1].column, k = n + a.nodeMinColumnSpace(d[c - 1], !1) + k + 1, n = d[c + 1].column, l = n - a.nodeMinColumnSpace(d[c +
                    1], !0) - l - 1, m = (k + l) / 2 | 0);
                else 0 === c && c === e - 1 ? m = g[c] : 0 === c ? (n = d[c + 1].column, l = n - a.nodeMinColumnSpace(d[c + 1], !0) - l - 1, m = Math.min(g[c], l)) : c === e - 1 ? (n = d[c - 1].column, k = n + a.nodeMinColumnSpace(d[c - 1], !1) + k + 1, m = Math.max(g[c], k)) : (n = d[c - 1].column, k = n + a.nodeMinColumnSpace(d[c - 1], !1) + k + 1, n = d[c + 1].column, l = n - a.nodeMinColumnSpace(d[c + 1], !0) - l - 1, k < g[c] && g[c] < l ? m = g[c] : k >= g[c] ? m = k : l <= g[c] && (m = l));
                m !== h && (f = !0, d[c].column = m)
            }
        Ir(a, b, d);
        a.normalize()
    }

    function os(a, b) {
        for (var c = !0, d = a.network.vertexes.iterator; d.next();) {
            var e = d.value,
                f = a.nodeMinColumnSpace(e, !0),
                g = a.nodeMinColumnSpace(e, !1);
            if (e.column - f <= b && e.column + g >= b) {
                c = !1;
                break
            }
        }
        a = !1;
        if (c)
            for (d.reset(); d.next();) c = d.value, c.column > b && (--c.column, a = !0);
        return a
    }

    function ps(a, b) {
        var c = b + 1;
        var d, e = [],
            f = [];
        for (d = 0; d <= a.ya; d++) e[d] = !1, f[d] = !1;
        for (var g = a.network.vertexes.iterator; g.next();) {
            d = g.value;
            var h = d.column - a.nodeMinColumnSpace(d, !0),
                k = d.column + a.nodeMinColumnSpace(d, !1);
            h <= b && k >= b && (e[d.layer] = !0);
            h <= c && k >= c && (f[d.layer] = !0)
        }
        h = !0;
        c = !1;
        for (d = 0; d <= a.ya; d++) h = h && !(e[d] && f[d]);
        if (h)
            for (g.reset(); g.next();) a = g.value, a.column > b && (--a.column, c = !0);
        return c
    }

    function ms(a, b) {
        for (var c = 0; c <= a.Ha; c++)
            for (; os(a, c););
        a.normalize();
        for (c = 0; c < a.Ha; c++)
            for (; ps(a, c););
        a.normalize();
        var d;
        if (0 < b)
            for (c = 0; c <= a.Ha; c++) {
                var e = Kr(a);
                var f = Nr(a);
                for (d = f + 1; f < d;) {
                    d = f;
                    qs(a, c, 1);
                    var g = Nr(a);
                    g > f ? Lr(a, e) : g < f && (f = g, e = Kr(a))
                }
            }
        if (0 > b)
            for (c = a.Ha; 0 <= c; c--)
                for (e = Kr(a), f = Nr(a), d = f + 1; f < d;) d = f, qs(a, c, -1), g = Nr(a), g > f ? Lr(a, e) : g < f && (f = g, e = Kr(a));
        a.normalize()
    }

    function qs(a, b, c) {
        a.Md = 0;
        for (var d = a.network.vertexes.iterator; d.next();) d.value.component = -1;
        if (0 < c)
            for (d.reset(); d.next();) {
                var e = d.value;
                e.column - a.nodeMinColumnSpace(e, !0) <= b && (e.component = a.Md)
            }
        if (0 > c)
            for (d.reset(); d.next();) e = d.value, e.column + a.nodeMinColumnSpace(e, !1) >= b && (e.component = a.Md);
        a.Md++;
        for (d.reset(); d.next();) b = d.value, -1 === b.component && (Rr(a, b, a.Md, -1, !0, !0), a.Md++);
        var f;
        b = [];
        for (f = 0; f < a.Md * a.Md; f++) b[f] = !1;
        e = [];
        for (f = 0; f < (a.ya + 1) * (a.Ha + 1); f++) e[f] = -1;
        for (d.reset(); d.next();) {
            f =
                d.value;
            for (var g = f.layer, h = Math.max(0, f.column - a.nodeMinColumnSpace(f, !0)), k = Math.min(a.Ha, f.column + a.nodeMinColumnSpace(f, !1)); h <= k; h++) e[g * (a.Ha + 1) + h] = f.component
        }
        for (f = 0; f <= a.ya; f++) {
            if (0 < c)
                for (g = 0; g < a.Ha; g++) - 1 !== e[f * (a.Ha + 1) + g] && -1 !== e[f * (a.Ha + 1) + g + 1] && e[f * (a.Ha + 1) + g] !== e[f * (a.Ha + 1) + g + 1] && (b[e[f * (a.Ha + 1) + g] * a.Md + e[f * (a.Ha + 1) + g + 1]] = !0);
            if (0 > c)
                for (g = a.Ha; 0 < g; g--) - 1 !== e[f * (a.Ha + 1) + g] && -1 !== e[f * (a.Ha + 1) + g - 1] && e[f * (a.Ha + 1) + g] !== e[f * (a.Ha + 1) + g - 1] && (b[e[f * (a.Ha + 1) + g] * a.Md + e[f * (a.Ha + 1) + g - 1]] = !0)
        }
        e = [];
        for (f = 0; f < a.Md; f++) e[f] = !0;
        g = [];
        for (g.push(0); 0 !== g.length;)
            if (k = g[g.length - 1], g.pop(), e[k])
                for (e[k] = !1, f = 0; f < a.Md; f++) b[k * a.Md + f] && g.splice(0, 0, f);
        if (0 < c)
            for (d.reset(); d.next();) a = d.value, e[a.component] && --a.column;
        if (0 > c)
            for (d.reset(); d.next();) c = d.value, e[c.component] && (c.column += 1)
    }
    yr.prototype.commitLayout = function() {
        if (this.setsPortSpots)
            for (var a = Fr(this, !0), b = Fr(this, !1), c = this.network.edges.iterator; c.next();) {
                var d = c.value.link;
                null !== d && (d.fromSpot = a, d.toSpot = b)
            }
        this.commitNodes();
        this.Iu();
        this.isRouting && this.commitLinks()
    };

    function Fr(a, b) {
        return 270 === a.L ? b ? Jd : Td : 90 === a.L ? b ? Td : Jd : 180 === a.L ? b ? Rd : Sd : b ? Sd : Rd
    }
    yr.prototype.commitNodes = function() {
        this.Hd = [];
        this.od = [];
        this.nd = [];
        this.Ka = [];
        for (var a = 0; a <= this.ya; a++) this.Hd[a] = 0, this.od[a] = 0, this.nd[a] = 0, this.Ka[a] = 0;
        for (a = this.network.vertexes.iterator; a.next();) {
            var b = a.value,
                c = b.layer;
            this.Hd[c] = Math.max(this.Hd[c], this.nodeMinLayerSpace(b, !0));
            this.od[c] = Math.max(this.od[c], this.nodeMinLayerSpace(b, !1))
        }
        b = 0;
        c = this.ke;
        for (var d = 0; d <= this.ya; d++) {
            var e = c;
            0 >= this.Hd[d] + this.od[d] && (e = 0);
            0 < d && (b += e / 2);
            90 === this.L || 0 === this.L ? (b += this.od[d], this.nd[d] = b,
                b += this.Hd[d]) : (b += this.Hd[d], this.nd[d] = b, b += this.od[d]);
            d < this.ya && (b += e / 2);
            this.Ka[d] = b
        }
        c = b;
        b = this.arrangementOrigin;
        for (d = 0; d <= this.ya; d++) 270 === this.L ? this.nd[d] = b.y + this.nd[d] : 90 === this.L ? (this.nd[d] = b.y + c - this.nd[d], this.Ka[d] = c - this.Ka[d]) : 180 === this.L ? this.nd[d] = b.x + this.nd[d] : (this.nd[d] = b.x + c - this.nd[d], this.Ka[d] = c - this.Ka[d]);
        a.reset();
        for (c = d = Infinity; a.next();) {
            e = a.value;
            var f = e.layer,
                g = e.column | 0;
            if (270 === this.L || 90 === this.L) {
                var h = b.x + this.Xb * g;
                f = this.nd[f]
            } else h = this.nd[f], f = b.y +
                this.Xb * g;
            e.centerX = h;
            e.centerY = f;
            d = Math.min(e.x, d);
            c = Math.min(e.y, c)
        }
        d = b.x - d;
        b = b.y - c;
        this.ew = new G(d, b);
        for (a.reset(); a.next();) c = a.value, c.x += d, c.y += b, c.commit()
    };
    yr.prototype.Iu = function() {
        for (var a = 0, b = this.ke, c = 0; c <= this.ya; c++) a += this.Hd[c], a += this.od[c];
        a += this.ya * b;
        b = [];
        c = this.Xb * this.Ha;
        for (var d = this.maxLayer; 0 <= d; d--) 270 === this.L ? 0 === d ? b.push(new N(0, 0, c, Math.abs(this.Ka[0]))) : b.push(new N(0, this.Ka[d - 1], c, Math.abs(this.Ka[d - 1] - this.Ka[d]))) : 90 === this.L ? 0 === d ? b.push(new N(0, this.Ka[0], c, Math.abs(this.Ka[0] - a))) : b.push(new N(0, this.Ka[d], c, Math.abs(this.Ka[d - 1] - this.Ka[d]))) : 180 === this.L ? 0 === d ? b.push(new N(0, 0, Math.abs(this.Ka[0]), c)) : b.push(new N(this.Ka[d -
            1], 0, Math.abs(this.Ka[d - 1] - this.Ka[d]), c)) : 0 === d ? b.push(new N(this.Ka[0], 0, Math.abs(this.Ka[0] - a), c)) : b.push(new N(this.Ka[d], 0, Math.abs(this.Ka[d - 1] - this.Ka[d]), c));
        this.commitLayers(b, this.ew)
    };
    yr.prototype.commitLayers = function() {};
    yr.prototype.commitLinks = function() {
        for (var a = this.network.edges.iterator, b; a.next();) b = a.value.link, null !== b && (b.zh(), b.Oj(), b.lf());
        for (a.reset(); a.next();) b = a.value.link, null !== b && b.Ui();
        for (a.reset(); a.next();) {
            var c = a.value;
            b = c.link;
            if (null !== b) {
                b.zh();
                var d = b,
                    e = d.fromNode,
                    f = d.toNode,
                    g = d.fromPort,
                    h = d.toPort;
                if (null !== e) {
                    var k = e.findVisibleNode();
                    null !== k && k !== e && (e = k, g = k.port)
                }
                if (null !== f) {
                    var l = f.findVisibleNode();
                    null !== l && l !== f && (f = l, h = l.port)
                }
                var m = b.computeSpot(!0, g),
                    n = b.computeSpot(!1,
                        h),
                    p = c.fromVertex,
                    q = c.toVertex;
                if (c.valid) {
                    if (b.curve === Qg && 4 === b.pointsCount)
                        if (p.column === q.column) {
                            var r = b.getLinkPoint(e, g, m, !0, !1, f, h),
                                u = b.getLinkPoint(f, h, n, !1, !1, e, g);
                            r.s() || r.set(e.actualBounds.center);
                            u.s() || u.set(f.actualBounds.center);
                            b.Oj();
                            b.kf(r.x, r.y);
                            b.kf((2 * r.x + u.x) / 3, (2 * r.y + u.y) / 3);
                            b.kf((r.x + 2 * u.x) / 3, (r.y + 2 * u.y) / 3);
                            b.kf(u.x, u.y)
                        } else {
                            var v = !1,
                                x = !1;
                            null !== g && m === Sc && (v = !0);
                            null !== h && n === Sc && (x = !0);
                            if (v || x) {
                                var y = b.i(0).x,
                                    z = b.i(0).y,
                                    B = b.i(3).x,
                                    C = b.i(3).y;
                                if (v) {
                                    if (90 === this.L || 270 ===
                                        this.L) {
                                        var I = y;
                                        var J = (z + C) / 2
                                    } else I = (y + B) / 2, J = z;
                                    b.M(1, I, J);
                                    var K = b.getLinkPoint(e, g, m, !0, !1, f, h);
                                    K.s() || K.set(e.actualBounds.center);
                                    b.M(0, K.x, K.y)
                                }
                                if (x) {
                                    if (90 === this.L || 270 === this.L) {
                                        var X = B;
                                        var Q = (z + C) / 2
                                    } else X = (y + B) / 2, Q = C;
                                    b.M(2, X, Q);
                                    var ia = b.getLinkPoint(f, h, n, !1, !1, e, g);
                                    ia.s() || ia.set(f.actualBounds.center);
                                    b.M(3, ia.x, ia.y)
                                }
                            }
                        } b.lf()
                } else if (p.layer === q.layer) b.lf();
                else {
                    var ja = !1,
                        M = !1,
                        R = b.firstPickIndex + 1;
                    if (b.isOrthogonal) {
                        M = !0;
                        var Aa = b.pointsCount;
                        4 < Aa && b.points.removeRange(2, Aa - 3)
                    } else if (b.curve ===
                        Qg) ja = !0, Aa = b.pointsCount, 4 < Aa && b.points.removeRange(2, Aa - 3), R = 2;
                    else {
                        Aa = b.pointsCount;
                        var ob = m === Sc,
                            Ha = n === Sc;
                        2 < Aa && ob && Ha ? b.points.removeRange(1, Aa - 2) : 3 < Aa && ob && !Ha ? b.points.removeRange(1, Aa - 3) : 3 < Aa && !ob && Ha ? b.points.removeRange(2, Aa - 2) : 4 < Aa && !ob && !Ha && b.points.removeRange(2, Aa - 3)
                    }
                    var Da;
                    if (c.rev) {
                        for (var Fa; null !== q && p !== q;) {
                            var Ra = Da = null;
                            for (var Ub = q.sourceEdges.iterator; Ub.next();) {
                                var Za = Ub.value;
                                if (Za.link === c.link && (Da = Za.fromVertex, Ra = Za.toVertex, null === Da.node)) break
                            }
                            if (Da !== p) {
                                var Wa =
                                    b.i(R - 1).x;
                                var Ma = b.i(R - 1).y;
                                var fa = Da.centerX;
                                var ea = Da.centerY;
                                if (M)
                                    if (180 === this.L || 0 === this.L)
                                        if (2 === R) b.m(R++, Wa, Ma), b.m(R++, Wa, ea);
                                        else {
                                            if ((null !== Ra ? Ra.centerY : Ma) !== ea) {
                                                var hb = this.Ka[Da.layer - 1];
                                                b.m(R++, hb, Ma);
                                                b.m(R++, hb, ea)
                                            }
                                        }
                                else 2 === R ? (b.m(R++, Wa, Ma), b.m(R++, fa, Ma)) : (null !== Ra ? Ra.centerX : Wa) !== fa && (hb = this.Ka[Da.layer - 1], b.m(R++, Wa, hb), b.m(R++, fa, hb));
                                else if (2 === R) {
                                    var jb = Math.max(10, this.Hd[q.layer]);
                                    var Na = Math.max(10, this.od[q.layer]);
                                    if (ja) 180 === this.L ? fa <= q.bounds.x ? (Fa = q.bounds.x,
                                        b.m(R++, Fa - jb, ea), b.m(R++, Fa, ea), b.m(R++, Fa + Na, ea)) : (b.m(R++, fa - jb, ea), b.m(R++, fa, ea), b.m(R++, fa + Na, ea)) : 90 === this.L ? ea >= q.bounds.bottom ? (Fa = q.bounds.y + q.bounds.height, b.m(R++, fa, Fa + Na), b.m(R++, fa, Fa), b.m(R++, fa, Fa - jb)) : (b.m(R++, fa, ea + Na), b.m(R++, fa, ea), b.m(R++, fa, ea - jb)) : 270 === this.L ? ea <= q.bounds.y ? (Fa = q.bounds.y, b.m(R++, fa, Fa - jb), b.m(R++, fa, Fa), b.m(R++, fa, Fa + Na)) : (b.m(R++, fa, ea - jb), b.m(R++, fa, ea), b.m(R++, fa, ea + Na)) : 0 === this.L && (fa >= q.bounds.right ? (Fa = q.bounds.x + q.bounds.width, b.m(R++, Fa + Na, ea),
                                        b.m(R++, Fa, ea), b.m(R++, Fa - jb, ea)) : (b.m(R++, fa + Na, ea), b.m(R++, fa, ea), b.m(R++, fa - jb, ea)));
                                    else {
                                        b.m(R++, Wa, Ma);
                                        var ce = 0;
                                        if (180 === this.L || 0 === this.L) {
                                            if (180 === this.L ? fa >= q.bounds.right : fa <= q.bounds.x) ce = (0 === this.L ? -jb : Na) / 2;
                                            b.m(R++, Wa + ce, ea)
                                        } else {
                                            if (270 === this.L ? ea >= q.bounds.bottom : ea <= q.bounds.y) ce = (90 === this.L ? -jb : Na) / 2;
                                            b.m(R++, fa, Ma + ce)
                                        }
                                        b.m(R++, fa, ea)
                                    }
                                } else jb = Math.max(10, this.Hd[Da.layer]), Na = Math.max(10, this.od[Da.layer]), 180 === this.L ? (ja && b.m(R++, fa - jb, ea), b.m(R++, fa, ea), ja && b.m(R++, fa + Na, ea)) :
                                    90 === this.L ? (ja && b.m(R++, fa, ea + Na), b.m(R++, fa, ea), ja && b.m(R++, fa, ea - jb)) : 270 === this.L ? (ja && b.m(R++, fa, ea - jb), b.m(R++, fa, ea), ja && b.m(R++, fa, ea + Na)) : (ja && b.m(R++, fa + Na, ea), b.m(R++, fa, ea), ja && b.m(R++, fa - jb, ea))
                            }
                            q = Da
                        }
                        if (null === h || m !== Sc || M)
                            if (Wa = b.i(R - 1).x, Ma = b.i(R - 1).y, fa = b.i(R).x, ea = b.i(R).y, M) {
                                var Kd = this.od[p.layer];
                                if (180 === this.L || 0 === this.L) {
                                    var vb = Ma;
                                    vb >= p.bounds.y && vb <= p.bounds.bottom && (180 === this.L ? fa >= p.bounds.x : fa <= p.bounds.right) && (Fa = p.centerX + (180 === this.L ? -Kd : Kd), vb < p.bounds.y + p.bounds.height /
                                        2 ? vb = p.bounds.y - this.Xb / 2 : vb = p.bounds.bottom + this.Xb / 2, b.m(R++, Fa, Ma), b.m(R++, Fa, vb));
                                    b.m(R++, fa, vb)
                                } else vb = Wa, vb >= p.bounds.x && vb <= p.bounds.right && (270 === this.L ? ea >= p.bounds.y : ea <= p.bounds.bottom) && (Fa = p.centerY + (270 === this.L ? -Kd : Kd), vb < p.bounds.x + p.bounds.width / 2 ? vb = p.bounds.x - this.Xb / 2 : vb = p.bounds.right + this.Xb / 2, b.m(R++, Wa, Fa), b.m(R++, vb, Fa)), b.m(R++, vb, ea);
                                b.m(R++, fa, ea)
                            } else if (ja) jb = Math.max(10, this.Hd[p.layer]), Na = Math.max(10, this.od[p.layer]), 180 === this.L && fa >= p.bounds.x ? (Fa = p.bounds.x + p.bounds.width,
                            b.M(R - 2, Fa, Ma), b.M(R - 1, Fa + Na, Ma)) : 90 === this.L && ea <= p.bounds.bottom ? (Fa = p.bounds.y, b.M(R - 2, Wa, Fa), b.M(R - 1, Wa, Fa - jb)) : 270 === this.L && ea >= p.bounds.y ? (Fa = p.bounds.y + p.bounds.height, b.M(R - 2, Wa, Fa), b.M(R - 1, Wa, Fa + Na)) : 0 === this.L && fa <= p.bounds.right && (Fa = p.bounds.x, b.M(R - 2, Fa, Ma), b.M(R - 1, Fa - jb, Ma));
                        else {
                            jb = Math.max(10, this.Hd[p.layer]);
                            Na = Math.max(10, this.od[p.layer]);
                            var zf = 0;
                            if (180 === this.L || 0 === this.L) {
                                if (180 === this.L ? fa <= p.bounds.x : fa >= p.bounds.right) zf = (0 === this.L ? Na : -jb) / 2;
                                b.m(R++, fa + zf, Ma)
                            } else {
                                if (270 ===
                                    this.L ? ea <= p.bounds.y : ea >= p.bounds.bottom) zf = (90 === this.L ? Na : -jb) / 2;
                                b.m(R++, Wa, ea + zf)
                            }
                            b.m(R++, fa, ea)
                        }
                    } else {
                        for (; null !== p && p !== q;) {
                            Ra = Da = null;
                            for (var Eb = p.destinationEdges.iterator; Eb.next();) {
                                var pe = Eb.value;
                                if (pe.link === c.link && (Da = pe.toVertex, Ra = pe.fromVertex, null !== Ra.node && (Ra = null), null === Da.node)) break
                            }
                            Da !== q && (Wa = b.i(R - 1).x, Ma = b.i(R - 1).y, fa = Da.centerX, ea = Da.centerY, M ? 180 === this.L || 0 === this.L ? (null !== Ra ? Ra.centerY : Ma) !== ea && (hb = this.Ka[Da.layer], 2 === R && (hb = 0 === this.L ? Math.max(hb, Wa) : Math.min(hb,
                                Wa)), b.m(R++, hb, Ma), b.m(R++, hb, ea)) : (null !== Ra ? Ra.centerX : Wa) !== fa && (hb = this.Ka[Da.layer], 2 === R && (hb = 90 === this.L ? Math.max(hb, Ma) : Math.min(hb, Ma)), b.m(R++, Wa, hb), b.m(R++, fa, hb)) : (jb = Math.max(10, this.Hd[Da.layer]), Na = Math.max(10, this.od[Da.layer]), 180 === this.L ? (b.m(R++, fa + Na, ea), ja && b.m(R++, fa, ea), b.m(R++, fa - jb, ea)) : 90 === this.L ? (b.m(R++, fa, ea - jb), ja && b.m(R++, fa, ea), b.m(R++, fa, ea + Na)) : 270 === this.L ? (b.m(R++, fa, ea + Na), ja && b.m(R++, fa, ea), b.m(R++, fa, ea - jb)) : (b.m(R++, fa - jb, ea), ja && b.m(R++, fa, ea), b.m(R++,
                                fa + Na, ea))));
                            p = Da
                        }
                        M && (Wa = b.i(R - 1).x, Ma = b.i(R - 1).y, fa = b.i(R).x, ea = b.i(R).y, 180 === this.L || 0 === this.L ? Ma !== ea && (hb = 0 === this.L ? Math.min(Math.max((fa + Wa) / 2, this.Ka[q.layer]), fa) : Math.max(Math.min((fa + Wa) / 2, this.Ka[q.layer]), fa), b.m(R++, hb, Ma), b.m(R++, hb, ea)) : Wa !== fa && (hb = 90 === this.L ? Math.min(Math.max((ea + Ma) / 2, this.Ka[q.layer]), ea) : Math.max(Math.min((ea + Ma) / 2, this.Ka[q.layer]), ea), b.m(R++, Wa, hb), b.m(R++, fa, hb)))
                    }
                    if (null !== d && ja) {
                        if (null !== g) {
                            if (m === Sc) {
                                var Vc = b.i(0),
                                    Vb = b.i(2);
                                Vc.A(Vb) || b.M(1, (Vc.x + Vb.x) /
                                    2, (Vc.y + Vb.y) / 2)
                            }
                            var Ld = b.getLinkPoint(e, g, Sc, !0, !1, f, h);
                            Ld.s() || Ld.set(e.actualBounds.center);
                            b.M(0, Ld.x, Ld.y)
                        }
                        if (null !== h) {
                            if (n === Sc) {
                                var Ec = b.i(b.pointsCount - 1),
                                    He = b.i(b.pointsCount - 3);
                                Ec.A(He) || b.M(b.pointsCount - 2, (Ec.x + He.x) / 2, (Ec.y + He.y) / 2)
                            }
                            var Ie = b.getLinkPoint(f, h, Sc, !1, !1, e, g);
                            Ie.s() || Ie.set(f.actualBounds.center);
                            b.M(b.pointsCount - 1, Ie.x, Ie.y)
                        }
                    }
                    b.lf();
                    c.commit()
                }
            }
        }
        for (var Af = new E, gf = this.network.edges.iterator; gf.next();) {
            var Bf = gf.value.link;
            null !== Bf && Bf.isOrthogonal && !Af.contains(Bf) &&
                Af.add(Bf)
        }
        if (0 < Af.count)
            if (90 === this.L || 270 === this.L) {
                for (var Wb = 0, Xa = [], $a, Lc, Cf = Af.iterator; Cf.next();) {
                    var jc = Cf.value;
                    if (null !== jc && jc.isOrthogonal)
                        for (var Md = 2; Md < jc.pointsCount - 3; Md++)
                            if ($a = jc.i(Md), Lc = jc.i(Md + 1), this.w($a.y, Lc.y) && !this.w($a.x, Lc.x)) {
                                var qc = new rs;
                                qc.layer = Math.floor($a.y / 2);
                                var Nd = jc.i(0),
                                    Xb = jc.i(jc.pointsCount - 1);
                                qc.first = Nd.x * Nd.x + Nd.y;
                                qc.Sb = Xb.x * Xb.x + Xb.y;
                                qc.Tc = Math.min($a.x, Lc.x);
                                qc.uc = Math.max($a.x, Lc.x);
                                qc.index = Md;
                                qc.link = jc;
                                if (Md + 2 < jc.pointsCount) {
                                    var Dh = jc.i(Md -
                                            1),
                                        Eh = jc.i(Md + 2),
                                        Je = 0;
                                    Dh.y < $a.y ? Je = Eh.y < $a.y ? 3 : $a.x < Lc.x ? 2 : 1 : Dh.y > $a.y && (Je = Eh.y > $a.y ? 0 : Lc.x < $a.x ? 2 : 1);
                                    qc.l = Je
                                }
                                Xa.push(qc)
                            }
                }
                if (1 < Xa.length) {
                    Xa.sort(this.zx);
                    for (var pb = 0; pb < Xa.length;) {
                        for (var Df = Xa[pb].layer, Ke = pb + 1; Ke < Xa.length && Xa[Ke].layer === Df;) Ke++;
                        if (1 < Ke - pb)
                            for (var Yb = pb; Yb < Ke;) {
                                for (var Le = Xa[Yb].uc, Mc = pb + 1; Mc < Ke && Xa[Mc].Tc < Le;) Le = Math.max(Le, Xa[Mc].uc), Mc++;
                                var db = Mc - Yb;
                                if (1 < db) {
                                    this.Ri(Xa, this.pt, Yb, Yb + db);
                                    for (var Me = 1, rb = Xa[Yb].Sb, rc = Yb; rc < Mc; rc++) {
                                        var kb = Xa[rc];
                                        kb.Sb !== rb && (Me++, rb = kb.Sb)
                                    }
                                    this.Ri(Xa,
                                        this.yx, Yb, Yb + db);
                                    var Wc = 1;
                                    rb = Xa[Yb].first;
                                    for (var Xc = Yb; Xc < Mc; Xc++) {
                                        var xd = Xa[Xc];
                                        xd.first !== rb && (Wc++, rb = xd.first)
                                    }
                                    var Bg = !0,
                                        Ef = Wc;
                                    Me < Wc ? (Bg = !1, Ef = Me, rb = Xa[Yb].Sb, this.Ri(Xa, this.pt, Yb, Yb + db)) : rb = Xa[Yb].first;
                                    for (var Ff = 0, hf = Yb; hf < Mc; hf++) {
                                        var kd = Xa[hf];
                                        (Bg ? kd.first : kd.Sb) !== rb && (Ff++, rb = Bg ? kd.first : kd.Sb);
                                        var Od = kd.link;
                                        $a = Od.i(kd.index);
                                        Lc = Od.i(kd.index + 1);
                                        var ld = this.linkSpacing * (Ff - (Ef - 1) / 2);
                                        Wb++;
                                        Od.zh();
                                        Od.M(kd.index, $a.x, $a.y + ld);
                                        Od.M(kd.index + 1, Lc.x, Lc.y + ld);
                                        Od.lf()
                                    }
                                }
                                Yb = Mc
                            }
                        pb = Ke
                    }
                }
            } else {
                for (var md =
                        0, nb = [], eb, nd, Yc = Af.iterator; Yc.next();) {
                    var od = Yc.value;
                    if (null !== od && od.isOrthogonal)
                        for (var vc = 2; vc < od.pointsCount - 3; vc++)
                            if (eb = od.i(vc), nd = od.i(vc + 1), this.w(eb.x, nd.x) && !this.w(eb.y, nd.y)) {
                                var Ba = new rs;
                                Ba.layer = Math.floor(eb.x / 2);
                                var Zc = od.i(0),
                                    Zb = od.i(od.pointsCount - 1);
                                Ba.first = Zc.x + Zc.y * Zc.y;
                                Ba.Sb = Zb.x + Zb.y * Zb.y;
                                Ba.Tc = Math.min(eb.y, nd.y);
                                Ba.uc = Math.max(eb.y, nd.y);
                                Ba.index = vc;
                                Ba.link = od;
                                if (vc + 2 < od.pointsCount) {
                                    var de = od.i(vc - 1),
                                        Ne = od.i(vc + 2),
                                        ee = 0;
                                    de.x < eb.x ? ee = Ne.x < eb.x ? 3 : eb.y < nd.y ? 2 : 1 : de.x >
                                        eb.x && (ee = Ne.x > eb.x ? 0 : nd.y < eb.y ? 2 : 1);
                                    Ba.l = ee
                                }
                                nb.push(Ba)
                            }
                }
                if (1 < nb.length) {
                    nb.sort(this.zx);
                    for (var wc = 0; wc < nb.length;) {
                        for (var qe = nb[wc].layer, $c = wc + 1; $c < nb.length && nb[$c].layer === qe;) $c++;
                        if (1 < $c - wc)
                            for (var wb = wc; wb < $c;) {
                                for (var Pd = nb[wb].uc, Mb = wc + 1; Mb < $c && nb[Mb].Tc < Pd;) Pd = Math.max(Pd, nb[Mb].uc), Mb++;
                                var re = Mb - wb;
                                if (1 < re) {
                                    this.Ri(nb, this.pt, wb, wb + re);
                                    for (var yd = 1, fe = nb[wb].Sb, Cg = wb; Cg < Mb; Cg++) {
                                        var ad = nb[Cg];
                                        ad.Sb !== fe && (yd++, fe = ad.Sb)
                                    }
                                    this.Ri(nb, this.yx, wb, wb + re);
                                    var Oe = 1;
                                    fe = nb[wb].first;
                                    for (var Dg =
                                            wb; Dg < Mb; Dg++) {
                                        var Gf = nb[Dg];
                                        Gf.first !== fe && (Oe++, fe = Gf.first)
                                    }
                                    var Pe = !0,
                                        Eg = Oe;
                                    yd < Oe ? (Pe = !1, Eg = yd, fe = nb[wb].Sb, this.Ri(nb, this.pt, wb, wb + re)) : fe = nb[wb].first;
                                    for (var bg = 0, Di = wb; Di < Mb; Di++) {
                                        var Qe = nb[Di];
                                        (Pe ? Qe.first : Qe.Sb) !== fe && (bg++, fe = Pe ? Qe.first : Qe.Sb);
                                        var Re = Qe.link;
                                        eb = Re.i(Qe.index);
                                        nd = Re.i(Qe.index + 1);
                                        var Fh = this.linkSpacing * (bg - (Eg - 1) / 2);
                                        md++;
                                        Re.zh();
                                        Re.M(Qe.index, eb.x + Fh, eb.y);
                                        Re.M(Qe.index + 1, nd.x + Fh, nd.y);
                                        Re.lf()
                                    }
                                }
                                wb = Mb
                            }
                        wc = $c
                    }
                }
            }
    };
    t = yr.prototype;
    t.zx = function(a, b) {
        return a instanceof rs && b instanceof rs && a !== b ? a.layer < b.layer ? -1 : a.layer > b.layer ? 1 : a.Tc < b.Tc ? -1 : a.Tc > b.Tc ? 1 : a.uc < b.uc ? -1 : a.uc > b.uc ? 1 : 0 : 0
    };
    t.yx = function(a, b) {
        return a instanceof rs && b instanceof rs && a !== b ? a.first < b.first ? -1 : a.first > b.first || a.l < b.l ? 1 : a.l > b.l || a.Tc < b.Tc ? -1 : a.Tc > b.Tc ? 1 : a.uc < b.uc ? -1 : a.uc > b.uc ? 1 : 0 : 0
    };
    t.pt = function(a, b) {
        return a instanceof rs && b instanceof rs && a !== b ? a.Sb < b.Sb ? -1 : a.Sb > b.Sb || a.l < b.l ? 1 : a.l > b.l || a.Tc < b.Tc ? -1 : a.Tc > b.Tc ? 1 : a.uc < b.uc ? -1 : a.uc > b.uc ? 1 : 0 : 0
    };
    t.w = function(a, b) {
        a -= b;
        return -1 < a && 1 > a
    };
    t.Ri = function(a, b, c, d) {
        var e = a.length,
            f = d - c;
        if (!(1 >= f))
            if ((0 > c || c >= e - 1) && A("not in range 0 <= from < length: " + c), 2 === f) d = a[c], e = a[c + 1], 0 < b(d, e) && (a[c] = e, a[c + 1] = d);
            else if (0 === c)
            if (d >= e) a.sort(b);
            else
                for (c = a.slice(0, d), c.sort(b), b = 0; b < d; b++) a[b] = c[b];
        else if (d >= e)
            for (d = a.slice(c), d.sort(b), b = c; b < e; b++) a[b] = d[b - c];
        else
            for (e = a.slice(c, d), e.sort(b), b = c; b < d; b++) a[b] = e[b - c]
    };

    function Hr(a, b) {
        var c = a.hc[b];
        if (c >= a.oe.length) {
            var d = [];
            for (var e = 0; e < a.oe.length; e++) d[e] = a.oe[e];
            a.oe = d
        }
        void 0 === a.oe[c] || null === a.oe[c] ? d = [] : (d = a.oe[c], a.oe[c] = null);
        a = a.wo[b];
        for (b = 0; b < a.length; b++) c = a[b], d[c.index] = c;
        return d
    }

    function Ir(a, b, c) {
        a.oe[a.hc[b]] = c
    }
    pa.Object.defineProperties(yr.prototype, {
        layerSpacing: {
            get: function() {
                return this.ke
            },
            set: function(a) {
                this.ke !== a && 0 <= a && (this.ke = a, this.B())
            }
        },
        columnSpacing: {
            get: function() {
                return this.Xb
            },
            set: function(a) {
                this.Xb !== a && 0 < a && (this.Xb = a, this.B())
            }
        },
        direction: {
            get: function() {
                return this.L
            },
            set: function(a) {
                this.L !== a && (0 === a || 90 === a || 180 === a || 270 === a ? (this.L = a, this.B()) : A("LayeredDigraphLayout.direction must be 0, 90, 180, or 270"))
            }
        },
        cycleRemoveOption: {
            get: function() {
                return this.Dk
            },
            set: function(a) {
                this.Dk === a || a !== Sr && a !== zr && a !== Er || (this.Dk = a, this.B())
            }
        },
        layeringOption: {
            get: function() {
                return this.dl
            },
            set: function(a) {
                this.dl === a || a !== Ar && a !== Xr && a !== Zr || (this.dl = a, this.B())
            }
        },
        initializeOption: {
            get: function() {
                return this.Uk
            },
            set: function(a) {
                this.Uk === a || a !== Br && a !== es && a !== cs || (this.Uk = a, this.B())
            }
        },
        iterations: {
            get: function() {
                return this.lj
            },
            set: function(a) {
                this.lj !== a && 0 <= a && (this.lj = a, this.B())
            }
        },
        aggressiveOption: {
            get: function() {
                return this.qk
            },
            set: function(a) {
                this.qk === a || a !== is && a !== Cr && a !== js || (this.qk = a, this.B())
            }
        },
        packOption: {
            get: function() {
                return this.Yf
            },
            set: function(a) {
                this.Yf !== a && 0 <= a && 8 > a && (this.Yf = a, this.B())
            }
        },
        setsPortSpots: {
            get: function() {
                return this.Ze
            },
            set: function(a) {
                this.Ze !== a && (this.Ze = a, this.B())
            }
        },
        linkSpacing: {
            get: function() {
                return this.co
            },
            set: function(a) {
                this.co !== a && 0 <= a && (this.co = a, this.B())
            }
        },
        maxLayer: {
            get: function() {
                return this.ya
            }
        },
        maxIndex: {
            get: function() {
                return this.Kr
            }
        },
        maxColumn: {
            get: function() {
                return this.Ha
            }
        },
        minIndexLayer: {
            get: function() {
                return this.oo
            }
        },
        maxIndexLayer: {
            get: function() {
                return this.qd
            }
        }
    });
    var zr = new D(yr, "CycleDepthFirst", 0),
        Sr = new D(yr, "CycleGreedy", 1),
        Er = new D(yr, "CycleFromLayers", 2),
        Ar = new D(yr, "LayerOptimalLinkLength", 0),
        Xr = new D(yr, "LayerLongestPathSink", 1),
        Zr = new D(yr, "LayerLongestPathSource", 2),
        Br = new D(yr, "InitDepthFirstOut", 0),
        es = new D(yr, "InitDepthFirstIn", 1),
        cs = new D(yr, "InitNaive", 2),
        is = new D(yr, "AggressiveNone", 0),
        Cr = new D(yr, "AggressiveLess", 1),
        js = new D(yr, "AggressiveMore", 2);
    yr.className = "LayeredDigraphLayout";
    yr.CycleDepthFirst = zr;
    yr.CycleGreedy = Sr;
    yr.CycleFromLayers = Er;
    yr.LayerOptimalLinkLength = Ar;
    yr.LayerLongestPathSink = Xr;
    yr.LayerLongestPathSource = Zr;
    yr.InitDepthFirstOut = Br;
    yr.InitDepthFirstIn = es;
    yr.InitNaive = cs;
    yr.AggressiveNone = is;
    yr.AggressiveLess = Cr;
    yr.AggressiveMore = js;
    yr.PackNone = 0;
    yr.PackExpand = 1;
    yr.PackStraighten = 2;
    yr.PackMedian = 4;
    yr.PackAll = 7;

    function rs() {
        this.index = this.uc = this.Tc = this.Sb = this.first = this.layer = 0;
        this.link = null;
        this.l = 0
    }
    rs.className = "SegInfo";

    function Dr(a) {
        tp.call(this, a)
    }
    oa(Dr, tp);
    Dr.prototype.createVertex = function() {
        return new ss(this)
    };
    Dr.prototype.createEdge = function() {
        return new ts(this)
    };
    Dr.className = "LayeredDigraphNetwork";

    function ss(a) {
        wp.call(this, a);
        this.Ra = this.Bg = this.di = -1;
        this.K = NaN;
        this.da = null;
        this.valid = !1;
        this.finish = this.Ul = NaN;
        this.Kj = 0;
        this.jv = this.kv = null
    }
    oa(ss, wp);
    pa.Object.defineProperties(ss.prototype, {
        layer: {
            get: function() {
                return this.di
            },
            set: function(a) {
                this.di !== a && (this.di = a)
            }
        },
        column: {
            get: function() {
                return this.Bg
            },
            set: function(a) {
                this.Bg !== a && (this.Bg = a)
            }
        },
        index: {
            get: function() {
                return this.Ra
            },
            set: function(a) {
                this.Ra !== a && (this.Ra = a)
            }
        },
        component: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K !== a && (this.K = a)
            }
        },
        near: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da !== a && (this.da = a)
            }
        }
    });
    ss.className = "LayeredDigraphVertex";

    function ts(a) {
        xp.call(this, a);
        this.l = this.Wa = this.Ub = !1;
        this.La = this.K = NaN;
        this.da = this.u = 0
    }
    oa(ts, xp);
    pa.Object.defineProperties(ts.prototype, {
        valid: {
            get: function() {
                return this.Ub
            },
            set: function(a) {
                this.Ub !== a && (this.Ub = a)
            }
        },
        rev: {
            get: function() {
                return this.Wa
            },
            set: function(a) {
                this.Wa !== a && (this.Wa = a)
            }
        },
        forest: {
            get: function() {
                return this.l
            },
            set: function(a) {
                this.l !== a && (this.l = a)
            }
        },
        portFromPos: {
            get: function() {
                return this.K
            },
            set: function(a) {
                this.K !== a && (this.K = a)
            }
        },
        portToPos: {
            get: function() {
                return this.La
            },
            set: function(a) {
                this.La !== a && (this.La = a)
            }
        },
        portFromColOffset: {
            get: function() {
                return this.u
            },
            set: function(a) {
                this.u !== a && (this.u = a)
            }
        },
        portToColOffset: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da !== a && (this.da = a)
            }
        }
    });
    ts.className = "LayeredDigraphEdge";

    function us() {
        ui.call(this);
        this.Gb = new F;
        this.Ko = vs;
        this.ad = ws;
        this.Bp = xs;
        this.Ir = ys;
        this.dw = [];
        this.Zc = !0;
        this.Bb = zs;
        this.yd = (new L(10, 10)).freeze();
        var a = new As(this);
        this.T = new Bs(a);
        this.U = new Bs(a);
        this.tu = []
    }
    oa(us, ui);
    us.prototype.cloneProtected = function(a) {
        ui.prototype.cloneProtected.call(this, a);
        a.Ko = this.Ko;
        a.Bp = this.Bp;
        a.Ir = this.Ir;
        a.Zc = this.Zc;
        a.Bb = this.Bb;
        a.yd.assign(this.yd);
        a.T.copyInheritedPropertiesFrom(this.T);
        a.U.copyInheritedPropertiesFrom(this.U)
    };
    us.prototype.gb = function(a) {
        a.classType === us ? 0 === a.name.indexOf("Alignment") ? this.alignment = a : 0 === a.name.indexOf("Arrangement") ? this.arrangement = a : 0 === a.name.indexOf("Compaction") ? this.compaction = a : 0 === a.name.indexOf("Path") ? this.path = a : 0 === a.name.indexOf("Sorting") ? this.sorting = a : 0 === a.name.indexOf("Style") ? this.treeStyle = a : A("Unknown enum value: " + a) : ui.prototype.gb.call(this, a)
    };
    us.prototype.createNetwork = function() {
        return new As(this)
    };
    us.prototype.makeNetwork = function(a) {
        function b(a) {
            if (a instanceof U) return !a.isLinkLabel && "Comment" !== a.category;
            if (a instanceof S) {
                var b = a.fromNode;
                if (null === b || b.isLinkLabel || "Comment" === b.category) return !1;
                a = a.toNode;
                return null === a || a.isLinkLabel || "Comment" === a.category ? !1 : !0
            }
            return !1
        }
        var c = this.createNetwork();
        a instanceof P ? (c.jg(a.nodes, !0, b), c.jg(a.links, !0, b)) : a instanceof hg ? c.jg(a.memberParts, !1, b) : c.jg(a.iterator, !1, b);
        return c
    };
    us.prototype.doLayout = function(a) {
        null === this.network && (this.network = this.makeNetwork(a));
        this.arrangement !== Cs && (this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin));
        var b = this.diagram;
        null === b && a instanceof P && (b = a);
        this.path === vs && null !== b ? this.ad = b.isTreePathToChildren ? ws : Ds : this.ad = this.path === vs ? ws : this.path;
        if (0 < this.network.vertexes.count) {
            this.network.Np();
            for (a = this.network.vertexes.iterator; a.next();) b = a.value, b.initialized = !1, b.level = 0, b.parent = null, b.children = [];
            if (0 < this.Gb.count) {
                a =
                    new F;
                for (b = this.Gb.iterator; b.next();) {
                    var c = b.value;
                    c instanceof U ? (c = this.network.Ei(c), null !== c && a.add(c)) : c instanceof Bs && a.add(c)
                }
                this.Gb = a
            }
            0 === this.Gb.count && this.findRoots();
            for (a = this.Gb.copy().iterator; a.next();) b = a.value, b.initialized || (b.initialized = !0, Es(this, b));
            b = this.network.vertexes;
            for (a = null; a = Fs(b), 0 < a.count;) b = Gs(this, a), null !== b && this.Gb.add(b), b.initialized = !0, Es(this, b), b = a;
            for (a = this.Gb.iterator; a.next();) b = a.value, b instanceof Bs && Hs(this, b);
            for (a = this.Gb.iterator; a.next();) b =
                a.value, b instanceof Bs && Is(this, b);
            for (a = this.Gb.iterator; a.next();) b = a.value, b instanceof Bs && Js(this, b);
            this.Eu();
            if (this.layerStyle === Ks) {
                a = [];
                for (b = this.network.vertexes.iterator; b.next();) {
                    c = b.value;
                    var d = c.parent;
                    null === d && (d = c);
                    d = 0 === d.angle || 180 === d.angle;
                    var e = a[c.level];
                    void 0 === e && (e = 0);
                    a[c.level] = Math.max(e, d ? c.width : c.height)
                }
                for (b = 0; b < a.length; b++) void 0 === a[b] && (a[b] = 0);
                this.dw = a;
                for (b = this.network.vertexes.iterator; b.next();) c = b.value, d = c.parent, null === d && (d = c), 0 === d.angle || 180 ===
                    d.angle ? (180 === d.angle && (c.focusX += a[c.level] - c.width), c.width = a[c.level]) : (270 === d.angle && (c.focusY += a[c.level] - c.height), c.height = a[c.level])
            } else if (this.layerStyle === Ls)
                for (a = this.network.vertexes.iterator; a.next();) {
                    b = a.value;
                    c = 0 === b.angle || 180 === b.angle;
                    d = -1;
                    for (e = 0; e < b.children.length; e++) {
                        var f = b.children[e];
                        d = Math.max(d, c ? f.width : f.height)
                    }
                    if (0 <= d)
                        for (e = 0; e < b.children.length; e++) f = b.children[e], c ? (180 === b.angle && (f.focusX += d - f.width), f.width = d) : (270 === b.angle && (f.focusY += d - f.height), f.height =
                            d)
                }
            for (a = this.Gb.iterator; a.next();) b = a.value, b instanceof Bs && this.layoutTree(b);
            this.arrangeTrees();
            this.updateParts()
        }
        this.network = null;
        this.Gb = new F;
        this.isValidLayout = !0
    };

    function Fs(a) {
        var b = new F;
        for (a = a.iterator; a.next();) {
            var c = a.value;
            c.initialized || b.add(c)
        }
        return b
    }
    us.prototype.findRoots = function() {
        for (var a = this.network.vertexes, b = a.iterator; b.next();) {
            var c = b.value;
            switch (this.ad) {
                case ws:
                    0 === c.sourceEdges.count && this.Gb.add(c);
                    break;
                case Ds:
                    0 === c.destinationEdges.count && this.Gb.add(c);
                    break;
                default:
                    A("Unhandled path value " + this.ad.toString())
            }
        }
        0 === this.Gb.count && (a = Gs(this, a), null !== a && this.Gb.add(a))
    };

    function Gs(a, b) {
        var c = 999999,
            d = null;
        for (b = b.iterator; b.next();) {
            var e = b.value;
            switch (a.ad) {
                case ws:
                    e.sourceEdges.count < c && (c = e.sourceEdges.count, d = e);
                    break;
                case Ds:
                    e.destinationEdges.count < c && (c = e.destinationEdges.count, d = e);
                    break;
                default:
                    A("Unhandled path value " + a.ad.toString())
            }
        }
        return d
    }

    function Es(a, b) {
        if (null !== b) {
            switch (a.ad) {
                case ws:
                    if (0 < b.destinationEdges.count) {
                        for (var c = new E, d = b.destinationVertexes; d.next();) {
                            var e = d.value;
                            Ms(a, b, e) && c.add(e)
                        }
                        0 < c.count && (b.children = c.Ma())
                    }
                    break;
                case Ds:
                    if (0 < b.sourceEdges.count) {
                        c = new E;
                        for (d = b.sourceVertexes; d.next();) e = d.value, Ms(a, b, e) && c.add(e);
                        0 < c.count && (b.children = c.Ma())
                    }
                    break;
                default:
                    A("Unhandled path value" + a.ad.toString())
            }
            c = b.children;
            d = c.length;
            for (e = 0; e < d; e++) {
                var f = c[e];
                f.initialized = !0;
                f.level = b.level + 1;
                f.parent = b;
                a.Gb.remove(f)
            }
            for (b =
                0; b < d; b++) Es(a, c[b])
        }
    }

    function Ms(a, b, c) {
        if (c.initialized) {
            if (null === b) var d = !1;
            else {
                for (d = b.parent; null !== d && d !== c;) d = d.parent;
                d = d === c
            }
            if (d || c.level > b.level) return !1;
            a.removeChild(c.parent, c)
        }
        return !0
    }
    us.prototype.removeChild = function(a, b) {
        if (null !== a && null !== b) {
            for (var c = a.children, d = 0, e = 0; e < c.length; e++) c[e] === b && d++;
            if (0 < d) {
                d = Array(c.length - d);
                for (var f = e = 0; f < c.length; f++) c[f] !== b && (d[e++] = c[f]);
                a.children = d
            }
        }
    };

    function Hs(a, b) {
        if (null !== b) {
            a.initializeTreeVertexValues(b);
            b.alignment === Ns && a.sortTreeVertexChildren(b);
            for (var c = 0, d = b.childrenCount, e = 0, f = b.children, g = f.length, h = 0; h < g; h++) {
                var k = f[h];
                Hs(a, k);
                c += k.descendantCount + 1;
                d = Math.max(d, k.maxChildrenCount);
                e = Math.max(e, k.maxGenerationCount)
            }
            b.descendantCount = c;
            b.maxChildrenCount = d;
            b.maxGenerationCount = 0 < d ? e + 1 : 0
        }
    }

    function Os(a, b) {
        switch (a.Bp) {
            default:
            case xs:
                return null !== b.parent ? b.parent : a.T;
            case Ps:
                return null === b.parent ? a.T : null === b.parent.parent ? a.U : b.parent;
            case Qs:
                return null !== b.parent ? null !== b.parent.parent ? b.parent.parent : a.U : a.T;
            case Rs:
                var c = !0;
                if (0 === b.childrenCount) c = !1;
                else
                    for (var d = b.children, e = d.length, f = 0; f < e; f++)
                        if (0 < d[f].childrenCount) {
                            c = !1;
                            break
                        } return c && null !== b.parent ? a.U : null !== b.parent ? b.parent : a.T
        }
    }
    us.prototype.initializeTreeVertexValues = function(a) {
        a.copyInheritedPropertiesFrom(Os(this, a));
        if (null !== a.parent && a.parent.alignment === Ns) {
            for (var b = a.angle, c = a.parent.children, d = 0; d < c.length && a !== c[d];) d++;
            0 === d % 2 ? d !== c.length - 1 && (b = 90 === b ? 180 : 180 === b ? 270 : 270 === b ? 180 : 270) : b = 90 === b ? 0 : 180 === b ? 90 : 270 === b ? 0 : 90;
            a.angle = b
        }
        a.initialized = !0
    };

    function Is(a, b) {
        if (null !== b) {
            a.assignTreeVertexValues(b);
            b = b.children;
            for (var c = b.length, d = 0; d < c; d++) Is(a, b[d])
        }
    }
    us.prototype.assignTreeVertexValues = function() {};

    function Js(a, b) {
        if (null !== b) {
            b.alignment !== Ns && a.sortTreeVertexChildren(b);
            b = b.children;
            for (var c = b.length, d = 0; d < c; d++) Js(a, b[d])
        }
    }
    us.prototype.sortTreeVertexChildren = function(a) {
        switch (a.sorting) {
            case Ss:
                break;
            case Ts:
                a.children.reverse();
                break;
            case Us:
                a.children.sort(a.comparer);
                break;
            case Vs:
                a.children.sort(a.comparer);
                a.children.reverse();
                break;
            default:
                A("Unhandled sorting value " + a.sorting.toString())
        }
    };
    us.prototype.Eu = function() {
        if (this.comments)
            for (var a = this.network.vertexes.iterator; a.next();) this.addComments(a.value)
    };
    us.prototype.addComments = function(a) {
        var b = a.angle,
            c = a.parent,
            d = 0;
        var e = !1;
        null !== c && (d = c.angle, e = c.alignment, e = Ws(e));
        b = 90 === b || 270 === b;
        d = 90 === d || 270 === d;
        c = 0 === a.childrenCount;
        var f = 0,
            g = 0,
            h = 0,
            k = a.commentSpacing;
        if (null !== a.node)
            for (var l = a.node.Ru(); l.next();) {
                var m = l.value;
                "Comment" === m.category && m.canLayout() && (null === a.comments && (a.comments = []), a.comments.push(m), m.bc(), m = m.measuredBounds, b && !c || !e && !d && c || e && d && c ? (f = Math.max(f, m.width), g += m.height + Math.abs(h)) : (f += m.width + Math.abs(h), g = Math.max(g,
                    m.height)), h = k)
            }
        null !== a.comments && (b && !c || !e && !d && c || e && d && c ? (f += Math.abs(a.commentMargin), g = Math.max(0, g - a.height)) : (g += Math.abs(a.commentMargin), f = Math.max(0, f - a.width)), e = N.allocAt(0, 0, a.bounds.width + f, a.bounds.height + g), a.bounds = e, N.free(e))
    };

    function Ws(a) {
        return a === Xs || a === Ns || a === Ys || a === Zs
    }

    function $s(a) {
        return a === Xs || a === Ns
    }

    function at(a) {
        var b = a.parent;
        if (null !== b) {
            var c = b.alignment;
            if (Ws(c)) {
                if ($s(c)) {
                    b = b.children;
                    for (c = 0; c < b.length && a !== b[c];) c++;
                    return 0 === c % 2
                }
                if (c === Ys) return !0
            }
        }
        return !1
    }
    us.prototype.layoutComments = function(a) {
        if (null !== a.comments) {
            var b = a.node.measuredBounds,
                c = a.parent,
                d = a.angle,
                e = 0;
            var f = !1;
            null !== c && (e = c.angle, f = c.alignment, f = Ws(f));
            d = 90 === d || 270 === d;
            c = 90 === e || 270 === e;
            for (var g = 0 === a.childrenCount, h = at(a), k = 0, l = a.comments, m = l.length, n = G.alloc(), p = 0; p < m; p++) {
                var q = l[p],
                    r = q.measuredBounds;
                if (d && !g || !f && !c && g || f && c && g) {
                    if (135 < e && !f || c && h)
                        if (0 <= a.commentMargin)
                            for (n.h(a.bounds.x - a.commentMargin - r.width, a.bounds.y + k), q.move(n), q = q.ud(); q.next();) {
                                var u = q.value;
                                u.fromSpot =
                                    Rd;
                                u.toSpot = Sd
                            } else
                                for (n.h(a.bounds.x + 2 * a.focus.x - a.commentMargin, a.bounds.y + k), q.move(n), q = q.ud(); q.next();) u = q.value, u.fromSpot = Sd, u.toSpot = Rd;
                        else if (0 <= a.commentMargin)
                        for (n.h(a.bounds.x + 2 * a.focus.x + a.commentMargin, a.bounds.y + k), q.move(n), q = q.ud(); q.next();) u = q.value, u.fromSpot = Sd, u.toSpot = Rd;
                    else
                        for (n.h(a.bounds.x + a.commentMargin - r.width, a.bounds.y + k), q.move(n), q = q.ud(); q.next();) u = q.value, u.fromSpot = Rd, u.toSpot = Sd;
                    k = 0 <= a.commentSpacing ? k + (r.height + a.commentSpacing) : k + (a.commentSpacing - r.height)
                } else {
                    if (135 <
                        e && !f || !c && h)
                        if (0 <= a.commentMargin)
                            for (n.h(a.bounds.x + k, a.bounds.y - a.commentMargin - r.height), q.move(n), q = q.ud(); q.next();) u = q.value, u.fromSpot = Jd, u.toSpot = Td;
                        else
                            for (n.h(a.bounds.x + k, a.bounds.y + 2 * a.focus.y - a.commentMargin), q.move(n), q = q.ud(); q.next();) u = q.value, u.fromSpot = Td, u.toSpot = Jd;
                    else if (0 <= a.commentMargin)
                        for (n.h(a.bounds.x + k, a.bounds.y + 2 * a.focus.y + a.commentMargin), q.move(n), q = q.ud(); q.next();) u = q.value, u.fromSpot = Td, u.toSpot = Jd;
                    else
                        for (n.h(a.bounds.x + k, a.bounds.y + a.commentMargin - r.height),
                            q.move(n), q = q.ud(); q.next();) u = q.value, u.fromSpot = Jd, u.toSpot = Td;
                    k = 0 <= a.commentSpacing ? k + (r.width + a.commentSpacing) : k + (a.commentSpacing - r.width)
                }
            }
            G.free(n);
            b = k - a.commentSpacing - (d ? b.height : b.width);
            if (this.ad === ws)
                for (a = a.destinationEdges; a.next();) e = a.value.link, null === e || e.isAvoiding || (e.fromEndSegmentLength = 0 < b ? b : NaN);
            else
                for (a = a.sourceEdges; a.next();) e = a.value.link, null === e || e.isAvoiding || (e.toEndSegmentLength = 0 < b ? b : NaN)
        }
    };
    us.prototype.layoutTree = function(a) {
        if (null !== a) {
            for (var b = a.children, c = b.length, d = 0; d < c; d++) this.layoutTree(b[d]);
            switch (a.compaction) {
                case bt:
                    ct(this, a);
                    break;
                case dt:
                    if (a.alignment === Ns) ct(this, a);
                    else if (0 === a.childrenCount) d = a.parent, c = !1, b = 0, null !== d && (b = d.angle, c = d.alignment, c = Ws(c)), d = at(a), a.S.h(0, 0), a.ua.h(a.width, a.height), null === a.parent || null === a.comments || (180 !== b && 270 !== b || c) && !d ? a.ia.h(0, 0) : 180 === b && !c || (90 === b || 270 === b) && d ? a.ia.h(a.width - 2 * a.focus.x, 0) : a.ia.h(0, a.height - 2 * a.focus.y),
                        a.aq = null, a.nq = null;
                    else {
                        var e = et(a);
                        b = 90 === e || 270 === e;
                        var f = 0,
                            g = a.children,
                            h = g.length;
                        for (c = 0; c < h; c++) d = g[c], f = Math.max(f, b ? d.ua.width : d.ua.height);
                        var k = a.alignment,
                            l = k === ft,
                            m = Ws(k),
                            n = Math.max(0, a.breadthLimit);
                        c = gt(a);
                        var p = a.nodeSpacing,
                            q = ht(a),
                            r = a.rowSpacing,
                            u = 0;
                        if (k === lt || l || a.qm || a.rm && 1 === a.maxGenerationCount) u = Math.max(0, a.rowIndent);
                        d = a.width;
                        var v = a.height,
                            x = 0,
                            y = 0,
                            z = 0,
                            B = null,
                            C = null,
                            I = 0,
                            J = 0,
                            K = 0,
                            X = 0,
                            Q = 0,
                            ia = 0,
                            ja = 0,
                            M = 0;
                        m && !$s(k) && 135 < e && g.reverse();
                        if ($s(k))
                            if (1 < h)
                                for (var R = 0; R < h; R++) 0 === R %
                                    2 && R !== h - 1 && (M = Math.max(M, b ? g[R].ua.width : g[R].ua.height));
                            else 1 === h && (M = b ? g[0].ua.width : g[0].ua.height);
                        if (m) {
                            switch (k) {
                                case Xs:
                                    y = 135 > e ? mt(a, g, M, x, y) : nt(a, g, M, x, y);
                                    M = y.x;
                                    x = y.width;
                                    y = y.height;
                                    break;
                                case Ys:
                                    for (B = 0; B < h; B++) C = g[B], n = C.ua, z = 0 === ia ? 0 : r, b ? (C.S.h(f - n.width, X + z), x = Math.max(x, n.width), y = Math.max(y, X + z + n.height), X += z + n.height) : (C.S.h(K + z, f - n.height), x = Math.max(x, K + z + n.width), y = Math.max(y, n.height), K += z + n.width), ia++;
                                    break;
                                case Zs:
                                    for (B = 0; B < h; B++) C = g[B], f = C.ua, n = 0 === ia ? 0 : r, b ? (C.S.h(p / 2 + a.focus.x,
                                        X + n), x = Math.max(x, f.width), y = Math.max(y, X + n + f.height), X += n + f.height) : (C.S.h(K + n, p / 2 + a.focus.y), x = Math.max(x, K + n + f.width), y = Math.max(y, f.height), K += n + f.width), ia++
                            }
                            B = ot(this, 2);
                            C = ot(this, 2);
                            b ? (B[0].h(0, 0), B[1].h(0, y), C[0].h(x, 0)) : (B[0].h(0, 0), B[1].h(x, 0), C[0].h(0, y));
                            C[1].h(x, y)
                        } else
                            for (R = 0; R < h; R++) {
                                var Aa = g[R],
                                    ob = Aa.ua;
                                if (b) {
                                    0 < n && 0 < ia && K + p + ob.width > n && (K < f && pt(a, k, f - K, 0, ja, R - 1), Q++, ia = 0, ja = R, z = y, K = 0, X = 135 < e ? -y - r : y + r);
                                    qt(this, Aa, 0, X);
                                    var Ha = 0;
                                    if (0 === ia) {
                                        if (B = Aa.aq, C = Aa.nq, I = ob.width, J = ob.height, null ===
                                            B || null === C || e !== et(Aa)) B = ot(this, 2), C = ot(this, 2), B[0].h(0, 0), B[1].h(0, J), C[0].h(I, 0), C[1].h(I, J)
                                    } else {
                                        var Da = Ka();
                                        J = rt(this, a, Aa, B, C, I, J, Da);
                                        Ha = J.x;
                                        B = Da[0];
                                        C = Da[1];
                                        I = J.width;
                                        J = J.height;
                                        Oa(Da);
                                        K < ob.width && 0 > Ha && (st(a, -Ha, 0, ja, R - 1), tt(B, -Ha, 0), tt(C, -Ha, 0), Ha = 0)
                                    }
                                    Aa.S.h(Ha, X);
                                    x = Math.max(x, I);
                                    y = Math.max(y, z + (0 === Q ? 0 : r) + ob.height);
                                    K = I
                                } else {
                                    0 < n && 0 < ia && X + p + ob.height > n && (X < f && pt(a, k, 0, f - X, ja, R - 1), Q++, ia = 0, ja = R, z = x, X = 0, K = 135 < e ? -x - r : x + r);
                                    qt(this, Aa, K, 0);
                                    Ha = 0;
                                    if (0 === ia) {
                                        if (B = Aa.aq, C = Aa.nq, I = ob.width, J = ob.height,
                                            null === B || null === C || e !== et(Aa)) B = ot(this, 2), C = ot(this, 2), B[0].h(0, 0), B[1].h(I, 0), C[0].h(0, J), C[1].h(I, J)
                                    } else Da = Ka(), J = rt(this, a, Aa, B, C, I, J, Da), Ha = J.x, B = Da[0], C = Da[1], I = J.width, J = J.height, Oa(Da), X < ob.height && 0 > Ha && (st(a, 0, -Ha, ja, R - 1), tt(B, 0, -Ha), tt(C, 0, -Ha), Ha = 0);
                                    Aa.S.h(K, Ha);
                                    y = Math.max(y, J);
                                    x = Math.max(x, z + (0 === Q ? 0 : r) + ob.width);
                                    X = J
                                }
                                ia++
                            }
                        0 < Q && (b ? (y += Math.max(0, c), K < x && pt(a, k, x - K, 0, ja, h - 1), 0 < u && (l || st(a, u, 0, 0, h - 1), x += u)) : (x += Math.max(0, c), X < y && pt(a, k, 0, y - X, ja, h - 1), 0 < u && (l || st(a, 0, u, 0, h - 1), y += u)));
                        u = l = 0;
                        switch (k) {
                            case ut:
                                b ? l += x / 2 - a.focus.x - q / 2 : u += y / 2 - a.focus.y - q / 2;
                                break;
                            case vt:
                                0 < Q ? b ? l += x / 2 - a.focus.x - q / 2 : u += y / 2 - a.focus.y - q / 2 : b ? (M = g[0].S.x + g[0].ia.x, l += M + (g[h - 1].S.x + g[h - 1].ia.x + 2 * g[h - 1].focus.x - M) / 2 - a.focus.x - q / 2) : (M = g[0].S.y + g[0].ia.y, u += M + (g[h - 1].S.y + g[h - 1].ia.y + 2 * g[h - 1].focus.y - M) / 2 - a.focus.y - q / 2);
                                break;
                            case lt:
                                b ? (l -= q, x += q) : (u -= q, y += q);
                                break;
                            case ft:
                                b ? (l += x - a.width + q, x += q) : (u += y - a.height + q, y += q);
                                break;
                            case Xs:
                                b ? 1 < h ? l += M + p / 2 - a.focus.x : l += g[0].focus.x - a.focus.x + g[0].ia.x : 1 < h ? u += M + p / 2 - a.focus.y :
                                    u += g[0].focus.y - a.focus.y + g[0].ia.y;
                                break;
                            case Ys:
                                b ? l += x + p / 2 - a.focus.x : u += y + p / 2 - a.focus.y;
                                break;
                            case Zs:
                                break;
                            default:
                                A("Unhandled alignment value " + k.toString())
                        }
                        for (q = 0; q < h; q++) M = g[q], b ? M.S.h(M.S.x + M.ia.x - l, M.S.y + (135 < e ? (m ? -y : -M.ua.height) + M.ia.y - c : v + c + M.ia.y)) : M.S.h(M.S.x + (135 < e ? (m ? -x : -M.ua.width) + M.ia.x - c : d + c + M.ia.x), M.S.y + M.ia.y - u);
                        h = g = 0;
                        m ? b ? (x = wt(a, x, l), 0 > l && (l = 0), 135 < e && (u += y + c), y += v + c, k === Zs && (g += p / 2 + a.focus.x), h += v + c) : (135 < e && (l += x + c), x += d + c, y = xt(a, y, u), 0 > u && (u = 0), k === Zs && (h += p / 2 + a.focus.y),
                            g += d + c) : b ? (null === a.comments ? d > x && (x = yt(k, d - x, 0), g = x.x, h = x.y, x = d, l = 0) : x = wt(a, x, l), 0 > l && (g -= l, l = 0), 135 < e && (u += y + c), y = Math.max(Math.max(y, v), y + v + c), h += v + c) : (135 < e && (l += x + c), x = Math.max(Math.max(x, d), x + d + c), null === a.comments ? v > y && (y = yt(k, 0, v - y), g = y.x, h = y.y, y = v, u = 0) : y = xt(a, y, u), 0 > u && (h -= u, u = 0), g += d + c);
                        if (0 < Q) e = ot(this, 4), Q = ot(this, 4), b ? (e[2].h(0, v + c), e[3].h(e[2].x, y), Q[2].h(x, e[2].y), Q[3].h(Q[2].x, e[3].y)) : (e[2].h(d + c, 0), e[3].h(x, e[2].y), Q[2].h(e[2].x, y), Q[3].h(e[3].x, Q[2].y));
                        else {
                            e = ot(this, B.length +
                                2);
                            Q = ot(this, C.length + 2);
                            for (k = 0; k < B.length; k++) m = B[k], e[k + 2].h(m.x + g, m.y + h);
                            for (k = 0; k < C.length; k++) m = C[k], Q[k + 2].h(m.x + g, m.y + h)
                        }
                        b ? (e[0].h(l, 0), e[1].h(e[0].x, v), e[2].y < e[1].y && (e[2].x > e[0].x ? e[2].assign(e[1]) : e[1].assign(e[2])), e[3].y < e[2].y && (e[3].x > e[0].x ? e[3].assign(e[2]) : e[2].assign(e[3])), Q[0].h(l + d, 0), Q[1].h(Q[0].x, v), Q[2].y < Q[1].y && (Q[2].x < Q[0].x ? Q[2].assign(Q[1]) : Q[1].assign(Q[2])), Q[3].y < Q[2].y && (Q[3].x < Q[0].x ? Q[3].assign(Q[2]) : Q[2].assign(Q[3])), e[2].y -= c / 2, Q[2].y -= c / 2) : (e[0].h(0, u), e[1].h(d,
                            e[0].y), e[2].x < e[1].x && (e[2].y > e[0].y ? e[2].assign(e[1]) : e[1].assign(e[2])), e[3].x < e[2].x && (e[3].y > e[0].y ? e[3].assign(e[2]) : e[2].assign(e[3])), Q[0].h(0, u + v), Q[1].h(d, Q[0].y), Q[2].x < Q[1].x && (Q[2].y < Q[0].y ? Q[2].assign(Q[1]) : Q[1].assign(Q[2])), Q[3].x < Q[2].x && (Q[3].y < Q[0].y ? Q[3].assign(Q[2]) : Q[2].assign(Q[3])), e[2].x -= c / 2, Q[2].x -= c / 2);
                        zt(this, B);
                        zt(this, C);
                        a.aq = e;
                        a.nq = Q;
                        a.ia.h(l, u);
                        a.ua.h(x, y)
                    }
                    break;
                default:
                    A("Unhandled compaction value " + a.compaction.toString())
            }
        }
    };

    function ct(a, b) {
        if (0 === b.childrenCount) {
            var c = !1,
                d = 0;
            null !== b.parent && (d = b.parent.angle, c = b.parent.alignment, c = Ws(c));
            var e = at(b);
            b.S.h(0, 0);
            b.ua.h(b.width, b.height);
            null === b.parent || null === b.comments || (180 !== d && 270 !== d || c) && !e ? b.ia.h(0, 0) : 180 === d && !c || (90 === d || 270 === d) && e ? b.ia.h(b.width - 2 * b.focus.x, 0) : b.ia.h(0, b.height - 2 * b.focus.y)
        } else {
            d = et(b);
            c = 90 === d || 270 === d;
            var f = 0;
            e = b.children;
            for (var g = e.length, h = 0; h < g; h++) {
                var k = e[h];
                f = Math.max(f, c ? k.ua.width : k.ua.height)
            }
            var l = b.alignment,
                m = l === lt,
                n = l ===
                ft;
            h = Ws(l);
            var p = Math.max(0, b.breadthLimit);
            k = gt(b);
            var q = b.nodeSpacing,
                r = ht(b),
                u = m || n ? 0 : r / 2,
                v = b.rowSpacing,
                x = 0;
            if (m || n || b.qm || b.rm && 1 === b.maxGenerationCount) x = Math.max(0, b.rowIndent);
            m = b.width;
            var y = b.height,
                z = 0,
                B = 0,
                C = 0,
                I = 0,
                J = 0,
                K = 0,
                X = 0,
                Q = 0,
                ia = 0;
            h && !$s(l) && 135 < d && e.reverse();
            if ($s(l))
                if (1 < g)
                    for (var ja = 0; ja < g; ja++) {
                        var M = e[ja],
                            R = M.ua;
                        0 === ja % 2 && ja !== g - 1 && (ia = Math.max(ia, (c ? R.width : R.height) + At(M) - q))
                    } else 1 === g && (ia = c ? e[0].ua.width : e[0].ua.height);
            if (h) switch (l) {
                case Xs:
                case Ns:
                    B = 135 > d ? mt(b, e, ia, z,
                        B) : nt(b, e, ia, z, B);
                    ia = B.x;
                    z = B.width;
                    B = B.height;
                    break;
                case Ys:
                    for (a = 0; a < g; a++) p = e[a], u = p.ua, C = 0 === X ? 0 : v, c ? (p.S.h(f - u.width, J + C), z = Math.max(z, u.width), B = Math.max(B, J + C + u.height), J += C + u.height) : (p.S.h(I + C, f - u.height), z = Math.max(z, I + C + u.width), B = Math.max(B, u.height), I += C + u.width), X++;
                    break;
                case Zs:
                    for (f = 0; f < g; f++) a = e[f], p = a.ua, u = 0 === X ? 0 : v, c ? (a.S.h(q / 2 + b.focus.x, J + u), z = Math.max(z, p.width), B = Math.max(B, J + u + p.height), J += u + p.height) : (a.S.h(I + u, q / 2 + b.focus.y), z = Math.max(z, I + u + p.width), B = Math.max(B, p.height),
                        I += u + p.width), X++
            } else
                for (ja = 0; ja < g; ja++) {
                    M = e[ja];
                    R = M.ua;
                    if (c) {
                        0 < p && 0 < X && I + q + R.width > p && (I < f && pt(b, l, f - I, 0, Q, ja - 1), K++, X = 0, Q = ja, C = B, I = 0, J = 135 < d ? -B - v : B + v);
                        var Aa = 0 === X ? u : q;
                        qt(a, M, 0, J);
                        M.S.h(I + Aa, J);
                        z = Math.max(z, I + Aa + R.width);
                        B = Math.max(B, C + (0 === K ? 0 : v) + R.height);
                        I += Aa + R.width
                    } else 0 < p && 0 < X && J + q + R.height > p && (J < f && pt(b, l, 0, f - J, Q, ja - 1), K++, X = 0, Q = ja, C = z, J = 0, I = 135 < d ? -z - v : z + v), Aa = 0 === X ? u : q, qt(a, M, I, 0), M.S.h(I, J + Aa), B = Math.max(B, J + Aa + R.height), z = Math.max(z, C + (0 === K ? 0 : v) + R.width), J += Aa + R.height;
                    X++
                }
            0 < K && (c ?
                (B += Math.max(0, k), I < z && pt(b, l, z - I, 0, Q, g - 1), 0 < x && (n || st(b, x, 0, 0, g - 1), z += x)) : (z += Math.max(0, k), J < B && pt(b, l, 0, B - J, Q, g - 1), 0 < x && (n || st(b, 0, x, 0, g - 1), B += x)));
            x = n = 0;
            switch (l) {
                case ut:
                    c ? n += z / 2 - b.focus.x - r / 2 : x += B / 2 - b.focus.y - r / 2;
                    break;
                case vt:
                    0 < K ? c ? n += z / 2 - b.focus.x - r / 2 : x += B / 2 - b.focus.y - r / 2 : c ? (l = e[0].S.x + e[0].ia.x, n += l + (e[g - 1].S.x + e[g - 1].ia.x + 2 * e[g - 1].focus.x - l) / 2 - b.focus.x - r / 2) : (l = e[0].S.y + e[0].ia.y, x += l + (e[g - 1].S.y + e[g - 1].ia.y + 2 * e[g - 1].focus.y - l) / 2 - b.focus.y - r / 2);
                    break;
                case lt:
                    c ? (n -= r, z += r) : (x -= r, B += r);
                    break;
                case ft:
                    c ? (n += z - b.width + r, z += r) : (x += B - b.height + r, B += r);
                    break;
                case Xs:
                case Ns:
                    c ? 1 < g ? n += ia + q / 2 - b.focus.x : n += e[0].focus.x - b.focus.x + e[0].ia.x : 1 < g ? x += ia + q / 2 - b.focus.y : x += e[0].focus.y - b.focus.y + e[0].ia.y;
                    break;
                case Ys:
                    c ? n += z + q / 2 - b.focus.x : x += B + q / 2 - b.focus.y;
                    break;
                case Zs:
                    break;
                default:
                    A("Unhandled alignment value " + l.toString())
            }
            for (r = 0; r < g; r++) l = e[r], c ? l.S.h(l.S.x + l.ia.x - n, l.S.y + (135 < d ? (h ? -B : -l.ua.height) + l.ia.y - k : y + k + l.ia.y)) : l.S.h(l.S.x + (135 < d ? (h ? -z : -l.ua.width) + l.ia.x - k : m + k + l.ia.x), l.S.y + l.ia.y - x);
            c ? (z = wt(b, z, n), 0 > n && (n = 0), 135 < d && (x += B + k), B += y + k) : (135 < d && (n += z + k), z += m + k, B = xt(b, B, x), 0 > x && (x = 0));
            b.ia.h(n, x);
            b.ua.h(z, B)
        }
    }

    function mt(a, b, c, d, e) {
        var f = b.length;
        if (0 === f) return new N(c, 0, d, e);
        if (1 === f) return a = b[0], d = a.ua.width, e = a.ua.height, new N(c, 0, d, e);
        for (var g = a.nodeSpacing, h = a.rowSpacing, k = 90 === et(a), l = 0, m = 0, n = 0, p = 0; p < f; p++)
            if (!(0 !== p % 2 || 1 < f && p === f - 1)) {
                var q = b[p],
                    r = q.ua,
                    u = 0 === l ? 0 : h;
                if (k) {
                    var v = At(q) - g;
                    q.S.h(c - (r.width + v), n + u);
                    d = Math.max(d, r.width + v);
                    e = Math.max(e, n + u + r.height);
                    n += u + r.height
                } else v = At(q) - g, q.S.h(m + u, c - (r.height + v)), e = Math.max(e, r.height + v), d = Math.max(d, m + u + r.width), m += u + r.width;
                l++
            } l = 0;
        q = m;
        p = n;
        k ?
            (m = c + g, n = 0) : (m = 0, n = c + g);
        for (r = 0; r < f; r++)
            if (0 !== r % 2) {
                u = b[r];
                v = u.ua;
                var x = 0 === l ? 0 : h;
                if (k) {
                    var y = At(u) - g;
                    u.S.h(m + y, n + x);
                    d = Math.max(d, m + v.width + y);
                    e = Math.max(e, n + x + v.height);
                    n += x + v.height
                } else y = At(u) - g, u.S.h(m + x, n + y), d = Math.max(d, m + x + v.width), e = Math.max(e, n + v.height + y), m += x + v.width;
                l++
            } 1 < f && 1 === f % 2 && (b = b[f - 1], f = b.ua, h = null === b.parent ? 0 : b.parent.rowSpacing, k ? (b.S.h(c + g / 2 - b.focus.x - b.ia.x, e + h), k = c + g / 2 - b.focus.x - b.ia.x, d = Math.max(d, k + f.width), 0 > k && (d -= k), e = Math.max(e, Math.max(p, n) + h + f.height), 0 > b.S.x &&
            (c = Bt(a, b.S.x, !1, c, g))) : (b.S.h(d + h, c + g / 2 - b.focus.y - b.ia.y), d = Math.max(d, Math.max(q, m) + h + f.width), n = c + g / 2 - b.focus.y - b.ia.y, e = Math.max(e, n + f.height), 0 > n && (e -= n), 0 > b.S.y && (c = Bt(a, b.S.y, !0, c, g))));
        return new N(c, 0, d, e)
    }

    function nt(a, b, c, d, e) {
        var f = b.length;
        if (0 === f) return new N(c, 0, d, e);
        if (1 === f) return b = b[0], d = b.ua.width, e = b.ua.height, new N(c, 0, d, e);
        for (var g = a.nodeSpacing, h = a.rowSpacing, k = 270 === et(a), l = 0, m = 0, n = 0, p = 0; p < f; p++)
            if (!(0 !== p % 2 || 1 < f && p === f - 1)) {
                var q = b[p],
                    r = q.ua,
                    u = 0 === l ? 0 : h;
                if (k) {
                    var v = At(q) - g;
                    n -= u + r.height;
                    q.S.h(c - (r.width + v), n);
                    d = Math.max(d, r.width + v);
                    e = Math.max(e, Math.abs(n))
                } else v = At(q) - g, m -= u + r.width, q.S.h(m, c - (r.height + v)), e = Math.max(e, r.height + v), d = Math.max(d, Math.abs(m));
                l++
            } l = 0;
        q = m;
        p = n;
        k ? (m =
            c + g, n = 0) : (m = 0, n = c + g);
        for (r = 0; r < f; r++)
            if (0 !== r % 2) {
                u = b[r];
                v = u.ua;
                var x = 0 === l ? 0 : h;
                if (k) {
                    var y = At(u) - g;
                    n -= x + v.height;
                    u.S.h(m + y, n);
                    d = Math.max(d, m + v.width + y);
                    e = Math.max(e, Math.abs(n))
                } else y = At(u) - g, m -= x + v.width, u.S.h(m, n + y), e = Math.max(e, n + v.height + y), d = Math.max(d, Math.abs(m));
                l++
            } 1 < f && 1 === f % 2 && (h = b[f - 1], l = h.ua, r = null === h.parent ? 0 : h.parent.rowSpacing, k ? (h.S.h(c + g / 2 - h.focus.x - h.ia.x, -e - l.height - r), m = c + g / 2 - h.focus.x - h.ia.x, d = Math.max(d, m + l.width), 0 > m && (d -= m), e = Math.max(e, Math.abs(Math.min(p, n)) + r + l.height),
            0 > h.S.x && (c = Bt(a, h.S.x, !1, c, g))) : (h.S.h(-d - l.width - r, c + g / 2 - h.focus.y - h.ia.y), d = Math.max(d, Math.abs(Math.min(q, m)) + r + l.width), n = c + g / 2 - h.focus.y - h.ia.y, e = Math.max(e, n + l.height), 0 > n && (e -= n), 0 > h.S.y && (c = Bt(a, h.S.y, !0, c, g))));
        for (a = 0; a < f; a++) g = b[a], k ? g.S.h(g.S.x, g.S.y + e) : g.S.h(g.S.x + d, g.S.y);
        return new N(c, 0, d, e)
    }

    function At(a) {
        return null === a.parent ? 0 : a.parent.nodeSpacing
    }

    function Bt(a, b, c, d, e) {
        a = a.children;
        for (var f = a.length, g = 0; g < f; g++) c ? a[g].S.h(a[g].S.x, a[g].S.y - b) : a[g].S.h(a[g].S.x - b, a[g].S.y);
        b = a[f - 1];
        return Math.max(d, c ? b.ia.y + b.focus.y - e / 2 : b.ia.x + b.focus.x - e / 2)
    }

    function wt(a, b, c) {
        switch (a.alignment) {
            case vt:
            case ut:
                return c + a.width > b && (b = c + a.width), 0 > c && (b -= c), b;
            case lt:
                return a.width > b ? a.width : b;
            case ft:
                return 2 * a.focus.x > b ? a.width : b + a.width - 2 * a.focus.x;
            case Xs:
            case Ns:
                return Math.max(a.width, Math.max(b, c + a.width) - Math.min(0, c));
            case Ys:
                return a.width - a.focus.x + a.nodeSpacing / 2 + b;
            case Zs:
                return Math.max(a.width, a.focus.x + a.nodeSpacing / 2 + b);
            default:
                return b
        }
    }

    function xt(a, b, c) {
        switch (a.alignment) {
            case vt:
            case ut:
                return c + a.height > b && (b = c + a.height), 0 > c && (b -= c), b;
            case lt:
                return a.height > b ? a.height : b;
            case ft:
                return 2 * a.focus.y > b ? a.height : b + a.height - 2 * a.focus.y;
            case Xs:
            case Ns:
                return Math.max(a.height, Math.max(b, c + a.height) - Math.min(0, c));
            case Ys:
                return a.height - a.focus.y + a.nodeSpacing / 2 + b;
            case Zs:
                return Math.max(a.height, a.focus.y + a.nodeSpacing / 2 + b);
            default:
                return b
        }
    }

    function yt(a, b, c) {
        switch (a) {
            case ut:
                b /= 2;
                c /= 2;
                break;
            case vt:
                b /= 2;
                c /= 2;
                break;
            case lt:
                c = b = 0;
                break;
            case ft:
                break;
            default:
                A("Unhandled alignment value " + a.toString())
        }
        return new G(b, c)
    }

    function pt(a, b, c, d, e, f) {
        b = yt(b, c, d);
        st(a, b.x, b.y, e, f)
    }

    function st(a, b, c, d, e) {
        if (0 !== b || 0 !== c)
            for (a = a.children; d <= e; d++) {
                var f = a[d].S;
                f.x += b;
                f.y += c
            }
    }

    function qt(a, b, c, d) {
        var e = b.parent;
        switch (a.ad) {
            case ws:
                for (a = b.sourceEdges; a.next();) b = a.value, b.fromVertex === e && b.relativePoint.h(c, d);
                break;
            case Ds:
                for (a = b.destinationEdges; a.next();) b = a.value, b.toVertex === e && b.relativePoint.h(c, d);
                break;
            default:
                A("Unhandled path value " + a.ad.toString())
        }
    }

    function tt(a, b, c) {
        for (var d = 0; d < a.length; d++) {
            var e = a[d];
            e.x += b;
            e.y += c
        }
    }

    function rt(a, b, c, d, e, f, g, h) {
        var k = et(b),
            l = 90 === k || 270 === k,
            m = b.nodeSpacing;
        b = d;
        var n = e;
        d = f;
        var p = g,
            q = c.aq,
            r = c.nq;
        g = c.ua;
        var u = l ? Math.max(p, g.height) : Math.max(d, g.width);
        if (null === q || k !== et(c)) q = ot(a, 2), r = ot(a, 2), l ? (q[0].h(0, 0), q[1].h(0, g.height), r[0].h(g.width, 0), r[1].h(r[0].x, q[1].y)) : (q[0].h(0, 0), q[1].h(g.width, 0), r[0].h(0, g.height), r[1].h(q[1].x, r[0].y));
        if (l) {
            p = 9999999;
            if (!(null === n || 2 > n.length || null === q || 2 > q.length))
                for (e = c = 0; c < n.length && e < q.length;) {
                    f = n[c];
                    var v = q[e];
                    k = v.x;
                    l = v.y;
                    k += d;
                    var x =
                        f;
                    c + 1 < n.length && (x = n[c + 1]);
                    var y = v;
                    v = y.x;
                    y = y.y;
                    e + 1 < q.length && (y = q[e + 1], v = y.x, y = y.y, v += d);
                    var z = p;
                    f.y === l ? z = k - f.x : f.y > l && f.y < y ? z = k + (f.y - l) / (y - l) * (v - k) - f.x : l > f.y && l < x.y && (z = k - (f.x + (l - f.y) / (x.y - f.y) * (x.x - f.x)));
                    z < p && (p = z);
                    x.y <= f.y ? c++ : y <= l ? e++ : (x.y <= y && c++, y <= x.y && e++)
                }
            p = d - p;
            p += m;
            c = q;
            e = p;
            if (null === b || 2 > b.length || null === c || 2 > c.length) d = null;
            else {
                m = ot(a, b.length + c.length);
                for (d = f = k = 0; f < c.length && c[f].y < b[0].y;) l = c[f++], m[d++].h(l.x + e, l.y);
                for (; k < b.length;) l = b[k++], m[d++].h(l.x, l.y);
                for (k = b[b.length - 1].y; f <
                    c.length && c[f].y <= k;) f++;
                for (; f < c.length && c[f].y > k;) l = c[f++], m[d++].h(l.x + e, l.y);
                c = ot(a, d);
                for (k = 0; k < d; k++) c[k].assign(m[k]);
                zt(a, m);
                d = c
            }
            f = r;
            k = p;
            if (null === n || 2 > n.length || null === f || 2 > f.length) e = null;
            else {
                m = ot(a, n.length + f.length);
                for (e = l = c = 0; c < n.length && n[c].y < f[0].y;) x = n[c++], m[e++].h(x.x, x.y);
                for (; l < f.length;) x = f[l++], m[e++].h(x.x + k, x.y);
                for (f = f[f.length - 1].y; c < n.length && n[c].y <= f;) c++;
                for (; c < n.length && n[c].y > f;) k = n[c++], m[e++].h(k.x, k.y);
                f = ot(a, e);
                for (c = 0; c < e; c++) f[c].assign(m[c]);
                zt(a, m);
                e = f
            }
            f =
                Math.max(0, p) + g.width;
            g = u;
            zt(a, b);
            zt(a, q);
            zt(a, n);
            zt(a, r);
            h[0] = d;
            h[1] = e;
            return new N(p, 0, f, g)
        }
        d = 9999999;
        if (!(null === n || 2 > n.length || null === q || 2 > q.length))
            for (e = c = 0; c < n.length && e < q.length;) f = n[c], v = q[e], k = v.x, l = v.y, l += p, x = f, c + 1 < n.length && (x = n[c + 1]), y = v, v = y.x, y = y.y, e + 1 < q.length && (y = q[e + 1], v = y.x, y = y.y, y += p), z = d, f.x === k ? z = l - f.y : f.x > k && f.x < v ? z = l + (f.x - k) / (v - k) * (y - l) - f.y : k > f.x && k < x.x && (z = l - (f.y + (k - f.x) / (x.x - f.x) * (x.y - f.y))), z < d && (d = z), x.x <= f.x ? c++ : v <= k ? e++ : (x.x <= v && c++, v <= x.x && e++);
        p -= d;
        p += m;
        c = q;
        e = p;
        if (null ===
            b || 2 > b.length || null === c || 2 > c.length) d = null;
        else {
            m = ot(a, b.length + c.length);
            for (d = f = k = 0; f < c.length && c[f].x < b[0].x;) l = c[f++], m[d++].h(l.x, l.y + e);
            for (; k < b.length;) l = b[k++], m[d++].h(l.x, l.y);
            for (k = b[b.length - 1].x; f < c.length && c[f].x <= k;) f++;
            for (; f < c.length && c[f].x > k;) l = c[f++], m[d++].h(l.x, l.y + e);
            c = ot(a, d);
            for (k = 0; k < d; k++) c[k].assign(m[k]);
            zt(a, m);
            d = c
        }
        f = r;
        k = p;
        if (null === n || 2 > n.length || null === f || 2 > f.length) e = null;
        else {
            m = ot(a, n.length + f.length);
            for (e = l = c = 0; c < n.length && n[c].x < f[0].x;) x = n[c++], m[e++].h(x.x, x.y);
            for (; l < f.length;) x = f[l++], m[e++].h(x.x, x.y + k);
            for (f = f[f.length - 1].x; c < n.length && n[c].x <= f;) c++;
            for (; c < n.length && n[c].x > f;) k = n[c++], m[e++].h(k.x, k.y);
            f = ot(a, e);
            for (c = 0; c < e; c++) f[c].assign(m[c]);
            zt(a, m);
            e = f
        }
        f = u;
        g = Math.max(0, p) + g.height;
        zt(a, b);
        zt(a, q);
        zt(a, n);
        zt(a, r);
        h[0] = d;
        h[1] = e;
        return new N(p, 0, f, g)
    }

    function ot(a, b) {
        a = a.tu[b];
        if (void 0 !== a && (a = a.pop(), void 0 !== a)) return a;
        a = [];
        for (var c = 0; c < b; c++) a[c] = new G;
        return a
    }

    function zt(a, b) {
        var c = b.length,
            d = a.tu[c];
        void 0 === d && (d = [], a.tu[c] = d);
        d.push(b)
    }
    us.prototype.arrangeTrees = function() {
        if (this.Bb === Cs)
            for (var a = this.Gb.iterator; a.next();) {
                var b = a.value;
                if (b instanceof Bs) {
                    var c = b.node;
                    if (null !== c) {
                        var d = c.position;
                        c = d.x;
                        d = d.y;
                        isFinite(c) || (c = 0);
                        isFinite(d) || (d = 0);
                        Ct(this, b, c, d)
                    }
                }
            } else {
                a = [];
                for (b = this.Gb.iterator; b.next();) c = b.value, c instanceof Bs && a.push(c);
                switch (this.sorting) {
                    case Ss:
                        break;
                    case Ts:
                        a.reverse();
                        break;
                    case Us:
                        a.sort(this.comparer);
                        break;
                    case Vs:
                        a.sort(this.comparer);
                        a.reverse();
                        break;
                    default:
                        A("Unhandled sorting value " + this.sorting.toString())
                }
                c =
                    this.arrangementOrigin;
                b = c.x;
                c = c.y;
                for (d = 0; d < a.length; d++) {
                    var e = a[d];
                    Ct(this, e, b + e.ia.x, c + e.ia.y);
                    switch (this.Bb) {
                        case zs:
                            c += e.ua.height + this.yd.height;
                            break;
                        case Dt:
                            b += e.ua.width + this.yd.width;
                            break;
                        default:
                            A("Unhandled arrangement value " + this.Bb.toString())
                    }
                }
            }
    };

    function Ct(a, b, c, d) {
        if (null !== b) {
            b.x = c;
            b.y = d;
            b = b.children;
            for (var e = b.length, f = 0; f < e; f++) {
                var g = b[f];
                Ct(a, g, c + g.S.x, d + g.S.y)
            }
        }
    }
    us.prototype.commitLayout = function() {
        this.Dv();
        this.commitNodes();
        this.Iu();
        this.isRouting && this.commitLinks()
    };
    us.prototype.commitNodes = function() {
        for (var a = this.network.vertexes.iterator; a.next();) a.value.commit();
        for (a.reset(); a.next();) this.layoutComments(a.value)
    };
    us.prototype.Iu = function() {
        if (this.layerStyle === Ks) {
            for (var a = this.dw, b = [], c = null, d = this.network.vertexes.iterator; d.next();) {
                var e = d.value;
                null === c ? c = e.bounds.copy() : c.Wc(e.bounds);
                var f = b[e.level];
                void 0 === f ? f = gt(e) : f = Math.max(f, gt(e));
                b[e.level] = f
            }
            for (d = 0; d < b.length; d++) void 0 === b[d] && (b[d] = 0);
            90 === this.angle || 270 === this.angle ? (c.Vc(this.nodeSpacing / 2, this.layerSpacing), d = new G(-this.nodeSpacing / 2, -this.layerSpacing / 2)) : (c.Vc(this.layerSpacing, this.nodeSpacing / 2), d = new G(-this.layerSpacing / 2, -this.nodeSpacing /
                2));
            e = [];
            c = 90 === this.angle || 270 === this.angle ? c.width : c.height;
            f = 0;
            if (180 === this.angle || 270 === this.angle)
                for (var g = 0; g < a.length; g++) f += a[g] + b[g];
            for (g = 0; g < a.length; g++) {
                var h = a[g] + b[g];
                270 === this.angle ? (f -= h, e.push(new N(0, f, c, h))) : 90 === this.angle ? (e.push(new N(0, f, c, h)), f += h) : 180 === this.angle ? (f -= h, e.push(new N(f, 0, h, c))) : (e.push(new N(f, 0, h, c)), f += h)
            }
            this.commitLayers(e, d)
        }
    };
    us.prototype.commitLayers = function() {};
    us.prototype.commitLinks = function() {
        for (var a = this.network.edges.iterator; a.next();) a.value.commit()
    };
    us.prototype.Dv = function() {
        for (var a = this.Gb.iterator; a.next();) {
            var b = a.value;
            b instanceof Bs && Et(this, b)
        }
    };

    function Et(a, b) {
        if (null !== b) {
            a.setPortSpots(b);
            b = b.children;
            for (var c = b.length, d = 0; d < c; d++) Et(a, b[d])
        }
    }
    us.prototype.setPortSpots = function(a) {
        var b = a.alignment;
        if (Ws(b)) {
            var c = this.ad === ws,
                d = et(a);
            switch (d) {
                case 0:
                    var e = Sd;
                    break;
                case 90:
                    e = Td;
                    break;
                case 180:
                    e = Rd;
                    break;
                default:
                    e = Jd
            }
            var f = a.children,
                g = f.length;
            switch (b) {
                case Xs:
                case Ns:
                    for (b = 0; b < g; b++) {
                        var h = f[b];
                        h = (c ? h.sourceEdges : h.destinationEdges).first();
                        if (null !== h && (h = h.link, null !== h)) {
                            var k = 90 === d || 270 === d ? Rd : Jd;
                            if (1 === g || b === g - 1 && 1 === g % 2) switch (d) {
                                case 0:
                                    k = Rd;
                                    break;
                                case 90:
                                    k = Jd;
                                    break;
                                case 180:
                                    k = Sd;
                                    break;
                                default:
                                    k = Td
                            } else 0 === b % 2 && (k = 90 === d || 270 ===
                                d ? Sd : Td);
                            c ? (a.setsPortSpot && (h.fromSpot = e), a.setsChildPortSpot && (h.toSpot = k)) : (a.setsPortSpot && (h.fromSpot = k), a.setsChildPortSpot && (h.toSpot = e))
                        }
                    }
                    break;
                case Ys:
                    d = 90 === d || 270 === d ? Sd : Td;
                    for (f = c ? a.destinationEdges : a.sourceEdges; f.next();) g = f.value.link, null !== g && (c ? (a.setsPortSpot && (g.fromSpot = e), a.setsChildPortSpot && (g.toSpot = d)) : (a.setsPortSpot && (g.fromSpot = d), a.setsChildPortSpot && (g.toSpot = e)));
                    break;
                case Zs:
                    for (d = 90 === d || 270 === d ? Rd : Jd, f = c ? a.destinationEdges : a.sourceEdges; f.next();) g = f.value.link,
                        null !== g && (c ? (a.setsPortSpot && (g.fromSpot = e), a.setsChildPortSpot && (g.toSpot = d)) : (a.setsPortSpot && (g.fromSpot = d), a.setsChildPortSpot && (g.toSpot = e)))
            }
        } else if (c = et(a), this.ad === ws)
            for (e = a.destinationEdges; e.next();) {
                if (d = e.value.link, null !== d) {
                    if (a.setsPortSpot)
                        if (a.portSpot.Lb()) switch (c) {
                            case 0:
                                d.fromSpot = Sd;
                                break;
                            case 90:
                                d.fromSpot = Td;
                                break;
                            case 180:
                                d.fromSpot = Rd;
                                break;
                            default:
                                d.fromSpot = Jd
                        } else d.fromSpot = a.portSpot;
                    if (a.setsChildPortSpot)
                        if (a.childPortSpot.Lb()) switch (c) {
                            case 0:
                                d.toSpot = Rd;
                                break;
                            case 90:
                                d.toSpot = Jd;
                                break;
                            case 180:
                                d.toSpot = Sd;
                                break;
                            default:
                                d.toSpot = Td
                        } else d.toSpot = a.childPortSpot
                }
            } else
                for (e = a.sourceEdges; e.next();)
                    if (d = e.value.link, null !== d) {
                        if (a.setsPortSpot)
                            if (a.portSpot.Lb()) switch (c) {
                                case 0:
                                    d.toSpot = Sd;
                                    break;
                                case 90:
                                    d.toSpot = Td;
                                    break;
                                case 180:
                                    d.toSpot = Rd;
                                    break;
                                default:
                                    d.toSpot = Jd
                            } else d.toSpot = a.portSpot;
                        if (a.setsChildPortSpot)
                            if (a.childPortSpot.Lb()) switch (c) {
                                case 0:
                                    d.fromSpot = Rd;
                                    break;
                                case 90:
                                    d.fromSpot = Jd;
                                    break;
                                case 180:
                                    d.fromSpot = Sd;
                                    break;
                                default:
                                    d.fromSpot = Td
                            } else d.fromSpot =
                                a.childPortSpot
                    }
    };

    function et(a) {
        a = a.angle;
        return 45 >= a ? 0 : 135 >= a ? 90 : 225 >= a ? 180 : 315 >= a ? 270 : 0
    }

    function gt(a) {
        var b = et(a);
        b = 90 === b || 270 === b;
        var c = a.layerSpacing;
        if (0 < a.layerSpacingParentOverlap) {
            var d = Math.min(1, a.layerSpacingParentOverlap);
            c -= b ? a.height * d : a.width * d
        }
        c < (b ? -a.height : -a.width) && (c = b ? -a.height : -a.width);
        return c
    }

    function ht(a) {
        var b = et(a),
            c = a.nodeIndent;
        if (0 < a.nodeIndentPastParent) {
            var d = Math.min(1, a.nodeIndentPastParent);
            c += 90 === b || 270 === b ? a.width * d : a.height * d
        }
        return c = Math.max(0, c)
    }
    pa.Object.defineProperties(us.prototype, {
        roots: {
            get: function() {
                return this.Gb
            },
            set: function(a) {
                this.Gb !== a && (this.Gb = a, this.B())
            }
        },
        path: {
            get: function() {
                return this.Ko
            },
            set: function(a) {
                this.Ko !== a && (this.Ko = a, this.B())
            }
        },
        treeStyle: {
            get: function() {
                return this.Bp
            },
            set: function(a) {
                this.Bb === a || a !== xs && a !== Qs && a !== Rs && a !== Ps || (this.Bp = a, this.B())
            }
        },
        layerStyle: {
            get: function() {
                return this.Ir
            },
            set: function(a) {
                this.Bb === a || a !== ys && a !== Ls && a !== Ks || (this.Ir = a, this.B())
            }
        },
        comments: {
            get: function() {
                return this.Zc
            },
            set: function(a) {
                this.Zc !== a && (this.Zc = a, this.B())
            }
        },
        arrangement: {
            get: function() {
                return this.Bb
            },
            set: function(a) {
                this.Bb === a || a !== zs && a !== Dt && a !== Cs || (this.Bb = a, this.B())
            }
        },
        arrangementSpacing: {
            get: function() {
                return this.yd
            },
            set: function(a) {
                this.yd.A(a) || (this.yd.assign(a), this.B())
            }
        },
        rootDefaults: {
            get: function() {
                return this.T
            },
            set: function(a) {
                this.T !== a && (this.T = a, this.B())
            }
        },
        alternateDefaults: {
            get: function() {
                return this.U
            },
            set: function(a) {
                this.U !== a && (this.U = a, this.B())
            }
        },
        sorting: {
            get: function() {
                return this.T.sorting
            },
            set: function(a) {
                this.T.sorting === a || a !== Ss && a !== Ts && a !== Us && !Vs || (this.T.sorting = a, this.B())
            }
        },
        comparer: {
            get: function() {
                return this.T.comparer
            },
            set: function(a) {
                this.T.comparer !==
                    a && (this.T.comparer = a, this.B())
            }
        },
        angle: {
            get: function() {
                return this.T.angle
            },
            set: function(a) {
                this.T.angle !== a && (0 === a || 90 === a || 180 === a || 270 === a ? (this.T.angle = a, this.B()) : A("TreeLayout.angle must be 0, 90, 180, or 270"))
            }
        },
        alignment: {
            get: function() {
                return this.T.alignment
            },
            set: function(a) {
                this.T.alignment !== a && (this.T.alignment = a, this.B())
            }
        },
        nodeIndent: {
            get: function() {
                return this.T.nodeIndent
            },
            set: function(a) {
                this.T.nodeIndent !==
                    a && 0 <= a && (this.T.nodeIndent = a, this.B())
            }
        },
        nodeIndentPastParent: {
            get: function() {
                return this.T.nodeIndentPastParent
            },
            set: function(a) {
                this.T.nodeIndentPastParent !== a && 0 <= a && 1 >= a && (this.T.nodeIndentPastParent = a, this.B())
            }
        },
        nodeSpacing: {
            get: function() {
                return this.T.nodeSpacing
            },
            set: function(a) {
                this.T.nodeSpacing !== a && (this.T.nodeSpacing = a, this.B())
            }
        },
        layerSpacing: {
            get: function() {
                return this.T.layerSpacing
            },
            set: function(a) {
                this.T.layerSpacing !==
                    a && (this.T.layerSpacing = a, this.B())
            }
        },
        layerSpacingParentOverlap: {
            get: function() {
                return this.T.layerSpacingParentOverlap
            },
            set: function(a) {
                this.T.layerSpacingParentOverlap !== a && 0 <= a && 1 >= a && (this.T.layerSpacingParentOverlap = a, this.B())
            }
        },
        compaction: {
            get: function() {
                return this.T.compaction
            },
            set: function(a) {
                this.T.compaction === a || a !== bt && a !== dt || (this.T.compaction = a, this.B())
            }
        },
        breadthLimit: {
            get: function() {
                return this.T.breadthLimit
            },
            set: function(a) {
                this.T.breadthLimit !== a && 0 <= a && (this.T.breadthLimit = a, this.B())
            }
        },
        rowSpacing: {
            get: function() {
                return this.T.rowSpacing
            },
            set: function(a) {
                this.T.rowSpacing !== a && (this.T.rowSpacing = a, this.B())
            }
        },
        rowIndent: {
            get: function() {
                return this.T.rowIndent
            },
            set: function(a) {
                this.T.rowIndent !== a && 0 <= a && (this.T.rowIndent = a, this.B())
            }
        },
        commentSpacing: {
            get: function() {
                return this.T.commentSpacing
            },
            set: function(a) {
                this.T.commentSpacing !==
                    a && (this.T.commentSpacing = a, this.B())
            }
        },
        commentMargin: {
            get: function() {
                return this.T.commentMargin
            },
            set: function(a) {
                this.T.commentMargin !== a && (this.T.commentMargin = a, this.B())
            }
        },
        setsPortSpot: {
            get: function() {
                return this.T.setsPortSpot
            },
            set: function(a) {
                this.T.setsPortSpot !== a && (this.T.setsPortSpot = a, this.B())
            }
        },
        portSpot: {
            get: function() {
                return this.T.portSpot
            },
            set: function(a) {
                this.T.portSpot.A(a) || (this.T.portSpot =
                    a, this.B())
            }
        },
        setsChildPortSpot: {
            get: function() {
                return this.T.setsChildPortSpot
            },
            set: function(a) {
                this.T.setsChildPortSpot !== a && (this.T.setsChildPortSpot = a, this.B())
            }
        },
        childPortSpot: {
            get: function() {
                return this.T.childPortSpot
            },
            set: function(a) {
                this.T.childPortSpot.A(a) || (this.T.childPortSpot = a, this.B())
            }
        },
        alternateSorting: {
            get: function() {
                return this.U.sorting
            },
            set: function(a) {
                this.U.sorting === a || a !== Ss && a !== Ts &&
                    a !== Us && !Vs || (this.U.sorting = a, this.B())
            }
        },
        alternateComparer: {
            get: function() {
                return this.U.comparer
            },
            set: function(a) {
                this.U.comparer !== a && (this.U.comparer = a, this.B())
            }
        },
        alternateAngle: {
            get: function() {
                return this.U.angle
            },
            set: function(a) {
                this.U.angle === a || 0 !== a && 90 !== a && 180 !== a && 270 !== a || (this.U.angle = a, this.B())
            }
        },
        alternateAlignment: {
            get: function() {
                return this.U.alignment
            },
            set: function(a) {
                this.U.alignment !==
                    a && (this.U.alignment = a, this.B())
            }
        },
        alternateNodeIndent: {
            get: function() {
                return this.U.nodeIndent
            },
            set: function(a) {
                this.U.nodeIndent !== a && 0 <= a && (this.U.nodeIndent = a, this.B())
            }
        },
        alternateNodeIndentPastParent: {
            get: function() {
                return this.U.nodeIndentPastParent
            },
            set: function(a) {
                this.U.nodeIndentPastParent !== a && 0 <= a && 1 >= a && (this.U.nodeIndentPastParent = a, this.B())
            }
        },
        alternateNodeSpacing: {
            get: function() {
                return this.U.nodeSpacing
            },
            set: function(a) {
                this.U.nodeSpacing !== a && (this.U.nodeSpacing = a, this.B())
            }
        },
        alternateLayerSpacing: {
            get: function() {
                return this.U.layerSpacing
            },
            set: function(a) {
                this.U.layerSpacing !== a && (this.U.layerSpacing = a, this.B())
            }
        },
        alternateLayerSpacingParentOverlap: {
            get: function() {
                return this.U.layerSpacingParentOverlap
            },
            set: function(a) {
                this.U.layerSpacingParentOverlap !== a && 0 <= a && 1 >= a && (this.U.layerSpacingParentOverlap = a, this.B())
            }
        },
        alternateCompaction: {
            get: function() {
                return this.U.compaction
            },
            set: function(a) {
                this.U.compaction === a || a !== bt && a !== dt || (this.U.compaction = a, this.B())
            }
        },
        alternateBreadthLimit: {
            get: function() {
                return this.U.breadthLimit
            },
            set: function(a) {
                this.U.breadthLimit !== a && 0 <= a && (this.U.breadthLimit = a, this.B())
            }
        },
        alternateRowSpacing: {
            get: function() {
                return this.U.rowSpacing
            },
            set: function(a) {
                this.U.rowSpacing !== a && (this.U.rowSpacing = a, this.B())
            }
        },
        alternateRowIndent: {
            get: function() {
                return this.U.rowIndent
            },
            set: function(a) {
                this.U.rowIndent !== a && 0 <= a && (this.U.rowIndent = a, this.B())
            }
        },
        alternateCommentSpacing: {
            get: function() {
                return this.U.commentSpacing
            },
            set: function(a) {
                this.U.commentSpacing !== a && (this.U.commentSpacing = a, this.B())
            }
        },
        alternateCommentMargin: {
            get: function() {
                return this.U.commentMargin
            },
            set: function(a) {
                this.U.commentMargin !== a && (this.U.commentMargin = a, this.B())
            }
        },
        alternateSetsPortSpot: {
            get: function() {
                return this.U.setsPortSpot
            },
            set: function(a) {
                this.U.setsPortSpot !== a && (this.U.setsPortSpot = a, this.B())
            }
        },
        alternatePortSpot: {
            get: function() {
                return this.U.portSpot
            },
            set: function(a) {
                this.U.portSpot.A(a) || (this.U.portSpot = a, this.B())
            }
        },
        alternateSetsChildPortSpot: {
            get: function() {
                return this.U.setsChildPortSpot
            },
            set: function(a) {
                this.U.setsChildPortSpot !== a && (this.U.setsChildPortSpot = a, this.B())
            }
        },
        alternateChildPortSpot: {
            get: function() {
                return this.U.childPortSpot
            },
            set: function(a) {
                this.U.childPortSpot.A(a) || (this.U.childPortSpot = a, this.B())
            }
        }
    });
    var vs = new D(us, "PathDefault", -1),
        ws = new D(us, "PathDestination", 0),
        Ds = new D(us, "PathSource", 1),
        Ss = new D(us, "SortingForwards", 10),
        Ts = new D(us, "SortingReverse", 11),
        Us = new D(us, "SortingAscending", 12),
        Vs = new D(us, "SortingDescending", 13),
        ut = new D(us, "AlignmentCenterSubtrees", 20),
        vt = new D(us, "AlignmentCenterChildren", 21),
        lt = new D(us, "AlignmentStart", 22),
        ft = new D(us, "AlignmentEnd", 23),
        Xs = new D(us, "AlignmentBus", 24),
        Ns = new D(us, "AlignmentBusBranching", 25),
        Ys = new D(us, "AlignmentTopLeftBus", 26),
        Zs = new D(us,
            "AlignmentBottomRightBus", 27),
        bt = new D(us, "CompactionNone", 30),
        dt = new D(us, "CompactionBlock", 31),
        xs = new D(us, "StyleLayered", 40),
        Rs = new D(us, "StyleLastParents", 41),
        Qs = new D(us, "StyleAlternating", 42),
        Ps = new D(us, "StyleRootOnly", 43),
        zs = new D(us, "ArrangementVertical", 50),
        Dt = new D(us, "ArrangementHorizontal", 51),
        Cs = new D(us, "ArrangementFixedRoots", 52),
        ys = new D(us, "LayerIndividual", 60),
        Ls = new D(us, "LayerSiblings", 61),
        Ks = new D(us, "LayerUniform", 62);
    us.className = "TreeLayout";
    us.PathDefault = vs;
    us.PathDestination = ws;
    us.PathSource = Ds;
    us.SortingForwards = Ss;
    us.SortingReverse = Ts;
    us.SortingAscending = Us;
    us.SortingDescending = Vs;
    us.AlignmentCenterSubtrees = ut;
    us.AlignmentCenterChildren = vt;
    us.AlignmentStart = lt;
    us.AlignmentEnd = ft;
    us.AlignmentBus = Xs;
    us.AlignmentBusBranching = Ns;
    us.AlignmentTopLeftBus = Ys;
    us.AlignmentBottomRightBus = Zs;
    us.CompactionNone = bt;
    us.CompactionBlock = dt;
    us.StyleLayered = xs;
    us.StyleLastParents = Rs;
    us.StyleAlternating = Qs;
    us.StyleRootOnly = Ps;
    us.ArrangementVertical = zs;
    us.ArrangementHorizontal = Dt;
    us.ArrangementFixedRoots = Cs;
    us.LayerIndividual = ys;
    us.LayerSiblings = Ls;
    us.LayerUniform = Ks;

    function As(a) {
        tp.call(this, a)
    }
    oa(As, tp);
    As.prototype.createVertex = function() {
        return new Bs(this)
    };
    As.prototype.createEdge = function() {
        return new Ft(this)
    };
    As.className = "TreeNetwork";

    function Bs(a) {
        wp.call(this, a);
        this.La = !1;
        this.Lc = null;
        this.K = [];
        this.Vb = this.Ub = this.da = this.Wa = 0;
        this.Zc = null;
        this.S = new G(0, 0);
        this.ua = new L(0, 0);
        this.ia = new G(0, 0);
        this.rm = this.qm = this.Iz = !1;
        this.nq = this.aq = null;
        this.Rc = Ss;
        this.Nc = Cp;
        this.Bc = 0;
        this.xb = vt;
        this.Tr = this.Sr = 0;
        this.Vr = 20;
        this.ke = 50;
        this.Hr = 0;
        this.Pq = dt;
        this.Iq = 0;
        this.fs = 25;
        this.Oq = this.es = 10;
        this.Nq = 20;
        this.rs = !0;
        this.bs = Ed;
        this.qs = !0;
        this.Lq = Ed
    }
    oa(Bs, wp);
    Bs.prototype.copyInheritedPropertiesFrom = function(a) {
        null !== a && (this.Rc = a.sorting, this.Nc = a.comparer, this.Bc = a.angle, this.xb = a.alignment, this.Sr = a.nodeIndent, this.Tr = a.nodeIndentPastParent, this.Vr = a.nodeSpacing, this.ke = a.layerSpacing, this.Hr = a.layerSpacingParentOverlap, this.Pq = a.compaction, this.Iq = a.breadthLimit, this.fs = a.rowSpacing, this.es = a.rowIndent, this.Oq = a.commentSpacing, this.Nq = a.commentMargin, this.rs = a.setsPortSpot, this.bs = a.portSpot, this.qs = a.setsChildPortSpot, this.Lq = a.childPortSpot)
    };
    pa.Object.defineProperties(Bs.prototype, {
        initialized: {
            get: function() {
                return this.La
            },
            set: function(a) {
                this.La !== a && (this.La = a)
            }
        },
        parent: {
            get: function() {
                return this.Lc
            },
            set: function(a) {
                this.Lc !== a && (this.Lc = a)
            }
        },
        children: {
            get: function() {
                return this.K
            },
            set: function(a) {
                if (this.K !== a) {
                    if (null !== a)
                        for (var b = a.length, c = 0; c < b; c++);
                    this.K = a
                }
            }
        },
        level: {
            get: function() {
                return this.Wa
            },
            set: function(a) {
                this.Wa !==
                    a && (this.Wa = a)
            }
        },
        descendantCount: {
            get: function() {
                return this.da
            },
            set: function(a) {
                this.da !== a && (this.da = a)
            }
        },
        maxChildrenCount: {
            get: function() {
                return this.Ub
            },
            set: function(a) {
                this.Ub !== a && (this.Ub = a)
            }
        },
        maxGenerationCount: {
            get: function() {
                return this.Vb
            },
            set: function(a) {
                this.Vb !== a && (this.Vb = a)
            }
        },
        comments: {
            get: function() {
                return this.Zc
            },
            set: function(a) {
                if (this.Zc !== a) {
                    if (null !== a)
                        for (var b =
                                a.length, c = 0; c < b; c++);
                    this.Zc = a
                }
            }
        },
        sorting: {
            get: function() {
                return this.Rc
            },
            set: function(a) {
                this.Rc !== a && (this.Rc = a)
            }
        },
        comparer: {
            get: function() {
                return this.Nc
            },
            set: function(a) {
                this.Nc !== a && (this.Nc = a)
            }
        },
        angle: {
            get: function() {
                return this.Bc
            },
            set: function(a) {
                this.Bc !== a && (this.Bc = a)
            }
        },
        alignment: {
            get: function() {
                return this.xb
            },
            set: function(a) {
                this.xb !== a && (this.xb = a)
            }
        },
        nodeIndent: {
            get: function() {
                return this.Sr
            },
            set: function(a) {
                this.Sr !== a && (this.Sr = a)
            }
        },
        nodeIndentPastParent: {
            get: function() {
                return this.Tr
            },
            set: function(a) {
                this.Tr !== a && (this.Tr = a)
            }
        },
        nodeSpacing: {
            get: function() {
                return this.Vr
            },
            set: function(a) {
                this.Vr !== a && (this.Vr = a)
            }
        },
        layerSpacing: {
            get: function() {
                return this.ke
            },
            set: function(a) {
                this.ke !== a && (this.ke = a)
            }
        },
        layerSpacingParentOverlap: {
            get: function() {
                return this.Hr
            },
            set: function(a) {
                this.Hr !== a && (this.Hr = a)
            }
        },
        compaction: {
            get: function() {
                return this.Pq
            },
            set: function(a) {
                this.Pq !== a && (this.Pq = a)
            }
        },
        breadthLimit: {
            get: function() {
                return this.Iq
            },
            set: function(a) {
                this.Iq !== a && (this.Iq = a)
            }
        },
        rowSpacing: {
            get: function() {
                return this.fs
            },
            set: function(a) {
                this.fs !== a && (this.fs = a)
            }
        },
        rowIndent: {
            get: function() {
                return this.es
            },
            set: function(a) {
                this.es !==
                    a && (this.es = a)
            }
        },
        commentSpacing: {
            get: function() {
                return this.Oq
            },
            set: function(a) {
                this.Oq !== a && (this.Oq = a)
            }
        },
        commentMargin: {
            get: function() {
                return this.Nq
            },
            set: function(a) {
                this.Nq !== a && (this.Nq = a)
            }
        },
        setsPortSpot: {
            get: function() {
                return this.rs
            },
            set: function(a) {
                this.rs !== a && (this.rs = a)
            }
        },
        portSpot: {
            get: function() {
                return this.bs
            },
            set: function(a) {
                this.bs.A(a) || (this.bs = a)
            }
        },
        setsChildPortSpot: {
            get: function() {
                return this.qs
            },
            set: function(a) {
                this.qs !== a && (this.qs = a)
            }
        },
        childPortSpot: {
            get: function() {
                return this.Lq
            },
            set: function(a) {
                this.Lq.A(a) || (this.Lq = a)
            }
        },
        childrenCount: {
            get: function() {
                return this.children.length
            }
        },
        relativePosition: {
            get: function() {
                return this.S
            },
            set: function(a) {
                this.S.set(a)
            }
        },
        subtreeSize: {
            get: function() {
                return this.ua
            },
            set: function(a) {
                this.ua.set(a)
            }
        },
        subtreeOffset: {
            get: function() {
                return this.ia
            },
            set: function(a) {
                this.ia.set(a)
            }
        }
    });
    Bs.className = "TreeVertex";

    function Ft(a) {
        xp.call(this, a);
        this.lu = new G(0, 0)
    }
    oa(Ft, xp);
    Ft.prototype.commit = function() {
        var a = this.link;
        if (null !== a && !a.isAvoiding) {
            var b = this.network.layout,
                c = null,
                d = null;
            switch (b.ad) {
                case ws:
                    c = this.fromVertex;
                    d = this.toVertex;
                    break;
                case Ds:
                    c = this.toVertex;
                    d = this.fromVertex;
                    break;
                default:
                    A("Unhandled path value " + b.ad.toString())
            }
            if (null !== c && null !== d)
                if (b = this.lu, 0 !== b.x || 0 !== b.y || c.Iz) {
                    d = c.bounds;
                    var e = et(c),
                        f = gt(c),
                        g = c.rowSpacing;
                    a.Ui();
                    var h = a.curve === Qg,
                        k = a.isOrthogonal,
                        l;
                    a.zh();
                    if (k || h) {
                        for (l = 2; 4 < a.pointsCount;) a.tv(2);
                        var m = a.i(1);
                        var n = a.i(2)
                    } else {
                        for (l =
                            1; 3 < a.pointsCount;) a.tv(1);
                        m = a.i(0);
                        n = a.i(a.pointsCount - 1)
                    }
                    var p = a.i(a.pointsCount - 1);
                    0 === e ? (c.alignment === ft ? (e = d.bottom + b.y, 0 === b.y && m.y > p.y + c.rowIndent && (e = Math.min(e, Math.max(m.y, e - ht(c))))) : c.alignment === lt ? (e = d.top + b.y, 0 === b.y && m.y < p.y - c.rowIndent && (e = Math.max(e, Math.min(m.y, e + ht(c))))) : e = c.qm || c.rm && 1 === c.maxGenerationCount ? d.top - c.ia.y + b.y : d.y + d.height / 2 + b.y, h ? (a.m(l, m.x, e), l++, a.m(l, d.right + f, e), l++, a.m(l, d.right + f + (b.x - g) / 3, e), l++, a.m(l, d.right + f + 2 * (b.x - g) / 3, e), l++, a.m(l, d.right + f + (b.x -
                        g), e), l++, a.m(l, n.x, e)) : (k && (a.m(l, d.right + f / 2, m.y), l++), a.m(l, d.right + f / 2, e), l++, a.m(l, d.right + f + b.x - (k ? g / 2 : g), e), l++, k && a.m(l, a.i(l - 1).x, n.y))) : 90 === e ? (c.alignment === ft ? (e = d.right + b.x, 0 === b.x && m.x > p.x + c.rowIndent && (e = Math.min(e, Math.max(m.x, e - ht(c))))) : c.alignment === lt ? (e = d.left + b.x, 0 === b.x && m.x < p.x - c.rowIndent && (e = Math.max(e, Math.min(m.x, e + ht(c))))) : e = c.qm || c.rm && 1 === c.maxGenerationCount ? d.left - c.ia.x + b.x : d.x + d.width / 2 + b.x, h ? (a.m(l, e, m.y), l++, a.m(l, e, d.bottom + f), l++, a.m(l, e, d.bottom + f + (b.y - g) /
                        3), l++, a.m(l, e, d.bottom + f + 2 * (b.y - g) / 3), l++, a.m(l, e, d.bottom + f + (b.y - g)), l++, a.m(l, e, n.y)) : (k && (a.m(l, m.x, d.bottom + f / 2), l++), a.m(l, e, d.bottom + f / 2), l++, a.m(l, e, d.bottom + f + b.y - (k ? g / 2 : g)), l++, k && a.m(l, n.x, a.i(l - 1).y))) : 180 === e ? (c.alignment === ft ? (e = d.bottom + b.y, 0 === b.y && m.y > p.y + c.rowIndent && (e = Math.min(e, Math.max(m.y, e - ht(c))))) : c.alignment === lt ? (e = d.top + b.y, 0 === b.y && m.y < p.y - c.rowIndent && (e = Math.max(e, Math.min(m.y, e + ht(c))))) : e = c.qm || c.rm && 1 === c.maxGenerationCount ? d.top - c.ia.y + b.y : d.y + d.height / 2 + b.y, h ?
                        (a.m(l, m.x, e), l++, a.m(l, d.left - f, e), l++, a.m(l, d.left - f + (b.x + g) / 3, e), l++, a.m(l, d.left - f + 2 * (b.x + g) / 3, e), l++, a.m(l, d.left - f + (b.x + g), e), l++, a.m(l, n.x, e)) : (k && (a.m(l, d.left - f / 2, m.y), l++), a.m(l, d.left - f / 2, e), l++, a.m(l, d.left - f + b.x + (k ? g / 2 : g), e), l++, k && a.m(l, a.i(l - 1).x, n.y))) : 270 === e ? (c.alignment === ft ? (e = d.right + b.x, 0 === b.x && m.x > p.x + c.rowIndent && (e = Math.min(e, Math.max(m.x, e - ht(c))))) : c.alignment === lt ? (e = d.left + b.x, 0 === b.x && m.x < p.x - c.rowIndent && (e = Math.max(e, Math.min(m.x, e + ht(c))))) : e = c.qm || c.rm && 1 === c.maxGenerationCount ?
                        d.left - c.ia.x + b.x : d.x + d.width / 2 + b.x, h ? (a.m(l, e, m.y), l++, a.m(l, e, d.top - f), l++, a.m(l, e, d.top - f + (b.y + g) / 3), l++, a.m(l, e, d.top - f + 2 * (b.y + g) / 3), l++, a.m(l, e, d.top - f + (b.y + g)), l++, a.m(l, e, n.y)) : (k && (a.m(l, m.x, d.top - f / 2), l++), a.m(l, e, d.top - f / 2), l++, a.m(l, e, d.top - f + b.y + (k ? g / 2 : g)), l++, k && a.m(l, n.x, a.i(l - 1).y))) : A("Invalid angle " + e);
                    a.lf()
                } else a = this.link, f = et(c), f !== et(d) && (g = gt(c), h = c.bounds, c = d.bounds, 0 === f && c.left - h.right < g + 1 || 90 === f && c.top - h.bottom < g + 1 || 180 === f && h.left - c.right < g + 1 || 270 === f && h.top - c.bottom <
                    g + 1 || (a.Ui(), c = a.curve === Qg, b = a.isOrthogonal, d = Ws(this.fromVertex.alignment), a.zh(), 0 === f ? (f = h.right + g / 2, c ? 4 === a.pointsCount && (c = a.i(3).y, a.M(1, f - 20, a.i(1).y), a.m(2, f - 20, c), a.m(3, f, c), a.m(4, f + 20, c), a.M(5, a.i(5).x, c)) : b ? d ? a.M(3, a.i(2).x, a.i(4).y) : 6 === a.pointsCount && (a.M(2, f, a.i(2).y), a.M(3, f, a.i(3).y)) : 4 === a.pointsCount ? a.m(2, f, a.i(2).y) : 3 === a.pointsCount ? a.M(1, f, a.i(2).y) : 2 === a.pointsCount && a.m(1, f, a.i(1).y)) : 90 === f ? (f = h.bottom + g / 2, c ? 4 === a.pointsCount && (c = a.i(3).x, a.M(1, a.i(1).x, f - 20), a.m(2, c, f - 20),
                        a.m(3, c, f), a.m(4, c, f + 20), a.M(5, c, a.i(5).y)) : b ? d ? a.M(3, a.i(2).x, a.i(4).y) : 6 === a.pointsCount && (a.M(2, a.i(2).x, f), a.M(3, a.i(3).x, f)) : 4 === a.pointsCount ? a.m(2, a.i(2).x, f) : 3 === a.pointsCount ? a.M(1, a.i(2).x, f) : 2 === a.pointsCount && a.m(1, a.i(1).x, f)) : 180 === f ? (f = h.left - g / 2, c ? 4 === a.pointsCount && (c = a.i(3).y, a.M(1, f + 20, a.i(1).y), a.m(2, f + 20, c), a.m(3, f, c), a.m(4, f - 20, c), a.M(5, a.i(5).x, c)) : b ? d ? a.M(3, a.i(2).x, a.i(4).y) : 6 === a.pointsCount && (a.M(2, f, a.i(2).y), a.M(3, f, a.i(3).y)) : 4 === a.pointsCount ? a.m(2, f, a.i(2).y) : 3 === a.pointsCount ?
                        a.M(1, f, a.i(2).y) : 2 === a.pointsCount && a.m(1, f, a.i(1).y)) : 270 === f && (f = h.top - g / 2, c ? 4 === a.pointsCount && (c = a.i(3).x, a.M(1, a.i(1).x, f + 20), a.m(2, c, f + 20), a.m(3, c, f), a.m(4, c, f - 20), a.M(5, c, a.i(5).y)) : b ? d ? a.M(3, a.i(2).x, a.i(4).y) : 6 === a.pointsCount && (a.M(2, a.i(2).x, f), a.M(3, a.i(3).x, f)) : 4 === a.pointsCount ? a.m(2, a.i(2).x, f) : 3 === a.pointsCount ? a.M(1, a.i(2).x, f) : 2 === a.pointsCount && a.m(1, a.i(1).x, f)), a.lf()))
        }
    };
    pa.Object.defineProperties(Ft.prototype, {
        relativePoint: {
            get: function() {
                return this.lu
            },
            set: function(a) {
                this.lu.set(a)
            }
        }
    });
    Ft.className = "TreeEdge";
    Ua.prototype.initializeStandardTools = function() {
        vf(this, "Action", new ch, this.mouseDownTools);
        vf(this, "Relinking", new Mf, this.mouseDownTools);
        vf(this, "LinkReshaping", new Og, this.mouseDownTools);
        vf(this, "Rotating", new ah, this.mouseDownTools);
        vf(this, "Resizing", new Vg, this.mouseDownTools);
        vf(this, "Linking", new Hg, this.mouseMoveTools);
        vf(this, "Dragging", new xf, this.mouseMoveTools);
        vf(this, "DragSelecting", new fh, this.mouseMoveTools);
        vf(this, "Panning", new gh, this.mouseMoveTools);
        vf(this, "ContextMenu", new ih,
            this.mouseUpTools);
        vf(this, "TextEditing", new th, this.mouseUpTools);
        vf(this, "ClickCreating", new dh, this.mouseUpTools);
        vf(this, "ClickSelecting", new bh, this.mouseUpTools)
    };
    bn("Horizontal", new jm);
    bn("Spot", new lm);
    bn("Table", new pm);
    bn("Viewbox", new um);
    bn("TableRow", new sm);
    bn("TableColumn", new tm);
    bn("Graduated", new Dm);
    oi.add(zq.type, Vp);
    oi.add(Cq.type, iq);
    var Gt = w.go,
        Ht = {
            get licenseKey() {
                return P.licenseKey
            },
            set licenseKey(a) {
                P.licenseKey = a
            },
            get version() {
                return P.version
            },
            Group: hg,
            EnumValue: D,
            List: E,
            Set: F,
            Map: Lb,
            Point: G,
            Size: L,
            Rect: N,
            Margin: Ic,
            Spot: O,
            Geometry: $d,
            PathFigure: Ue,
            PathSegment: Ve,
            InputEvent: Xe,
            DiagramEvent: Ze,
            ChangedEvent: $e,
            Model: Z,
            GraphLinksModel: zq,
            TreeModel: Cq,
            Binding: Ai,
            Transaction: ef,
            UndoManager: ff,
            CommandHandler: Dk,
            Tool: kf,
            DraggingTool: xf,
            DraggingInfo: Nf,
            LinkingBaseTool: qg,
            LinkingTool: Hg,
            RelinkingTool: Mf,
            LinkReshapingTool: Og,
            ResizingTool: Vg,
            RotatingTool: ah,
            ClickSelectingTool: bh,
            ActionTool: ch,
            ClickCreatingTool: dh,
            HTMLInfo: uf,
            ContextMenuTool: ih,
            DragSelectingTool: fh,
            PanningTool: gh,
            TextEditingTool: th,
            ToolManager: Ua,
            AnimationManager: Nh,
            Layer: bi,
            Diagram: P,
            Palette: xk,
            Overview: zk,
            Brush: fl,
            GraphObject: Y,
            Panel: W,
            RowColumnDefinition: Mj,
            Shape: V,
            TextBlock: uh,
            TextBlockMetrics: Fm,
            Picture: Sj,
            Part: T,
            Adornment: pf,
            Node: U,
            Link: S,
            Placeholder: Wg,
            Layout: ui,
            LayoutNetwork: tp,
            LayoutVertex: wp,
            LayoutEdge: xp,
            GridLayout: yk,
            PanelLayout: zl,
            CircularLayout: Dq,
            CircularNetwork: Vq,
            CircularVertex: hr,
            CircularEdge: ir,
            ForceDirectedLayout: jr,
            ForceDirectedNetwork: kr,
            ForceDirectedVertex: wr,
            ForceDirectedEdge: xr,
            LayeredDigraphLayout: yr,
            LayeredDigraphNetwork: Dr,
            LayeredDigraphVertex: ss,
            LayeredDigraphEdge: ts,
            TreeLayout: us,
            TreeNetwork: As,
            TreeVertex: Bs,
            TreeEdge: Ft
        };
    Gt && Gt.version !== Ht.version && A("WARNING: a `go` object on the root object is already defined with a version mismatch." + Gt.version + ". Replaced with version: " + Ht.version);
    // if (w) w.go = Ht;
    console.log('gojs: w: before:', w);
    console.log('gojs: self: before:', self);
    console.log('gojs: module: before:', module);
    console.log('gojs: module.exports: before:', module.exports);
    console.log('gojs: global: before:', global);
    console.log('gojs: global.go: before:', global.go);
    
    if ("undefined" !== typeof global) global.go = Ht;
    if ("undefined" === typeof w || "undefined" === typeof w.module || "object" !== typeof w.module.exports) w.define && "function" === typeof w.define && w.define.amd ? console.log('(w.go = Ht, w.define(Ht))') : console.log('w.go = Ht');
    'undefined' !== typeof module && 'object' === typeof module.exports && (module.exports = 'undefined' !== typeof global ? global.go : self.go);
    console.log('gojs: module.exports: after:', module.exports);
})();